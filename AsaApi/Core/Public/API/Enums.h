#pragma once

enum class tagExtentMode:int
{
	DVEXTENT_CONTENT = 0x0,
	DVEXTENT_INTEGRAL = 0x1
};

enum class WICBitmapPaletteType:int
{
	WICBitmapPaletteTypeCustom = 0x0,
	WICBitmapPaletteTypeMedianCut = 0x1,
	WICBitmapPaletteTypeFixedBW = 0x2,
	WICBitmapPaletteTypeFixedHalftone8 = 0x3,
	WICBitmapPaletteTypeFixedHalftone27 = 0x4,
	WICBitmapPaletteTypeFixedHalftone64 = 0x5,
	WICBitmapPaletteTypeFixedHalftone125 = 0x6,
	WICBitmapPaletteTypeFixedHalftone216 = 0x7,
	WICBitmapPaletteTypeFixedWebPalette = 0x7,
	WICBitmapPaletteTypeFixedHalftone252 = 0x8,
	WICBitmapPaletteTypeFixedHalftone256 = 0x9,
	WICBitmapPaletteTypeFixedGray4 = 0xA,
	WICBitmapPaletteTypeFixedGray16 = 0xB,
	WICBitmapPaletteTypeFixedGray256 = 0xC,
	WICBITMAPPALETTETYPE_FORCE_DWORD = 0x7FFFFFFF
};

enum class WICNamedWhitePoint:int
{
	WICWhitePointDefault = 0x1,
	WICWhitePointDaylight = 0x2,
	WICWhitePointCloudy = 0x4,
	WICWhitePointShade = 0x8,
	WICWhitePointTungsten = 0x10,
	WICWhitePointFluorescent = 0x20,
	WICWhitePointFlash = 0x40,
	WICWhitePointUnderwater = 0x80,
	WICWhitePointCustom = 0x100,
	WICWhitePointAutoWhiteBalance = 0x200,
	WICWhitePointAsShot = 0x1,
	WICNAMEDWHITEPOINT_FORCE_DWORD = 0x7FFFFFFF
};

enum class EC_HOST_UI_MODE:int
{
	ECHUIM_DESKTOP = 0x0,
	ECHUIM_IMMERSIVE = 0x1,
	ECHUIM_SYSTEM_LAUNCHER = 0x2
};

enum class APPLICATION_VIEW_STATE:int
{
	AVS_FULLSCREEN_LANDSCAPE = 0x0,
	AVS_FILLED = 0x1,
	AVS_SNAPPED = 0x2,
	AVS_FULLSCREEN_PORTRAIT = 0x3
};

enum class EDGE_GESTURE_KIND:int
{
	EGK_TOUCH = 0x0,
	EGK_KEYBOARD = 0x1,
	EGK_MOUSE = 0x2
};

enum class DEFAULTSAVEFOLDERTYPE:int
{
	DSFT_DETECT = 0x1,
	DSFT_PRIVATE = 0x2,
	DSFT_PUBLIC = 0x3
};

enum class NATIVE_DISPLAY_ORIENTATION:int
{
	NDO_LANDSCAPE = 0x0,
	NDO_PORTRAIT = 0x1
};

enum class APPLICATION_VIEW_ORIENTATION:int
{
	AVO_LANDSCAPE = 0x0,
	AVO_PORTRAIT = 0x1
};

enum class _SPACTION:int
{
	SPACTION_NONE = 0x0,
	SPACTION_MOVING = 0x1,
	SPACTION_COPYING = 0x2,
	SPACTION_RECYCLING = 0x3,
	SPACTION_APPLYINGATTRIBS = 0x4,
	SPACTION_DOWNLOADING = 0x5,
	SPACTION_SEARCHING_INTERNET = 0x6,
	SPACTION_CALCULATING = 0x7,
	SPACTION_UPLOADING = 0x8,
	SPACTION_SEARCHING_FILES = 0x9,
	SPACTION_DELETING = 0xA,
	SPACTION_RENAMING = 0xB,
	SPACTION_FORMATTING = 0xC,
	SPACTION_COPY_MOVING = 0xD
};

enum class _SPTEXT:int
{
	SPTEXT_ACTIONDESCRIPTION = 0x1,
	SPTEXT_ACTIONDETAIL = 0x2
};

enum class ASSOCIATIONLEVEL:int
{
	AL_MACHINE = 0x0,
	AL_EFFECTIVE = 0x1,
	AL_USER = 0x2
};

enum class ASSOCIATIONTYPE:int
{
	AT_FILEEXTENSION = 0x0,
	AT_URLPROTOCOL = 0x1,
	AT_STARTMENUCLIENT = 0x2,
	AT_MIMETYPE = 0x3
};

enum class PLACEHOLDER_STATES:int
{
	PS_NONE = 0x0,
	PS_MARKED_FOR_OFFLINE_AVAILABILITY = 0x1,
	PS_FULL_PRIMARY_STREAM_AVAILABLE = 0x2,
	PS_CREATE_FILE_ACCESSIBLE = 0x4,
	PS_CLOUDFILE_PLACEHOLDER = 0x8,
	PS_DEFAULT = 0x7,
	PS_ALL = 0xF
};

enum class PKA_FLAGS:int
{
	PKA_SET = 0x0,
	PKA_APPEND = 0x1,
	PKA_DELETE = 0x2
};

enum class FLYOUT_PLACEMENT:int
{
	FP_DEFAULT = 0x0,
	FP_ABOVE = 0x1,
	FP_BELOW = 0x2,
	FP_LEFT = 0x3,
	FP_RIGHT = 0x4
};

enum class MERGE_UPDATE_STATUS:int
{
	MUS_COMPLETE = 0x0,
	MUS_USERINPUTNEEDED = 0x1,
	MUS_FAILED = 0x2
};

enum class CPVIEW:int
{
	CPVIEW_CLASSIC = 0x0,
	CPVIEW_ALLITEMS = 0x0,
	CPVIEW_CATEGORY = 0x1,
	CPVIEW_HOME = 0x1
};

enum class KNOWNDESTCATEGORY:int
{
	KDC_FREQUENT = 0x1,
	KDC_RECENT = 0x2
};

enum class tagBANDSITECID:int
{
	BSID_BANDADDED = 0x0,
	BSID_BANDREMOVED = 0x1
};

enum class BANNER_NOTIFICATION_EVENT:int
{
	BNE_Rendered = 0x0,
	BNE_Hovered = 0x1,
	BNE_Closed = 0x2,
	BNE_Dismissed = 0x3,
	BNE_Button1Clicked = 0x4,
	BNE_Button2Clicked = 0x5
};

enum class APPDOCLISTTYPE:int
{
	ADLT_RECENT = 0x0,
	ADLT_FREQUENT = 0x1
};

enum class VkFilter:int
{
	VK_FILTER_NEAREST = 0x0,
	VK_FILTER_LINEAR = 0x1,
	VK_FILTER_CUBIC_IMG = 0x3B9B0498,
	VK_FILTER_CUBIC_EXT = 0x3B9B0498,
	VK_FILTER_BEGIN_RANGE = 0x0,
	VK_FILTER_END_RANGE = 0x1,
	VK_FILTER_RANGE_SIZE = 0x2,
	VK_FILTER_MAX_ENUM = 0x7FFFFFFF
};

enum class FFFP_MODE:int
{
	FFFP_EXACTMATCH = 0x0,
	FFFP_NEARESTPARENTMATCH = 0x1
};

enum class tagMENUPOPUPSELECT:int
{
	MPOS_EXECUTE = 0x0,
	MPOS_FULLCANCEL = 0x1,
	MPOS_CANCELLEVEL = 0x2,
	MPOS_SELECTLEFT = 0x3,
	MPOS_SELECTRIGHT = 0x4,
	MPOS_CHILDTRACKING = 0x5
};

enum class VkStructureType:int
{
	VK_STRUCTURE_TYPE_APPLICATION_INFO = 0x0,
	VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO = 0x1,
	VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO = 0x2,
	VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO = 0x3,
	VK_STRUCTURE_TYPE_SUBMIT_INFO = 0x4,
	VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO = 0x5,
	VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE = 0x6,
	VK_STRUCTURE_TYPE_BIND_SPARSE_INFO = 0x7,
	VK_STRUCTURE_TYPE_FENCE_CREATE_INFO = 0x8,
	VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO = 0x9,
	VK_STRUCTURE_TYPE_EVENT_CREATE_INFO = 0xA,
	VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO = 0xB,
	VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO = 0xC,
	VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO = 0xD,
	VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO = 0xE,
	VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO = 0xF,
	VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO = 0x10,
	VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO = 0x11,
	VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO = 0x12,
	VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO = 0x13,
	VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO = 0x14,
	VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO = 0x15,
	VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO = 0x16,
	VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO = 0x17,
	VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO = 0x18,
	VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO = 0x19,
	VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO = 0x1A,
	VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO = 0x1B,
	VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO = 0x1C,
	VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO = 0x1D,
	VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO = 0x1E,
	VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO = 0x1F,
	VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO = 0x20,
	VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO = 0x21,
	VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO = 0x22,
	VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET = 0x23,
	VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET = 0x24,
	VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO = 0x25,
	VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO = 0x26,
	VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO = 0x27,
	VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO = 0x28,
	VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO = 0x29,
	VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO = 0x2A,
	VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO = 0x2B,
	VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER = 0x2C,
	VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER = 0x2D,
	VK_STRUCTURE_TYPE_MEMORY_BARRIER = 0x2E,
	VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO = 0x2F,
	VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO = 0x30,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES = 0x3B9C3930,
	VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO = 0x3B9D2F48,
	VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO = 0x3B9D2F49,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES = 0x3B9C0E38,
	VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS = 0x3B9CBA18,
	VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO = 0x3B9CBA19,
	VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO = 0x3B9BB460,
	VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO = 0x3B9BB463,
	VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO = 0x3B9BB464,
	VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO = 0x3B9BB465,
	VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO = 0x3B9BB466,
	VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO = 0x3B9BB46D,
	VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO = 0x3B9BB46E,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES = 0x3B9BDB70,
	VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO = 0x3B9BDB71,
	VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 = 0x3B9D0450,
	VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 = 0x3B9D0451,
	VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2 = 0x3B9D0452,
	VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 = 0x3B9D0453,
	VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2 = 0x3B9D0454,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 = 0x3B9BB078,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 = 0x3B9BB079,
	VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 = 0x3B9BB07A,
	VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2 = 0x3B9BB07B,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2 = 0x3B9BB07C,
	VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 = 0x3B9BB07D,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 = 0x3B9BB07E,
	VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2 = 0x3B9BB07F,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2 = 0x3B9BB080,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES = 0x3B9C9308,
	VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO = 0x3B9C9309,
	VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO = 0x3B9C930A,
	VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO = 0x3B9C930B,
	VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO = 0x3B9B9908,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES = 0x3B9B9909,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES = 0x3B9B990A,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES = 0x3B9C9EC0,
	VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO = 0x3B9D0068,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES = 0x3B9D0069,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES = 0x3B9D006A,
	VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2 = 0x3B9D006B,
	VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO = 0x3B9D2B60,
	VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO = 0x3B9D2B61,
	VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO = 0x3B9D2B62,
	VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO = 0x3B9D2B63,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES = 0x3B9D2B64,
	VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES = 0x3B9D2B65,
	VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO = 0x3B9C1608,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO = 0x3B9BDF58,
	VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES = 0x3B9BDF59,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO = 0x3B9BDF5A,
	VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES = 0x3B9BDF5B,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES = 0x3B9BDF5C,
	VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO = 0x3B9BE340,
	VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO = 0x3B9BE341,
	VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO = 0x3B9BE342,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO = 0x3B9C7F80,
	VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES = 0x3B9C7F81,
	VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO = 0x3B9C8368,
	VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO = 0x3B9BF6C8,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO = 0x3B9BF2E0,
	VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES = 0x3B9BF2E1,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES = 0x3B9D5A40,
	VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT = 0x3B9D5A41,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES = 0x3B9BC018,
	VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR = 0x3B9ACDE8,
	VK_STRUCTURE_TYPE_PRESENT_INFO_KHR = 0x3B9ACDE9,
	VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR = 0x3B9BB467,
	VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR = 0x3B9BB468,
	VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR = 0x3B9BB469,
	VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR = 0x3B9BB46A,
	VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR = 0x3B9BB46B,
	VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR = 0x3B9BB46C,
	VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR = 0x3B9AD1D0,
	VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR = 0x3B9AD1D1,
	VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR = 0x3B9AD5B8,
	VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR = 0x3B9AD9A0,
	VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR = 0x3B9ADD88,
	VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR = 0x3B9AE170,
	VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR = 0x3B9AE940,
	VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR = 0x3B9AED28,
	VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT = 0x3B9AF4F8,
	VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD = 0x3B9B1050,
	VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT = 0x3B9B1FF0,
	VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT = 0x3B9B1FF1,
	VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT = 0x3B9B1FF2,
	VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV = 0x3B9B2F90,
	VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV = 0x3B9B2F91,
	VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV = 0x3B9B2F92,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT = 0x3B9B3760,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT = 0x3B9B3761,
	VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT = 0x3B9B3762,
	VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX = 0x3B9B3F30,
	VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD = 0x3B9B6A28,
	VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP = 0x3B9B8968,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV = 0x3B9B8D50,
	VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV = 0x3B9BA4C0,
	VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV = 0x3B9BA4C1,
	VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV = 0x3B9BA8A8,
	VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV = 0x3B9BA8A9,
	VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV = 0x3B9BAC90,
	VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT = 0x3B9BB848,
	VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN = 0x3B9BBC30,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT = 0x3B9BCBD0,
	VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT = 0x3B9BCFB8,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT = 0x3B9BCFB9,
	VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR = 0x3B9BE728,
	VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR = 0x3B9BE729,
	VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR = 0x3B9BE72A,
	VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR = 0x3B9BE72B,
	VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR = 0x3B9BEB10,
	VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR = 0x3B9BEB11,
	VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR = 0x3B9BEB12,
	VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR = 0x3B9BEEF8,
	VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR = 0x3B9BFAB0,
	VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR = 0x3B9BFAB1,
	VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR = 0x3B9BFAB2,
	VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR = 0x3B9BFAB3,
	VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR = 0x3B9BFE98,
	VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR = 0x3B9BFE99,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR = 0x3B9C0280,
	VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT = 0x3B9C0668,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT = 0x3B9C0669,
	VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT = 0x3B9C066A,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR = 0x3B9C0A50,
	VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR = 0x3B9C1220,
	VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX = 0x3B9C19F0,
	VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX = 0x3B9C19F1,
	VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX = 0x3B9C19F2,
	VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX = 0x3B9C19F3,
	VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX = 0x3B9C19F4,
	VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX = 0x3B9C19F5,
	VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV = 0x3B9C1DD8,
	VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT = 0x3B9C2990,
	VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT = 0x3B9C2D78,
	VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT = 0x3B9C2D79,
	VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT = 0x3B9C2D7A,
	VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT = 0x3B9C2D7B,
	VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE = 0x3B9C3160,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX = 0x3B9C44E8,
	VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV = 0x3B9C48D0,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT = 0x3B9C4CB8,
	VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT = 0x3B9C4CB9,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT = 0x3B9C5488,
	VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT = 0x3B9C5489,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT = 0x3B9C5870,
	VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT = 0x3B9C5871,
	VK_STRUCTURE_TYPE_HDR_METADATA_EXT = 0x3B9C6428,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR = 0x3B9C6FE0,
	VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR = 0x3B9C6FE1,
	VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR = 0x3B9C6FE2,
	VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR = 0x3B9C6FE3,
	VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR = 0x3B9C73C8,
	VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR = 0x3B9C73C9,
	VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR = 0x3B9C73CA,
	VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR = 0x3B9C73CB,
	VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR = 0x3B9C73CC,
	VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR = 0x3B9C73CD,
	VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR = 0x3B9C73CE,
	VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR = 0x3B9C7B98,
	VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR = 0x3B9C8750,
	VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR = 0x3B9C8751,
	VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR = 0x3B9C8752,
	VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR = 0x3B9C8B38,
	VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR = 0x3B9C8B39,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR = 0x3B9C9AD8,
	VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR = 0x3B9C9AD9,
	VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR = 0x3B9C9ADA,
	VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR = 0x3B9CA2A8,
	VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR = 0x3B9CA2A9,
	VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR = 0x3B9CA2AA,
	VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR = 0x3B9CA2AB,
	VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR = 0x3B9CA2AC,
	VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK = 0x3B9CA690,
	VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK = 0x3B9CAA78,
	VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT = 0x3B9CBE00,
	VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT = 0x3B9CBE01,
	VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT = 0x3B9CBE02,
	VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT = 0x3B9CBE03,
	VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT = 0x3B9CBE04,
	VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID = 0x3B9CC1E8,
	VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID = 0x3B9CC1E9,
	VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID = 0x3B9CC1EA,
	VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID = 0x3B9CC1EB,
	VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID = 0x3B9CC1EC,
	VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID = 0x3B9CC1ED,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT = 0x3B9CC5D0,
	VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT = 0x3B9CC5D1,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT = 0x3B9CE510,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT = 0x3B9CE511,
	VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT = 0x3B9CE512,
	VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT = 0x3B9CE513,
	VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT = 0x3B9CF898,
	VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT = 0x3B9CF899,
	VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT = 0x3B9CF89A,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT = 0x3B9CF89B,
	VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT = 0x3B9CF89C,
	VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR = 0x3B9D0838,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT = 0x3B9D0C20,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT = 0x3B9D0C21,
	VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT = 0x3B9D0C22,
	VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV = 0x3B9D1008,
	VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV = 0x3B9D1BC0,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV = 0x3B9D2390,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV = 0x3B9D2391,
	VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT = 0x3B9D3330,
	VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT = 0x3B9D3331,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT = 0x3B9D3332,
	VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT = 0x3B9D3333,
	VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT = 0x3B9D3334,
	VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT = 0x3B9D3335,
	VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT = 0x3B9D3B00,
	VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT = 0x3B9D3B01,
	VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT = 0x3B9D3EE8,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT = 0x3B9D3EE9,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT = 0x3B9D3EEA,
	VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT = 0x3B9D3EEB,
	VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT = 0x3B9D3EEC,
	VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV = 0x3B9D4AA0,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV = 0x3B9D4AA1,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV = 0x3B9D4AA2,
	VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV = 0x3B9D4AA5,
	VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV = 0x3B9D4E88,
	VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV = 0x3B9D4E89,
	VK_STRUCTURE_TYPE_GEOMETRY_NV = 0x3B9D4E8B,
	VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV = 0x3B9D4E8C,
	VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV = 0x3B9D4E8D,
	VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV = 0x3B9D4E8E,
	VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV = 0x3B9D4E8F,
	VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV = 0x3B9D4E90,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV = 0x3B9D4E91,
	VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV = 0x3B9D4E93,
	VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV = 0x3B9D4E94,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV = 0x3B9D5270,
	VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV = 0x3B9D5271,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT = 0x3B9D6210,
	VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT = 0x3B9D6211,
	VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT = 0x3B9D71B0,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR = 0x3B9D7D68,
	VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT = 0x3B9D8150,
	VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT = 0x3B9D8151,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT = 0x3B9D8152,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR = 0x3B9D8920,
	VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD = 0x3B9D94D8,
	VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT = 0x3B9D98C0,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD = 0x3B9D9CA8,
	VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD = 0x3B9DAC48,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT = 0x3B9DB030,
	VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT = 0x3B9DB031,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT = 0x3B9DB032,
	VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP = 0x3B9DB418,
	VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT = 0x3B9DB800,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR = 0x3B9DC7A0,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR = 0x3B9DCB88,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR = 0x3B9DD358,
	VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR = 0x3B9DD359,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV = 0x3B9DDB28,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV = 0x3B9DDF10,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV = 0x3B9DDF11,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV = 0x3B9DE2F8,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV = 0x3B9DE6E0,
	VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV = 0x3B9DEAC8,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV = 0x3B9DEACA,
	VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV = 0x3B9DEEB0,
	VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV = 0x3B9DEEB1,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL = 0x3B9DFA68,
	VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL = 0x3B9DFE50,
	VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL = 0x3B9DFE51,
	VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL = 0x3B9DFE52,
	VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL = 0x3B9DFE53,
	VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL = 0x3B9DFE54,
	VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL = 0x3B9DFE55,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR = 0x3B9E0238,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT = 0x3B9E0620,
	VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD = 0x3B9E0A08,
	VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD = 0x3B9E0A09,
	VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA = 0x3B9E0DF0,
	VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT = 0x3B9E19A8,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT = 0x3B9E1D90,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT = 0x3B9E1D91,
	VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT = 0x3B9E1D92,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT = 0x3B9E2948,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT = 0x3B9E38E8,
	VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT = 0x3B9E38E9,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT = 0x3B9E38EA,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD = 0x3B9E40B8,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD = 0x3B9E4888,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT = 0x3B9E67C8,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT = 0x3B9E6BB0,
	VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT = 0x3B9E6BB1,
	VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR = 0x3B9E6F98,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV = 0x3B9E7380,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT = 0x3B9E8320,
	VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT = 0x3B9E8321,
	VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT = 0x3B9E8322,
	VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT = 0x3B9E8AF0,
	VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT = 0x3B9E8ED8,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV = 0x3B9E96A8,
	VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV = 0x3B9E96A9,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV = 0x3B9E96AA,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV = 0x3B9E9A90,
	VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV = 0x3B9E9A91,
	VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV = 0x3B9E9A92,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT = 0x3B9E9E78,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT = 0x3B9EA260,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR = 0x3B9EA648,
	VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT = 0x3B9EAE18,
	VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT = 0x3B9EAE1A,
	VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT = 0x3B9EAE19,
	VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT = 0x3B9EB200,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT = 0x3B9EBDB8,
	VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT = 0x3B9EBDB9,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT = 0x3B9EBDBA,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT = 0x3B9EC588,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT = 0x3B9ED528,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR = 0x3B9EE4C8,
	VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR = 0x3B9EE4C9,
	VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR = 0x3B9EE4CA,
	VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR = 0x3B9EE4CB,
	VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR = 0x3B9EE4CC,
	VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR = 0x3B9EE4CD,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT = 0x3B9F0020,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT = 0x3B9F13A8,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT = 0x3B9F13A9,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES = 0x3B9C9EC0,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES = 0x3B9BC018,
	VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT = 0x3B9AF4F8,
	VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR = 0x3B9B9908,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR = 0x3B9B9909,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR = 0x3B9B990A,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR = 0x3B9BB078,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR = 0x3B9BB079,
	VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR = 0x3B9BB07A,
	VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR = 0x3B9BB07B,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR = 0x3B9BB07C,
	VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR = 0x3B9BB07D,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR = 0x3B9BB07E,
	VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR = 0x3B9BB07F,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR = 0x3B9BB080,
	VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR = 0x3B9BB460,
	VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR = 0x3B9BB463,
	VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR = 0x3B9BB464,
	VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR = 0x3B9BB465,
	VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR = 0x3B9BB466,
	VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR = 0x3B9BB46D,
	VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR = 0x3B9BB46E,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR = 0x3B9BDB70,
	VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR = 0x3B9BDB71,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR = 0x3B9BDF58,
	VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR = 0x3B9BDF59,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR = 0x3B9BDF5A,
	VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR = 0x3B9BDF5B,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR = 0x3B9BDF5C,
	VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR = 0x3B9BE340,
	VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR = 0x3B9BE341,
	VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR = 0x3B9BE342,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR = 0x3B9BF2E0,
	VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR = 0x3B9BF2E1,
	VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR = 0x3B9BF6C8,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR = 0x3B9C0A50,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR = 0x3B9C0E38,
	VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR = 0x3B9C1608,
	VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT = 0x3B9C2990,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR = 0x3B9C7F80,
	VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR = 0x3B9C7F81,
	VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR = 0x3B9C8368,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR = 0x3B9C9308,
	VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR = 0x3B9C9309,
	VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR = 0x3B9C930A,
	VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR = 0x3B9C930B,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR = 0x3B9C9EC0,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR = 0x3B9C9EC0,
	VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR = 0x3B9CBA18,
	VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR = 0x3B9CBA19,
	VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR = 0x3B9D0450,
	VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR = 0x3B9D0451,
	VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR = 0x3B9D0452,
	VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR = 0x3B9D0453,
	VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR = 0x3B9D0454,
	VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR = 0x3B9D2B60,
	VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR = 0x3B9D2B61,
	VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR = 0x3B9D2B62,
	VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR = 0x3B9D2B63,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR = 0x3B9D2B64,
	VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR = 0x3B9D2B65,
	VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR = 0x3B9D2F48,
	VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR = 0x3B9D2F49,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR = 0x3B9D5A40,
	VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR = 0x3B9D5A41,
	VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT = 0x3B9E8320,
	VK_STRUCTURE_TYPE_BEGIN_RANGE = 0x0,
	VK_STRUCTURE_TYPE_END_RANGE = 0x30,
	VK_STRUCTURE_TYPE_RANGE_SIZE = 0x31,
	VK_STRUCTURE_TYPE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkSamplerMipmapMode:int
{
	VK_SAMPLER_MIPMAP_MODE_NEAREST = 0x0,
	VK_SAMPLER_MIPMAP_MODE_LINEAR = 0x1,
	VK_SAMPLER_MIPMAP_MODE_BEGIN_RANGE = 0x0,
	VK_SAMPLER_MIPMAP_MODE_END_RANGE = 0x1,
	VK_SAMPLER_MIPMAP_MODE_RANGE_SIZE = 0x2,
	VK_SAMPLER_MIPMAP_MODE_MAX_ENUM = 0x7FFFFFFF
};

enum class FILE_USAGE_TYPE:int
{
	FUT_PLAYING = 0x0,
	FUT_EDITING = 0x1,
	FUT_GENERIC = 0x2
};

enum class VkSamplerAddressMode:int
{
	VK_SAMPLER_ADDRESS_MODE_REPEAT = 0x0,
	VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT = 0x1,
	VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE = 0x2,
	VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER = 0x3,
	VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE = 0x4,
	VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR = 0x4,
	VK_SAMPLER_ADDRESS_MODE_BEGIN_RANGE = 0x0,
	VK_SAMPLER_ADDRESS_MODE_END_RANGE = 0x3,
	VK_SAMPLER_ADDRESS_MODE_RANGE_SIZE = 0x4,
	VK_SAMPLER_ADDRESS_MODE_MAX_ENUM = 0x7FFFFFFF
};

enum class OfflineFolderStatus:int
{
	OFS_INACTIVE = 0xFF,
	OFS_ONLINE = 0x0,
	OFS_OFFLINE = 0x1,
	OFS_SERVERBACK = 0x2,
	OFS_DIRTYCACHE = 0x3
};

enum class VkBorderColor:int
{
	VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK = 0x0,
	VK_BORDER_COLOR_INT_TRANSPARENT_BLACK = 0x1,
	VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK = 0x2,
	VK_BORDER_COLOR_INT_OPAQUE_BLACK = 0x3,
	VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE = 0x4,
	VK_BORDER_COLOR_INT_OPAQUE_WHITE = 0x5,
	VK_BORDER_COLOR_BEGIN_RANGE = 0x0,
	VK_BORDER_COLOR_END_RANGE = 0x5,
	VK_BORDER_COLOR_RANGE_SIZE = 0x6,
	VK_BORDER_COLOR_MAX_ENUM = 0x7FFFFFFF
};

enum class VkBlendOverlapEXT:int
{
	VK_BLEND_OVERLAP_UNCORRELATED_EXT = 0x0,
	VK_BLEND_OVERLAP_DISJOINT_EXT = 0x1,
	VK_BLEND_OVERLAP_CONJOINT_EXT = 0x2,
	VK_BLEND_OVERLAP_BEGIN_RANGE_EXT = 0x0,
	VK_BLEND_OVERLAP_END_RANGE_EXT = 0x2,
	VK_BLEND_OVERLAP_RANGE_SIZE_EXT = 0x3,
	VK_BLEND_OVERLAP_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class tagCONDITION_TYPE:int
{
	CT_AND_CONDITION = 0x0,
	CT_OR_CONDITION = 0x1,
	CT_NOT_CONDITION = 0x2,
	CT_LEAF_CONDITION = 0x3
};

enum class VkDescriptorType:int
{
	VK_DESCRIPTOR_TYPE_SAMPLER = 0x0,
	VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER = 0x1,
	VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE = 0x2,
	VK_DESCRIPTOR_TYPE_STORAGE_IMAGE = 0x3,
	VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER = 0x4,
	VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER = 0x5,
	VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER = 0x6,
	VK_DESCRIPTOR_TYPE_STORAGE_BUFFER = 0x7,
	VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC = 0x8,
	VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC = 0x9,
	VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT = 0xA,
	VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT = 0x3B9CE510,
	VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV = 0x3B9D4E88,
	VK_DESCRIPTOR_TYPE_BEGIN_RANGE = 0x0,
	VK_DESCRIPTOR_TYPE_END_RANGE = 0xA,
	VK_DESCRIPTOR_TYPE_RANGE_SIZE = 0xB,
	VK_DESCRIPTOR_TYPE_MAX_ENUM = 0x7FFFFFFF
};

enum class tagCONDITION_OPERATION:int
{
	COP_IMPLICIT = 0x0,
	COP_EQUAL = 0x1,
	COP_NOTEQUAL = 0x2,
	COP_LESSTHAN = 0x3,
	COP_GREATERTHAN = 0x4,
	COP_LESSTHANOREQUAL = 0x5,
	COP_GREATERTHANOREQUAL = 0x6,
	COP_VALUE_STARTSWITH = 0x7,
	COP_VALUE_ENDSWITH = 0x8,
	COP_VALUE_CONTAINS = 0x9,
	COP_VALUE_NOTCONTAINS = 0xA,
	COP_DOSWILDCARDS = 0xB,
	COP_WORD_EQUAL = 0xC,
	COP_WORD_STARTSWITH = 0xD,
	COP_APPLICATION_SPECIFIC = 0xE
};

enum class VkAttachmentLoadOp:int
{
	VK_ATTACHMENT_LOAD_OP_LOAD = 0x0,
	VK_ATTACHMENT_LOAD_OP_CLEAR = 0x1,
	VK_ATTACHMENT_LOAD_OP_DONT_CARE = 0x2,
	VK_ATTACHMENT_LOAD_OP_BEGIN_RANGE = 0x0,
	VK_ATTACHMENT_LOAD_OP_END_RANGE = 0x2,
	VK_ATTACHMENT_LOAD_OP_RANGE_SIZE = 0x3,
	VK_ATTACHMENT_LOAD_OP_MAX_ENUM = 0x7FFFFFFF
};

enum class VkAttachmentStoreOp:int
{
	VK_ATTACHMENT_STORE_OP_STORE = 0x0,
	VK_ATTACHMENT_STORE_OP_DONT_CARE = 0x1,
	VK_ATTACHMENT_STORE_OP_BEGIN_RANGE = 0x0,
	VK_ATTACHMENT_STORE_OP_END_RANGE = 0x1,
	VK_ATTACHMENT_STORE_OP_RANGE_SIZE = 0x2,
	VK_ATTACHMENT_STORE_OP_MAX_ENUM = 0x7FFFFFFF
};

enum class VkPipelineBindPoint:int
{
	VK_PIPELINE_BIND_POINT_GRAPHICS = 0x0,
	VK_PIPELINE_BIND_POINT_COMPUTE = 0x1,
	VK_PIPELINE_BIND_POINT_RAY_TRACING_NV = 0x3B9D4E88,
	VK_PIPELINE_BIND_POINT_BEGIN_RANGE = 0x0,
	VK_PIPELINE_BIND_POINT_END_RANGE = 0x1,
	VK_PIPELINE_BIND_POINT_RANGE_SIZE = 0x2,
	VK_PIPELINE_BIND_POINT_MAX_ENUM = 0x7FFFFFFF
};

enum class VkQueueGlobalPriorityEXT:int
{
	VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT = 0x80,
	VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT = 0x100,
	VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT = 0x200,
	VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT = 0x400,
	VK_QUEUE_GLOBAL_PRIORITY_BEGIN_RANGE_EXT = 0x80,
	VK_QUEUE_GLOBAL_PRIORITY_END_RANGE_EXT = 0x400,
	VK_QUEUE_GLOBAL_PRIORITY_RANGE_SIZE_EXT = 0x381,
	VK_QUEUE_GLOBAL_PRIORITY_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class VkCommandBufferLevel:int
{
	VK_COMMAND_BUFFER_LEVEL_PRIMARY = 0x0,
	VK_COMMAND_BUFFER_LEVEL_SECONDARY = 0x1,
	VK_COMMAND_BUFFER_LEVEL_BEGIN_RANGE = 0x0,
	VK_COMMAND_BUFFER_LEVEL_END_RANGE = 0x1,
	VK_COMMAND_BUFFER_LEVEL_RANGE_SIZE = 0x2,
	VK_COMMAND_BUFFER_LEVEL_MAX_ENUM = 0x7FFFFFFF
};

enum class VkIndexType:int
{
	VK_INDEX_TYPE_UINT16 = 0x0,
	VK_INDEX_TYPE_UINT32 = 0x1,
	VK_INDEX_TYPE_NONE_NV = 0x3B9D4E88,
	VK_INDEX_TYPE_UINT8_EXT = 0x3B9ED528,
	VK_INDEX_TYPE_BEGIN_RANGE = 0x0,
	VK_INDEX_TYPE_END_RANGE = 0x1,
	VK_INDEX_TYPE_RANGE_SIZE = 0x2,
	VK_INDEX_TYPE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkValidationFeatureEnableEXT:int
{
	VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT = 0x0,
	VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT = 0x1,
	VK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT = 0x2,
	VK_VALIDATION_FEATURE_ENABLE_BEGIN_RANGE_EXT = 0x0,
	VK_VALIDATION_FEATURE_ENABLE_END_RANGE_EXT = 0x2,
	VK_VALIDATION_FEATURE_ENABLE_RANGE_SIZE_EXT = 0x3,
	VK_VALIDATION_FEATURE_ENABLE_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class VkSubpassContents:int
{
	VK_SUBPASS_CONTENTS_INLINE = 0x0,
	VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS = 0x1,
	VK_SUBPASS_CONTENTS_BEGIN_RANGE = 0x0,
	VK_SUBPASS_CONTENTS_END_RANGE = 0x1,
	VK_SUBPASS_CONTENTS_RANGE_SIZE = 0x2,
	VK_SUBPASS_CONTENTS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkDebugReportObjectTypeEXT:int
{
	VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT = 0x0,
	VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT = 0x1,
	VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT = 0x2,
	VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT = 0x3,
	VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT = 0x4,
	VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT = 0x5,
	VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT = 0x6,
	VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT = 0x7,
	VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT = 0x8,
	VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT = 0x9,
	VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT = 0xA,
	VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT = 0xB,
	VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT = 0xC,
	VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT = 0xD,
	VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT = 0xE,
	VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT = 0xF,
	VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT = 0x10,
	VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT = 0x11,
	VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT = 0x12,
	VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT = 0x13,
	VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT = 0x14,
	VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT = 0x15,
	VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT = 0x16,
	VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT = 0x17,
	VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT = 0x18,
	VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT = 0x19,
	VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT = 0x1A,
	VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT = 0x1B,
	VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT = 0x1C,
	VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT = 0x1D,
	VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT = 0x1E,
	VK_DEBUG_REPORT_OBJECT_TYPE_OBJECT_TABLE_NVX_EXT = 0x1F,
	VK_DEBUG_REPORT_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX_EXT = 0x20,
	VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT = 0x21,
	VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT = 0x3B9D2B60,
	VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT = 0x3B9C1608,
	VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT = 0x3B9D4E88,
	VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT = 0x1C,
	VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT = 0x21,
	VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT = 0x3B9C1608,
	VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT = 0x3B9D2B60,
	VK_DEBUG_REPORT_OBJECT_TYPE_BEGIN_RANGE_EXT = 0x0,
	VK_DEBUG_REPORT_OBJECT_TYPE_END_RANGE_EXT = 0x21,
	VK_DEBUG_REPORT_OBJECT_TYPE_RANGE_SIZE_EXT = 0x22,
	VK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class VkValidationFeatureDisableEXT:int
{
	VK_VALIDATION_FEATURE_DISABLE_ALL_EXT = 0x0,
	VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT = 0x1,
	VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT = 0x2,
	VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT = 0x3,
	VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT = 0x4,
	VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT = 0x5,
	VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT = 0x6,
	VK_VALIDATION_FEATURE_DISABLE_BEGIN_RANGE_EXT = 0x0,
	VK_VALIDATION_FEATURE_DISABLE_END_RANGE_EXT = 0x6,
	VK_VALIDATION_FEATURE_DISABLE_RANGE_SIZE_EXT = 0x7,
	VK_VALIDATION_FEATURE_DISABLE_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class VkObjectType:int
{
	VK_OBJECT_TYPE_UNKNOWN = 0x0,
	VK_OBJECT_TYPE_INSTANCE = 0x1,
	VK_OBJECT_TYPE_PHYSICAL_DEVICE = 0x2,
	VK_OBJECT_TYPE_DEVICE = 0x3,
	VK_OBJECT_TYPE_QUEUE = 0x4,
	VK_OBJECT_TYPE_SEMAPHORE = 0x5,
	VK_OBJECT_TYPE_COMMAND_BUFFER = 0x6,
	VK_OBJECT_TYPE_FENCE = 0x7,
	VK_OBJECT_TYPE_DEVICE_MEMORY = 0x8,
	VK_OBJECT_TYPE_BUFFER = 0x9,
	VK_OBJECT_TYPE_IMAGE = 0xA,
	VK_OBJECT_TYPE_EVENT = 0xB,
	VK_OBJECT_TYPE_QUERY_POOL = 0xC,
	VK_OBJECT_TYPE_BUFFER_VIEW = 0xD,
	VK_OBJECT_TYPE_IMAGE_VIEW = 0xE,
	VK_OBJECT_TYPE_SHADER_MODULE = 0xF,
	VK_OBJECT_TYPE_PIPELINE_CACHE = 0x10,
	VK_OBJECT_TYPE_PIPELINE_LAYOUT = 0x11,
	VK_OBJECT_TYPE_RENDER_PASS = 0x12,
	VK_OBJECT_TYPE_PIPELINE = 0x13,
	VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT = 0x14,
	VK_OBJECT_TYPE_SAMPLER = 0x15,
	VK_OBJECT_TYPE_DESCRIPTOR_POOL = 0x16,
	VK_OBJECT_TYPE_DESCRIPTOR_SET = 0x17,
	VK_OBJECT_TYPE_FRAMEBUFFER = 0x18,
	VK_OBJECT_TYPE_COMMAND_POOL = 0x19,
	VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION = 0x3B9D2B60,
	VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE = 0x3B9C1608,
	VK_OBJECT_TYPE_SURFACE_KHR = 0x3B9ACA00,
	VK_OBJECT_TYPE_SWAPCHAIN_KHR = 0x3B9ACDE8,
	VK_OBJECT_TYPE_DISPLAY_KHR = 0x3B9AD1D0,
	VK_OBJECT_TYPE_DISPLAY_MODE_KHR = 0x3B9AD1D1,
	VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT = 0x3B9AF4F8,
	VK_OBJECT_TYPE_OBJECT_TABLE_NVX = 0x3B9C19F0,
	VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX = 0x3B9C19F1,
	VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT = 0x3B9CBE00,
	VK_OBJECT_TYPE_VALIDATION_CACHE_EXT = 0x3B9D3B00,
	VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV = 0x3B9D4E88,
	VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL = 0x3B9DFE50,
	VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR = 0x3B9C1608,
	VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR = 0x3B9D2B60,
	VK_OBJECT_TYPE_BEGIN_RANGE = 0x0,
	VK_OBJECT_TYPE_END_RANGE = 0x19,
	VK_OBJECT_TYPE_RANGE_SIZE = 0x1A,
	VK_OBJECT_TYPE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkCoverageModulationModeNV:int
{
	VK_COVERAGE_MODULATION_MODE_NONE_NV = 0x0,
	VK_COVERAGE_MODULATION_MODE_RGB_NV = 0x1,
	VK_COVERAGE_MODULATION_MODE_ALPHA_NV = 0x2,
	VK_COVERAGE_MODULATION_MODE_RGBA_NV = 0x3,
	VK_COVERAGE_MODULATION_MODE_BEGIN_RANGE_NV = 0x0,
	VK_COVERAGE_MODULATION_MODE_END_RANGE_NV = 0x3,
	VK_COVERAGE_MODULATION_MODE_RANGE_SIZE_NV = 0x4,
	VK_COVERAGE_MODULATION_MODE_MAX_ENUM_NV = 0x7FFFFFFF
};

enum class VkComponentTypeNV:int
{
	VK_COMPONENT_TYPE_FLOAT16_NV = 0x0,
	VK_COMPONENT_TYPE_FLOAT32_NV = 0x1,
	VK_COMPONENT_TYPE_FLOAT64_NV = 0x2,
	VK_COMPONENT_TYPE_SINT8_NV = 0x3,
	VK_COMPONENT_TYPE_SINT16_NV = 0x4,
	VK_COMPONENT_TYPE_SINT32_NV = 0x5,
	VK_COMPONENT_TYPE_SINT64_NV = 0x6,
	VK_COMPONENT_TYPE_UINT8_NV = 0x7,
	VK_COMPONENT_TYPE_UINT16_NV = 0x8,
	VK_COMPONENT_TYPE_UINT32_NV = 0x9,
	VK_COMPONENT_TYPE_UINT64_NV = 0xA,
	VK_COMPONENT_TYPE_BEGIN_RANGE_NV = 0x0,
	VK_COMPONENT_TYPE_END_RANGE_NV = 0xA,
	VK_COMPONENT_TYPE_RANGE_SIZE_NV = 0xB,
	VK_COMPONENT_TYPE_MAX_ENUM_NV = 0x7FFFFFFF
};

enum class VkScopeNV:int
{
	VK_SCOPE_DEVICE_NV = 0x1,
	VK_SCOPE_WORKGROUP_NV = 0x2,
	VK_SCOPE_SUBGROUP_NV = 0x3,
	VK_SCOPE_QUEUE_FAMILY_NV = 0x5,
	VK_SCOPE_BEGIN_RANGE_NV = 0x1,
	VK_SCOPE_END_RANGE_NV = 0x5,
	VK_SCOPE_RANGE_SIZE_NV = 0x5,
	VK_SCOPE_MAX_ENUM_NV = 0x7FFFFFFF
};

enum class VkVendorId:int
{
	VK_VENDOR_ID_VIV = 0x10001,
	VK_VENDOR_ID_VSI = 0x10002,
	VK_VENDOR_ID_KAZAN = 0x10003,
	VK_VENDOR_ID_BEGIN_RANGE = 0x10001,
	VK_VENDOR_ID_END_RANGE = 0x10003,
	VK_VENDOR_ID_RANGE_SIZE = 0x3,
	VK_VENDOR_ID_MAX_ENUM = 0x7FFFFFFF
};

enum class VkColorSpaceKHR:int
{
	VK_COLOR_SPACE_SRGB_NONLINEAR_KHR = 0x0,
	VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT = 0x3B9C6041,
	VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT = 0x3B9C6042,
	VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT = 0x3B9C6043,
	VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT = 0x3B9C6044,
	VK_COLOR_SPACE_BT709_LINEAR_EXT = 0x3B9C6045,
	VK_COLOR_SPACE_BT709_NONLINEAR_EXT = 0x3B9C6046,
	VK_COLOR_SPACE_BT2020_LINEAR_EXT = 0x3B9C6047,
	VK_COLOR_SPACE_HDR10_ST2084_EXT = 0x3B9C6048,
	VK_COLOR_SPACE_DOLBYVISION_EXT = 0x3B9C6049,
	VK_COLOR_SPACE_HDR10_HLG_EXT = 0x3B9C604A,
	VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT = 0x3B9C604B,
	VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT = 0x3B9C604C,
	VK_COLOR_SPACE_PASS_THROUGH_EXT = 0x3B9C604D,
	VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT = 0x3B9C604E,
	VK_COLOR_SPACE_DISPLAY_NATIVE_AMD = 0x3B9E0A08,
	VK_COLORSPACE_SRGB_NONLINEAR_KHR = 0x0,
	VK_COLOR_SPACE_DCI_P3_LINEAR_EXT = 0x3B9C6043,
	VK_COLOR_SPACE_BEGIN_RANGE_KHR = 0x0,
	VK_COLOR_SPACE_END_RANGE_KHR = 0x0,
	VK_COLOR_SPACE_RANGE_SIZE_KHR = 0x1,
	VK_COLOR_SPACE_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkTimeDomainEXT:int
{
	VK_TIME_DOMAIN_DEVICE_EXT = 0x0,
	VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT = 0x1,
	VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT = 0x2,
	VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT = 0x3,
	VK_TIME_DOMAIN_BEGIN_RANGE_EXT = 0x0,
	VK_TIME_DOMAIN_END_RANGE_EXT = 0x3,
	VK_TIME_DOMAIN_RANGE_SIZE_EXT = 0x4,
	VK_TIME_DOMAIN_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class VkPresentModeKHR:int
{
	VK_PRESENT_MODE_IMMEDIATE_KHR = 0x0,
	VK_PRESENT_MODE_MAILBOX_KHR = 0x1,
	VK_PRESENT_MODE_FIFO_KHR = 0x2,
	VK_PRESENT_MODE_FIFO_RELAXED_KHR = 0x3,
	VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR = 0x3B9C7B98,
	VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR = 0x3B9C7B99,
	VK_PRESENT_MODE_BEGIN_RANGE_KHR = 0x0,
	VK_PRESENT_MODE_END_RANGE_KHR = 0x3,
	VK_PRESENT_MODE_RANGE_SIZE_KHR = 0x4,
	VK_PRESENT_MODE_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkRasterizationOrderAMD:int
{
	VK_RASTERIZATION_ORDER_STRICT_AMD = 0x0,
	VK_RASTERIZATION_ORDER_RELAXED_AMD = 0x1,
	VK_RASTERIZATION_ORDER_BEGIN_RANGE_AMD = 0x0,
	VK_RASTERIZATION_ORDER_END_RANGE_AMD = 0x1,
	VK_RASTERIZATION_ORDER_RANGE_SIZE_AMD = 0x2,
	VK_RASTERIZATION_ORDER_MAX_ENUM_AMD = 0x7FFFFFFF
};

enum class VkImageCreateFlagBits:int
{
	VK_IMAGE_CREATE_SPARSE_BINDING_BIT = 0x1,
	VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT = 0x2,
	VK_IMAGE_CREATE_SPARSE_ALIASED_BIT = 0x4,
	VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT = 0x8,
	VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT = 0x10,
	VK_IMAGE_CREATE_ALIAS_BIT = 0x400,
	VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT = 0x40,
	VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT = 0x20,
	VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT = 0x80,
	VK_IMAGE_CREATE_EXTENDED_USAGE_BIT = 0x100,
	VK_IMAGE_CREATE_PROTECTED_BIT = 0x800,
	VK_IMAGE_CREATE_DISJOINT_BIT = 0x200,
	VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV = 0x2000,
	VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT = 0x1000,
	VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT = 0x4000,
	VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR = 0x40,
	VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR = 0x20,
	VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR = 0x80,
	VK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR = 0x100,
	VK_IMAGE_CREATE_DISJOINT_BIT_KHR = 0x200,
	VK_IMAGE_CREATE_ALIAS_BIT_KHR = 0x400,
	VK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkCoverageReductionModeNV:int
{
	VK_COVERAGE_REDUCTION_MODE_MERGE_NV = 0x0,
	VK_COVERAGE_REDUCTION_MODE_TRUNCATE_NV = 0x1,
	VK_COVERAGE_REDUCTION_MODE_BEGIN_RANGE_NV = 0x0,
	VK_COVERAGE_REDUCTION_MODE_END_RANGE_NV = 0x1,
	VK_COVERAGE_REDUCTION_MODE_RANGE_SIZE_NV = 0x2,
	VK_COVERAGE_REDUCTION_MODE_MAX_ENUM_NV = 0x7FFFFFFF
};

enum class NvAPIPrivateConstDataSlot:int
{
	PCD_NEXUS_FRAME_AND_DC_INDEX = 0x0,
	PCD_NEXUS_DC_EXTRA_INFO = 0x1,
	PCD_NEXUS_TRAP_HANDLER_DUMP_GPU_VIRTUAL_ADDRESS = 0x2,
	PCD_NEXUS_COMPUTE_START = 0x3,
	PCD_NEXUS_COMPUTE_FRAME_AND_DC_INDEX = 0x3,
	PCD_NEXUS_COMPUTE_DC_EXTRA_INFO = 0x4,
	PCD_COUNT = 0x5
};

enum class VkDisplayPowerStateEXT:int
{
	VK_DISPLAY_POWER_STATE_OFF_EXT = 0x0,
	VK_DISPLAY_POWER_STATE_SUSPEND_EXT = 0x1,
	VK_DISPLAY_POWER_STATE_ON_EXT = 0x2,
	VK_DISPLAY_POWER_STATE_BEGIN_RANGE_EXT = 0x0,
	VK_DISPLAY_POWER_STATE_END_RANGE_EXT = 0x2,
	VK_DISPLAY_POWER_STATE_RANGE_SIZE_EXT = 0x3,
	VK_DISPLAY_POWER_STATE_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class VkDeviceEventTypeEXT:int
{
	VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT = 0x0,
	VK_DEVICE_EVENT_TYPE_BEGIN_RANGE_EXT = 0x0,
	VK_DEVICE_EVENT_TYPE_END_RANGE_EXT = 0x0,
	VK_DEVICE_EVENT_TYPE_RANGE_SIZE_EXT = 0x1,
	VK_DEVICE_EVENT_TYPE_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class _NVAPI_VIDEO_STATE_COMPONENT_ID:int
{
	NVAPI_VIDEO_STATE_COMPONENT_ID_NONE = 0xFF,
	NVAPI_VIDEO_STATE_COMPONENT_BRIGHTNESS = 0x0,
	NVAPI_VIDEO_STATE_COMPONENT_CONTRAST = 0x1,
	NVAPI_VIDEO_STATE_COMPONENT_HUE = 0x2,
	NVAPI_VIDEO_STATE_COMPONENT_SATURATION = 0x3,
	NVAPI_VIDEO_STATE_COMPONENT_COLORTEMP = 0x4,
	NVAPI_VIDEO_STATE_COMPONENT_Y_GAMMA = 0x5,
	NVAPI_VIDEO_STATE_COMPONENT_RGB_GAMMA_R = 0x6,
	NVAPI_VIDEO_STATE_COMPONENT_RGB_GAMMA_G = 0x7,
	NVAPI_VIDEO_STATE_COMPONENT_RGB_GAMMA_B = 0x8,
	NVAPI_VIDEO_STATE_COMPONENT_COLOR_SPACE = 0x9,
	NVAPI_VIDEO_STATE_COMPONENT_COLOR_RANGE = 0xA,
	NVAPI_VIDEO_STATE_COMPONENT_PLAYBACK_PROFILE = 0xB,
	NVAPI_VIDEO_STATE_COMPONENT_DEINTERLACE = 0xC,
	NVAPI_VIDEO_STATE_COMPONENT_SCALING = 0xD,
	NVAPI_VIDEO_STATE_COMPONENT_CADENCE = 0xE,
	NVAPI_VIDEO_STATE_COMPONENT_NOISE_REDUCE = 0xF,
	NVAPI_VIDEO_STATE_COMPONENT_EDGE_ENHANCE = 0x10,
	NVAPI_VIDEO_STATE_COMPONENT_OVERDRIVE = 0x11,
	NVAPI_VIDEO_STATE_COMPONENT_SPLITSCREEN = 0x12,
	NVAPI_VIDEO_STATE_COMPONENT_DEBLOCKING = 0x13,
	NVAPI_VIDEO_STATE_COMPONENT_DYNAMIC_CONTRAST = 0x14,
	NVAPI_VIDEO_STATE_COMPONENT_GREEN_STRETCH = 0x15,
	NVAPI_VIDEO_STATE_COMPONENT_BLUE_STRETCH = 0x16,
	NVAPI_VIDEO_STATE_COMPONENT_SKIN_TONE_CORRECTION = 0x17,
	NVAPI_VIDEO_STATE_COMPONENT_GAMUT_REMAPPING = 0x18,
	NVAPI_VIDEO_STATE_COMPONENT_2DTO3D = 0x19,
	NVAPI_VIDEO_STATE_COMPONENT_3D_ANALYSIS = 0x1A,
	NVAPI_VIDEO_STATE_COMPONENT_FRC = 0x1B,
	NVAPI_VIDEO_STATE_COMPONENT_BEN = 0x1C,
	NVAPI_VIDEO_STATE_COMPONENT_ID_LAST = 0x1D
};

enum class VkDisplayEventTypeEXT:int
{
	VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT = 0x0,
	VK_DISPLAY_EVENT_TYPE_BEGIN_RANGE_EXT = 0x0,
	VK_DISPLAY_EVENT_TYPE_END_RANGE_EXT = 0x0,
	VK_DISPLAY_EVENT_TYPE_RANGE_SIZE_EXT = 0x1,
	VK_DISPLAY_EVENT_TYPE_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class VkMemoryOverallocationBehaviorAMD:int
{
	VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD = 0x0,
	VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD = 0x1,
	VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD = 0x2,
	VK_MEMORY_OVERALLOCATION_BEHAVIOR_BEGIN_RANGE_AMD = 0x0,
	VK_MEMORY_OVERALLOCATION_BEHAVIOR_END_RANGE_AMD = 0x2,
	VK_MEMORY_OVERALLOCATION_BEHAVIOR_RANGE_SIZE_AMD = 0x3,
	VK_MEMORY_OVERALLOCATION_BEHAVIOR_MAX_ENUM_AMD = 0x7FFFFFFF
};

enum class VkMemoryHeapFlagBits:int
{
	VK_MEMORY_HEAP_DEVICE_LOCAL_BIT = 0x1,
	VK_MEMORY_HEAP_MULTI_INSTANCE_BIT = 0x2,
	VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR = 0x2,
	VK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class _NVAPI_FUNCTION_NAME:int
{
	NVAPI_DecodeExecute = 0x0,
	NVAPI_DecodeBeginFrame = 0x1,
	NVAPI_DecodeEndFrame = 0x2,
	NVAPI_VideoProcessBlt = 0x3,
	NVAPI_ExtensionExecute = 0x4,
	NVAPI_FlipOverlay = 0x5,
	NVAPI_FlipOverlayNvApi = 0x6,
	NVAPI_OverlayTransfer = 0x7,
	NVAPI_nvRenderDeinterlace = 0x8,
	NVAPI_PresentVideoShow = 0x9,
	NVAPI_LAST_FUNCTION = 0xA
};

enum class VkValidationCacheHeaderVersionEXT:int
{
	VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT = 0x1,
	VK_VALIDATION_CACHE_HEADER_VERSION_BEGIN_RANGE_EXT = 0x1,
	VK_VALIDATION_CACHE_HEADER_VERSION_END_RANGE_EXT = 0x1,
	VK_VALIDATION_CACHE_HEADER_VERSION_RANGE_SIZE_EXT = 0x1,
	VK_VALIDATION_CACHE_HEADER_VERSION_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class _NVAPI_DITHER_BITS:int
{
	NVAPI_DITHER_BITS_6BITS = 0x0,
	NVAPI_DITHER_BITS_8BITS = 0x1,
	NVAPI_DITHER_BITS_10BITS = 0x2
};

enum class VkImageAspectFlagBits:int
{
	VK_IMAGE_ASPECT_COLOR_BIT = 0x1,
	VK_IMAGE_ASPECT_DEPTH_BIT = 0x2,
	VK_IMAGE_ASPECT_STENCIL_BIT = 0x4,
	VK_IMAGE_ASPECT_METADATA_BIT = 0x8,
	VK_IMAGE_ASPECT_PLANE_0_BIT = 0x10,
	VK_IMAGE_ASPECT_PLANE_1_BIT = 0x20,
	VK_IMAGE_ASPECT_PLANE_2_BIT = 0x40,
	VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT = 0x80,
	VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT = 0x100,
	VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT = 0x200,
	VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT = 0x400,
	VK_IMAGE_ASPECT_PLANE_0_BIT_KHR = 0x10,
	VK_IMAGE_ASPECT_PLANE_1_BIT_KHR = 0x20,
	VK_IMAGE_ASPECT_PLANE_2_BIT_KHR = 0x40,
	VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class _NVAPI_DITHER_MODE:int
{
	NVAPI_DITHER_MODE_DYNAMIC_ERR_ACC = 0x0,
	NVAPI_DITHER_MODE_STATIC_ERR_ACC = 0x1,
	NVAPI_DITHER_MODE_DYNAMIC_2X2 = 0x2,
	NVAPI_DITHER_MODE_STATIC_2X2 = 0x3,
	NVAPI_DITHER_MODE_TEMPORAL = 0x4
};

enum class VkLineRasterizationModeEXT:int
{
	VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT = 0x0,
	VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT = 0x1,
	VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT = 0x2,
	VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT = 0x3,
	VK_LINE_RASTERIZATION_MODE_BEGIN_RANGE_EXT = 0x0,
	VK_LINE_RASTERIZATION_MODE_END_RANGE_EXT = 0x3,
	VK_LINE_RASTERIZATION_MODE_RANGE_SIZE_EXT = 0x4,
	VK_LINE_RASTERIZATION_MODE_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class VkPipelineCreateFlagBits:int
{
	VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT = 0x1,
	VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT = 0x2,
	VK_PIPELINE_CREATE_DERIVATIVE_BIT = 0x4,
	VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT = 0x8,
	VK_PIPELINE_CREATE_DISPATCH_BASE = 0x10,
	VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV = 0x20,
	VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR = 0x40,
	VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR = 0x80,
	VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR = 0x8,
	VK_PIPELINE_CREATE_DISPATCH_BASE_KHR = 0x10,
	VK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkViewportCoordinateSwizzleNV:int
{
	VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV = 0x0,
	VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV = 0x1,
	VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV = 0x2,
	VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV = 0x3,
	VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV = 0x4,
	VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV = 0x5,
	VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV = 0x6,
	VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV = 0x7,
	VK_VIEWPORT_COORDINATE_SWIZZLE_BEGIN_RANGE_NV = 0x0,
	VK_VIEWPORT_COORDINATE_SWIZZLE_END_RANGE_NV = 0x7,
	VK_VIEWPORT_COORDINATE_SWIZZLE_RANGE_SIZE_NV = 0x8,
	VK_VIEWPORT_COORDINATE_SWIZZLE_MAX_ENUM_NV = 0x7FFFFFFF
};

enum class VkSystemAllocationScope:int
{
	VK_SYSTEM_ALLOCATION_SCOPE_COMMAND = 0x0,
	VK_SYSTEM_ALLOCATION_SCOPE_OBJECT = 0x1,
	VK_SYSTEM_ALLOCATION_SCOPE_CACHE = 0x2,
	VK_SYSTEM_ALLOCATION_SCOPE_DEVICE = 0x3,
	VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE = 0x4,
	VK_SYSTEM_ALLOCATION_SCOPE_BEGIN_RANGE = 0x0,
	VK_SYSTEM_ALLOCATION_SCOPE_END_RANGE = 0x4,
	VK_SYSTEM_ALLOCATION_SCOPE_RANGE_SIZE = 0x5,
	VK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkShadingRatePaletteEntryNV:int
{
	VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV = 0x0,
	VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV = 0x1,
	VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV = 0x2,
	VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV = 0x3,
	VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV = 0x4,
	VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV = 0x5,
	VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV = 0x6,
	VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV = 0x7,
	VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV = 0x8,
	VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV = 0x9,
	VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV = 0xA,
	VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV = 0xB,
	VK_SHADING_RATE_PALETTE_ENTRY_BEGIN_RANGE_NV = 0x0,
	VK_SHADING_RATE_PALETTE_ENTRY_END_RANGE_NV = 0xB,
	VK_SHADING_RATE_PALETTE_ENTRY_RANGE_SIZE_NV = 0xC,
	VK_SHADING_RATE_PALETTE_ENTRY_MAX_ENUM_NV = 0x7FFFFFFF
};

enum class VkInternalAllocationType:int
{
	VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE = 0x0,
	VK_INTERNAL_ALLOCATION_TYPE_BEGIN_RANGE = 0x0,
	VK_INTERNAL_ALLOCATION_TYPE_END_RANGE = 0x0,
	VK_INTERNAL_ALLOCATION_TYPE_RANGE_SIZE = 0x1,
	VK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM = 0x7FFFFFFF
};

enum class NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID:int
{
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_NONE = 0x0,
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_WAIT_FOR_MODESET = 0x1,
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_KMD_NOTIFY = 0x2,
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_PRE_HW = 0x3,
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_NOISE_UNAWARE_CLKS = 0x4,
	NV_GPU_PERF_CHANGE_SEQ_30_STEP_ID_NOISE_UNAWARE_VMIN = 0x5,
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_VOLT_INCREASE = 0x6,
	NV_GPU_PERF_CHANGE_SEQ_30_STEP_ID_NOISE_AWARE_CLKS_INCREASE = 0x7,
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_SET_LINK_SPEED = 0x8,
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_SET_LINK_WIDTH = 0x9,
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_SET_ASPM = 0xA,
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_SET_DEEP_L1 = 0xB,
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_SET_RAM_SVOP = 0xC,
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_SET_NVVDD_PSI = 0xD,
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_VOLT_DECREASE = 0xE,
	NV_GPU_PERF_CHANGE_SEQ_30_STEP_ID_NOISE_AWARE_CLKS_DECREASE = 0xF,
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_SET_LTR_VALUE = 0x10,
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_LPWR_FEATURES = 0x11,
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_POST_HW = 0x12,
	NV_GPU_PERF_CHANGE_SEQ_2X_STEP_ID_MAX_STEPS = 0x13
};

enum class NV_MOSAIC_TOPO:int
{
	NV_MOSAIC_TOPO_NONE = 0x0,
	NV_MOSAIC_TOPO_BEGIN_BASIC = 0x1,
	NV_MOSAIC_TOPO_1x2_BASIC = 0x1,
	NV_MOSAIC_TOPO_2x1_BASIC = 0x2,
	NV_MOSAIC_TOPO_1x3_BASIC = 0x3,
	NV_MOSAIC_TOPO_3x1_BASIC = 0x4,
	NV_MOSAIC_TOPO_1x4_BASIC = 0x5,
	NV_MOSAIC_TOPO_4x1_BASIC = 0x6,
	NV_MOSAIC_TOPO_2x2_BASIC = 0x7,
	NV_MOSAIC_TOPO_2x3_BASIC = 0x8,
	NV_MOSAIC_TOPO_2x4_BASIC = 0x9,
	NV_MOSAIC_TOPO_3x2_BASIC = 0xA,
	NV_MOSAIC_TOPO_4x2_BASIC = 0xB,
	NV_MOSAIC_TOPO_1x5_BASIC = 0xC,
	NV_MOSAIC_TOPO_1x6_BASIC = 0xD,
	NV_MOSAIC_TOPO_7x1_BASIC = 0xE,
	NV_MOSAIC_TOPO_END_BASIC = 0x17,
	NV_MOSAIC_TOPO_BEGIN_PASSIVE_STEREO = 0x18,
	NV_MOSAIC_TOPO_1x2_PASSIVE_STEREO = 0x18,
	NV_MOSAIC_TOPO_2x1_PASSIVE_STEREO = 0x19,
	NV_MOSAIC_TOPO_1x3_PASSIVE_STEREO = 0x1A,
	NV_MOSAIC_TOPO_3x1_PASSIVE_STEREO = 0x1B,
	NV_MOSAIC_TOPO_1x4_PASSIVE_STEREO = 0x1C,
	NV_MOSAIC_TOPO_4x1_PASSIVE_STEREO = 0x1D,
	NV_MOSAIC_TOPO_2x2_PASSIVE_STEREO = 0x1E,
	NV_MOSAIC_TOPO_END_PASSIVE_STEREO = 0x22,
	NV_MOSAIC_TOPO_MAX = 0x23
};

enum class VkFormat:int
{
	VK_FORMAT_UNDEFINED = 0x0,
	VK_FORMAT_R4G4_UNORM_PACK8 = 0x1,
	VK_FORMAT_R4G4B4A4_UNORM_PACK16 = 0x2,
	VK_FORMAT_B4G4R4A4_UNORM_PACK16 = 0x3,
	VK_FORMAT_R5G6B5_UNORM_PACK16 = 0x4,
	VK_FORMAT_B5G6R5_UNORM_PACK16 = 0x5,
	VK_FORMAT_R5G5B5A1_UNORM_PACK16 = 0x6,
	VK_FORMAT_B5G5R5A1_UNORM_PACK16 = 0x7,
	VK_FORMAT_A1R5G5B5_UNORM_PACK16 = 0x8,
	VK_FORMAT_R8_UNORM = 0x9,
	VK_FORMAT_R8_SNORM = 0xA,
	VK_FORMAT_R8_USCALED = 0xB,
	VK_FORMAT_R8_SSCALED = 0xC,
	VK_FORMAT_R8_UINT = 0xD,
	VK_FORMAT_R8_SINT = 0xE,
	VK_FORMAT_R8_SRGB = 0xF,
	VK_FORMAT_R8G8_UNORM = 0x10,
	VK_FORMAT_R8G8_SNORM = 0x11,
	VK_FORMAT_R8G8_USCALED = 0x12,
	VK_FORMAT_R8G8_SSCALED = 0x13,
	VK_FORMAT_R8G8_UINT = 0x14,
	VK_FORMAT_R8G8_SINT = 0x15,
	VK_FORMAT_R8G8_SRGB = 0x16,
	VK_FORMAT_R8G8B8_UNORM = 0x17,
	VK_FORMAT_R8G8B8_SNORM = 0x18,
	VK_FORMAT_R8G8B8_USCALED = 0x19,
	VK_FORMAT_R8G8B8_SSCALED = 0x1A,
	VK_FORMAT_R8G8B8_UINT = 0x1B,
	VK_FORMAT_R8G8B8_SINT = 0x1C,
	VK_FORMAT_R8G8B8_SRGB = 0x1D,
	VK_FORMAT_B8G8R8_UNORM = 0x1E,
	VK_FORMAT_B8G8R8_SNORM = 0x1F,
	VK_FORMAT_B8G8R8_USCALED = 0x20,
	VK_FORMAT_B8G8R8_SSCALED = 0x21,
	VK_FORMAT_B8G8R8_UINT = 0x22,
	VK_FORMAT_B8G8R8_SINT = 0x23,
	VK_FORMAT_B8G8R8_SRGB = 0x24,
	VK_FORMAT_R8G8B8A8_UNORM = 0x25,
	VK_FORMAT_R8G8B8A8_SNORM = 0x26,
	VK_FORMAT_R8G8B8A8_USCALED = 0x27,
	VK_FORMAT_R8G8B8A8_SSCALED = 0x28,
	VK_FORMAT_R8G8B8A8_UINT = 0x29,
	VK_FORMAT_R8G8B8A8_SINT = 0x2A,
	VK_FORMAT_R8G8B8A8_SRGB = 0x2B,
	VK_FORMAT_B8G8R8A8_UNORM = 0x2C,
	VK_FORMAT_B8G8R8A8_SNORM = 0x2D,
	VK_FORMAT_B8G8R8A8_USCALED = 0x2E,
	VK_FORMAT_B8G8R8A8_SSCALED = 0x2F,
	VK_FORMAT_B8G8R8A8_UINT = 0x30,
	VK_FORMAT_B8G8R8A8_SINT = 0x31,
	VK_FORMAT_B8G8R8A8_SRGB = 0x32,
	VK_FORMAT_A8B8G8R8_UNORM_PACK32 = 0x33,
	VK_FORMAT_A8B8G8R8_SNORM_PACK32 = 0x34,
	VK_FORMAT_A8B8G8R8_USCALED_PACK32 = 0x35,
	VK_FORMAT_A8B8G8R8_SSCALED_PACK32 = 0x36,
	VK_FORMAT_A8B8G8R8_UINT_PACK32 = 0x37,
	VK_FORMAT_A8B8G8R8_SINT_PACK32 = 0x38,
	VK_FORMAT_A8B8G8R8_SRGB_PACK32 = 0x39,
	VK_FORMAT_A2R10G10B10_UNORM_PACK32 = 0x3A,
	VK_FORMAT_A2R10G10B10_SNORM_PACK32 = 0x3B,
	VK_FORMAT_A2R10G10B10_USCALED_PACK32 = 0x3C,
	VK_FORMAT_A2R10G10B10_SSCALED_PACK32 = 0x3D,
	VK_FORMAT_A2R10G10B10_UINT_PACK32 = 0x3E,
	VK_FORMAT_A2R10G10B10_SINT_PACK32 = 0x3F,
	VK_FORMAT_A2B10G10R10_UNORM_PACK32 = 0x40,
	VK_FORMAT_A2B10G10R10_SNORM_PACK32 = 0x41,
	VK_FORMAT_A2B10G10R10_USCALED_PACK32 = 0x42,
	VK_FORMAT_A2B10G10R10_SSCALED_PACK32 = 0x43,
	VK_FORMAT_A2B10G10R10_UINT_PACK32 = 0x44,
	VK_FORMAT_A2B10G10R10_SINT_PACK32 = 0x45,
	VK_FORMAT_R16_UNORM = 0x46,
	VK_FORMAT_R16_SNORM = 0x47,
	VK_FORMAT_R16_USCALED = 0x48,
	VK_FORMAT_R16_SSCALED = 0x49,
	VK_FORMAT_R16_UINT = 0x4A,
	VK_FORMAT_R16_SINT = 0x4B,
	VK_FORMAT_R16_SFLOAT = 0x4C,
	VK_FORMAT_R16G16_UNORM = 0x4D,
	VK_FORMAT_R16G16_SNORM = 0x4E,
	VK_FORMAT_R16G16_USCALED = 0x4F,
	VK_FORMAT_R16G16_SSCALED = 0x50,
	VK_FORMAT_R16G16_UINT = 0x51,
	VK_FORMAT_R16G16_SINT = 0x52,
	VK_FORMAT_R16G16_SFLOAT = 0x53,
	VK_FORMAT_R16G16B16_UNORM = 0x54,
	VK_FORMAT_R16G16B16_SNORM = 0x55,
	VK_FORMAT_R16G16B16_USCALED = 0x56,
	VK_FORMAT_R16G16B16_SSCALED = 0x57,
	VK_FORMAT_R16G16B16_UINT = 0x58,
	VK_FORMAT_R16G16B16_SINT = 0x59,
	VK_FORMAT_R16G16B16_SFLOAT = 0x5A,
	VK_FORMAT_R16G16B16A16_UNORM = 0x5B,
	VK_FORMAT_R16G16B16A16_SNORM = 0x5C,
	VK_FORMAT_R16G16B16A16_USCALED = 0x5D,
	VK_FORMAT_R16G16B16A16_SSCALED = 0x5E,
	VK_FORMAT_R16G16B16A16_UINT = 0x5F,
	VK_FORMAT_R16G16B16A16_SINT = 0x60,
	VK_FORMAT_R16G16B16A16_SFLOAT = 0x61,
	VK_FORMAT_R32_UINT = 0x62,
	VK_FORMAT_R32_SINT = 0x63,
	VK_FORMAT_R32_SFLOAT = 0x64,
	VK_FORMAT_R32G32_UINT = 0x65,
	VK_FORMAT_R32G32_SINT = 0x66,
	VK_FORMAT_R32G32_SFLOAT = 0x67,
	VK_FORMAT_R32G32B32_UINT = 0x68,
	VK_FORMAT_R32G32B32_SINT = 0x69,
	VK_FORMAT_R32G32B32_SFLOAT = 0x6A,
	VK_FORMAT_R32G32B32A32_UINT = 0x6B,
	VK_FORMAT_R32G32B32A32_SINT = 0x6C,
	VK_FORMAT_R32G32B32A32_SFLOAT = 0x6D,
	VK_FORMAT_R64_UINT = 0x6E,
	VK_FORMAT_R64_SINT = 0x6F,
	VK_FORMAT_R64_SFLOAT = 0x70,
	VK_FORMAT_R64G64_UINT = 0x71,
	VK_FORMAT_R64G64_SINT = 0x72,
	VK_FORMAT_R64G64_SFLOAT = 0x73,
	VK_FORMAT_R64G64B64_UINT = 0x74,
	VK_FORMAT_R64G64B64_SINT = 0x75,
	VK_FORMAT_R64G64B64_SFLOAT = 0x76,
	VK_FORMAT_R64G64B64A64_UINT = 0x77,
	VK_FORMAT_R64G64B64A64_SINT = 0x78,
	VK_FORMAT_R64G64B64A64_SFLOAT = 0x79,
	VK_FORMAT_B10G11R11_UFLOAT_PACK32 = 0x7A,
	VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 = 0x7B,
	VK_FORMAT_D16_UNORM = 0x7C,
	VK_FORMAT_X8_D24_UNORM_PACK32 = 0x7D,
	VK_FORMAT_D32_SFLOAT = 0x7E,
	VK_FORMAT_S8_UINT = 0x7F,
	VK_FORMAT_D16_UNORM_S8_UINT = 0x80,
	VK_FORMAT_D24_UNORM_S8_UINT = 0x81,
	VK_FORMAT_D32_SFLOAT_S8_UINT = 0x82,
	VK_FORMAT_BC1_RGB_UNORM_BLOCK = 0x83,
	VK_FORMAT_BC1_RGB_SRGB_BLOCK = 0x84,
	VK_FORMAT_BC1_RGBA_UNORM_BLOCK = 0x85,
	VK_FORMAT_BC1_RGBA_SRGB_BLOCK = 0x86,
	VK_FORMAT_BC2_UNORM_BLOCK = 0x87,
	VK_FORMAT_BC2_SRGB_BLOCK = 0x88,
	VK_FORMAT_BC3_UNORM_BLOCK = 0x89,
	VK_FORMAT_BC3_SRGB_BLOCK = 0x8A,
	VK_FORMAT_BC4_UNORM_BLOCK = 0x8B,
	VK_FORMAT_BC4_SNORM_BLOCK = 0x8C,
	VK_FORMAT_BC5_UNORM_BLOCK = 0x8D,
	VK_FORMAT_BC5_SNORM_BLOCK = 0x8E,
	VK_FORMAT_BC6H_UFLOAT_BLOCK = 0x8F,
	VK_FORMAT_BC6H_SFLOAT_BLOCK = 0x90,
	VK_FORMAT_BC7_UNORM_BLOCK = 0x91,
	VK_FORMAT_BC7_SRGB_BLOCK = 0x92,
	VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK = 0x93,
	VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK = 0x94,
	VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK = 0x95,
	VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK = 0x96,
	VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK = 0x97,
	VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK = 0x98,
	VK_FORMAT_EAC_R11_UNORM_BLOCK = 0x99,
	VK_FORMAT_EAC_R11_SNORM_BLOCK = 0x9A,
	VK_FORMAT_EAC_R11G11_UNORM_BLOCK = 0x9B,
	VK_FORMAT_EAC_R11G11_SNORM_BLOCK = 0x9C,
	VK_FORMAT_ASTC_4x4_UNORM_BLOCK = 0x9D,
	VK_FORMAT_ASTC_4x4_SRGB_BLOCK = 0x9E,
	VK_FORMAT_ASTC_5x4_UNORM_BLOCK = 0x9F,
	VK_FORMAT_ASTC_5x4_SRGB_BLOCK = 0xA0,
	VK_FORMAT_ASTC_5x5_UNORM_BLOCK = 0xA1,
	VK_FORMAT_ASTC_5x5_SRGB_BLOCK = 0xA2,
	VK_FORMAT_ASTC_6x5_UNORM_BLOCK = 0xA3,
	VK_FORMAT_ASTC_6x5_SRGB_BLOCK = 0xA4,
	VK_FORMAT_ASTC_6x6_UNORM_BLOCK = 0xA5,
	VK_FORMAT_ASTC_6x6_SRGB_BLOCK = 0xA6,
	VK_FORMAT_ASTC_8x5_UNORM_BLOCK = 0xA7,
	VK_FORMAT_ASTC_8x5_SRGB_BLOCK = 0xA8,
	VK_FORMAT_ASTC_8x6_UNORM_BLOCK = 0xA9,
	VK_FORMAT_ASTC_8x6_SRGB_BLOCK = 0xAA,
	VK_FORMAT_ASTC_8x8_UNORM_BLOCK = 0xAB,
	VK_FORMAT_ASTC_8x8_SRGB_BLOCK = 0xAC,
	VK_FORMAT_ASTC_10x5_UNORM_BLOCK = 0xAD,
	VK_FORMAT_ASTC_10x5_SRGB_BLOCK = 0xAE,
	VK_FORMAT_ASTC_10x6_UNORM_BLOCK = 0xAF,
	VK_FORMAT_ASTC_10x6_SRGB_BLOCK = 0xB0,
	VK_FORMAT_ASTC_10x8_UNORM_BLOCK = 0xB1,
	VK_FORMAT_ASTC_10x8_SRGB_BLOCK = 0xB2,
	VK_FORMAT_ASTC_10x10_UNORM_BLOCK = 0xB3,
	VK_FORMAT_ASTC_10x10_SRGB_BLOCK = 0xB4,
	VK_FORMAT_ASTC_12x10_UNORM_BLOCK = 0xB5,
	VK_FORMAT_ASTC_12x10_SRGB_BLOCK = 0xB6,
	VK_FORMAT_ASTC_12x12_UNORM_BLOCK = 0xB7,
	VK_FORMAT_ASTC_12x12_SRGB_BLOCK = 0xB8,
	VK_FORMAT_G8B8G8R8_422_UNORM = 0x3B9D2B60,
	VK_FORMAT_B8G8R8G8_422_UNORM = 0x3B9D2B61,
	VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM = 0x3B9D2B62,
	VK_FORMAT_G8_B8R8_2PLANE_420_UNORM = 0x3B9D2B63,
	VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM = 0x3B9D2B64,
	VK_FORMAT_G8_B8R8_2PLANE_422_UNORM = 0x3B9D2B65,
	VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM = 0x3B9D2B66,
	VK_FORMAT_R10X6_UNORM_PACK16 = 0x3B9D2B67,
	VK_FORMAT_R10X6G10X6_UNORM_2PACK16 = 0x3B9D2B68,
	VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16 = 0x3B9D2B69,
	VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 = 0x3B9D2B6A,
	VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 = 0x3B9D2B6B,
	VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16 = 0x3B9D2B6C,
	VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16 = 0x3B9D2B6D,
	VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16 = 0x3B9D2B6E,
	VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16 = 0x3B9D2B6F,
	VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16 = 0x3B9D2B70,
	VK_FORMAT_R12X4_UNORM_PACK16 = 0x3B9D2B71,
	VK_FORMAT_R12X4G12X4_UNORM_2PACK16 = 0x3B9D2B72,
	VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16 = 0x3B9D2B73,
	VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 = 0x3B9D2B74,
	VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 = 0x3B9D2B75,
	VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16 = 0x3B9D2B76,
	VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16 = 0x3B9D2B77,
	VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16 = 0x3B9D2B78,
	VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16 = 0x3B9D2B79,
	VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16 = 0x3B9D2B7A,
	VK_FORMAT_G16B16G16R16_422_UNORM = 0x3B9D2B7B,
	VK_FORMAT_B16G16R16G16_422_UNORM = 0x3B9D2B7C,
	VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM = 0x3B9D2B7D,
	VK_FORMAT_G16_B16R16_2PLANE_420_UNORM = 0x3B9D2B7E,
	VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM = 0x3B9D2B7F,
	VK_FORMAT_G16_B16R16_2PLANE_422_UNORM = 0x3B9D2B80,
	VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM = 0x3B9D2B81,
	VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG = 0x3B9B9CF0,
	VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG = 0x3B9B9CF1,
	VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG = 0x3B9B9CF2,
	VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG = 0x3B9B9CF3,
	VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG = 0x3B9B9CF4,
	VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG = 0x3B9B9CF5,
	VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG = 0x3B9B9CF6,
	VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG = 0x3B9B9CF7,
	VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT = 0x3B9BCBD0,
	VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT = 0x3B9BCBD1,
	VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT = 0x3B9BCBD2,
	VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT = 0x3B9BCBD3,
	VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT = 0x3B9BCBD4,
	VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT = 0x3B9BCBD5,
	VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT = 0x3B9BCBD6,
	VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT = 0x3B9BCBD7,
	VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT = 0x3B9BCBD8,
	VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT = 0x3B9BCBD9,
	VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT = 0x3B9BCBDA,
	VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT = 0x3B9BCBDB,
	VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT = 0x3B9BCBDC,
	VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT = 0x3B9BCBDD,
	VK_FORMAT_G8B8G8R8_422_UNORM_KHR = 0x3B9D2B60,
	VK_FORMAT_B8G8R8G8_422_UNORM_KHR = 0x3B9D2B61,
	VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR = 0x3B9D2B62,
	VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR = 0x3B9D2B63,
	VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR = 0x3B9D2B64,
	VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR = 0x3B9D2B65,
	VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR = 0x3B9D2B66,
	VK_FORMAT_R10X6_UNORM_PACK16_KHR = 0x3B9D2B67,
	VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR = 0x3B9D2B68,
	VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR = 0x3B9D2B69,
	VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR = 0x3B9D2B6A,
	VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR = 0x3B9D2B6B,
	VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR = 0x3B9D2B6C,
	VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR = 0x3B9D2B6D,
	VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR = 0x3B9D2B6E,
	VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR = 0x3B9D2B6F,
	VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR = 0x3B9D2B70,
	VK_FORMAT_R12X4_UNORM_PACK16_KHR = 0x3B9D2B71,
	VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR = 0x3B9D2B72,
	VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR = 0x3B9D2B73,
	VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR = 0x3B9D2B74,
	VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR = 0x3B9D2B75,
	VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR = 0x3B9D2B76,
	VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR = 0x3B9D2B77,
	VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR = 0x3B9D2B78,
	VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR = 0x3B9D2B79,
	VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR = 0x3B9D2B7A,
	VK_FORMAT_G16B16G16R16_422_UNORM_KHR = 0x3B9D2B7B,
	VK_FORMAT_B16G16R16G16_422_UNORM_KHR = 0x3B9D2B7C,
	VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR = 0x3B9D2B7D,
	VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR = 0x3B9D2B7E,
	VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR = 0x3B9D2B7F,
	VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR = 0x3B9D2B80,
	VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR = 0x3B9D2B81,
	VK_FORMAT_BEGIN_RANGE = 0x0,
	VK_FORMAT_END_RANGE = 0xB8,
	VK_FORMAT_RANGE_SIZE = 0xB9,
	VK_FORMAT_MAX_ENUM = 0x7FFFFFFF
};

enum class NV_GPU_PERF_VPSTATES_IDX:int
{
	NV_GPU_PERF_VPSTATES_IDX_D2 = 0x0,
	NV_GPU_PERF_VPSTATES_IDX_D3 = 0x1,
	NV_GPU_PERF_VPSTATES_IDX_D4 = 0x2,
	NV_GPU_PERF_VPSTATES_IDX_D5 = 0x3,
	NV_GPU_PERF_VPSTATES_IDX_OVERCUR = 0x4,
	NV_GPU_PERF_VPSTATES_IDX_VRHOT = 0x5,
	NV_GPU_PERF_VPSTATES_IDX_MAXBATT = 0x6,
	NV_GPU_PERF_VPSTATES_IDX_MAXSLI = 0x7,
	NV_GPU_PERF_VPSTATES_IDX_MAXTHERMSUS = 0x8,
	NV_GPU_PERF_VPSTATES_IDX_SLOWDOWNPWR = 0x9,
	NV_GPU_PERF_VPSTATES_IDX_MIDPOINT = 0xA,
	NV_GPU_PERF_VPSTATES_IDX_FLAGS = 0xB,
	NV_GPU_PERF_VPSTATES_IDX_INFLECTION0 = 0xC,
	NV_GPU_PERF_VPSTATES_IDX_INFLECTION = 0xC,
	NV_GPU_PERF_VPSTATES_IDX_FULLDEFLECT = 0xD,
	NV_GPU_PERF_VPSTATES_IDX_IMPFIRST = 0xE,
	NV_GPU_PERF_VPSTATES_IDX_IMPLAST = 0xF,
	NV_GPU_PERF_VPSTATES_IDX_RATEDTDP = 0x10,
	NV_GPU_PERF_VPSTATES_IDX_BOOST = 0x11,
	NV_GPU_PERF_VPSTATES_IDX_TURBOBOOST = 0x12,
	NV_GPU_PERF_VPSTATES_IDX_MAXCUSTOMERBOOST = 0x13,
	NV_GPU_PERF_VPSTATES_IDX_INFLECTION1 = 0x14,
	NV_GPU_PERF_VPSTATES_IDX_INFLECTION2 = 0x15,
	NV_GPU_PERF_VPSTATES_IDX_WHISPER_MODE = 0x16,
	NV_GPU_PERF_VPSTATES_IDX_NUM_INDEXES = 0x17,
	NV_GPU_PERF_VPSTATES_IDX_INVALID = 0xFF
};

enum class VkDiscardRectangleModeEXT:int
{
	VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT = 0x0,
	VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT = 0x1,
	VK_DISCARD_RECTANGLE_MODE_BEGIN_RANGE_EXT = 0x0,
	VK_DISCARD_RECTANGLE_MODE_END_RANGE_EXT = 0x1,
	VK_DISCARD_RECTANGLE_MODE_RANGE_SIZE_EXT = 0x2,
	VK_DISCARD_RECTANGLE_MODE_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class VkCoarseSampleOrderTypeNV:int
{
	VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV = 0x0,
	VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV = 0x1,
	VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV = 0x2,
	VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV = 0x3,
	VK_COARSE_SAMPLE_ORDER_TYPE_BEGIN_RANGE_NV = 0x0,
	VK_COARSE_SAMPLE_ORDER_TYPE_END_RANGE_NV = 0x3,
	VK_COARSE_SAMPLE_ORDER_TYPE_RANGE_SIZE_NV = 0x4,
	VK_COARSE_SAMPLE_ORDER_TYPE_MAX_ENUM_NV = 0x7FFFFFFF
};

enum class NV_GPU_PERF_CHANGE_SEQ_PMU_STEP_ID:int
{
	NV_GPU_PERF_CHANGE_SEQ_PMU_STEP_ID_NONE = 0x0,
	NV_GPU_PERF_CHANGE_SEQ_PMU_STEP_ID_PRE_CHANGE_RM = 0x1,
	NV_GPU_PERF_CHANGE_SEQ_PMU_STEP_ID_PRE_CHANGE_PMU = 0x2,
	NV_GPU_PERF_CHANGE_SEQ_PMU_STEP_ID_POST_CHANGE_RM = 0x3,
	NV_GPU_PERF_CHANGE_SEQ_PMU_STEP_ID_POST_CHANGE_PMU = 0x4,
	NV_GPU_PERF_CHANGE_SEQ_PMU_STEP_ID_PRE_PSTATE_RM = 0x5,
	NV_GPU_PERF_CHANGE_SEQ_PMU_STEP_ID_PRE_PSTATE_PMU = 0x6,
	NV_GPU_PERF_CHANGE_SEQ_PMU_STEP_ID_POST_PSTATE_RM = 0x7,
	NV_GPU_PERF_CHANGE_SEQ_PMU_STEP_ID_POST_PSTATE_PMU = 0x8,
	NV_GPU_PERF_CHANGE_SEQ_PMU_STEP_ID_VOLT = 0x9,
	NV_GPU_PERF_CHANGE_SEQ_PMU_STEP_ID_LPWR = 0xA,
	NV_GPU_PERF_CHANGE_SEQ_PMU_STEP_ID_BIF = 0xB,
	NV_GPU_PERF_CHANGE_SEQ_31_STEP_ID_NOISE_UNAWARE_CLKS = 0xC,
	NV_GPU_PERF_CHANGE_SEQ_31_STEP_ID_NOISE_AWARE_CLKS = 0xD,
	NV_GPU_PERF_CHANGE_SEQ_35_STEP_ID_PRE_VOLT_CLKS = 0xE,
	NV_GPU_PERF_CHANGE_SEQ_35_STEP_ID_POST_VOLT_CLKS = 0xF,
	NV_GPU_PERF_CHANGE_SEQ_PMU_STEP_ID_MAX_STEPS = 0x20
};

enum class _NVAPI_VIDEO_CONTROL_COMPONENT_ALGORITHM:int
{
	NV_VCTRL_ColorSpaceBase = 0x1000,
	NV_VCTRL_ColorSpace601 = 0x1001,
	NV_VCTRL_ColorSpace709 = 0x1002,
	NV_VCTRL_ColorSpaceLast = 0x1003,
	NV_VCTRL_ColorRangeBase = 0x1100,
	NV_VCTRL_ColorRangeStd = 0x1101,
	NV_VCTRL_ColorRangeExt = 0x1102,
	NV_VCTRL_ColorRangeLast = 0x1103,
	NV_VCTRL_DIBase = 0x2000,
	NV_VCTRL_DIBob = 0x2001,
	NV_VCTRL_DIMedian = 0x2002,
	NV_VCTRL_DI3x3 = 0x2003,
	NV_VCTRL_DIAdaptiveFourField = 0x2004,
	NV_VCTRL_DIDirectionalSpatial = 0x2005,
	NV_VCTRL_DIOnePass = 0x2006,
	NV_VCTRL_DISony = 0x2007,
	NV_VCTRL_DILast = 0x2008,
	NV_VCTRL_CadenceBase = 0x3000,
	NV_VCTRL_CadenceBasic = 0x3001,
	NV_VCTRL_CadenceVideoOnFilm = 0x3002,
	NV_VCTRL_CadenceAdv = 0x3003,
	NV_VCTRL_CadenceLast = 0x3004,
	NV_VCTRL_DCCEBase = 0x4000,
	NV_VCTRL_DCCELow = 0x4001,
	NV_VCTRL_DCCEMedium = 0x4002,
	NV_VCTRL_DCCEHigh = 0x4003,
	NV_VCTRL_DCCELast = 0x4004,
	NV_VCTRL_ScalingBase = 0x5000,
	NV_VCTRL_ScalingSimple = 0x5001,
	NV_VCTRL_Scaling4x4Filter = 0x5002,
	NV_VCTRL_ScalingSony = 0x5003,
	NV_VCTRL_ScalingLast = 0x5004,
	NV_VCTRL_GamutRemapBase = 0x6000,
	NV_VCTRL_GamutRemapSony = 0x6001,
	NV_VCTRL_GamutRemapLast = 0x6002,
	NV_VCTRL_SkinToneCorrectionBase = 0x7000,
	NV_VCTRL_SkinToneCorrectionSqueeze = 0x7001,
	NV_VCTRL_SkinToneCorrectionRed = 0x7002,
	NV_VCTRL_SkinToneCorrectionYellow = 0x7003,
	NV_VCTRL_SkinToneCorrectionLast = 0x7004
};

enum class VkDependencyFlagBits:int
{
	VK_DEPENDENCY_BY_REGION_BIT = 0x1,
	VK_DEPENDENCY_DEVICE_GROUP_BIT = 0x4,
	VK_DEPENDENCY_VIEW_LOCAL_BIT = 0x2,
	VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR = 0x2,
	VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR = 0x4,
	VK_DEPENDENCY_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class _NVAPI_PSI_OPCODE:int
{
	NVAPI_PSI_OPCODE_GET_PSISTAT = 0x0,
	NVAPI_PSI_SET_CURRENT_MA = 0x1,
	NVAPI_PSI_GET_SUPPORT = 0x2,
	NVAPI_PSI_GET_SLEEP_MA = 0x3,
	NVAPI_PSI_GET_OPTIMAL_MA = 0x4,
	NVAPI_PSI_CTRL_RESET_ENGAGE_COUNT = 0x5,
	NVAPI_PSI_RESET_ENGAGE_COUNT = 0x6,
	NVAPI_PSI_SET_CURRENT_MA_LOGIC = 0x1,
	NVAPI_PSI_SET_CURRENT_MA_SRAM = 0x7,
	NVAPI_PSI_GET_OPTIMAL_MA_LOGIC = 0x4,
	NVAPI_PSI_GET_OPTIMAL_MA_SRAM = 0x8,
	NVAPI_PSI_GET_SLEEP_MA_LOGIC = 0x3,
	NVAPI_PSI_GET_SLEEP_MA_SRAM = 0x9,
	NVAPI_PSI_GET_PSTATE_SUPPORT = 0xA,
	NVAPI_PSI_SET_ENABLE = 0xB
};

enum class VkConservativeRasterizationModeEXT:int
{
	VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT = 0x0,
	VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT = 0x1,
	VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT = 0x2,
	VK_CONSERVATIVE_RASTERIZATION_MODE_BEGIN_RANGE_EXT = 0x0,
	VK_CONSERVATIVE_RASTERIZATION_MODE_END_RANGE_EXT = 0x2,
	VK_CONSERVATIVE_RASTERIZATION_MODE_RANGE_SIZE_EXT = 0x3,
	VK_CONSERVATIVE_RASTERIZATION_MODE_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class VkStencilFaceFlagBits:int
{
	VK_STENCIL_FACE_FRONT_BIT = 0x1,
	VK_STENCIL_FACE_BACK_BIT = 0x2,
	VK_STENCIL_FACE_FRONT_AND_BACK = 0x3,
	VK_STENCIL_FRONT_AND_BACK = 0x3,
	VK_STENCIL_FACE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkShaderInfoTypeAMD:int
{
	VK_SHADER_INFO_TYPE_STATISTICS_AMD = 0x0,
	VK_SHADER_INFO_TYPE_BINARY_AMD = 0x1,
	VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD = 0x2,
	VK_SHADER_INFO_TYPE_BEGIN_RANGE_AMD = 0x0,
	VK_SHADER_INFO_TYPE_END_RANGE_AMD = 0x2,
	VK_SHADER_INFO_TYPE_RANGE_SIZE_AMD = 0x3,
	VK_SHADER_INFO_TYPE_MAX_ENUM_AMD = 0x7FFFFFFF
};

enum class VkPerformanceConfigurationTypeINTEL:int
{
	VK_PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL = 0x0,
	VK_PERFORMANCE_CONFIGURATION_TYPE_BEGIN_RANGE_INTEL = 0x0,
	VK_PERFORMANCE_CONFIGURATION_TYPE_END_RANGE_INTEL = 0x0,
	VK_PERFORMANCE_CONFIGURATION_TYPE_RANGE_SIZE_INTEL = 0x1,
	VK_PERFORMANCE_CONFIGURATION_TYPE_MAX_ENUM_INTEL = 0x7FFFFFFF
};

enum class VkQueryPoolSamplingModeINTEL:int
{
	VK_QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL = 0x0,
	VK_QUERY_POOL_SAMPLING_MODE_BEGIN_RANGE_INTEL = 0x0,
	VK_QUERY_POOL_SAMPLING_MODE_END_RANGE_INTEL = 0x0,
	VK_QUERY_POOL_SAMPLING_MODE_RANGE_SIZE_INTEL = 0x1,
	VK_QUERY_POOL_SAMPLING_MODE_MAX_ENUM_INTEL = 0x7FFFFFFF
};

enum class VkPerformanceOverrideTypeINTEL:int
{
	VK_PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL = 0x0,
	VK_PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL = 0x1,
	VK_PERFORMANCE_OVERRIDE_TYPE_BEGIN_RANGE_INTEL = 0x0,
	VK_PERFORMANCE_OVERRIDE_TYPE_END_RANGE_INTEL = 0x1,
	VK_PERFORMANCE_OVERRIDE_TYPE_RANGE_SIZE_INTEL = 0x2,
	VK_PERFORMANCE_OVERRIDE_TYPE_MAX_ENUM_INTEL = 0x7FFFFFFF
};

enum class NV_GPU_PERF_RATED_TDP_CLIENT:int
{
	NV_GPU_PERF_RATED_TDP_CLIENT_RM = 0x0,
	NV_GPU_PERF_RATED_TDP_CLIENT_GLOBAL = 0x1,
	NV_GPU_PERF_RATED_TDP_CLIENT_OS = 0x2,
	NV_GPU_PERF_RATED_TDP_CLIENT_PROFILE = 0x3,
	NV_GPU_PERF_RATED_TDP_CLIENT_WAR_BUG_1785342 = 0x4,
	NV_GPU_PERF_RATED_TDP_CLIENT_NUM_CLIENTS = 0x5
};

enum class VkPerformanceParameterTypeINTEL:int
{
	VK_PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL = 0x0,
	VK_PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL = 0x1,
	VK_PERFORMANCE_PARAMETER_TYPE_BEGIN_RANGE_INTEL = 0x0,
	VK_PERFORMANCE_PARAMETER_TYPE_END_RANGE_INTEL = 0x1,
	VK_PERFORMANCE_PARAMETER_TYPE_RANGE_SIZE_INTEL = 0x2,
	VK_PERFORMANCE_PARAMETER_TYPE_MAX_ENUM_INTEL = 0x7FFFFFFF
};

enum class NV_GPU_CLOCK_CLK_VF_POINT_TYPE:int
{
	NV_GPU_CLOCK_CLK_VF_POINT_TYPE_FREQ = 0x0,
	NV_GPU_CLOCK_CLK_VF_POINT_TYPE_VOLT = 0x1,
	NV_GPU_CLOCK_CLK_VF_POINT_TYPE_30_FREQ = 0x0,
	NV_GPU_CLOCK_CLK_VF_POINT_TYPE_30_VOLT = 0x1,
	NV_GPU_CLOCK_CLK_VF_POINT_TYPE_30 = 0x2,
	NV_GPU_CLOCK_CLK_VF_POINT_TYPE_35_FREQ = 0x3,
	NV_GPU_CLOCK_CLK_VF_POINT_TYPE_35_VOLT = 0x4,
	NV_GPU_CLOCK_CLK_VF_POINT_TYPE_35 = 0x5,
	NV_GPU_CLOCK_CLK_VF_POINT_TYPE_35_VOLT_SEC = 0x6,
	NV_GPU_CLOCK_CLK_VF_POINT_TYPE_UNKNOWN = 0xFF
};

enum class VkAccelerationStructureTypeNV:int
{
	VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV = 0x0,
	VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV = 0x1,
	VK_ACCELERATION_STRUCTURE_TYPE_BEGIN_RANGE_NV = 0x0,
	VK_ACCELERATION_STRUCTURE_TYPE_END_RANGE_NV = 0x1,
	VK_ACCELERATION_STRUCTURE_TYPE_RANGE_SIZE_NV = 0x2,
	VK_ACCELERATION_STRUCTURE_TYPE_MAX_ENUM_NV = 0x7FFFFFFF
};

enum class VkPerformanceValueTypeINTEL:int
{
	VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL = 0x0,
	VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL = 0x1,
	VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL = 0x2,
	VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL = 0x3,
	VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL = 0x4,
	VK_PERFORMANCE_VALUE_TYPE_BEGIN_RANGE_INTEL = 0x0,
	VK_PERFORMANCE_VALUE_TYPE_END_RANGE_INTEL = 0x4,
	VK_PERFORMANCE_VALUE_TYPE_RANGE_SIZE_INTEL = 0x5,
	VK_PERFORMANCE_VALUE_TYPE_MAX_ENUM_INTEL = 0x7FFFFFFF
};

enum class VkRayTracingShaderGroupTypeNV:int
{
	VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV = 0x0,
	VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV = 0x1,
	VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV = 0x2,
	VK_RAY_TRACING_SHADER_GROUP_TYPE_BEGIN_RANGE_NV = 0x0,
	VK_RAY_TRACING_SHADER_GROUP_TYPE_END_RANGE_NV = 0x2,
	VK_RAY_TRACING_SHADER_GROUP_TYPE_RANGE_SIZE_NV = 0x3,
	VK_RAY_TRACING_SHADER_GROUP_TYPE_MAX_ENUM_NV = 0x7FFFFFFF
};

enum class VkGeometryTypeNV:int
{
	VK_GEOMETRY_TYPE_TRIANGLES_NV = 0x0,
	VK_GEOMETRY_TYPE_AABBS_NV = 0x1,
	VK_GEOMETRY_TYPE_BEGIN_RANGE_NV = 0x0,
	VK_GEOMETRY_TYPE_END_RANGE_NV = 0x1,
	VK_GEOMETRY_TYPE_RANGE_SIZE_NV = 0x2,
	VK_GEOMETRY_TYPE_MAX_ENUM_NV = 0x7FFFFFFF
};

enum class VkCopyAccelerationStructureModeNV:int
{
	VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV = 0x0,
	VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV = 0x1,
	VK_COPY_ACCELERATION_STRUCTURE_MODE_BEGIN_RANGE_NV = 0x0,
	VK_COPY_ACCELERATION_STRUCTURE_MODE_END_RANGE_NV = 0x1,
	VK_COPY_ACCELERATION_STRUCTURE_MODE_RANGE_SIZE_NV = 0x2,
	VK_COPY_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_NV = 0x7FFFFFFF
};

enum class VkAccelerationStructureMemoryRequirementsTypeNV:int
{
	VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV = 0x0,
	VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV = 0x1,
	VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV = 0x2,
	VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BEGIN_RANGE_NV = 0x0,
	VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_END_RANGE_NV = 0x2,
	VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_RANGE_SIZE_NV = 0x3,
	VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_MAX_ENUM_NV = 0x7FFFFFFF
};

enum class VkValidationCheckEXT:int
{
	VK_VALIDATION_CHECK_ALL_EXT = 0x0,
	VK_VALIDATION_CHECK_SHADERS_EXT = 0x1,
	VK_VALIDATION_CHECK_BEGIN_RANGE_EXT = 0x0,
	VK_VALIDATION_CHECK_END_RANGE_EXT = 0x1,
	VK_VALIDATION_CHECK_RANGE_SIZE_EXT = 0x2,
	VK_VALIDATION_CHECK_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class VkImageType:int
{
	VK_IMAGE_TYPE_1D = 0x0,
	VK_IMAGE_TYPE_2D = 0x1,
	VK_IMAGE_TYPE_3D = 0x2,
	VK_IMAGE_TYPE_BEGIN_RANGE = 0x0,
	VK_IMAGE_TYPE_END_RANGE = 0x2,
	VK_IMAGE_TYPE_RANGE_SIZE = 0x3,
	VK_IMAGE_TYPE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkImageTiling:int
{
	VK_IMAGE_TILING_OPTIMAL = 0x0,
	VK_IMAGE_TILING_LINEAR = 0x1,
	VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT = 0x3B9D3330,
	VK_IMAGE_TILING_BEGIN_RANGE = 0x0,
	VK_IMAGE_TILING_END_RANGE = 0x1,
	VK_IMAGE_TILING_RANGE_SIZE = 0x2,
	VK_IMAGE_TILING_MAX_ENUM = 0x7FFFFFFF
};

enum class VkPhysicalDeviceType:int
{
	VK_PHYSICAL_DEVICE_TYPE_OTHER = 0x0,
	VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU = 0x1,
	VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU = 0x2,
	VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU = 0x3,
	VK_PHYSICAL_DEVICE_TYPE_CPU = 0x4,
	VK_PHYSICAL_DEVICE_TYPE_BEGIN_RANGE = 0x0,
	VK_PHYSICAL_DEVICE_TYPE_END_RANGE = 0x4,
	VK_PHYSICAL_DEVICE_TYPE_RANGE_SIZE = 0x5,
	VK_PHYSICAL_DEVICE_TYPE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkQueryType:int
{
	VK_QUERY_TYPE_OCCLUSION = 0x0,
	VK_QUERY_TYPE_PIPELINE_STATISTICS = 0x1,
	VK_QUERY_TYPE_TIMESTAMP = 0x2,
	VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT = 0x3B9B3764,
	VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV = 0x3B9D4E88,
	VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL = 0x3B9DFE50,
	VK_QUERY_TYPE_BEGIN_RANGE = 0x0,
	VK_QUERY_TYPE_END_RANGE = 0x2,
	VK_QUERY_TYPE_RANGE_SIZE = 0x3,
	VK_QUERY_TYPE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkSharingMode:int
{
	VK_SHARING_MODE_EXCLUSIVE = 0x0,
	VK_SHARING_MODE_CONCURRENT = 0x1,
	VK_SHARING_MODE_BEGIN_RANGE = 0x0,
	VK_SHARING_MODE_END_RANGE = 0x1,
	VK_SHARING_MODE_RANGE_SIZE = 0x2,
	VK_SHARING_MODE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkPointClippingBehavior:int
{
	VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES = 0x0,
	VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY = 0x1,
	VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR = 0x0,
	VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR = 0x1,
	VK_POINT_CLIPPING_BEHAVIOR_BEGIN_RANGE = 0x0,
	VK_POINT_CLIPPING_BEHAVIOR_END_RANGE = 0x1,
	VK_POINT_CLIPPING_BEHAVIOR_RANGE_SIZE = 0x2,
	VK_POINT_CLIPPING_BEHAVIOR_MAX_ENUM = 0x7FFFFFFF
};

enum class VkImageLayout:int
{
	VK_IMAGE_LAYOUT_UNDEFINED = 0x0,
	VK_IMAGE_LAYOUT_GENERAL = 0x1,
	VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL = 0x2,
	VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL = 0x3,
	VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL = 0x4,
	VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL = 0x5,
	VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL = 0x6,
	VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL = 0x7,
	VK_IMAGE_LAYOUT_PREINITIALIZED = 0x8,
	VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL = 0x3B9C9308,
	VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL = 0x3B9C9309,
	VK_IMAGE_LAYOUT_PRESENT_SRC_KHR = 0x3B9ACDEA,
	VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR = 0x3B9C7B98,
	VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV = 0x3B9D4AA3,
	VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT = 0x3B9E1D90,
	VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR = 0x3B9C9308,
	VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR = 0x3B9C9309,
	VK_IMAGE_LAYOUT_BEGIN_RANGE = 0x0,
	VK_IMAGE_LAYOUT_END_RANGE = 0x8,
	VK_IMAGE_LAYOUT_RANGE_SIZE = 0x9,
	VK_IMAGE_LAYOUT_MAX_ENUM = 0x7FFFFFFF
};

enum class VkDriverIdKHR:int
{
	VK_DRIVER_ID_AMD_PROPRIETARY_KHR = 0x1,
	VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR = 0x2,
	VK_DRIVER_ID_MESA_RADV_KHR = 0x3,
	VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR = 0x4,
	VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR = 0x5,
	VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR = 0x6,
	VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR = 0x7,
	VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR = 0x8,
	VK_DRIVER_ID_ARM_PROPRIETARY_KHR = 0x9,
	VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR = 0xA,
	VK_DRIVER_ID_GGP_PROPRIETARY_KHR = 0xB,
	VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR = 0xC,
	VK_DRIVER_ID_BEGIN_RANGE_KHR = 0x1,
	VK_DRIVER_ID_END_RANGE_KHR = 0xC,
	VK_DRIVER_ID_RANGE_SIZE_KHR = 0xC,
	VK_DRIVER_ID_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkTessellationDomainOrigin:int
{
	VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT = 0x0,
	VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT = 0x1,
	VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR = 0x0,
	VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR = 0x1,
	VK_TESSELLATION_DOMAIN_ORIGIN_BEGIN_RANGE = 0x0,
	VK_TESSELLATION_DOMAIN_ORIGIN_END_RANGE = 0x1,
	VK_TESSELLATION_DOMAIN_ORIGIN_RANGE_SIZE = 0x2,
	VK_TESSELLATION_DOMAIN_ORIGIN_MAX_ENUM = 0x7FFFFFFF
};

enum class VkSamplerYcbcrModelConversion:int
{
	VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY = 0x0,
	VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY = 0x1,
	VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709 = 0x2,
	VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601 = 0x3,
	VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020 = 0x4,
	VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY_KHR = 0x0,
	VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY_KHR = 0x1,
	VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709_KHR = 0x2,
	VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601_KHR = 0x3,
	VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020_KHR = 0x4,
	VK_SAMPLER_YCBCR_MODEL_CONVERSION_BEGIN_RANGE = 0x0,
	VK_SAMPLER_YCBCR_MODEL_CONVERSION_END_RANGE = 0x4,
	VK_SAMPLER_YCBCR_MODEL_CONVERSION_RANGE_SIZE = 0x5,
	VK_SAMPLER_YCBCR_MODEL_CONVERSION_MAX_ENUM = 0x7FFFFFFF
};

enum class VkImageViewType:int
{
	VK_IMAGE_VIEW_TYPE_1D = 0x0,
	VK_IMAGE_VIEW_TYPE_2D = 0x1,
	VK_IMAGE_VIEW_TYPE_3D = 0x2,
	VK_IMAGE_VIEW_TYPE_CUBE = 0x3,
	VK_IMAGE_VIEW_TYPE_1D_ARRAY = 0x4,
	VK_IMAGE_VIEW_TYPE_2D_ARRAY = 0x5,
	VK_IMAGE_VIEW_TYPE_CUBE_ARRAY = 0x6,
	VK_IMAGE_VIEW_TYPE_BEGIN_RANGE = 0x0,
	VK_IMAGE_VIEW_TYPE_END_RANGE = 0x6,
	VK_IMAGE_VIEW_TYPE_RANGE_SIZE = 0x7,
	VK_IMAGE_VIEW_TYPE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkSamplerYcbcrRange:int
{
	VK_SAMPLER_YCBCR_RANGE_ITU_FULL = 0x0,
	VK_SAMPLER_YCBCR_RANGE_ITU_NARROW = 0x1,
	VK_SAMPLER_YCBCR_RANGE_ITU_FULL_KHR = 0x0,
	VK_SAMPLER_YCBCR_RANGE_ITU_NARROW_KHR = 0x1,
	VK_SAMPLER_YCBCR_RANGE_BEGIN_RANGE = 0x0,
	VK_SAMPLER_YCBCR_RANGE_END_RANGE = 0x1,
	VK_SAMPLER_YCBCR_RANGE_RANGE_SIZE = 0x2,
	VK_SAMPLER_YCBCR_RANGE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkSamplerReductionModeEXT:int
{
	VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT = 0x0,
	VK_SAMPLER_REDUCTION_MODE_MIN_EXT = 0x1,
	VK_SAMPLER_REDUCTION_MODE_MAX_EXT = 0x2,
	VK_SAMPLER_REDUCTION_MODE_BEGIN_RANGE_EXT = 0x0,
	VK_SAMPLER_REDUCTION_MODE_END_RANGE_EXT = 0x2,
	VK_SAMPLER_REDUCTION_MODE_RANGE_SIZE_EXT = 0x3,
	VK_SAMPLER_REDUCTION_MODE_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class VkIndirectCommandsTokenTypeNVX:int
{
	VK_INDIRECT_COMMANDS_TOKEN_TYPE_PIPELINE_NVX = 0x0,
	VK_INDIRECT_COMMANDS_TOKEN_TYPE_DESCRIPTOR_SET_NVX = 0x1,
	VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NVX = 0x2,
	VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NVX = 0x3,
	VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NVX = 0x4,
	VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NVX = 0x5,
	VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NVX = 0x6,
	VK_INDIRECT_COMMANDS_TOKEN_TYPE_DISPATCH_NVX = 0x7,
	VK_INDIRECT_COMMANDS_TOKEN_TYPE_BEGIN_RANGE_NVX = 0x0,
	VK_INDIRECT_COMMANDS_TOKEN_TYPE_END_RANGE_NVX = 0x7,
	VK_INDIRECT_COMMANDS_TOKEN_TYPE_RANGE_SIZE_NVX = 0x8,
	VK_INDIRECT_COMMANDS_TOKEN_TYPE_MAX_ENUM_NVX = 0x7FFFFFFF
};

enum class VkComponentSwizzle:int
{
	VK_COMPONENT_SWIZZLE_IDENTITY = 0x0,
	VK_COMPONENT_SWIZZLE_ZERO = 0x1,
	VK_COMPONENT_SWIZZLE_ONE = 0x2,
	VK_COMPONENT_SWIZZLE_R = 0x3,
	VK_COMPONENT_SWIZZLE_G = 0x4,
	VK_COMPONENT_SWIZZLE_B = 0x5,
	VK_COMPONENT_SWIZZLE_A = 0x6,
	VK_COMPONENT_SWIZZLE_BEGIN_RANGE = 0x0,
	VK_COMPONENT_SWIZZLE_END_RANGE = 0x6,
	VK_COMPONENT_SWIZZLE_RANGE_SIZE = 0x7,
	VK_COMPONENT_SWIZZLE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkChromaLocation:int
{
	VK_CHROMA_LOCATION_COSITED_EVEN = 0x0,
	VK_CHROMA_LOCATION_MIDPOINT = 0x1,
	VK_CHROMA_LOCATION_COSITED_EVEN_KHR = 0x0,
	VK_CHROMA_LOCATION_MIDPOINT_KHR = 0x1,
	VK_CHROMA_LOCATION_BEGIN_RANGE = 0x0,
	VK_CHROMA_LOCATION_END_RANGE = 0x1,
	VK_CHROMA_LOCATION_RANGE_SIZE = 0x2,
	VK_CHROMA_LOCATION_MAX_ENUM = 0x7FFFFFFF
};

enum class VkObjectEntryTypeNVX:int
{
	VK_OBJECT_ENTRY_TYPE_DESCRIPTOR_SET_NVX = 0x0,
	VK_OBJECT_ENTRY_TYPE_PIPELINE_NVX = 0x1,
	VK_OBJECT_ENTRY_TYPE_INDEX_BUFFER_NVX = 0x2,
	VK_OBJECT_ENTRY_TYPE_VERTEX_BUFFER_NVX = 0x3,
	VK_OBJECT_ENTRY_TYPE_PUSH_CONSTANT_NVX = 0x4,
	VK_OBJECT_ENTRY_TYPE_BEGIN_RANGE_NVX = 0x0,
	VK_OBJECT_ENTRY_TYPE_END_RANGE_NVX = 0x4,
	VK_OBJECT_ENTRY_TYPE_RANGE_SIZE_NVX = 0x5,
	VK_OBJECT_ENTRY_TYPE_MAX_ENUM_NVX = 0x7FFFFFFF
};

enum class VkVertexInputRate:int
{
	VK_VERTEX_INPUT_RATE_VERTEX = 0x0,
	VK_VERTEX_INPUT_RATE_INSTANCE = 0x1,
	VK_VERTEX_INPUT_RATE_BEGIN_RANGE = 0x0,
	VK_VERTEX_INPUT_RATE_END_RANGE = 0x1,
	VK_VERTEX_INPUT_RATE_RANGE_SIZE = 0x2,
	VK_VERTEX_INPUT_RATE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkDescriptorUpdateTemplateType:int
{
	VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET = 0x0,
	VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR = 0x1,
	VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR = 0x0,
	VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_BEGIN_RANGE = 0x0,
	VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_END_RANGE = 0x0,
	VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_RANGE_SIZE = 0x1,
	VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkPrimitiveTopology:int
{
	VK_PRIMITIVE_TOPOLOGY_POINT_LIST = 0x0,
	VK_PRIMITIVE_TOPOLOGY_LINE_LIST = 0x1,
	VK_PRIMITIVE_TOPOLOGY_LINE_STRIP = 0x2,
	VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST = 0x3,
	VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP = 0x4,
	VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN = 0x5,
	VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY = 0x6,
	VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY = 0x7,
	VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY = 0x8,
	VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY = 0x9,
	VK_PRIMITIVE_TOPOLOGY_PATCH_LIST = 0xA,
	VK_PRIMITIVE_TOPOLOGY_BEGIN_RANGE = 0x0,
	VK_PRIMITIVE_TOPOLOGY_END_RANGE = 0xA,
	VK_PRIMITIVE_TOPOLOGY_RANGE_SIZE = 0xB,
	VK_PRIMITIVE_TOPOLOGY_MAX_ENUM = 0x7FFFFFFF
};

enum class VkShaderFloatControlsIndependenceKHR:int
{
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR = 0x0,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR = 0x1,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR = 0x2,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_BEGIN_RANGE_KHR = 0x0,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_END_RANGE_KHR = 0x2,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_RANGE_SIZE_KHR = 0x3,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkPolygonMode:int
{
	VK_POLYGON_MODE_FILL = 0x0,
	VK_POLYGON_MODE_LINE = 0x1,
	VK_POLYGON_MODE_POINT = 0x2,
	VK_POLYGON_MODE_FILL_RECTANGLE_NV = 0x3B9D1FA8,
	VK_POLYGON_MODE_BEGIN_RANGE = 0x0,
	VK_POLYGON_MODE_END_RANGE = 0x2,
	VK_POLYGON_MODE_RANGE_SIZE = 0x3,
	VK_POLYGON_MODE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkPeerMemoryFeatureFlagBits:int
{
	VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT = 0x1,
	VK_PEER_MEMORY_FEATURE_COPY_DST_BIT = 0x2,
	VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT = 0x4,
	VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT = 0x8,
	VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR = 0x1,
	VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR = 0x2,
	VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR = 0x4,
	VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR = 0x8,
	VK_PEER_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkFrontFace:int
{
	VK_FRONT_FACE_COUNTER_CLOCKWISE = 0x0,
	VK_FRONT_FACE_CLOCKWISE = 0x1,
	VK_FRONT_FACE_BEGIN_RANGE = 0x0,
	VK_FRONT_FACE_END_RANGE = 0x1,
	VK_FRONT_FACE_RANGE_SIZE = 0x2,
	VK_FRONT_FACE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkMemoryAllocateFlagBits:int
{
	VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT = 0x1,
	VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR = 0x1,
	VK_MEMORY_ALLOCATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkCompareOp:int
{
	VK_COMPARE_OP_NEVER = 0x0,
	VK_COMPARE_OP_LESS = 0x1,
	VK_COMPARE_OP_EQUAL = 0x2,
	VK_COMPARE_OP_LESS_OR_EQUAL = 0x3,
	VK_COMPARE_OP_GREATER = 0x4,
	VK_COMPARE_OP_NOT_EQUAL = 0x5,
	VK_COMPARE_OP_GREATER_OR_EQUAL = 0x6,
	VK_COMPARE_OP_ALWAYS = 0x7,
	VK_COMPARE_OP_BEGIN_RANGE = 0x0,
	VK_COMPARE_OP_END_RANGE = 0x7,
	VK_COMPARE_OP_RANGE_SIZE = 0x8,
	VK_COMPARE_OP_MAX_ENUM = 0x7FFFFFFF
};

enum class VkExternalMemoryHandleTypeFlagBits:int
{
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT = 0x1,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT = 0x2,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT = 0x4,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT = 0x8,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT = 0x10,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT = 0x20,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT = 0x40,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT = 0x200,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID = 0x400,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT = 0x80,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT = 0x100,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR = 0x1,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR = 0x2,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR = 0x4,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR = 0x8,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR = 0x10,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR = 0x20,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR = 0x40,
	VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkStencilOp:int
{
	VK_STENCIL_OP_KEEP = 0x0,
	VK_STENCIL_OP_ZERO = 0x1,
	VK_STENCIL_OP_REPLACE = 0x2,
	VK_STENCIL_OP_INCREMENT_AND_CLAMP = 0x3,
	VK_STENCIL_OP_DECREMENT_AND_CLAMP = 0x4,
	VK_STENCIL_OP_INVERT = 0x5,
	VK_STENCIL_OP_INCREMENT_AND_WRAP = 0x6,
	VK_STENCIL_OP_DECREMENT_AND_WRAP = 0x7,
	VK_STENCIL_OP_BEGIN_RANGE = 0x0,
	VK_STENCIL_OP_END_RANGE = 0x7,
	VK_STENCIL_OP_RANGE_SIZE = 0x8,
	VK_STENCIL_OP_MAX_ENUM = 0x7FFFFFFF
};

enum class VkExternalMemoryFeatureFlagBits:int
{
	VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT = 0x1,
	VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT = 0x2,
	VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT = 0x4,
	VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR = 0x1,
	VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR = 0x2,
	VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR = 0x4,
	VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkLogicOp:int
{
	VK_LOGIC_OP_CLEAR = 0x0,
	VK_LOGIC_OP_AND = 0x1,
	VK_LOGIC_OP_AND_REVERSE = 0x2,
	VK_LOGIC_OP_COPY = 0x3,
	VK_LOGIC_OP_AND_INVERTED = 0x4,
	VK_LOGIC_OP_NO_OP = 0x5,
	VK_LOGIC_OP_XOR = 0x6,
	VK_LOGIC_OP_OR = 0x7,
	VK_LOGIC_OP_NOR = 0x8,
	VK_LOGIC_OP_EQUIVALENT = 0x9,
	VK_LOGIC_OP_INVERT = 0xA,
	VK_LOGIC_OP_OR_REVERSE = 0xB,
	VK_LOGIC_OP_COPY_INVERTED = 0xC,
	VK_LOGIC_OP_OR_INVERTED = 0xD,
	VK_LOGIC_OP_NAND = 0xE,
	VK_LOGIC_OP_SET = 0xF,
	VK_LOGIC_OP_BEGIN_RANGE = 0x0,
	VK_LOGIC_OP_END_RANGE = 0xF,
	VK_LOGIC_OP_RANGE_SIZE = 0x10,
	VK_LOGIC_OP_MAX_ENUM = 0x7FFFFFFF
};

enum class VkExternalFenceHandleTypeFlagBits:int
{
	VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT = 0x1,
	VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT = 0x2,
	VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT = 0x4,
	VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT = 0x8,
	VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR = 0x1,
	VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR = 0x2,
	VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR = 0x4,
	VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR = 0x8,
	VK_EXTERNAL_FENCE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkExternalFenceFeatureFlagBits:int
{
	VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT = 0x1,
	VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT = 0x2,
	VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR = 0x1,
	VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR = 0x2,
	VK_EXTERNAL_FENCE_FEATURE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkBlendFactor:int
{
	VK_BLEND_FACTOR_ZERO = 0x0,
	VK_BLEND_FACTOR_ONE = 0x1,
	VK_BLEND_FACTOR_SRC_COLOR = 0x2,
	VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR = 0x3,
	VK_BLEND_FACTOR_DST_COLOR = 0x4,
	VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR = 0x5,
	VK_BLEND_FACTOR_SRC_ALPHA = 0x6,
	VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA = 0x7,
	VK_BLEND_FACTOR_DST_ALPHA = 0x8,
	VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA = 0x9,
	VK_BLEND_FACTOR_CONSTANT_COLOR = 0xA,
	VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR = 0xB,
	VK_BLEND_FACTOR_CONSTANT_ALPHA = 0xC,
	VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA = 0xD,
	VK_BLEND_FACTOR_SRC_ALPHA_SATURATE = 0xE,
	VK_BLEND_FACTOR_SRC1_COLOR = 0xF,
	VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR = 0x10,
	VK_BLEND_FACTOR_SRC1_ALPHA = 0x11,
	VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA = 0x12,
	VK_BLEND_FACTOR_BEGIN_RANGE = 0x0,
	VK_BLEND_FACTOR_END_RANGE = 0x12,
	VK_BLEND_FACTOR_RANGE_SIZE = 0x13,
	VK_BLEND_FACTOR_MAX_ENUM = 0x7FFFFFFF
};

enum class VkFenceImportFlagBits:int
{
	VK_FENCE_IMPORT_TEMPORARY_BIT = 0x1,
	VK_FENCE_IMPORT_TEMPORARY_BIT_KHR = 0x1,
	VK_FENCE_IMPORT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkSemaphoreImportFlagBits:int
{
	VK_SEMAPHORE_IMPORT_TEMPORARY_BIT = 0x1,
	VK_SEMAPHORE_IMPORT_TEMPORARY_BIT_KHR = 0x1,
	VK_SEMAPHORE_IMPORT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkExternalSemaphoreHandleTypeFlagBits:int
{
	VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT = 0x1,
	VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT = 0x2,
	VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT = 0x4,
	VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT = 0x8,
	VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT = 0x10,
	VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR = 0x1,
	VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR = 0x2,
	VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR = 0x4,
	VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR = 0x8,
	VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR = 0x10,
	VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkBlendOp:int
{
	VK_BLEND_OP_ADD = 0x0,
	VK_BLEND_OP_SUBTRACT = 0x1,
	VK_BLEND_OP_REVERSE_SUBTRACT = 0x2,
	VK_BLEND_OP_MIN = 0x3,
	VK_BLEND_OP_MAX = 0x4,
	VK_BLEND_OP_ZERO_EXT = 0x3B9D0C20,
	VK_BLEND_OP_SRC_EXT = 0x3B9D0C21,
	VK_BLEND_OP_DST_EXT = 0x3B9D0C22,
	VK_BLEND_OP_SRC_OVER_EXT = 0x3B9D0C23,
	VK_BLEND_OP_DST_OVER_EXT = 0x3B9D0C24,
	VK_BLEND_OP_SRC_IN_EXT = 0x3B9D0C25,
	VK_BLEND_OP_DST_IN_EXT = 0x3B9D0C26,
	VK_BLEND_OP_SRC_OUT_EXT = 0x3B9D0C27,
	VK_BLEND_OP_DST_OUT_EXT = 0x3B9D0C28,
	VK_BLEND_OP_SRC_ATOP_EXT = 0x3B9D0C29,
	VK_BLEND_OP_DST_ATOP_EXT = 0x3B9D0C2A,
	VK_BLEND_OP_XOR_EXT = 0x3B9D0C2B,
	VK_BLEND_OP_MULTIPLY_EXT = 0x3B9D0C2C,
	VK_BLEND_OP_SCREEN_EXT = 0x3B9D0C2D,
	VK_BLEND_OP_OVERLAY_EXT = 0x3B9D0C2E,
	VK_BLEND_OP_DARKEN_EXT = 0x3B9D0C2F,
	VK_BLEND_OP_LIGHTEN_EXT = 0x3B9D0C30,
	VK_BLEND_OP_COLORDODGE_EXT = 0x3B9D0C31,
	VK_BLEND_OP_COLORBURN_EXT = 0x3B9D0C32,
	VK_BLEND_OP_HARDLIGHT_EXT = 0x3B9D0C33,
	VK_BLEND_OP_SOFTLIGHT_EXT = 0x3B9D0C34,
	VK_BLEND_OP_DIFFERENCE_EXT = 0x3B9D0C35,
	VK_BLEND_OP_EXCLUSION_EXT = 0x3B9D0C36,
	VK_BLEND_OP_INVERT_EXT = 0x3B9D0C37,
	VK_BLEND_OP_INVERT_RGB_EXT = 0x3B9D0C38,
	VK_BLEND_OP_LINEARDODGE_EXT = 0x3B9D0C39,
	VK_BLEND_OP_LINEARBURN_EXT = 0x3B9D0C3A,
	VK_BLEND_OP_VIVIDLIGHT_EXT = 0x3B9D0C3B,
	VK_BLEND_OP_LINEARLIGHT_EXT = 0x3B9D0C3C,
	VK_BLEND_OP_PINLIGHT_EXT = 0x3B9D0C3D,
	VK_BLEND_OP_HARDMIX_EXT = 0x3B9D0C3E,
	VK_BLEND_OP_HSL_HUE_EXT = 0x3B9D0C3F,
	VK_BLEND_OP_HSL_SATURATION_EXT = 0x3B9D0C40,
	VK_BLEND_OP_HSL_COLOR_EXT = 0x3B9D0C41,
	VK_BLEND_OP_HSL_LUMINOSITY_EXT = 0x3B9D0C42,
	VK_BLEND_OP_PLUS_EXT = 0x3B9D0C43,
	VK_BLEND_OP_PLUS_CLAMPED_EXT = 0x3B9D0C44,
	VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT = 0x3B9D0C45,
	VK_BLEND_OP_PLUS_DARKER_EXT = 0x3B9D0C46,
	VK_BLEND_OP_MINUS_EXT = 0x3B9D0C47,
	VK_BLEND_OP_MINUS_CLAMPED_EXT = 0x3B9D0C48,
	VK_BLEND_OP_CONTRAST_EXT = 0x3B9D0C49,
	VK_BLEND_OP_INVERT_OVG_EXT = 0x3B9D0C4A,
	VK_BLEND_OP_RED_EXT = 0x3B9D0C4B,
	VK_BLEND_OP_GREEN_EXT = 0x3B9D0C4C,
	VK_BLEND_OP_BLUE_EXT = 0x3B9D0C4D,
	VK_BLEND_OP_BEGIN_RANGE = 0x0,
	VK_BLEND_OP_END_RANGE = 0x4,
	VK_BLEND_OP_RANGE_SIZE = 0x5,
	VK_BLEND_OP_MAX_ENUM = 0x7FFFFFFF
};

enum class VkExternalSemaphoreFeatureFlagBits:int
{
	VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT = 0x1,
	VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT = 0x2,
	VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR = 0x1,
	VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR = 0x2,
	VK_EXTERNAL_SEMAPHORE_FEATURE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkPipelineExecutableStatisticFormatKHR:int
{
	VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR = 0x0,
	VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR = 0x1,
	VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR = 0x2,
	VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR = 0x3,
	VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BEGIN_RANGE_KHR = 0x0,
	VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_END_RANGE_KHR = 0x3,
	VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_RANGE_SIZE_KHR = 0x4,
	VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkPipelineCacheHeaderVersion:int
{
	VK_PIPELINE_CACHE_HEADER_VERSION_ONE = 0x1,
	VK_PIPELINE_CACHE_HEADER_VERSION_BEGIN_RANGE = 0x1,
	VK_PIPELINE_CACHE_HEADER_VERSION_END_RANGE = 0x1,
	VK_PIPELINE_CACHE_HEADER_VERSION_RANGE_SIZE = 0x1,
	VK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM = 0x7FFFFFFF
};

enum class VkDynamicState:int
{
	VK_DYNAMIC_STATE_VIEWPORT = 0x0,
	VK_DYNAMIC_STATE_SCISSOR = 0x1,
	VK_DYNAMIC_STATE_LINE_WIDTH = 0x2,
	VK_DYNAMIC_STATE_DEPTH_BIAS = 0x3,
	VK_DYNAMIC_STATE_BLEND_CONSTANTS = 0x4,
	VK_DYNAMIC_STATE_DEPTH_BOUNDS = 0x5,
	VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK = 0x6,
	VK_DYNAMIC_STATE_STENCIL_WRITE_MASK = 0x7,
	VK_DYNAMIC_STATE_STENCIL_REFERENCE = 0x8,
	VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV = 0x3B9C1DD8,
	VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT = 0x3B9C4CB8,
	VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT = 0x3B9CF898,
	VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV = 0x3B9D4AA4,
	VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV = 0x3B9D4AA6,
	VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV = 0x3B9DEAC9,
	VK_DYNAMIC_STATE_LINE_STIPPLE_EXT = 0x3B9EBDB8,
	VK_DYNAMIC_STATE_BEGIN_RANGE = 0x0,
	VK_DYNAMIC_STATE_END_RANGE = 0x8,
	VK_DYNAMIC_STATE_RANGE_SIZE = 0x9,
	VK_DYNAMIC_STATE_MAX_ENUM = 0x7FFFFFFF
};

enum class KF_CATEGORY:int
{
	KF_CATEGORY_VIRTUAL = 0x1,
	KF_CATEGORY_FIXED = 0x2,
	KF_CATEGORY_COMMON = 0x3,
	KF_CATEGORY_PERUSER = 0x4
};

enum class LIBRARYFOLDERFILTER:int
{
	LFF_FORCEFILESYSTEM = 0x1,
	LFF_STORAGEITEMS = 0x2,
	LFF_ALLITEMS = 0x3
};

enum class LIBRARYOPTIONFLAGS:int
{
	LOF_DEFAULT = 0x0,
	LOF_PINNEDTONAVPANE = 0x1,
	LOF_MASK_ALL = 0x1
};

enum class LIBRARYSAVEFLAGS:int
{
	LSF_FAILIFTHERE = 0x0,
	LSF_OVERRIDEEXISTING = 0x1,
	LSF_MAKEUNIQUENAME = 0x2
};

enum class ERRPlacementNew:int
{
	eRRPlacementNew = 0x0
};

enum class DLAttr:int
{
	dlattrRva = 0x1
};

enum class IKEEXT_DH_GROUP_:int
{
	IKEEXT_DH_GROUP_NONE = 0x0,
	IKEEXT_DH_GROUP_1 = 0x1,
	IKEEXT_DH_GROUP_2 = 0x2,
	IKEEXT_DH_GROUP_14 = 0x3,
	IKEEXT_DH_GROUP_2048 = 0x3,
	IKEEXT_DH_ECP_256 = 0x4,
	IKEEXT_DH_ECP_384 = 0x5,
	IKEEXT_DH_GROUP_24 = 0x6,
	IKEEXT_DH_GROUP_MAX = 0x7
};

enum class _MEMORY_CACHING_TYPE:int
{
	MmNonCached = 0x0,
	MmCached = 0x1,
	MmWriteCombined = 0x2,
	MmHardwareCoherentCached = 0x3,
	MmNonCachedUnordered = 0x4,
	MmUSWCCached = 0x5,
	MmMaximumCacheType = 0x6,
	MmNotMapped = 0xFF
};

enum class IPSEC_PFS_GROUP_:int
{
	IPSEC_PFS_NONE = 0x0,
	IPSEC_PFS_1 = 0x1,
	IPSEC_PFS_2 = 0x2,
	IPSEC_PFS_2048 = 0x3,
	IPSEC_PFS_14 = 0x3,
	IPSEC_PFS_ECP_256 = 0x4,
	IPSEC_PFS_ECP_384 = 0x5,
	IPSEC_PFS_MM = 0x6,
	IPSEC_PFS_24 = 0x7,
	IPSEC_PFS_MAX = 0x8
};

enum class _KINTERRUPT_POLARITY:int
{
	InterruptPolarityUnknown = 0x0,
	InterruptActiveHigh = 0x1,
	InterruptRisingEdge = 0x1,
	InterruptActiveLow = 0x2,
	InterruptFallingEdge = 0x2,
	InterruptActiveBoth = 0x3,
	InterruptActiveBothTriggerLow = 0x3,
	InterruptActiveBothTriggerHigh = 0x4
};

enum class FWPI_VPN_TRIGGER_EVENT_TYPE_:int
{
	FWPI_VPN_TRIGGER_EVENT_APP_TRIGGER_CONNECT = 0x0,
	FWPI_VPN_TRIGGER_EVENT_APP_TRIGGER_NRPT_CONNECT = 0x1,
	FWPI_VPN_TRIGGER_EVENT_APP_TRIGGER_DISCONNECT = 0x2,
	FWPI_VPN_TRIGGER_EVENT_MAX = 0x3
};

enum class FWPM_PROVIDER_CONTEXT_TYPE_:int
{
	FWPM_IPSEC_KEYING_CONTEXT = 0x0,
	FWPM_IPSEC_IKE_QM_TRANSPORT_CONTEXT = 0x1,
	FWPM_IPSEC_IKE_QM_TUNNEL_CONTEXT = 0x2,
	FWPM_IPSEC_AUTHIP_QM_TRANSPORT_CONTEXT = 0x3,
	FWPM_IPSEC_AUTHIP_QM_TUNNEL_CONTEXT = 0x4,
	FWPM_IPSEC_IKE_MM_CONTEXT = 0x5,
	FWPM_IPSEC_AUTHIP_MM_CONTEXT = 0x6,
	FWPM_CLASSIFY_OPTIONS_CONTEXT = 0x7,
	FWPM_GENERAL_CONTEXT = 0x8,
	FWPM_IPSEC_IKEV2_QM_TUNNEL_CONTEXT = 0x9,
	FWPM_IPSEC_IKEV2_MM_CONTEXT = 0xA,
	FWPM_IPSEC_DOSP_CONTEXT = 0xB,
	FWPM_IPSEC_IKEV2_QM_TRANSPORT_CONTEXT = 0xC,
	FWPM_PROVIDER_CONTEXT_TYPE_MAX = 0xD
};

enum class FWPM_NET_EVENT_TYPE_:int
{
	FWPM_NET_EVENT_TYPE_IKEEXT_MM_FAILURE = 0x0,
	FWPM_NET_EVENT_TYPE_IKEEXT_QM_FAILURE = 0x1,
	FWPM_NET_EVENT_TYPE_IKEEXT_EM_FAILURE = 0x2,
	FWPM_NET_EVENT_TYPE_CLASSIFY_DROP = 0x3,
	FWPM_NET_EVENT_TYPE_IPSEC_KERNEL_DROP = 0x4,
	FWPM_NET_EVENT_TYPE_IPSEC_DOSP_DROP = 0x5,
	FWPM_NET_EVENT_TYPE_CLASSIFY_ALLOW = 0x6,
	FWPM_NET_EVENT_TYPE_CAPABILITY_DROP = 0x7,
	FWPM_NET_EVENT_TYPE_CAPABILITY_ALLOW = 0x8,
	FWPM_NET_EVENT_TYPE_CLASSIFY_DROP_MAC = 0x9,
	FWPM_NET_EVENT_TYPE_LPM_PACKET_ARRIVAL = 0xA,
	FWPM_NET_EVENT_TYPE_MAX = 0xB
};

enum class FWPM_EVENT_PROVIDER_TYPE_:int
{
	FWPM_EVENT_PROVIDER_IKEEXT = 0x0,
	FWPM_EVENT_PROVIDER_FILTER_ENGINE = 0x1,
	FWPM_EVENT_PROVIDER_IPSEC_KERNEL = 0x2,
	FWPM_EVENT_PROVIDER_IPSEC_DOSP = 0x3,
	FWPM_EVENT_PROVIDER_APPC_NETWORK_ISOLATION = 0x4,
	FWPM_EVENT_PROVIDER_TYPE_MAX = 0x5
};

enum class FWPM_CONNECTION_EVENT_TYPE_:int
{
	FWPM_CONNECTION_EVENT_ADD = 0x0,
	FWPM_CONNECTION_EVENT_DELETE = 0x1,
	FWPM_CONNECTION_EVENT_MAX = 0x2
};

enum class FWP_MATCH_TYPE_:int
{
	FWP_MATCH_EQUAL = 0x0,
	FWP_MATCH_GREATER = 0x1,
	FWP_MATCH_LESS = 0x2,
	FWP_MATCH_GREATER_OR_EQUAL = 0x3,
	FWP_MATCH_LESS_OR_EQUAL = 0x4,
	FWP_MATCH_RANGE = 0x5,
	FWP_MATCH_FLAGS_ALL_SET = 0x6,
	FWP_MATCH_FLAGS_ANY_SET = 0x7,
	FWP_MATCH_FLAGS_NONE_SET = 0x8,
	FWP_MATCH_EQUAL_CASE_INSENSITIVE = 0x9,
	FWP_MATCH_NOT_EQUAL = 0xA,
	FWP_MATCH_PREFIX = 0xB,
	FWP_MATCH_NOT_PREFIX = 0xC,
	FWP_MATCH_TYPE_MAX = 0xD
};

enum class IKEEXT_CIPHER_TYPE_:int
{
	IKEEXT_CIPHER_DES = 0x0,
	IKEEXT_CIPHER_3DES = 0x1,
	IKEEXT_CIPHER_AES_128 = 0x2,
	IKEEXT_CIPHER_AES_192 = 0x3,
	IKEEXT_CIPHER_AES_256 = 0x4,
	IKEEXT_CIPHER_AES_GCM_128_16ICV = 0x5,
	IKEEXT_CIPHER_AES_GCM_256_16ICV = 0x6,
	IKEEXT_CIPHER_TYPE_MAX = 0x7
};

enum class IKEEXT_MM_SA_STATE_:int
{
	IKEEXT_MM_SA_STATE_NONE = 0x0,
	IKEEXT_MM_SA_STATE_SA_SENT = 0x1,
	IKEEXT_MM_SA_STATE_SSPI_SENT = 0x2,
	IKEEXT_MM_SA_STATE_FINAL = 0x3,
	IKEEXT_MM_SA_STATE_FINAL_SENT = 0x4,
	IKEEXT_MM_SA_STATE_COMPLETE = 0x5,
	IKEEXT_MM_SA_STATE_MAX = 0x6
};

enum class IKEEXT_AUTHENTICATION_METHOD_TYPE_:int
{
	IKEEXT_PRESHARED_KEY = 0x0,
	IKEEXT_CERTIFICATE = 0x1,
	IKEEXT_KERBEROS = 0x2,
	IKEEXT_ANONYMOUS = 0x3,
	IKEEXT_SSL = 0x4,
	IKEEXT_NTLM_V2 = 0x5,
	IKEEXT_IPV6_CGA = 0x6,
	IKEEXT_CERTIFICATE_ECDSA_P256 = 0x7,
	IKEEXT_CERTIFICATE_ECDSA_P384 = 0x8,
	IKEEXT_SSL_ECDSA_P256 = 0x9,
	IKEEXT_SSL_ECDSA_P384 = 0xA,
	IKEEXT_EAP = 0xB,
	IKEEXT_RESERVED = 0xC,
	IKEEXT_AUTHENTICATION_METHOD_TYPE_MAX = 0xD
};

enum class IKEEXT_CERT_CONFIG_TYPE_:int
{
	IKEEXT_CERT_CONFIG_EXPLICIT_TRUST_LIST = 0x0,
	IKEEXT_CERT_CONFIG_ENTERPRISE_STORE = 0x1,
	IKEEXT_CERT_CONFIG_TRUSTED_ROOT_STORE = 0x2,
	IKEEXT_CERT_CONFIG_UNSPECIFIED = 0x3,
	IKEEXT_CERT_CONFIG_TYPE_MAX = 0x4
};

enum class FWPM_VSWITCH_EVENT_TYPE_:int
{
	FWPM_VSWITCH_EVENT_FILTER_ADD_TO_INCOMPLETE_LAYER = 0x0,
	FWPM_VSWITCH_EVENT_FILTER_ENGINE_NOT_IN_REQUIRED_POSITION = 0x1,
	FWPM_VSWITCH_EVENT_ENABLED_FOR_INSPECTION = 0x2,
	FWPM_VSWITCH_EVENT_DISABLED_FOR_INSPECTION = 0x3,
	FWPM_VSWITCH_EVENT_FILTER_ENGINE_REORDER = 0x4,
	FWPM_VSWITCH_EVENT_MAX = 0x5
};

enum class _NDIS_NET_BUFFER_LIST_INFO:int
{
	TcpIpChecksumNetBufferListInfo = 0x0,
	TcpOffloadBytesTransferred = 0x0,
	IPsecOffloadV1NetBufferListInfo = 0x1,
	IPsecOffloadV2NetBufferListInfo = 0x1,
	TcpLargeSendNetBufferListInfo = 0x2,
	TcpReceiveNoPush = 0x2,
	ClassificationHandleNetBufferListInfo = 0x3,
	Ieee8021QNetBufferListInfo = 0x4,
	NetBufferListCancelId = 0x5,
	MediaSpecificInformation = 0x6,
	NetBufferListFrameType = 0x7,
	NetBufferListProtocolId = 0x7,
	NetBufferListHashValue = 0x8,
	NetBufferListHashInfo = 0x9,
	WfpNetBufferListInfo = 0xA,
	IPsecOffloadV2TunnelNetBufferListInfo = 0xB,
	IPsecOffloadV2HeaderNetBufferListInfo = 0xC,
	NetBufferListCorrelationId = 0xD,
	NetBufferListFilteringInfo = 0xE,
	MediaSpecificInformationEx = 0xF,
	NblOriginalInterfaceIfIndex = 0x10,
	NblReAuthWfpFlowContext = 0x10,
	TcpReceiveBytesTransferred = 0x11,
	NrtNameResolutionId = 0x11,
	SwitchForwardingReserved = 0x12,
	SwitchForwardingDetail = 0x13,
	VirtualSubnetInfo = 0x14,
	IMReserved = 0x15,
	TcpRecvSegCoalesceInfo = 0x16,
	UdpSegmentationOffloadInfo = 0x16,
	RscTcpTimestampDelta = 0x17,
	TcpSendOffloadsSupplementalNetBufferListInfo = 0x17,
	GftOffloadInformation = 0x18,
	GftFlowEntryId = 0x19,
	NetBufferListInfoReserved3 = 0x1A,
	MaxNetBufferListInfo = 0x1B
};

enum class IKEEXT_CERT_POLICY_PROTOCOL_TYPE_:int
{
	IKEEXT_CERT_POLICY_PROTOCOL_AUTHIP_SELECT = 0x0,
	IKEEXT_CERT_POLICY_PROTOCOL_AUTHIP_VALIDATE = 0x1,
	IKEEXT_CERT_POLICY_PROTOCOL_IKE_SELECT = 0x2,
	IKEEXT_CERT_POLICY_PROTOCOL_IKE_VALIDATE = 0x3,
	IKEEXT_CERT_POLICY_PROTOCOL_MAX = 0x4
};

enum class FWP_NE_FAMILY_:int
{
	FWP_AF_INET = 0x0,
	FWP_AF_INET6 = 0x1,
	FWP_AF_ETHER = 0x2,
	FWP_AF_NONE = 0x3
};

enum class FWP_IP_VERSION_:int
{
	FWP_IP_VERSION_V4 = 0x0,
	FWP_IP_VERSION_V6 = 0x1,
	FWP_IP_VERSION_NONE = 0x2,
	FWP_IP_VERSION_MAX = 0x3
};

enum class FWP_DATA_TYPE_:int
{
	FWP_EMPTY = 0x0,
	FWP_UINT8 = 0x1,
	FWP_UINT16 = 0x2,
	FWP_UINT32 = 0x3,
	FWP_UINT64 = 0x4,
	FWP_INT8 = 0x5,
	FWP_INT16 = 0x6,
	FWP_INT32 = 0x7,
	FWP_INT64 = 0x8,
	FWP_FLOAT = 0x9,
	FWP_DOUBLE = 0xA,
	FWP_BYTE_ARRAY16_TYPE = 0xB,
	FWP_BYTE_BLOB_TYPE = 0xC,
	FWP_SID = 0xD,
	FWP_SECURITY_DESCRIPTOR_TYPE = 0xE,
	FWP_TOKEN_INFORMATION_TYPE = 0xF,
	FWP_TOKEN_ACCESS_INFORMATION_TYPE = 0x10,
	FWP_UNICODE_STRING_TYPE = 0x11,
	FWP_BYTE_ARRAY6_TYPE = 0x12,
	FWP_BITMAP_INDEX_TYPE = 0x13,
	FWP_BITMAP_ARRAY64_TYPE = 0x14,
	FWP_SINGLE_DATA_TYPE_MAX = 0xFF,
	FWP_V4_ADDR_MASK = 0x100,
	FWP_V6_ADDR_MASK = 0x101,
	FWP_RANGE_TYPE = 0x102,
	FWP_DATA_TYPE_MAX = 0x103
};

enum class FWPM_APPC_NETWORK_CAPABILITY_TYPE_:int
{
	FWPM_APPC_NETWORK_CAPABILITY_INTERNET_CLIENT = 0x0,
	FWPM_APPC_NETWORK_CAPABILITY_INTERNET_CLIENT_SERVER = 0x1,
	FWPM_APPC_NETWORK_CAPABILITY_INTERNET_PRIVATE_NETWORK = 0x2
};

enum class FWP_VSWITCH_NETWORK_TYPE_:int
{
	FWP_VSWITCH_NETWORK_TYPE_UNKNOWN = 0x0,
	FWP_VSWITCH_NETWORK_TYPE_PRIVATE = 0x1,
	FWP_VSWITCH_NETWORK_TYPE_INTERNAL = 0x2,
	FWP_VSWITCH_NETWORK_TYPE_EXTERNAL = 0x3
};

enum class FWPS_BUILTIN_LAYERS_:int
{
	FWPS_LAYER_INBOUND_IPPACKET_V4 = 0x0,
	FWPS_LAYER_INBOUND_IPPACKET_V4_DISCARD = 0x1,
	FWPS_LAYER_INBOUND_IPPACKET_V6 = 0x2,
	FWPS_LAYER_INBOUND_IPPACKET_V6_DISCARD = 0x3,
	FWPS_LAYER_OUTBOUND_IPPACKET_V4 = 0x4,
	FWPS_LAYER_OUTBOUND_IPPACKET_V4_DISCARD = 0x5,
	FWPS_LAYER_OUTBOUND_IPPACKET_V6 = 0x6,
	FWPS_LAYER_OUTBOUND_IPPACKET_V6_DISCARD = 0x7,
	FWPS_LAYER_IPFORWARD_V4 = 0x8,
	FWPS_LAYER_IPFORWARD_V4_DISCARD = 0x9,
	FWPS_LAYER_IPFORWARD_V6 = 0xA,
	FWPS_LAYER_IPFORWARD_V6_DISCARD = 0xB,
	FWPS_LAYER_INBOUND_TRANSPORT_V4 = 0xC,
	FWPS_LAYER_INBOUND_TRANSPORT_V4_DISCARD = 0xD,
	FWPS_LAYER_INBOUND_TRANSPORT_V6 = 0xE,
	FWPS_LAYER_INBOUND_TRANSPORT_V6_DISCARD = 0xF,
	FWPS_LAYER_OUTBOUND_TRANSPORT_V4 = 0x10,
	FWPS_LAYER_OUTBOUND_TRANSPORT_V4_DISCARD = 0x11,
	FWPS_LAYER_OUTBOUND_TRANSPORT_V6 = 0x12,
	FWPS_LAYER_OUTBOUND_TRANSPORT_V6_DISCARD = 0x13,
	FWPS_LAYER_STREAM_V4 = 0x14,
	FWPS_LAYER_STREAM_V4_DISCARD = 0x15,
	FWPS_LAYER_STREAM_V6 = 0x16,
	FWPS_LAYER_STREAM_V6_DISCARD = 0x17,
	FWPS_LAYER_DATAGRAM_DATA_V4 = 0x18,
	FWPS_LAYER_DATAGRAM_DATA_V4_DISCARD = 0x19,
	FWPS_LAYER_DATAGRAM_DATA_V6 = 0x1A,
	FWPS_LAYER_DATAGRAM_DATA_V6_DISCARD = 0x1B,
	FWPS_LAYER_INBOUND_ICMP_ERROR_V4 = 0x1C,
	FWPS_LAYER_INBOUND_ICMP_ERROR_V4_DISCARD = 0x1D,
	FWPS_LAYER_INBOUND_ICMP_ERROR_V6 = 0x1E,
	FWPS_LAYER_INBOUND_ICMP_ERROR_V6_DISCARD = 0x1F,
	FWPS_LAYER_OUTBOUND_ICMP_ERROR_V4 = 0x20,
	FWPS_LAYER_OUTBOUND_ICMP_ERROR_V4_DISCARD = 0x21,
	FWPS_LAYER_OUTBOUND_ICMP_ERROR_V6 = 0x22,
	FWPS_LAYER_OUTBOUND_ICMP_ERROR_V6_DISCARD = 0x23,
	FWPS_LAYER_ALE_RESOURCE_ASSIGNMENT_V4 = 0x24,
	FWPS_LAYER_ALE_RESOURCE_ASSIGNMENT_V4_DISCARD = 0x25,
	FWPS_LAYER_ALE_RESOURCE_ASSIGNMENT_V6 = 0x26,
	FWPS_LAYER_ALE_RESOURCE_ASSIGNMENT_V6_DISCARD = 0x27,
	FWPS_LAYER_ALE_AUTH_LISTEN_V4 = 0x28,
	FWPS_LAYER_ALE_AUTH_LISTEN_V4_DISCARD = 0x29,
	FWPS_LAYER_ALE_AUTH_LISTEN_V6 = 0x2A,
	FWPS_LAYER_ALE_AUTH_LISTEN_V6_DISCARD = 0x2B,
	FWPS_LAYER_ALE_AUTH_RECV_ACCEPT_V4 = 0x2C,
	FWPS_LAYER_ALE_AUTH_RECV_ACCEPT_V4_DISCARD = 0x2D,
	FWPS_LAYER_ALE_AUTH_RECV_ACCEPT_V6 = 0x2E,
	FWPS_LAYER_ALE_AUTH_RECV_ACCEPT_V6_DISCARD = 0x2F,
	FWPS_LAYER_ALE_AUTH_CONNECT_V4 = 0x30,
	FWPS_LAYER_ALE_AUTH_CONNECT_V4_DISCARD = 0x31,
	FWPS_LAYER_ALE_AUTH_CONNECT_V6 = 0x32,
	FWPS_LAYER_ALE_AUTH_CONNECT_V6_DISCARD = 0x33,
	FWPS_LAYER_ALE_FLOW_ESTABLISHED_V4 = 0x34,
	FWPS_LAYER_ALE_FLOW_ESTABLISHED_V4_DISCARD = 0x35,
	FWPS_LAYER_ALE_FLOW_ESTABLISHED_V6 = 0x36,
	FWPS_LAYER_ALE_FLOW_ESTABLISHED_V6_DISCARD = 0x37,
	FWPS_LAYER_INBOUND_MAC_FRAME_ETHERNET = 0x38,
	FWPS_LAYER_OUTBOUND_MAC_FRAME_ETHERNET = 0x39,
	FWPS_LAYER_INBOUND_MAC_FRAME_NATIVE = 0x3A,
	FWPS_LAYER_OUTBOUND_MAC_FRAME_NATIVE = 0x3B,
	FWPS_LAYER_NAME_RESOLUTION_CACHE_V4 = 0x3C,
	FWPS_LAYER_NAME_RESOLUTION_CACHE_V6 = 0x3D,
	FWPS_LAYER_ALE_RESOURCE_RELEASE_V4 = 0x3E,
	FWPS_LAYER_ALE_RESOURCE_RELEASE_V6 = 0x3F,
	FWPS_LAYER_ALE_ENDPOINT_CLOSURE_V4 = 0x40,
	FWPS_LAYER_ALE_ENDPOINT_CLOSURE_V6 = 0x41,
	FWPS_LAYER_ALE_CONNECT_REDIRECT_V4 = 0x42,
	FWPS_LAYER_ALE_CONNECT_REDIRECT_V6 = 0x43,
	FWPS_LAYER_ALE_BIND_REDIRECT_V4 = 0x44,
	FWPS_LAYER_ALE_BIND_REDIRECT_V6 = 0x45,
	FWPS_LAYER_STREAM_PACKET_V4 = 0x46,
	FWPS_LAYER_STREAM_PACKET_V6 = 0x47,
	FWPS_LAYER_INGRESS_VSWITCH_ETHERNET = 0x48,
	FWPS_LAYER_EGRESS_VSWITCH_ETHERNET = 0x49,
	FWPS_LAYER_INGRESS_VSWITCH_TRANSPORT_V4 = 0x4A,
	FWPS_LAYER_INGRESS_VSWITCH_TRANSPORT_V6 = 0x4B,
	FWPS_LAYER_EGRESS_VSWITCH_TRANSPORT_V4 = 0x4C,
	FWPS_LAYER_EGRESS_VSWITCH_TRANSPORT_V6 = 0x4D,
	FWPS_LAYER_INBOUND_TRANSPORT_FAST = 0x4E,
	FWPS_LAYER_OUTBOUND_TRANSPORT_FAST = 0x4F,
	FWPS_LAYER_INBOUND_MAC_FRAME_NATIVE_FAST = 0x50,
	FWPS_LAYER_OUTBOUND_MAC_FRAME_NATIVE_FAST = 0x51,
	FWPS_LAYER_RESERVED_LAYER_1 = 0x52,
	FWPS_LAYER_RESERVED_LAYER_2 = 0x53,
	FWPS_LAYER_RESERVED_LAYER_3 = 0x54,
	FWPS_LAYER_RESERVED_LAYER_4 = 0x55,
	FWPS_LAYER_RESERVED_LAYER_5 = 0x56,
	FWPS_LAYER_RESERVED_LAYER_6 = 0x57,
	FWPS_LAYER_RESERVED_LAYER_7 = 0x58,
	FWPS_LAYER_RESERVED_LAYER_8 = 0x59,
	FWPS_LAYER_INBOUND_RESERVED2 = 0x5A,
	FWPS_LAYER_IPSEC_KM_DEMUX_V4 = 0x5B,
	FWPS_LAYER_IPSEC_KM_DEMUX_V6 = 0x5C,
	FWPS_LAYER_IPSEC_V4 = 0x5D,
	FWPS_LAYER_IPSEC_V6 = 0x5E,
	FWPS_LAYER_IKEEXT_V4 = 0x5F,
	FWPS_LAYER_IKEEXT_V6 = 0x60,
	FWPS_LAYER_RPC_UM = 0x61,
	FWPS_LAYER_RPC_EPMAP = 0x62,
	FWPS_LAYER_RPC_EP_ADD = 0x63,
	FWPS_LAYER_RPC_PROXY_CONN = 0x64,
	FWPS_LAYER_RPC_PROXY_IF = 0x65,
	FWPS_LAYER_KM_AUTHORIZATION = 0x66,
	FWPS_BUILTIN_LAYER_MAX = 0x67
};

enum class IKEEXT_QM_SA_STATE_:int
{
	IKEEXT_QM_SA_STATE_NONE = 0x0,
	IKEEXT_QM_SA_STATE_INITIAL = 0x1,
	IKEEXT_QM_SA_STATE_FINAL = 0x2,
	IKEEXT_QM_SA_STATE_COMPLETE = 0x3,
	IKEEXT_QM_SA_STATE_MAX = 0x4
};

enum class IPSEC_AUTH_TYPE_:int
{
	IPSEC_AUTH_MD5 = 0x0,
	IPSEC_AUTH_SHA_1 = 0x1,
	IPSEC_AUTH_SHA_256 = 0x2,
	IPSEC_AUTH_AES_128 = 0x3,
	IPSEC_AUTH_AES_192 = 0x4,
	IPSEC_AUTH_AES_256 = 0x5,
	IPSEC_AUTH_MAX = 0x6
};

enum class DL_ADDRESS_TYPE:int
{
	DlUnicast = 0x0,
	DlMulticast = 0x1,
	DlBroadcast = 0x2
};

enum class IKEEXT_CERT_CRITERIA_NAME_TYPE_:int
{
	IKEEXT_CERT_CRITERIA_DNS = 0x0,
	IKEEXT_CERT_CRITERIA_UPN = 0x1,
	IKEEXT_CERT_CRITERIA_RFC822 = 0x2,
	IKEEXT_CERT_CRITERIA_CN = 0x3,
	IKEEXT_CERT_CRITERIA_OU = 0x4,
	IKEEXT_CERT_CRITERIA_O = 0x5,
	IKEEXT_CERT_CRITERIA_DC = 0x6,
	IKEEXT_CERT_CRITERIA_NAME_TYPE_MAX = 0x7
};

enum class _INTERFACE_TYPE:int
{
	InterfaceTypeUndefined = 0xFF,
	Internal = 0x0,
	Isa = 0x1,
	Eisa = 0x2,
	MicroChannel = 0x3,
	TurboChannel = 0x4,
	PCIBus = 0x5,
	VMEBus = 0x6,
	NuBus = 0x7,
	PCMCIABus = 0x8,
	CBus = 0x9,
	MPIBus = 0xA,
	MPSABus = 0xB,
	ProcessorInternal = 0xC,
	InternalPowerBus = 0xD,
	PNPISABus = 0xE,
	PNPBus = 0xF,
	Vmcs = 0x10,
	ACPIBus = 0x11,
	MaximumInterfaceType = 0x12
};

enum class FWPM_CHANGE_TYPE_:int
{
	FWPM_CHANGE_ADD = 0x1,
	FWPM_CHANGE_DELETE = 0x2,
	FWPM_CHANGE_TYPE_MAX = 0x3
};

enum class FWPS_ALE_PORT_STATUS0_:int
{
	FWPS_ALE_PORT_STATUS_OPEN = 0x0,
	FWPS_ALE_PORT_STATUS_CLOSE = 0x1,
	FWPS_ALE_PORT_STATUS_UNKNOWN = 0x2,
	FWPS_ALE_PORT_STATUS_MAX = 0x3
};

enum class WFP_VPN_EVENT_TYPE_:int
{
	WfpFilePathTriggerIncrement = 0x1,
	WfpFilePathTriggerDecrement = 0x2,
	WfpAppSidTriggerIncrement = 0x3,
	WfpAppSidTriggerDecrement = 0x4,
	WfpSecurityDescriptorTriggerIncrement = 0x5,
	WfpSecurityDescriptorTriggerDecrement = 0x6,
	WfpNrptTriggerIncrement = 0x7,
	WfpNrptTriggerDecrement = 0x8,
	WfpFlowTriggerIncrement = 0x9,
	WfpFlowTriggerDecrement = 0xA,
	WfpConnectFromDisconnect = 0xB,
	WfpDisconnectAfterDebounce = 0xC
};

enum class TCP_UPLOAD_REASON:int
{
	LowActivity = 0x1,
	HighDropRate = 0x2,
	SmallIO = 0x3,
	NoBufferPreposting = 0x4,
	NoBufferProposting = 0x4,
	ReceivedUrgentData = 0x5,
	HighFragmentation = 0x6,
	HighOutOfOrderPackets = 0x7,
	TimeoutExpiration = 0x8,
	InvalidState = 0x9,
	UploadRequested = 0xA,
	HardwareFailure = 0xB,
	MaxUploadReason = 0xC
};

enum class _NPI_MODULEID_TYPE:int
{
	MIT_GUID = 0x1,
	MIT_IF_LUID = 0x2
};

enum class FWPM_SERVICE_STATE_:int
{
	FWPM_SERVICE_STOPPED = 0x0,
	FWPM_SERVICE_START_PENDING = 0x1,
	FWPM_SERVICE_STOP_PENDING = 0x2,
	FWPM_SERVICE_RUNNING = 0x3,
	FWPM_SERVICE_STATE_MAX = 0x4
};

enum class _POOL_TYPE:int
{
	NonPagedPool = 0x0,
	NonPagedPoolExecute = 0x0,
	PagedPool = 0x1,
	NonPagedPoolMustSucceed = 0x2,
	DontUseThisType = 0x3,
	NonPagedPoolCacheAligned = 0x4,
	PagedPoolCacheAligned = 0x5,
	NonPagedPoolCacheAlignedMustS = 0x6,
	MaxPoolType = 0x7,
	NonPagedPoolBase = 0x0,
	NonPagedPoolBaseMustSucceed = 0x2,
	NonPagedPoolBaseCacheAligned = 0x4,
	NonPagedPoolBaseCacheAlignedMustS = 0x6,
	NonPagedPoolSession = 0x20,
	PagedPoolSession = 0x21,
	NonPagedPoolMustSucceedSession = 0x22,
	DontUseThisTypeSession = 0x23,
	NonPagedPoolCacheAlignedSession = 0x24,
	PagedPoolCacheAlignedSession = 0x25,
	NonPagedPoolCacheAlignedMustSSession = 0x26,
	NonPagedPoolNx = 0x200,
	NonPagedPoolNxCacheAligned = 0x204,
	NonPagedPoolSessionNx = 0x220
};

enum class IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE_:int
{
	IKEEXT_IMPERSONATION_NONE = 0x0,
	IKEEXT_IMPERSONATION_SOCKET_PRINCIPAL = 0x1,
	IKEEXT_IMPERSONATION_MAX = 0x2
};

enum class IKEEXT_EM_SA_STATE_:int
{
	IKEEXT_EM_SA_STATE_NONE = 0x0,
	IKEEXT_EM_SA_STATE_SENT_ATTS = 0x1,
	IKEEXT_EM_SA_STATE_SSPI_SENT = 0x2,
	IKEEXT_EM_SA_STATE_AUTH_COMPLETE = 0x3,
	IKEEXT_EM_SA_STATE_FINAL = 0x4,
	IKEEXT_EM_SA_STATE_COMPLETE = 0x5,
	IKEEXT_EM_SA_STATE_MAX = 0x6
};

enum class IPSEC_CIPHER_TYPE_:int
{
	IPSEC_CIPHER_TYPE_DES = 0x1,
	IPSEC_CIPHER_TYPE_3DES = 0x2,
	IPSEC_CIPHER_TYPE_AES_128 = 0x3,
	IPSEC_CIPHER_TYPE_AES_192 = 0x4,
	IPSEC_CIPHER_TYPE_AES_256 = 0x5,
	IPSEC_CIPHER_TYPE_MAX = 0x6
};

enum class _MODE:int
{
	KernelMode = 0x0,
	UserMode = 0x1,
	MaximumMode = 0x2
};

enum class FWP_FILTER_ENUM_TYPE_:int
{
	FWP_FILTER_ENUM_FULLY_CONTAINED = 0x0,
	FWP_FILTER_ENUM_OVERLAPPING = 0x1,
	FWP_FILTER_ENUM_TYPE_MAX = 0x2
};

enum class IKEEXT_INTEGRITY_TYPE_:int
{
	IKEEXT_INTEGRITY_MD5 = 0x0,
	IKEEXT_INTEGRITY_SHA1 = 0x1,
	IKEEXT_INTEGRITY_SHA_256 = 0x2,
	IKEEXT_INTEGRITY_SHA_384 = 0x3,
	IKEEXT_INTEGRITY_TYPE_MAX = 0x4
};

enum class FWPM_ENGINE_OPTION_:int
{
	FWPM_ENGINE_COLLECT_NET_EVENTS = 0x0,
	FWPM_ENGINE_NET_EVENT_MATCH_ANY_KEYWORDS = 0x1,
	FWPM_ENGINE_NAME_CACHE = 0x2,
	FWPM_ENGINE_MONITOR_IPSEC_CONNECTIONS = 0x3,
	FWPM_ENGINE_PACKET_QUEUING = 0x4,
	FWPM_ENGINE_TXN_WATCHDOG_TIMEOUT_IN_MSEC = 0x5,
	FWPM_ENGINE_OPTION_MAX = 0x6
};

enum class _INTERLOCKED_RESULT:int
{
	ResultNegative = 0x1,
	ResultZero = 0x0,
	ResultPositive = 0x2
};

enum class FWP_CLASSIFY_OPTION_TYPE_:int
{
	FWP_CLASSIFY_OPTION_MULTICAST_STATE = 0x0,
	FWP_CLASSIFY_OPTION_LOOSE_SOURCE_MAPPING = 0x1,
	FWP_CLASSIFY_OPTION_UNICAST_LIFETIME = 0x2,
	FWP_CLASSIFY_OPTION_MCAST_BCAST_LIFETIME = 0x3,
	FWP_CLASSIFY_OPTION_SECURE_SOCKET_SECURITY_FLAGS = 0x4,
	FWP_CLASSIFY_OPTION_SECURE_SOCKET_AUTHIP_MM_POLICY_KEY = 0x5,
	FWP_CLASSIFY_OPTION_SECURE_SOCKET_AUTHIP_QM_POLICY_KEY = 0x6,
	FWP_CLASSIFY_OPTION_LOCAL_ONLY_MAPPING = 0x7,
	FWP_CLASSIFY_OPTION_MAX = 0x8
};

enum class FWPM_FIELD_TYPE_:int
{
	FWPM_FIELD_RAW_DATA = 0x0,
	FWPM_FIELD_IP_ADDRESS = 0x1,
	FWPM_FIELD_FLAGS = 0x2,
	FWPM_FIELD_TYPE_MAX = 0x3
};

enum class IPSEC_TRANSFORM_TYPE_:int
{
	IPSEC_TRANSFORM_AH = 0x1,
	IPSEC_TRANSFORM_ESP_AUTH = 0x2,
	IPSEC_TRANSFORM_ESP_CIPHER = 0x3,
	IPSEC_TRANSFORM_ESP_AUTH_AND_CIPHER = 0x4,
	IPSEC_TRANSFORM_ESP_AUTH_FW = 0x5,
	IPSEC_TRANSFORM_TYPE_MAX = 0x6
};

enum class FWPP_SUBLAYER_INTERNAL_:int
{
	FWPP_SUBLAYER_INTERNAL_INSPECTION = 0x0,
	FWPP_SUBLAYER_INTERNAL_TEREDO = 0x1,
	FWPP_SUBLAYER_INTERNAL_FIREWALL_WF = 0x2,
	FWPP_SUBLAYER_INTERNAL_FIREWALL_WSH = 0x3,
	FWPP_SUBLAYER_INTERNAL_FIREWALL_QUARANTINE = 0x4
};

enum class FWPS_GENERAL_DISCARD_REASON_:int
{
	FWPS_DISCARD_FIREWALL_POLICY = 0x0,
	FWPS_DISCARD_IPSEC = 0x1,
	FWPS_GENERAL_DISCARD_REASON_MAX = 0x2
};

enum class IKEEXT_KEY_MODULE_TYPE_:int
{
	IKEEXT_KEY_MODULE_IKE = 0x0,
	IKEEXT_KEY_MODULE_AUTHIP = 0x1,
	IKEEXT_KEY_MODULE_IKEV2 = 0x2,
	IKEEXT_KEY_MODULE_MAX = 0x3
};

enum class _EVENT_TYPE:int
{
	NotificationEvent = 0x0,
	SynchronizationEvent = 0x1
};

enum class FWPM_NET_FAILURE_CAUSE_:int
{
	FWPM_NET_FAILURE_UNKNOWN = 0x0,
	FWPM_NET_FAILURE_WRONG_COMPARTMENT = 0x1,
	FWPM_NET_FAILURE_AUTHIP = 0x2,
	FWPM_NET_FAILURE_CAUSE_MAX = 0x3
};

enum class NETIO_TRIAGE_BLOCK_ID:int
{
	NetioTriageBlockIdNDIS = 0x0,
	NetioTriageBlockIdTCPIP = 0x1,
	NetioTriageBlockIdAFD = 0x2,
	NetioTriageBlockIdMAX = 0x3
};

enum class IPSEC_FAILURE_POINT_:int
{
	IPSEC_FAILURE_NONE = 0x0,
	IPSEC_FAILURE_ME = 0x1,
	IPSEC_FAILURE_PEER = 0x2,
	IPSEC_FAILURE_POINT_MAX = 0x3
};

enum class IPSEC_TOKEN_PRINCIPAL_:int
{
	IPSEC_TOKEN_PRINCIPAL_LOCAL = 0x0,
	IPSEC_TOKEN_PRINCIPAL_PEER = 0x1,
	IPSEC_TOKEN_PRINCIPAL_MAX = 0x2
};

enum class FWP_DIRECTION_:int
{
	FWP_DIRECTION_OUTBOUND = 0x0,
	FWP_DIRECTION_INBOUND = 0x1,
	FWP_DIRECTION_MAX = 0x2
};

enum class FWPS_DISCARD_MODULE0_:int
{
	FWPS_DISCARD_MODULE_NETWORK = 0x0,
	FWPS_DISCARD_MODULE_TRANSPORT = 0x1,
	FWPS_DISCARD_MODULE_GENERAL = 0x2,
	FWPS_DISCARD_MODULE_MAX = 0x3
};

/*enum class SCOPE_LEVEL :int
{
	ScopeLevelInterface = 0x1,
	ScopeLevelLink = 0x2,
	ScopeLevelSubnet = 0x3,
	ScopeLevelAdmin = 0x4,
	ScopeLevelSite = 0x5,
	ScopeLevelOrganization = 0x8,
	ScopeLevelGlobal = 0xE,
	ScopeLevelCount = 0x10
};*/

enum class IPSEC_TOKEN_TYPE_:int
{
	IPSEC_TOKEN_TYPE_MACHINE = 0x0,
	IPSEC_TOKEN_TYPE_IMPERSONATION = 0x1,
	IPSEC_TOKEN_TYPE_MAX = 0x2
};

enum class IKEEXT_SA_ROLE_:int
{
	IKEEXT_SA_ROLE_INITIATOR = 0x0,
	IKEEXT_SA_ROLE_RESPONDER = 0x1,
	IKEEXT_SA_ROLE_MAX = 0x2
};

enum class IPSEC_TOKEN_MODE_:int
{
	IPSEC_TOKEN_MODE_MAIN = 0x0,
	IPSEC_TOKEN_MODE_EXTENDED = 0x1,
	IPSEC_TOKEN_MODE_MAX = 0x2
};

enum class IPSEC_SA_CONTEXT_EVENT_TYPE0_:int
{
	IPSEC_SA_CONTEXT_EVENT_ADD = 0x1,
	IPSEC_SA_CONTEXT_EVENT_DELETE = 0x2,
	IPSEC_SA_CONTEXT_EVENT_MAX = 0x3
};

enum class FWPS_NET_BUFFER_LIST_EVENT_TYPE0_:int
{
	FWPS_NET_BUFFER_LIST_ENTERED_NETIO = 0x0,
	FWPS_NET_BUFFER_LIST_CLONED_BY_NETIO = 0x1,
	FWPS_NET_BUFFER_LIST_CLONED_VIA_WFP_API = 0x2,
	FWPS_NET_BUFFER_LIST_DUPLICATED_BY_NETIO = 0x3,
	FWPS_NET_BUFFER_LIST_EXIT_NETIO = 0x4,
	FWPS_NET_BUFFER_LIST_CONTEXT_REMOVED = 0x5,
	FWPS_NET_BUFFER_LIST_NDIS_SEND_COMPLETE = 0x6,
	FWPS_NET_BUFFER_LIST_NDIS_RECV_COMPLETE = 0x7,
	FWPS_NET_BUFFER_LIST_NDIS_ETHERNET_SEND_COMPLETE = 0x6,
	FWPS_NET_BUFFER_LIST_NDIS_ETHERNET_RECV_COMPLETE = 0x7,
	FWPS_NET_BUFFER_LIST_NDIS_NATIVE_SEND_COMPLETE = 0x8,
	FWPS_NET_BUFFER_LIST_NDIS_NATIVE_RECV_COMPLETE = 0x9,
	FWPS_NET_BUFFER_LIST_NDIS_VSWITCH_INGRESS_COMPLETE = 0xA,
	FWPS_NET_BUFFER_LIST_NDIS_VSWITCH_EGRESS_COMPLETE = 0xB,
	FWPS_NET_BUFFER_LIST_CLONED_BY_NDIS = 0xC,
	FWPS_NET_BUFFER_LIST_REASSEMBLED_FRAGMENT = 0xD,
	FWPS_NET_BUFFER_LIST_REASSEMBLY_COMPLETE = 0xE
};

enum class FWPS_CALLOUT_NOTIFY_TYPE_:int
{
	FWPS_CALLOUT_NOTIFY_ADD_FILTER = 0x0,
	FWPS_CALLOUT_NOTIFY_DELETE_FILTER = 0x1,
	FWPS_CALLOUT_NOTIFY_ADD_FILTER_POST_COMMIT = 0x2,
	FWPS_CALLOUT_NOTIFY_TYPE_MAX = 0x3
};

enum class IPSEC_TRAFFIC_TYPE_:int
{
	IPSEC_TRAFFIC_TYPE_TRANSPORT = 0x0,
	IPSEC_TRAFFIC_TYPE_TUNNEL = 0x1,
	IPSEC_TRAFFIC_TYPE_MAX = 0x2
};

enum class _MM_PAGE_PRIORITY:int
{
	LowPagePriority = 0x0,
	NormalPagePriority = 0x10,
	HighPagePriority = 0x20
};

enum class _FILE_INFORMATION_CLASS:int
{
	FileDirectoryInformation = 0x1,
	FileFullDirectoryInformation = 0x2,
	FileBothDirectoryInformation = 0x3,
	FileBasicInformation = 0x4,
	FileStandardInformation = 0x5,
	FileInternalInformation = 0x6,
	FileEaInformation = 0x7,
	FileAccessInformation = 0x8,
	FileNameInformation = 0x9,
	FileRenameInformation = 0xA,
	FileLinkInformation = 0xB,
	FileNamesInformation = 0xC,
	FileDispositionInformation = 0xD,
	FilePositionInformation = 0xE,
	FileFullEaInformation = 0xF,
	FileModeInformation = 0x10,
	FileAlignmentInformation = 0x11,
	FileAllInformation = 0x12,
	FileAllocationInformation = 0x13,
	FileEndOfFileInformation = 0x14,
	FileAlternateNameInformation = 0x15,
	FileStreamInformation = 0x16,
	FilePipeInformation = 0x17,
	FilePipeLocalInformation = 0x18,
	FilePipeRemoteInformation = 0x19,
	FileMailslotQueryInformation = 0x1A,
	FileMailslotSetInformation = 0x1B,
	FileCompressionInformation = 0x1C,
	FileObjectIdInformation = 0x1D,
	FileCompletionInformation = 0x1E,
	FileMoveClusterInformation = 0x1F,
	FileQuotaInformation = 0x20,
	FileReparsePointInformation = 0x21,
	FileNetworkOpenInformation = 0x22,
	FileAttributeTagInformation = 0x23,
	FileTrackingInformation = 0x24,
	FileIdBothDirectoryInformation = 0x25,
	FileIdFullDirectoryInformation = 0x26,
	FileValidDataLengthInformation = 0x27,
	FileShortNameInformation = 0x28,
	FileIoCompletionNotificationInformation = 0x29,
	FileIoStatusBlockRangeInformation = 0x2A,
	FileIoPriorityHintInformation = 0x2B,
	FileSfioReserveInformation = 0x2C,
	FileSfioVolumeInformation = 0x2D,
	FileHardLinkInformation = 0x2E,
	FileProcessIdsUsingFileInformation = 0x2F,
	FileNormalizedNameInformation = 0x30,
	FileNetworkPhysicalNameInformation = 0x31,
	FileIdGlobalTxDirectoryInformation = 0x32,
	FileIsRemoteDeviceInformation = 0x33,
	FileUnusedInformation = 0x34,
	FileNumaNodeInformation = 0x35,
	FileStandardLinkInformation = 0x36,
	FileRemoteProtocolInformation = 0x37,
	FileRenameInformationBypassAccessCheck = 0x38,
	FileLinkInformationBypassAccessCheck = 0x39,
	FileVolumeNameInformation = 0x3A,
	FileIdInformation = 0x3B,
	FileIdExtdDirectoryInformation = 0x3C,
	FileReplaceCompletionInformation = 0x3D,
	FileHardLinkFullIdInformation = 0x3E,
	FileIdExtdBothDirectoryInformation = 0x3F,
	FileDispositionInformationEx = 0x40,
	FileRenameInformationEx = 0x41,
	FileRenameInformationExBypassAccessCheck = 0x42,
	FileDesiredStorageClassInformation = 0x43,
	FileStatInformation = 0x44,
	FileMemoryPartitionInformation = 0x45,
	FileStatLxInformation = 0x46,
	FileCaseSensitiveInformation = 0x47,
	FileLinkInformationEx = 0x48,
	FileLinkInformationExBypassAccessCheck = 0x49,
	FileStorageReserveIdInformation = 0x4A,
	FileCaseSensitiveInformationForceAccessCheck = 0x4B,
	FileMaximumInformation = 0x4C
};

enum class _DIRECTORY_NOTIFY_INFORMATION_CLASS:int
{
	DirectoryNotifyInformation = 0x1,
	DirectoryNotifyExtendedInformation = 0x2
};

enum class _FSINFOCLASS:int
{
	FileFsVolumeInformation = 0x1,
	FileFsLabelInformation = 0x2,
	FileFsSizeInformation = 0x3,
	FileFsDeviceInformation = 0x4,
	FileFsAttributeInformation = 0x5,
	FileFsControlInformation = 0x6,
	FileFsFullSizeInformation = 0x7,
	FileFsObjectIdInformation = 0x8,
	FileFsDriverPathInformation = 0x9,
	FileFsVolumeFlagsInformation = 0xA,
	FileFsSectorSizeInformation = 0xB,
	FileFsDataCopyInformation = 0xC,
	FileFsMetadataSizeInformation = 0xD,
	FileFsFullSizeInformationEx = 0xE,
	FileFsMaximumInformation = 0xF
};

enum class BUS_QUERY_ID_TYPE:int
{
	BusQueryDeviceID = 0x0,
	BusQueryHardwareIDs = 0x1,
	BusQueryCompatibleIDs = 0x2,
	BusQueryInstanceID = 0x3,
	BusQueryDeviceSerialNumber = 0x4,
	BusQueryContainerID = 0x5
};

enum class DEVICE_TEXT_TYPE:int
{
	DeviceTextDescription = 0x0,
	DeviceTextLocationInformation = 0x1
};

enum class DMA_COMPLETION_STATUS:int
{
	DmaComplete = 0x0,
	DmaAborted = 0x1,
	DmaError = 0x2,
	DmaCancelled = 0x3
};

enum class _WHEA_ERROR_PACKET_DATA_FORMAT:int
{
	WheaDataFormatIPFSalRecord = 0x0,
	WheaDataFormatXPFMCA = 0x1,
	WheaDataFormatMemory = 0x2,
	WheaDataFormatPCIExpress = 0x3,
	WheaDataFormatNMIPort = 0x4,
	WheaDataFormatPCIXBus = 0x5,
	WheaDataFormatPCIXDevice = 0x6,
	WheaDataFormatGeneric = 0x7,
	WheaDataFormatMax = 0x8
};

enum class _IO_ALLOCATION_ACTION:int
{
	KeepObject = 0x1,
	DeallocateObject = 0x2,
	DeallocateObjectKeepRegisters = 0x3
};

enum class _WHEA_ERROR_TYPE:int
{
	WheaErrTypeProcessor = 0x0,
	WheaErrTypeMemory = 0x1,
	WheaErrTypePCIExpress = 0x2,
	WheaErrTypeNMI = 0x3,
	WheaErrTypePCIXBus = 0x4,
	WheaErrTypePCIXDevice = 0x5,
	WheaErrTypeGeneric = 0x6,
	WheaErrTypePmem = 0x7
};

enum class _WHEA_ERROR_SEVERITY:int
{
	WheaErrSevRecoverable = 0x0,
	WheaErrSevFatal = 0x1,
	WheaErrSevCorrected = 0x2,
	WheaErrSevInformational = 0x3
};

enum class _WHEA_ERROR_SOURCE_TYPE:int
{
	WheaErrSrcTypeMCE = 0x0,
	WheaErrSrcTypeCMC = 0x1,
	WheaErrSrcTypeCPE = 0x2,
	WheaErrSrcTypeNMI = 0x3,
	WheaErrSrcTypePCIe = 0x4,
	WheaErrSrcTypeGeneric = 0x5,
	WheaErrSrcTypeINIT = 0x6,
	WheaErrSrcTypeBOOT = 0x7,
	WheaErrSrcTypeSCIGeneric = 0x8,
	WheaErrSrcTypeIPFMCA = 0x9,
	WheaErrSrcTypeIPFCMC = 0xA,
	WheaErrSrcTypeIPFCPE = 0xB,
	WheaErrSrcTypeGenericV2 = 0xC,
	WheaErrSrcTypeSCIGenericV2 = 0xD,
	WheaErrSrcTypeBMC = 0xE,
	WheaErrSrcTypePMEM = 0xF,
	WheaErrSrcTypeDeviceDriver = 0x10,
	WheaErrSrcTypeMax = 0x11
};

enum class _WHEA_EVENT_LOG_ENTRY_TYPE:int
{
	WheaEventLogEntryTypeInformational = 0x0,
	WheaEventLogEntryTypeWarning = 0x1,
	WheaEventLogEntryTypeError = 0x2
};

/*enum class IPPROTO :int
{
	IPPROTO_HOPOPTS = 0x0,
	IPPROTO_ICMP = 0x1,
	IPPROTO_IGMP = 0x2,
	IPPROTO_GGP = 0x3,
	IPPROTO_IPV4 = 0x4,
	IPPROTO_ST = 0x5,
	IPPROTO_TCP = 0x6,
	IPPROTO_CBT = 0x7,
	IPPROTO_EGP = 0x8,
	IPPROTO_IGP = 0x9,
	IPPROTO_PUP = 0xC,
	IPPROTO_UDP = 0x11,
	IPPROTO_IDP = 0x16,
	IPPROTO_RDP = 0x1B,
	IPPROTO_IPV6 = 0x29,
	IPPROTO_ROUTING = 0x2B,
	IPPROTO_FRAGMENT = 0x2C,
	IPPROTO_ESP = 0x32,
	IPPROTO_AH = 0x33,
	IPPROTO_ICMPV6 = 0x3A,
	IPPROTO_NONE = 0x3B,
	IPPROTO_DSTOPTS = 0x3C,
	IPPROTO_ND = 0x4D,
	IPPROTO_ICLFXBM = 0x4E,
	IPPROTO_PIM = 0x67,
	IPPROTO_PGM = 0x71,
	IPPROTO_L2TP = 0x73,
	IPPROTO_SCTP = 0x84,
	IPPROTO_RAW = 0xFF,
	IPPROTO_MAX = 0x100,
	IPPROTO_RESERVED_RAW = 0x101,
	IPPROTO_RESERVED_IPSEC = 0x102,
	IPPROTO_RESERVED_IPSECOFFLOAD = 0x103,
	IPPROTO_RESERVED_WNV = 0x104,
	IPPROTO_RESERVED_MAX = 0x105
};*/

enum class FWPS_NET_BUFFER_LIST_TYPE_:int
{
	FWPS_NBL_TYPE_ALLOCATED_BY_WFP = 0x0,
	FWPS_NBL_TYPE_CLONED_BY_WFP = 0x1,
	FWPS_NBL_TYPE_REFERENCED_BY_WFP = 0x2,
	FWPS_NBL_TYPE_MAX = 0x3
};

enum class CHANNELOPTIONS:int
{
	SupportsReliableDelivery = 0x0,
	TypeOfService = 0x1,
	EnablePacing = 0x2,
	LastChannelOption = 0x32
};

enum class ContentTypes:int
{
	ContentTypes_Unknown = 0x0,
	ContentTypes_Video = 0x1,
	ContentTypes_Audio = 0x2,
	ContentTypes_Image = 0x4,
	ContentTypes_All = 0x7
};

enum class _PhotoMode:int
{
	PhotoMode_Normal = 0x0,
	PhotoMode_PhotoSequence = 0x1,
	PhotoMode_VariablePhotoSequence = 0x2,
	PhotoMode_AdvancedPhoto = 0x3,
	PhotoMode_Undefined = 0x4
};

enum class _BasicControlMode_e:int
{
	BasicControlMode_Manual = 0x0,
	BasicControlMode_Auto = 0x1
};

enum class _SAR_STREAM_INVALIDATION_EVENT_TYPE:int
{
	SAR_STREAM_INVALIDATION_EVENT_DEVICE_REMOVED = 0x0,
	SAR_STREAM_INVALIDATION_EVENT_DEFAULT_DEVICE_CHANGED = 0x1,
	SAR_STREAM_INVALIDATION_EVENT_OFFLOAD_RESOURCE_LOST = 0x2
};

enum class _DATA_PACER_EVENT:int
{
	Start = 0x0,
	Pause = 0x1,
	Resume = 0x2
};

enum class WINDOWCOMPOSITIONATTRIB:int
{
	WCA_UNDEFINED = 0x0,
	WCA_NCRENDERING_ENABLED = 0x1,
	WCA_NCRENDERING_POLICY = 0x2,
	WCA_TRANSITIONS_FORCEDISABLED = 0x3,
	WCA_ALLOW_NCPAINT = 0x4,
	WCA_CAPTION_BUTTON_BOUNDS = 0x5,
	WCA_NONCLIENT_RTL_LAYOUT = 0x6,
	WCA_FORCE_ICONIC_REPRESENTATION = 0x7,
	WCA_EXTENDED_FRAME_BOUNDS = 0x8,
	WCA_HAS_ICONIC_BITMAP = 0x9,
	WCA_THEME_ATTRIBUTES = 0xA,
	WCA_NCRENDERING_EXILED = 0xB,
	WCA_NCADORNMENTINFO = 0xC,
	WCA_EXCLUDED_FROM_LIVEPREVIEW = 0xD,
	WCA_VIDEO_OVERLAY_ACTIVE = 0xE,
	WCA_FORCE_ACTIVEWINDOW_APPEARANCE = 0xF,
	WCA_DISALLOW_PEEK = 0x10,
	WCA_CLOAK = 0x11,
	WCA_CLOAKED = 0x12,
	WCA_ACCENT_POLICY = 0x13,
	WCA_FREEZE_REPRESENTATION = 0x14,
	WCA_EVER_UNCLOAKED = 0x15,
	WCA_VISUAL_OWNER = 0x16,
	WCA_HOLOGRAPHIC = 0x17,
	WCA_EXCLUDED_FROM_DDA = 0x18,
	WCA_PASSIVEUPDATEMODE = 0x19,
	WCA_LAST = 0x1A
};

enum class WINDOWTHEMEATTRIBUTETYPE:int
{
	WTA_NONCLIENT = 0x1
};

enum class DIT_HITTESTATTRIBUTES:int
{
	DIT_HITTESTATTRIBUTES_NONE = 0x0,
	DIT_HITTESTATTRIBUTES_MOUSEWHEEL = 0x1,
	DIT_HITTESTATTRIBUTES_MOUSEWHEELISINCREASING = 0x2,
	DIT_HITTESTATTRIBUTES_MOUSEWHEELISHORIZONTAL = 0x4,
	DIT_HITTESTATTRIBUTES_MOUSEBUTTONDOWN = 0x8,
	DIT_HITTESTATTRIBUTES_TOUCHTARGETING = 0x10,
	DIT_HITTESTATTRIBUTES_NOHOVERPOINTER = 0x20,
	DIT_HITTESTATTRIBUTES_BARRELBUTTONDOWN = 0x40,
	DIT_HITTESTATTRIBUTES_ERASERDOWN = 0x80,
	DIT_HITTESTATTRIBUTES_CONTROLDOWN = 0x100,
	DIT_HITTESTATTRIBUTES_VALID = 0xFF
};

enum class MONITOR_DPI_TYPE:int
{
	MDT_EFFECTIVE_DPI = 0x0,
	MDT_ANGULAR_DPI = 0x1,
	MDT_RAW_DPI = 0x2,
	MDT_DEFAULT = 0x0
};

enum class GROUP_WINDOW_ROLE:int
{
	GWR_DEFAULT = 0x0,
	GWR_APPLICATION = 0x1,
	GWR_FALLBACK = 0x2,
	GWR_MAX = 0x2
};

enum class SET_WINDOW_GROUP_OPTIONS:int
{
	SWGO_NONE = 0x0,
	SWGO_TEMPLATE = 0x1,
	SWGO_NOZORDER = 0x2,
	SWGO_RESPECT_MINIMIZE = 0x4,
	SWGO_ALL = 0x3
};

enum class WICBitmapCreateCacheOption:int
{
	WICBitmapNoCache = 0x0,
	WICBitmapCacheOnDemand = 0x1,
	WICBitmapCacheOnLoad = 0x2,
	WICBITMAPCREATECACHEOPTION_FORCE_DWORD = 0x7FFFFFFF
};

enum class WICBitmapInterpolationMode:int
{
	WICBitmapInterpolationModeNearestNeighbor = 0x0,
	WICBitmapInterpolationModeLinear = 0x1,
	WICBitmapInterpolationModeCubic = 0x2,
	WICBitmapInterpolationModeFant = 0x3,
	WICBitmapInterpolationModeHighQualityCubic = 0x4,
	WICBITMAPINTERPOLATIONMODE_FORCE_DWORD = 0x7FFFFFFF
};

enum class WICBitmapDitherType:int
{
	WICBitmapDitherTypeNone = 0x0,
	WICBitmapDitherTypeSolid = 0x0,
	WICBitmapDitherTypeOrdered4x4 = 0x1,
	WICBitmapDitherTypeOrdered8x8 = 0x2,
	WICBitmapDitherTypeOrdered16x16 = 0x3,
	WICBitmapDitherTypeSpiral4x4 = 0x4,
	WICBitmapDitherTypeSpiral8x8 = 0x5,
	WICBitmapDitherTypeDualSpiral4x4 = 0x6,
	WICBitmapDitherTypeDualSpiral8x8 = 0x7,
	WICBitmapDitherTypeErrorDiffusion = 0x8,
	WICBITMAPDITHERTYPE_FORCE_DWORD = 0x7FFFFFFF
};

enum class WICBitmapAlphaChannelOption:int
{
	WICBitmapUseAlpha = 0x0,
	WICBitmapUsePremultipliedAlpha = 0x1,
	WICBitmapIgnoreAlpha = 0x2,
	WICBITMAPALPHACHANNELOPTIONS_FORCE_DWORD = 0x7FFFFFFF
};

enum class WICBitmapTransformOptions:int
{
	WICBitmapTransformRotate0 = 0x0,
	WICBitmapTransformRotate90 = 0x1,
	WICBitmapTransformRotate180 = 0x2,
	WICBitmapTransformRotate270 = 0x3,
	WICBitmapTransformFlipHorizontal = 0x8,
	WICBitmapTransformFlipVertical = 0x10,
	WICBITMAPTRANSFORMOPTIONS_FORCE_DWORD = 0x7FFFFFFF
};

enum class WICBitmapLockFlags:int
{
	WICBitmapLockRead = 0x1,
	WICBitmapLockWrite = 0x2,
	WICBITMAPLOCKFLAGS_FORCE_DWORD = 0x7FFFFFFF
};

enum class SPATIAL_INPUT_ACTIVATION_POLICY:int
{
	SIAP_ACTIVATE = 0x0,
	SIAP_NOACTIVATE = 0x1,
	SIAP_ACTIVATEIFAPPNOTINFOREGROUND = 0x2,
	SIAP_EAT = 0x4
};

enum class INPUTDELEGATION_MODE_FLAGS:int
{
	IDLM_OFF = 0x0,
	IDLM_KEYBOARD = 0x1,
	IDLM_SPATIAL = 0x2,
	IDLM_VALID_FLAGS = 0x3
};

enum class WICBitmapEncoderCacheOption:int
{
	WICBitmapEncoderCacheInMemory = 0x0,
	WICBitmapEncoderCacheTempFile = 0x1,
	WICBitmapEncoderNoCache = 0x2,
	WICBITMAPENCODERCACHEOPTION_FORCE_DWORD = 0x7FFFFFFF
};

enum class WICDecodeOptions:int
{
	WICDecodeMetadataCacheOnDemand = 0x0,
	WICDecodeMetadataCacheOnLoad = 0x1,
	WICMETADATACACHEOPTION_FORCE_DWORD = 0x7FFFFFFF
};

enum class INPUT_DESTINATION_ROUTING_MODE:int
{
	IDRM_DEFAULT = 0x0,
	IDRM_OBSERVE = 0x1,
	IDRM_ISM = 0x2,
	IDRM_ROUTE_TO_MT = 0x3
};

enum class GROUP_WINDOW_MANAGEMENT_POLICY:int
{
	GWMP_NONE = 0x0,
	GWMP_DELEGATE_CLOSE_REQUEST = 0x1
};

enum class WICComponentType:int
{
	WICDecoder = 0x1,
	WICEncoder = 0x2,
	WICPixelFormatConverter = 0x4,
	WICMetadataReader = 0x8,
	WICMetadataWriter = 0x10,
	WICPixelFormat = 0x20,
	WICAllComponents = 0x3F,
	WICCOMPONENTTYPE_FORCE_DWORD = 0x7FFFFFFF
};

enum class WICColorContextType:int
{
	WICColorContextUninitialized = 0x0,
	WICColorContextProfile = 0x1,
	WICColorContextExifColorSpace = 0x2
};

enum class INPUT_DESTINATION_IDENTITY:int
{
	IDID_NONE = 0x0,
	IDID_LUID = 0x1,
	IDID_INPUTROUTINGINFO = 0x2,
	IDID_WINDOW = 0x4
};

enum class EClassCastFlags:unsigned __int64
{
	CASTCLASS_None = 0x0,
	CASTCLASS_UField = 0x1,
	CASTCLASS_FInt8Property = 0x2,
	CASTCLASS_UEnum = 0x4,
	CASTCLASS_UStruct = 0x8,
	CASTCLASS_UScriptStruct = 0x10,
	CASTCLASS_UClass = 0x20,
	CASTCLASS_FByteProperty = 0x40,
	CASTCLASS_FIntProperty = 0x80,
	CASTCLASS_FFloatProperty = 0x100,
	CASTCLASS_FUInt64Property = 0x200,
	CASTCLASS_FClassProperty = 0x400,
	CASTCLASS_FUInt32Property = 0x800,
	CASTCLASS_FInterfaceProperty = 0x1000,
	CASTCLASS_FNameProperty = 0x2000,
	CASTCLASS_FStrProperty = 0x4000,
	CASTCLASS_FProperty = 0xFFFF8000,
	CASTCLASS_FObjectProperty = 0x10000,
	CASTCLASS_FBoolProperty = 0x20000,
	CASTCLASS_FUInt16Property = 0x40000,
	CASTCLASS_UFunction = 0x80000,
	CASTCLASS_FStructProperty = 0x100000,
	CASTCLASS_FArrayProperty = 0x200000,
	CASTCLASS_FInt64Property = 0x400000,
	CASTCLASS_FDelegateProperty = 0x800000,
	CASTCLASS_FNumericProperty = 0x1000000,
	CASTCLASS_FMulticastDelegateProperty = 0x2000000,
	CASTCLASS_FObjectPropertyBase = 0x4000000,
	CASTCLASS_FWeakObjectProperty = 0x8000000,
	CASTCLASS_FLazyObjectProperty = 0x10000000,
	CASTCLASS_FSoftObjectProperty = 0x20000000,
	CASTCLASS_FTextProperty = 0x40000000,
	CASTCLASS_FInt16Property = 0x80000000,

};

namespace EWorldType
{
	enum Type:int
	{
		None = 0x0,
		Game = 0x1,
		Editor = 0x2,
		PIE = 0x3,
		EditorPreview = 0x4,
		GamePreview = 0x5,
		GameRPC = 0x6,
		Inactive = 0x7
	};
}

enum class EClassFlags:unsigned __int64
{
	CLASS_None = 0x0,
	CLASS_Abstract = 0x1,
	CLASS_DefaultConfig = 0x2,
	CLASS_Config = 0x4,
	CLASS_Transient = 0x8,
	CLASS_Optional = 0x10,
	CLASS_MatchedSerializers = 0x20,
	CLASS_ProjectUserConfig = 0x40,
	CLASS_Native = 0x80,
	CLASS_NoExport = 0x100,
	CLASS_NotPlaceable = 0x200,
	CLASS_PerObjectConfig = 0x400,
	CLASS_ReplicationDataIsSetUp = 0x800,
	CLASS_EditInlineNew = 0x1000,
	CLASS_CollapseCategories = 0x2000,
	CLASS_Interface = 0x4000,
	CLASS_CustomConstructor = 0xFFFF8000,
	CLASS_Const = 0x10000,
	CLASS_NeedsDeferredDependencyLoading = 0x20000,
	CLASS_CompiledFromBlueprint = 0x40000,
	CLASS_MinimalAPI = 0x80000,
	CLASS_RequiredAPI = 0x100000,
	CLASS_DefaultToInstanced = 0x200000,
	CLASS_TokenStreamAssembled = 0x400000,
	CLASS_HasInstancedReference = 0x800000,
	CLASS_Hidden = 0x1000000,
	CLASS_Deprecated = 0x2000000,
	CLASS_HideDropDown = 0x4000000,
	CLASS_GlobalUserConfig = 0x8000000,
	CLASS_Intrinsic = 0x10000000,
	CLASS_Constructed = 0x20000000,
	CLASS_ConfigDoNotCheckDefaults = 0x40000000,
	CLASS_NewerVersionExists = 0x80000000
};

enum class EInternal:int
{
	EC_InternalUseOnlyConstructor = 0x0
};

enum class EMaterialValueType:unsigned __int64
{
	MCT_Float1 = 0x1,
	MCT_Float2 = 0x2,
	MCT_Float3 = 0x4,
	MCT_Float4 = 0x8,
	MCT_Float = 0xF,
	MCT_Texture2D = 0x10,
	MCT_TextureCube = 0x20,
	MCT_Texture2DArray = 0x40,
	MCT_TextureCubeArray = 0x80,
	MCT_VolumeTexture = 0x100,
	MCT_StaticBool = 0x200,
	MCT_Unknown = 0x400,
	MCT_MaterialAttributes = 0x800,
	MCT_TextureExternal = 0x1000,
	MCT_TextureVirtual = 0x2000,
	MCT_Texture = 0x31F0,
	MCT_VTPageTableResult = 0x4000,
	MCT_ShadingModel = 0xFFFF8000,
	MCT_Strata = 0x10000,
	MCT_LWCScalar = 0x20000,
	MCT_LWCVector2 = 0x40000,
	MCT_LWCVector3 = 0x80000,
	MCT_LWCVector4 = 0x100000,
	MCT_LWCType = 0x1E0000,
	MCT_Execution = 0x200000,
	MCT_VoidStatement = 0x400000,
	MCT_Bool = 0x800000,
	MCT_UInt1 = 0x1000000,
	MCT_UInt2 = 0x2000000,
	MCT_UInt3 = 0x4000000,
	MCT_UInt4 = 0x8000000,
	MCT_UInt = 0xF000000,
	MCT_Numeric = 0x9E000F
};

namespace EKismetCompileType
{
	enum Type:int
	{
		SkeletonOnly = 0x0,
		Full = 0x1,
		StubAfterFailure = 0x2,
		BytecodeOnly = 0x3,
		Cpp = 0x4
	};
}

enum class ModItemStatus:int
{
	IS_None = 0x0,
	IS_Ready = 0x1,
	IS_RetrieveingInfo = 0x2,
	IS_Subscribing = 0x3,
	IS_Waiting = 0x4,
	IS_Installing = 0x5,
	IS_Copying = 0x6,
	IS_Failed = 0x7
};

namespace EInviteStatus
{
	enum Type:int
	{
		Unknown = 0x0,
		Accepted = 0x1,
		PendingInbound = 0x2,
		PendingOutbound = 0x3,
		Blocked = 0x4,
		Suggested = 0x5
	};
}

namespace EAnimGroupRole
{
	enum Type:int
	{
		CanBeLeader = 0x0,
		AlwaysFollower = 0x1,
		AlwaysLeader = 0x2,
		TransitionLeader = 0x3,
		TransitionFollower = 0x4
	};
}

enum class ESceneTextureId:int
{
	PPI_SceneColor = 0x0,
	PPI_SceneDepth = 0x1,
	PPI_DiffuseColor = 0x2,
	PPI_SpecularColor = 0x3,
	PPI_SubsurfaceColor = 0x4,
	PPI_BaseColor = 0x5,
	PPI_Specular = 0x6,
	PPI_Metallic = 0x7,
	PPI_WorldNormal = 0x8,
	PPI_SeparateTranslucency = 0x9,
	PPI_Opacity = 0xA,
	PPI_Roughness = 0xB,
	PPI_MaterialAO = 0xC,
	PPI_CustomDepth = 0xD,
	PPI_PostProcessInput0 = 0xE,
	PPI_PostProcessInput1 = 0xF,
	PPI_PostProcessInput2 = 0x10,
	PPI_PostProcessInput3 = 0x11,
	PPI_PostProcessInput4 = 0x12,
	PPI_PostProcessInput5 = 0x13,
	PPI_PostProcessInput6 = 0x14,
	PPI_DecalMask = 0x15,
	PPI_ShadingModelColor = 0x16,
	PPI_ShadingModelID = 0x17,
	PPI_AmbientOcclusion = 0x18,
	PPI_CustomStencil = 0x19,
	PPI_StoredBaseColor = 0x1A,
	PPI_StoredSpecular = 0x1B,
	PPI_Velocity = 0x1C,
	PPI_WorldTangent = 0x1D,
	PPI_Anisotropy = 0x1E
};

namespace EDemoPlayFailure
{
	enum Type:int
	{
		Generic = 0x0,
		DemoNotFound = 0x1,
		Corrupt = 0x2,
		InvalidVersion = 0x3,
		InitBase = 0x4,
		GameSpecificHeader = 0x5,
		ReplayStreamerInternal = 0x6,
		LoadMap = 0x7,
		Serialization = 0x8
	};
}

namespace FParticleSystemCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		SkipCookingEmittersBasedOnDetailMode = 0x1,
		FixLegacySpawningBugs = 0x2,
		VersionPlusOne = 0x3,
		LatestVersion = 0x2
	};
}

enum class EUniformBufferBaseType:unsigned char
{
	UBMT_INVALID = 0x0,
	UBMT_BOOL = 0x1,
	UBMT_INT32 = 0x2,
	UBMT_UINT32 = 0x3,
	UBMT_FLOAT32 = 0x4,
	UBMT_TEXTURE = 0x5,
	UBMT_SRV = 0x6,
	UBMT_UAV = 0x7,
	UBMT_SAMPLER = 0x8,
	UBMT_RDG_TEXTURE = 0x9,
	UBMT_RDG_TEXTURE_ACCESS = 0xA,
	UBMT_RDG_TEXTURE_ACCESS_ARRAY = 0xB,
	UBMT_RDG_TEXTURE_SRV = 0xC,
	UBMT_RDG_TEXTURE_UAV = 0xD,
	UBMT_RDG_BUFFER_ACCESS = 0xE,
	UBMT_RDG_BUFFER_ACCESS_ARRAY = 0xF,
	UBMT_RDG_BUFFER_SRV = 0x10,
	UBMT_RDG_BUFFER_UAV = 0x11,
	UBMT_RDG_UNIFORM_BUFFER = 0x12,
	UBMT_NESTED_STRUCT = 0x13,
	UBMT_INCLUDED_STRUCT = 0x14,
	UBMT_REFERENCED_STRUCT = 0x15,
	UBMT_RENDER_TARGET_BINDING_SLOTS = 0x16,
	EUniformBufferBaseType_Num = 0x17,
	EUniformBufferBaseType_NumBits = 0x5
};

namespace EOnlineCachedResult
{
	enum Type:int
	{
		Success = 0x0,
		NotFound = 0x1
	};
}

namespace EOnlineComparisonOp
{
	enum Type:int
	{
		Equals = 0x0,
		NotEquals = 0x1,
		GreaterThan = 0x2,
		GreaterThanEquals = 0x3,
		LessThan = 0x4,
		LessThanEquals = 0x5,
		Near = 0x6,
		In = 0x7,
		NotIn = 0x8
	};
}

namespace EWindowMode
{
	enum Type:int
	{
		Fullscreen = 0x0,
		WindowedFullscreen = 0x1,
		Windowed = 0x2,
		NumWindowModes = 0x3
	};
}

namespace EOnlineDataAdvertisementType
{
	enum Type:int
	{
		DontAdvertise = 0x0,
		ViaPingOnly = 0x1,
		ViaOnlineService = 0x2,
		ViaOnlineServiceAndPing = 0x3
	};
}

namespace EOnlineSessionState
{
	enum Type:int
	{
		NoSession = 0x0,
		Creating = 0x1,
		Pending = 0x2,
		Starting = 0x3,
		InProgress = 0x4,
		Ending = 0x5,
		Ended = 0x6,
		Destroying = 0x7
	};
}

enum class EMaterialShadingModel:int
{
	MSM_Unlit = 0x0,
	MSM_DefaultLit = 0x1,
	MSM_Subsurface = 0x2,
	MSM_PreintegratedSkin = 0x3,
	MSM_ClearCoat = 0x4,
	MSM_SubsurfaceProfile = 0x5,
	MSM_TwoSidedFoliage = 0x6,
	MSM_Hair = 0x7,
	MSM_Cloth = 0x8,
	MSM_Eye = 0x9,
	MSM_SingleLayerWater = 0xA,
	MSM_ThinTranslucent = 0xB,
	MSM_Strata = 0xC,
	MSM_NUM = 0xD,
	MSM_FromMaterialExpression = 0xE,
	MSM_MAX = 0xF
};

namespace ELeaderboardUpdateMethod
{
	enum Type:int
	{
		KeepBest = 0x0,
		Force = 0x1
	};
}

namespace ELeaderboardFormat
{
	enum Type:int
	{
		Number = 0x0,
		Seconds = 0x1,
		Milliseconds = 0x2
	};
}

namespace ELeaderboardSort
{
	enum Type:int
	{
		None = 0x0,
		Ascending = 0x1,
		Descending = 0x2
	};
}

enum class EDynamicEmitterType:int
{
	DET_Unknown = 0x0,
	DET_Sprite = 0x1,
	DET_Mesh = 0x2,
	DET_Beam2 = 0x3,
	DET_Ribbon = 0x4,
	DET_AnimTrail = 0x5,
	DET_Custom = 0x6
};

namespace EOnlineAsyncTaskState
{
	enum Type:int
	{
		NotStarted = 0x0,
		InProgress = 0x1,
		Done = 0x2,
		Failed = 0x3
	};
}

enum class EVRSRateCombiner:unsigned char
{
	VRSRB_Passthrough = 0x0,
	VRSRB_Override = 0x1,
	VRSRB_Min = 0x2,
	VRSRB_Max = 0x3,
	VRSRB_Sum = 0x4
};

enum class EParticleStates:unsigned __int64
{
	STATE_Particle_JustSpawned = 0x2000000,
	STATE_Particle_Freeze = 0x4000000,
	STATE_Particle_IgnoreCollisions = 0x8000000,
	STATE_Particle_FreezeTranslation = 0x10000000,
	STATE_Particle_FreezeRotation = 0x20000000,
	STATE_Particle_CollisionIgnoreCheck = 0x3C000000,
	STATE_Particle_DelayCollisions = 0x40000000,
	STATE_Particle_CollisionHasOccurred = 0x80000000,
	STATE_Mask = 0xFE000000,
	STATE_CounterMask = 0x1FFFFFF
};

namespace EOnlineFriendState
{
	enum Type:int
	{
		Offline = 0x0,
		Online = 0x1,
		Away = 0x2,
		Busy = 0x3
	};
}

namespace EFeaturePrivilegeLevel
{
	enum Type:int
	{
		Undefined = 0x0,
		Disabled = 0x1,
		EnabledFriendsOnly = 0x2,
		Enabled = 0x3
	};
}

namespace ETravelFailure
{
	enum Type:int
	{
		NoLevel = 0x0,
		LoadMapFailure = 0x1,
		InvalidURL = 0x2,
		PackageMissing = 0x3,
		PackageVersion = 0x4,
		NoDownload = 0x5,
		TravelFailure = 0x6,
		CheatCommands = 0x7,
		PendingNetGameCreateFailure = 0x8,
		CloudSaveFailure = 0x9,
		ServerTravelFailure = 0xA,
		ClientTravelFailure = 0xB
	};
}

namespace EOnlineServerConnectionStatus
{
	enum Type: char
	{
		Normal = 0x0,
		NotConnected = 0x1,
		Connected = 0x2,
		ConnectionDropped = 0x3,
		NoNetworkConnection = 0x4,
		ServiceUnavailable = 0x5,
		UpdateRequired = 0x6,
		ServersTooBusy = 0x7,
		DuplicateLoginDetected = 0x8,
		InvalidUser = 0x9,
		NotAuthorized = 0xA,
		InvalidSession = 0xB
	};
}

namespace ELoginStatus
{
	enum Type:int
	{
		NotLoggedIn = 0x0,
		UsingLocalProfile = 0x1,
		LoggedIn = 0x2
	};
}

namespace EOnlineEnvironment
{
	enum Type:int
	{
		Development = 0x0,
		Certification = 0x1,
		Production = 0x2,
		Unknown = 0x3
	};
}

enum class ERHIResourceType:unsigned char
{
	RRT_None = 0x0,
	RRT_SamplerState = 0x1,
	RRT_RasterizerState = 0x2,
	RRT_DepthStencilState = 0x3,
	RRT_BlendState = 0x4,
	RRT_VertexDeclaration = 0x5,
	RRT_VertexShader = 0x6,
	RRT_MeshShader = 0x7,
	RRT_AmplificationShader = 0x8,
	RRT_PixelShader = 0x9,
	RRT_GeometryShader = 0xA,
	RRT_RayTracingShader = 0xB,
	RRT_ComputeShader = 0xC,
	RRT_GraphicsPipelineState = 0xD,
	RRT_ComputePipelineState = 0xE,
	RRT_RayTracingPipelineState = 0xF,
	RRT_BoundShaderState = 0x10,
	RRT_UniformBufferLayout = 0x11,
	RRT_UniformBuffer = 0x12,
	RRT_Buffer = 0x13,
	RRT_Texture = 0x14,
	RRT_Texture2D = 0x15,
	RRT_Texture2DArray = 0x16,
	RRT_Texture3D = 0x17,
	RRT_TextureCube = 0x18,
	RRT_TextureReference = 0x19,
	RRT_TimestampCalibrationQuery = 0x1A,
	RRT_GPUFence = 0x1B,
	RRT_RenderQuery = 0x1C,
	RRT_RenderQueryPool = 0x1D,
	RRT_ComputeFence = 0x1E,
	RRT_Viewport = 0x1F,
	RRT_UnorderedAccessView = 0x20,
	RRT_ShaderResourceView = 0x21,
	RRT_RayTracingAccelerationStructure = 0x22,
	RRT_StagingBuffer = 0x23,
	RRT_CustomPresent = 0x24,
	RRT_ShaderLibrary = 0x25,
	RRT_PipelineBinaryLibrary = 0x26,
	RRT_Num = 0x27
};

enum class EParticleVertexFactoryType:int
{
	PVFT_Sprite = 0x0,
	PVFT_BeamTrail = 0x1,
	PVFT_Mesh = 0x2,
	PVFT_MAX = 0x3
};

enum class EWalkableSlopeBehavior:int
{
	WalkableSlope_Default = 0x0,
	WalkableSlope_Increase = 0x1,
	WalkableSlope_Decrease = 0x2,
	WalkableSlope_Unwalkable = 0x3,
	WalkableSlope_Max = 0x4
};

enum class EBulkDataFlags:unsigned int
{
	BULKDATA_None = 0x0,
	BULKDATA_PayloadAtEndOfFile = 0x1,
	BULKDATA_SerializeCompressedZLIB = 0x2,
	BULKDATA_ForceSingleElementSerialization = 0x4,
	BULKDATA_SingleUse = 0x8,
	BULKDATA_Unused = 0x20,
	BULKDATA_ForceInlinePayload = 0x40,
	BULKDATA_SerializeCompressed = 0x2,
	BULKDATA_ForceStreamPayload = 0x80,
	BULKDATA_PayloadInSeperateFile = 0x100,
	BULKDATA_SerializeCompressedBitWindow = 0x200,
	BULKDATA_Force_NOT_InlinePayload = 0x400,
	BULKDATA_OptionalPayload = 0x800,
	BULKDATA_MemoryMappedPayload = 0x1000,
	BULKDATA_Size64Bit = 0x2000,
	BULKDATA_DuplicateNonOptionalPayload = 0x4000,
	BULKDATA_BadDataVersion = 0xFFFF8000,
	BULKDATA_NoOffsetFixUp = 0x10000,
	BULKDATA_WorkspaceDomainPayload = 0x20000,
	BULKDATA_LazyLoadable = 0x40000,
	BULKDATA_UsesIoDispatcher = 0x80000000,
	BULKDATA_DataIsMemoryMapped = 0x40000000,
	BULKDATA_HasAsyncReadPending = 0x20000000,
	BULKDATA_AlwaysAllowDiscard = 0x10000000
};

namespace ERHIFeatureLevel
{
	enum Type:int
	{
		ES2_REMOVED = 0x0,
		ES3_1 = 0x1,
		SM4_REMOVED = 0x2,
		SM5 = 0x3,
		SM6 = 0x4,
		Num = 0x5
	};
}

enum class EMipFadeSettings:int
{
	MipFade_Normal = 0x0,
	MipFade_Slow = 0x1,
	MipFade_NumSettings = 0x2
};

enum class EMaterialMergeType:int
{
	MaterialMergeType_Default = 0x0,
	MaterialMergeType_Simplygon = 0x1
};

namespace EAttachLocation
{
	enum Type:int
	{
		KeepRelativeOffset = 0x0,
		KeepWorldPosition = 0x1,
		SnapToTarget = 0x2,
		SnapToTargetIncludingScale = 0x3
	};
}

namespace EShaderPrecisionModifier
{
	enum Type: char
	{
		Float = 0x0,
		Half = 0x1,
		Fixed = 0x2
	};
}

enum class ESamplerAddressMode:int
{
	AM_Wrap = 0x0,
	AM_Clamp = 0x1,
	AM_Mirror = 0x2,
	AM_Border = 0x3,
	ESamplerAddressMode_Num = 0x4,
	ESamplerAddressMode_NumBits = 0x2
};

namespace EBlendModeFilter
{
	enum Type:int
	{
		None = 0x0,
		OpaqueAndMasked = 0x1,
		Translucent = 0x2,
		All = 0x3
	};
}

enum class EViewTargetBlendFunction:int
{
	VTBlend_Linear = 0x0,
	VTBlend_Cubic = 0x1,
	VTBlend_EaseIn = 0x2,
	VTBlend_EaseOut = 0x3,
	VTBlend_EaseInOut = 0x4,
	VTBlend_PreBlended = 0x5,
	VTBlend_MAX = 0x6
};

namespace EMontageNotifyTickType
{
	enum Type:int
	{
		Queued = 0x0,
		BranchingPoint = 0x1
	};
}

namespace ERootMotionRootLock
{
	enum Type:int
	{
		RefPose = 0x0,
		AnimFirstFrame = 0x1,
		Zero = 0x2
	};
}

enum class EMaterialFloatPrecisionMode:int
{
	MFPM_Default = 0x0,
	MFPM_Full_MaterialExpressionOnly = 0x1,
	MFPM_Full = 0x2,
	MFPM_Half = 0x3,
	MFPM_MAX = 0x4
};

namespace EDuplicateMode
{
	enum Type:int
	{
		Normal = 0x0,
		World = 0x1,
		PIE = 0x2
	};
}

enum class EOptimizationType:int
{
	OT_NumOfTriangles = 0x0,
	OT_MaxDeviation = 0x1,
	OT_MAX = 0x2
};

enum class GPUSkinBoneInfluenceType:int
{
	DefaultBoneInfluence = 0x0,
	UnlimitedBoneInfluence = 0x1
};

enum class ELightInteractionType:int
{
	LIT_CachedIrrelevant = 0x0,
	LIT_CachedLightMap = 0x1,
	LIT_Dynamic = 0x2,
	LIT_CachedSignedDistanceFieldShadowMap2D = 0x3,
	LIT_MAX = 0x4
};

enum class ERichCurveInterpMode:int
{
	RCIM_Linear = 0x0,
	RCIM_Constant = 0x1,
	RCIM_Cubic = 0x2,
	RCIM_None = 0x3
};

enum class EStencilOp:int
{
	SO_Keep = 0x0,
	SO_Zero = 0x1,
	SO_Replace = 0x2,
	SO_SaturatedIncrement = 0x3,
	SO_SaturatedDecrement = 0x4,
	SO_Invert = 0x5,
	SO_Increment = 0x6,
	SO_Decrement = 0x7,
	EStencilOp_Num = 0x8,
	EStencilOp_NumBits = 0x3
};

enum class EInputEvent:int
{
	IE_Pressed = 0x0,
	IE_Released = 0x1,
	IE_Repeat = 0x2,
	IE_DoubleClick = 0x3,
	IE_Axis = 0x4,
	IE_MAX = 0x5
};

enum class EBulkDataLockStatus:int
{
	LOCKSTATUS_Unlocked = 0x0,
	LOCKSTATUS_ReadOnlyLock = 0x1,
	LOCKSTATUS_ReadWriteLock = 0x2
};

enum class EStructFlags:unsigned __int64
{
	STRUCT_NoFlags = 0x0,
	STRUCT_Native = 0x1,
	STRUCT_IdenticalNative = 0x2,
	STRUCT_HasInstancedReference = 0x4,
	STRUCT_NoExport = 0x8,
	STRUCT_Atomic = 0x10,
	STRUCT_Immutable = 0x20,
	STRUCT_AddStructReferencedObjects = 0x40,
	STRUCT_RequiredAPI = 0x200,
	STRUCT_NetSerializeNative = 0x400,
	STRUCT_SerializeNative = 0x800,
	STRUCT_CopyNative = 0x1000,
	STRUCT_IsPlainOldData = 0x2000,
	STRUCT_NoDestructor = 0x4000,
	STRUCT_ZeroConstructor = 0xFFFF8000,
	STRUCT_ExportTextItemNative = 0x10000,
	STRUCT_ImportTextItemNative = 0x20000,
	STRUCT_PostSerializeNative = 0x40000,
	STRUCT_SerializeFromMismatchedTag = 0x80000,
	STRUCT_NetDeltaSerializeNative = 0x100000,
	STRUCT_PostScriptConstruct = 0x200000,
	STRUCT_NetSharedSerialization = 0x400000,
	STRUCT_Trashed = 0x800000,
	STRUCT_NewerVersionExists = 0x1000000,
	STRUCT_CanEditChange = 0x2000000,
	STRUCT_Inherit = 0x14,
	STRUCT_ComputedFlags = 0x7FFC42
};

enum class EPrimitiveType:int
{
	PT_TriangleList = 0x0,
	PT_TriangleStrip = 0x1,
	PT_LineList = 0x2,
	PT_QuadList = 0x3,
	PT_PointList = 0x4,
	PT_RectList = 0x5,
	PT_Num = 0x6,
	PT_NumBits = 0x3
};

enum class EHitProxyPriority:int
{
	HPP_World = 0x0,
	HPP_Wireframe = 0x1,
	HPP_Foreground = 0x2,
	HPP_UI = 0x3
};

enum class EVRSAxisShadingRate:unsigned char
{
	VRSASR_1X = 0x0,
	VRSASR_2X = 0x1,
	VRSASR_4X = 0x2
};

enum class ERangeCompressionMode:int
{
	RCM_UNorm = 0x0,
	RCM_SNorm = 0x1,
	RCM_MinMaxNorm = 0x2,
	RCM_MinMax = 0x3
};

enum class ESimpleElementBlendMode:int
{
	SE_BLEND_Opaque = 0x0,
	SE_BLEND_Masked = 0x1,
	SE_BLEND_Translucent = 0x2,
	SE_BLEND_Additive = 0x3,
	SE_BLEND_Modulate = 0x4,
	SE_BLEND_MaskedDistanceField = 0x5,
	SE_BLEND_MaskedDistanceFieldShadowed = 0x6,
	SE_BLEND_TranslucentDistanceField = 0x7,
	SE_BLEND_TranslucentDistanceFieldShadowed = 0x8,
	SE_BLEND_AlphaComposite = 0x9,
	SE_BLEND_AlphaHoldout = 0xA,
	SE_BLEND_AlphaBlend = 0xB,
	SE_BLEND_TranslucentAlphaOnly = 0xC,
	SE_BLEND_TranslucentAlphaOnlyWriteAlpha = 0xD,
	SE_BLEND_RGBA_MASK_START = 0xE,
	SE_BLEND_RGBA_MASK_END = 0x2D,
	SE_BLEND_MAX = 0x2E
};

enum class EShadowMapInteractionType:int
{
	SMIT_None = 0x0,
	SMIT_GlobalVolume = 0x1,
	SMIT_Texture = 0x2,
	SMIT_NumBits = 0x3
};

enum class ELocalizedLanguage:int
{
	ca = 0x0,
	cs = 0x1,
	da = 0x2,
	de = 0x3,
	en = 0x4,
	es = 0x5,
	eu = 0x6,
	fi = 0x7,
	fr = 0x8,
	hu = 0x9,
	it = 0xA,
	ja = 0xB,
	ka = 0xC,
	ko = 0xD,
	nl = 0xE,
	pl = 0xF,
	pt_BR = 0x10,
	ru = 0x11,
	sv = 0x12,
	th = 0x13,
	tr = 0x14,
	uk = 0x15,
	zh = 0x16,
	zh__Hans__CN = 0x17,
	zh__TW = 0x18,
	LocalizedLanguageMAX = 0x19
};

enum class SkeletalMeshOptimizationImportance:int
{
	SMOI_Off = 0x0,
	SMOI_Lowest = 0x1,
	SMOI_Low = 0x2,
	SMOI_Normal = 0x3,
	SMOI_High = 0x4,
	SMOI_Highest = 0x5,
	SMOI_MAX = 0x6
};

namespace EPhysicalMaterialMaskColor
{
	enum Type:int
	{
		Red = 0x0,
		Green = 0x1,
		Blue = 0x2,
		Cyan = 0x3,
		Magenta = 0x4,
		Yellow = 0x5,
		White = 0x6,
		Black = 0x7,
		MAX = 0x8
	};
}

enum class SkeletalMeshOptimizationType:int
{
	SMOT_NumOfTriangles = 0x0,
	SMOT_MaxDeviation = 0x1,
	SMOT_TriangleOrDeviation = 0x2,
	SMOT_MAX = 0x3
};

enum class EPolyFlags:unsigned __int64
{
	PF_Invisible = 0x1,
	PF_NotSolid = 0x8,
	PF_Semisolid = 0x20,
	PF_GeomMarked = 0x40,
	PF_TwoSided = 0x100,
	PF_Portal = 0x4000000,
	PF_Memorized = 0x1000000,
	PF_Selected = 0x2000000,
	PF_HiddenEd = 0x8000000,
	PF_Hovered = 0x10000000,
	PF_EdProcessed = 0x40000000,
	PF_EdCut = 0x80000000,
	PF_NoEdit = 0xD3000000,
	PF_NoImport = 0xD3000000,
	PF_AddLast = 0x28,
	PF_NoAddToBSP = 0xD3000000,
	PF_ModelComponentMask = 0x0,
	PF_DefaultFlags = 0x0
};

enum class EVertexElementType:int
{
	VET_None = 0x0,
	VET_Float1 = 0x1,
	VET_Float2 = 0x2,
	VET_Float3 = 0x3,
	VET_Float4 = 0x4,
	VET_PackedNormal = 0x5,
	VET_UByte4 = 0x6,
	VET_UByte4N = 0x7,
	VET_Color = 0x8,
	VET_Short2 = 0x9,
	VET_Short4 = 0xA,
	VET_Short2N = 0xB,
	VET_Half2 = 0xC,
	VET_Half4 = 0xD,
	VET_Short4N = 0xE,
	VET_UShort2 = 0xF,
	VET_UShort4 = 0x10,
	VET_UShort2N = 0x11,
	VET_UShort4N = 0x12,
	VET_URGB10A2N = 0x13,
	VET_UInt = 0x14,
	VET_MAX = 0x15,
	VET_NumBits = 0x5
};

enum class EShowFlagInitMode:int
{
	ESFIM_Game = 0x0,
	ESFIM_Editor = 0x1,
	ESFIM_VREditing = 0x2,
	ESFIM_All0 = 0x3
};

enum class ELightMapInteractionType:int
{
	LMIT_None = 0x0,
	LMIT_GlobalVolume = 0x1,
	LMIT_Texture = 0x2,
	LMIT_NumBits = 0x3
};

enum class EShaderPlatform:unsigned short
{
	SP_PCD3D_SM5 = 0x0,
	SP_METAL = 0xB,
	SP_METAL_MRT = 0xC,
	SP_PCD3D_ES3_1 = 0xE,
	SP_OPENGL_PCES3_1 = 0xF,
	SP_METAL_SM5 = 0x10,
	SP_VULKAN_PCES3_1 = 0x11,
	SP_METAL_SM5_NOTESS_REMOVED = 0x12,
	SP_VULKAN_SM5 = 0x14,
	SP_VULKAN_ES3_1_ANDROID = 0x15,
	SP_METAL_MACES3_1 = 0x16,
	SP_OPENGL_ES3_1_ANDROID = 0x18,
	SP_METAL_MRT_MAC = 0x1B,
	SP_VULKAN_SM5_LUMIN_REMOVED = 0x1C,
	SP_VULKAN_ES3_1_LUMIN_REMOVED = 0x1D,
	SP_METAL_TVOS = 0x1E,
	SP_METAL_MRT_TVOS = 0x1F,
	SP_StaticPlatform_First = 0x20,
	SP_StaticPlatform_Last = 0x2F,
	SP_VULKAN_SM5_ANDROID = 0x30,
	SP_PCD3D_SM6 = 0x31,
	SP_D3D_ES3_1_HOLOLENS = 0x32,
	SP_CUSTOM_PLATFORM_FIRST = 0x33,
	SP_CUSTOM_PLATFORM_LAST = 0x97,
	SP_NumPlatforms = 0x98,
	SP_NumBits = 0x10
};

enum class ECustomDataInputType:int
{
	CIT_None = 0x0,
	CIT_Float1 = 0x1,
	CIT_Float2 = 0x2,
	CIT_Float3 = 0x4,
	CIT_Float4 = 0x8
};

enum class ETextureSourceFormat:int
{
	TSF_Invalid = 0x0,
	TSF_G8 = 0x1,
	TSF_BGRA8 = 0x2,
	TSF_BGRE8 = 0x3,
	TSF_RGBA16 = 0x4,
	TSF_RGBA16F = 0x5,
	TSF_RGBA8_DEPRECATED = 0x6,
	TSF_RGBE8_DEPRECATED = 0x7,
	TSF_G16 = 0x8,
	TSF_RGBA32F = 0x9,
	TSF_R16F = 0xA,
	TSF_R32F = 0xB,
	TSF_MAX = 0xC,
	TSF_RGBA8 = 0x6,
	TSF_RGBE8 = 0x7
};

namespace EAggCollisionShape
{
	enum Type:int
	{
		Sphere = 0x0,
		Box = 0x1,
		Sphyl = 0x2,
		Convex = 0x3,
		TaperedCapsule = 0x4,
		LevelSet = 0x5,
		Unknown = 0x6
	};
}

enum class EShowFlagGroup:int
{
	SFG_Normal = 0x0,
	SFG_Advanced = 0x1,
	SFG_PostProcess = 0x2,
	SFG_CollisionModes = 0x3,
	SFG_Developer = 0x4,
	SFG_Visualize = 0x5,
	SFG_LightTypes = 0x6,
	SFG_LightingComponents = 0x7,
	SFG_LightingFeatures = 0x8,
	SFG_Lumen = 0x9,
	SFG_Hidden = 0xA,
	SFG_Transient = 0xB,
	SFG_Custom = 0xC,
	SFG_Max = 0xD
};

enum class EStencilMask:int
{
	SM_Default = 0x0,
	SM_255 = 0x1,
	SM_1 = 0x2,
	SM_2 = 0x3,
	SM_4 = 0x4,
	SM_8 = 0x5,
	SM_16 = 0x6,
	SM_32 = 0x7,
	SM_64 = 0x8,
	SM_128 = 0x9,
	SM_Count = 0xA
};

enum class EFunctionFlags:unsigned int
{
	FUNC_None = 0x0,
	FUNC_Final = 0x1,
	FUNC_RequiredAPI = 0x2,
	FUNC_BlueprintAuthorityOnly = 0x4,
	FUNC_BlueprintCosmetic = 0x8,
	FUNC_Net = 0x40,
	FUNC_NetReliable = 0x80,
	FUNC_NetRequest = 0x100,
	FUNC_Exec = 0x200,
	FUNC_Native = 0x400,
	FUNC_Event = 0x800,
	FUNC_NetResponse = 0x1000,
	FUNC_Static = 0x2000,
	FUNC_NetMulticast = 0x4000,
	FUNC_UbergraphFunction = 0xFFFF8000,
	FUNC_MulticastDelegate = 0x10000,
	FUNC_Public = 0x20000,
	FUNC_Private = 0x40000,
	FUNC_Protected = 0x80000,
	FUNC_Delegate = 0x100000,
	FUNC_NetServer = 0x200000,
	FUNC_HasOutParms = 0x400000,
	FUNC_HasDefaults = 0x800000,
	FUNC_NetClient = 0x1000000,
	FUNC_DLLImport = 0x2000000,
	FUNC_BlueprintCallable = 0x4000000,
	FUNC_BlueprintEvent = 0x8000000,
	FUNC_BlueprintPure = 0x10000000,
	FUNC_EditorOnly = 0x20000000,
	FUNC_Const = 0x40000000,
	FUNC_NetValidate = 0x80000000,
	FUNC_AllFlags = 0xFFFFFFFF
};

enum class EConsoleVariableFlags:unsigned __int64
{
	ECVF_FlagMask = 0xFFFFFFFF,
	ECVF_Default = 0x0,
	ECVF_Cheat = 0x1,
	ECVF_ReadOnly = 0x4,
	ECVF_Unregistered = 0x8,
	ECVF_CreatedFromIni = 0x10,
	ECVF_RenderThreadSafe = 0x20,
	ECVF_Scalability = 0x40,
	ECVF_ScalabilityGroup = 0x80,
	ECVF_Preview = 0x100,
	ECVF_GeneralShaderChange = 0x200,
	ECVF_MobileShaderChange = 0x400,
	ECVF_DesktopShaderChange = 0x800,
	ECVF_ExcludeFromPreview = 0x1000,
	ECVF_SetFlagMask = 0xFF0000,
	ECVF_Set_NoSinkCall_Unsafe = 0x10000,
	ECVF_SetByMask = 0xFF000000,
	ECVF_SetByConstructor = 0x0,
	ECVF_SetByScalability = 0x1000000,
	ECVF_SetByGameSetting = 0x2000000,
	ECVF_SetByProjectSetting = 0x3000000,
	ECVF_SetBySystemSettingsIni = 0x4000000,
	ECVF_SetByDeviceProfile = 0x5000000,
	ECVF_SetByGameOverride = 0x6000000,
	ECVF_SetByConsoleVariablesIni = 0x7000000,
	ECVF_SetByCommandline = 0x8000000,
	ECVF_SetByCode = 0x9000000,
	ECVF_SetByConsole = 0xA000000
};

enum class ERichCurveTangentMode:int
{
	RCTM_Auto = 0x0,
	RCTM_User = 0x1,
	RCTM_Break = 0x2,
	RCTM_None = 0x3
};

enum class SkeletalMeshTerminationCriterion:int
{
	SMTC_NumOfTriangles = 0x0,
	SMTC_NumOfVerts = 0x1,
	SMTC_TriangleOrVert = 0x2,
	SMTC_AbsNumOfTriangles = 0x3,
	SMTC_AbsNumOfVerts = 0x4,
	SMTC_AbsTriangleOrVert = 0x5,
	SMTC_MAX = 0x6
};

namespace ETextJustify
{
	enum Type:int
	{
		Left = 0x0,
		Center = 0x1,
		Right = 0x2
	};
}

enum class EPackageFlags:unsigned __int64
{
	PKG_None = 0x0,
	PKG_NewlyCreated = 0x1,
	PKG_ClientOptional = 0x2,
	PKG_ServerSideOnly = 0x4,
	PKG_CompiledIn = 0x10,
	PKG_ForDiffing = 0x20,
	PKG_EditorOnly = 0x40,
	PKG_Developer = 0x80,
	PKG_UncookedOnly = 0x100,
	PKG_Cooked = 0x200,
	PKG_ContainsNoAsset = 0x400,
	PKG_NotExternallyReferenceable = 0x800,
	PKG_UnversionedProperties = 0x2000,
	PKG_ContainsMapData = 0x4000,
	PKG_IsSaving = 0xFFFF8000,
	PKG_Compiling = 0x10000,
	PKG_ContainsMap = 0x20000,
	PKG_RequiresLocalizationGather = 0x40000,
	PKG_PlayInEditor = 0x100000,
	PKG_ContainsScript = 0x200000,
	PKG_DisallowExport = 0x400000,
	PKG_CookGenerated = 0x8000000,
	PKG_DynamicImports = 0x10000000,
	PKG_RuntimeGenerated = 0x20000000,
	PKG_ReloadingForCooker = 0x40000000,
	PKG_FilterEditorOnly = 0x80000000,
	PKG_TransientFlags = 0x40008001
};

namespace EAngularDriveMode
{
	enum Type:int
	{
		SLERP = 0x0,
		TwistAndSwing = 0x1
	};
}

enum class EBlendFactor:int
{
	BF_Zero = 0x0,
	BF_One = 0x1,
	BF_SourceColor = 0x2,
	BF_InverseSourceColor = 0x3,
	BF_SourceAlpha = 0x4,
	BF_InverseSourceAlpha = 0x5,
	BF_DestAlpha = 0x6,
	BF_InverseDestAlpha = 0x7,
	BF_DestColor = 0x8,
	BF_InverseDestColor = 0x9,
	BF_ConstantBlendFactor = 0xA,
	BF_InverseConstantBlendFactor = 0xB,
	BF_Source1Color = 0xC,
	BF_InverseSource1Color = 0xD,
	BF_Source1Alpha = 0xE,
	BF_InverseSource1Alpha = 0xF,
	EBlendFactor_Num = 0x10,
	EBlendFactor_NumBits = 0x4
};

enum class EPropertyFlags:unsigned __int64
{
	CPF_None = 0x0,
	CPF_Edit = 0x1,
	CPF_ConstParm = 0x2,
	CPF_BlueprintVisible = 0x4,
	CPF_ExportObject = 0x8,
	CPF_BlueprintReadOnly = 0x10,
	CPF_Net = 0x20,
	CPF_EditFixedSize = 0x40,
	CPF_Parm = 0x80,
	CPF_OutParm = 0x100,
	CPF_ZeroConstructor = 0x200,
	CPF_ReturnParm = 0x400,
	CPF_DisableEditOnTemplate = 0x800,
	CPF_NonNullable = 0x1000,
	CPF_Transient = 0x2000,
	CPF_Config = 0x4000,
	CPF_RequiredParm = 0xFFFF8000,
	CPF_DisableEditOnInstance = 0x10000,
	CPF_EditConst = 0x20000,
	CPF_GlobalConfig = 0x40000,
	CPF_InstancedReference = 0x80000,
	CPF_DuplicateTransient = 0x200000,
	CPF_SaveGame = 0x1000000,
	CPF_NoClear = 0x2000000,
	CPF_ReferenceParm = 0x8000000,
	CPF_BlueprintAssignable = 0x10000000,
	CPF_Deprecated = 0x20000000,
	CPF_IsPlainOldData = 0x40000000,
	CPF_RepSkip = 0x80000000,

};

enum class EUniformBufferUsage:int
{
	UniformBuffer_SingleDraw = 0x0,
	UniformBuffer_SingleFrame = 0x1,
	UniformBuffer_MultiFrame = 0x2
};

enum class EMaterialProperty:int
{
	MP_EmissiveColor = 0x0,
	MP_Opacity = 0x1,
	MP_OpacityMask = 0x2,
	MP_DiffuseColor = 0x3,
	MP_SpecularColor = 0x4,
	MP_BaseColor = 0x5,
	MP_Metallic = 0x6,
	MP_Specular = 0x7,
	MP_Roughness = 0x8,
	MP_Anisotropy = 0x9,
	MP_Normal = 0xA,
	MP_Tangent = 0xB,
	MP_WorldPositionOffset = 0xC,
	MP_WorldDisplacement_DEPRECATED = 0xD,
	MP_TessellationMultiplier_DEPRECATED = 0xE,
	MP_SubsurfaceColor = 0xF,
	MP_CustomData0 = 0x10,
	MP_CustomData1 = 0x11,
	MP_AmbientOcclusion = 0x12,
	MP_Refraction = 0x13,
	MP_SSAOIntensity = 0x14,
	MP_SSAOInfluence = 0x15,
	MP_SSAOLightInfluence = 0x16,
	MP_CustomizedUVs0 = 0x17,
	MP_CustomizedUVs1 = 0x18,
	MP_CustomizedUVs2 = 0x19,
	MP_CustomizedUVs3 = 0x1A,
	MP_CustomizedUVs4 = 0x1B,
	MP_CustomizedUVs5 = 0x1C,
	MP_CustomizedUVs6 = 0x1D,
	MP_CustomizedUVs7 = 0x1E,
	MP_PixelDepthOffset = 0x1F,
	MP_ShadingModel = 0x20,
	MP_FrontMaterial = 0x21,
	MP_SurfaceThickness = 0x22,
	MP_MaterialAttributes = 0x23,
	MP_CustomOutput = 0x24,
	MP_MAX = 0x25
};

enum class EAnimAssetCurveFlags:int
{
	AACF_NONE = 0x0,
	AACF_DriveMorphTarget_DEPRECATED = 0x1,
	AACF_DriveAttribute_DEPRECATED = 0x2,
	AACF_Editable = 0x4,
	AACF_DriveMaterial_DEPRECATED = 0x8,
	AACF_Metadata = 0x10,
	AACF_DriveTrack = 0x20,
	AACF_Disabled = 0x40
};

enum class EShaderFrequency:unsigned char
{
	SF_Vertex = 0x0,
	SF_Mesh = 0x1,
	SF_Amplification = 0x2,
	SF_Pixel = 0x3,
	SF_Geometry = 0x4,
	SF_Compute = 0x5,
	SF_RayGen = 0x6,
	SF_RayMiss = 0x7,
	SF_RayHitGroup = 0x8,
	SF_RayCallable = 0x9,
	SF_NumFrequencies = 0xA,
	SF_NumGraphicsFrequencies = 0x5,
	SF_NumStandardFrequencies = 0x6,
	SF_NumBits = 0x4
};

enum class ELoadFlags:unsigned __int64
{
	LOAD_None = 0x0,
	LOAD_Async = 0x1,
	LOAD_NoWarn = 0x2,
	LOAD_EditorOnly = 0x4,
	LOAD_ResolvingDeferredExports = 0x8,
	LOAD_Verify = 0x10,
	LOAD_NoVerify = 0x80,
	LOAD_IsVerifying = 0x100,
	LOAD_SkipLoadImportedPackages = 0x200,
	LOAD_RegenerateBulkDataGuids = 0x400,
	LOAD_DisableDependencyPreloading = 0x1000,
	LOAD_Quiet = 0x2000,
	LOAD_FindIfFail = 0x4000,
	LOAD_MemoryReader = 0xFFFF8000,
	LOAD_NoRedirects = 0x10000,
	LOAD_ForDiff = 0x20000,
	LOAD_PackageForPIE = 0x80000,
	LOAD_DeferDependencyLoads = 0x100000,
	LOAD_ForFileDiff = 0x200000,
	LOAD_DisableCompileOnLoad = 0x400000,
	LOAD_DisableEngineVersionChecks = 0x800000
};

enum class ECanCreateConnectionResponse:int
{
	CONNECT_RESPONSE_MAKE = 0x0,
	CONNECT_RESPONSE_DISALLOW = 0x1,
	CONNECT_RESPONSE_BREAK_OTHERS_A = 0x2,
	CONNECT_RESPONSE_BREAK_OTHERS_B = 0x3,
	CONNECT_RESPONSE_BREAK_OTHERS_AB = 0x4,
	CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE = 0x5,
	CONNECT_RESPONSE_MAKE_WITH_PROMOTION = 0x6,
	CONNECT_RESPONSE_MAX = 0x7
};

enum class ERDGViewType:unsigned char
{
	TextureUAV = 0x0,
	TextureSRV = 0x1,
	BufferUAV = 0x2,
	BufferSRV = 0x3,
	MAX = 0x4
};

namespace ENetworkFailure
{
	enum Type:int
	{
		NetDriverAlreadyExists = 0x0,
		NetDriverCreateFailure = 0x1,
		NetDriverListenFailure = 0x2,
		ConnectionLost = 0x3,
		ConnectionTimeout = 0x4,
		FailureReceived = 0x5,
		OutdatedClient = 0x6,
		OutdatedServer = 0x7,
		PendingConnectionFailure = 0x8,
		NetGuidMismatch = 0x9,
		NetChecksumMismatch = 0xA,
		TotalConversionIDMismatch = 0xB,
		ModMisMatch = 0xC,
		ModDLCNotInstalled = 0xD,
		BuildIdMismatch = 0xE,
		InvalidServerPassword = 0xF
	};
}

enum class ERichCurveKeyTimeCompressionFormat:int
{
	RCKTCF_uint16 = 0x0,
	RCKTCF_float32 = 0x1
};

enum class ESoundSpatializationAlgorithm:int
{
	SPATIALIZATION_Default = 0x0,
	SPATIALIZATION_HRTF = 0x1
};

enum class ENetRole:int
{
	ROLE_None = 0x0,
	ROLE_SimulatedProxy = 0x1,
	ROLE_AutonomousProxy = 0x2,
	ROLE_Authority = 0x3,
	ROLE_MAX = 0x4
};

enum class EVerticalAlignment:int
{
	VAlign_Fill = 0x0,
	VAlign_Top = 0x1,
	VAlign_Center = 0x2,
	VAlign_Bottom = 0x3
};

enum class EGBufferSlot:int
{
	GBS_Invalid = 0x0,
	GBS_SceneColor = 0x1,
	GBS_WorldNormal = 0x2,
	GBS_PerObjectGBufferData = 0x3,
	GBS_Metallic = 0x4,
	GBS_Specular = 0x5,
	GBS_Roughness = 0x6,
	GBS_ShadingModelId = 0x7,
	GBS_SelectiveOutputMask = 0x8,
	GBS_BaseColor = 0x9,
	GBS_GenericAO = 0xA,
	GBS_IndirectIrradiance = 0xB,
	GBS_AO = 0xC,
	GBS_Velocity = 0xD,
	GBS_PrecomputedShadowFactor = 0xE,
	GBS_WorldTangent = 0xF,
	GBS_Anisotropy = 0x10,
	GBS_CustomData = 0x11,
	GBS_SubsurfaceColor = 0x12,
	GBS_Opacity = 0x13,
	GBS_SubsurfaceProfile = 0x14,
	GBS_ClearCoat = 0x15,
	GBS_ClearCoatRoughness = 0x16,
	GBS_HairSecondaryWorldNormal = 0x17,
	GBS_HairBacklit = 0x18,
	GBS_Cloth = 0x19,
	GBS_SubsurfaceProfileX = 0x1A,
	GBS_IrisNormal = 0x1B,
	GBS_SeparatedMainDirLight = 0x1C,
	GBS_Num = 0x1D
};

enum class EGBufferCompression:int
{
	GBC_Invalid = 0x0,
	GBC_Raw_Float_16_16_16_16 = 0x1,
	GBC_Raw_Float_16_16_16 = 0x2,
	GBC_Raw_Float_11_11_10 = 0x3,
	GBC_Raw_Float_10_10_10 = 0x4,
	GBC_Raw_Unorm_8_8_8_8 = 0x5,
	GBC_Raw_Unorm_8_8_8 = 0x6,
	GBC_Raw_Unorm_8_8 = 0x7,
	GBC_Raw_Unorm_8 = 0x8,
	GBC_Raw_Unorm_2 = 0x9,
	GBC_Raw_Float_16_16 = 0xA,
	GBC_Raw_Float_16 = 0xB,
	GBC_Bits_4 = 0xC,
	GBC_Bits_2 = 0xD,
	GBC_Packed_Normal_Octahedral_8_8 = 0xE,
	GBC_EncodeNormal_Normal_16_16_16 = 0xF,
	GBC_EncodeNormal_Normal_10_10_10 = 0x10,
	GBC_EncodeNormal_Normal_8_8_8 = 0x11,
	GBC_Packed_Color_5_6_5 = 0x12,
	GBC_Packed_Color_5_6_5_Sqrt = 0x13,
	GBC_Packed_Color_4_4_4 = 0x14,
	GBC_Packed_Color_4_4_4_Sqrt = 0x15,
	GBC_Packed_Color_3_3_2 = 0x16,
	GBC_Packed_Color_3_3_2_Sqrt = 0x17,
	GBC_Packed_Quantized_6 = 0x18,
	GBC_Packed_Quantized_4 = 0x19,
	GBC_Packed_Quantized_2 = 0x1A,
	GBC_Num = 0x1B
};

enum class EGBufferChecker:int
{
	GBCH_Invalid = 0x0,
	GBCH_Even = 0x1,
	GBCH_Odd = 0x2,
	GBCH_Both = 0x3,
	GBCH_Num = 0x4
};

enum class EGBufferType:int
{
	GBT_Invalid = 0x0,
	GBT_Unorm_16_16 = 0x1,
	GBT_Unorm_8_8_8_8 = 0x2,
	GBT_Unorm_11_11_10 = 0x3,
	GBT_Unorm_10_10_10_2 = 0x4,
	GBT_Unorm_16_16_16_16 = 0x5,
	GBT_Float_16_16 = 0x6,
	GBT_Float_16_16_16_16 = 0x7,
	GBT_Num = 0x8
};

namespace EAcceptConnection
{
	enum Type:int
	{
		Reject = 0x0,
		Accept = 0x1,
		Ignore = 0x2
	};
}

enum class ENetworkVersionHistory:int
{
	HISTORY_REPLAY_INITIAL = 0x1,
	HISTORY_SAVE_ABS_TIME_MS = 0x2,
	HISTORY_INCREASE_BUFFER = 0x3,
	HISTORY_SAVE_ENGINE_VERSION = 0x4,
	HISTORY_EXTRA_VERSION = 0x5,
	HISTORY_MULTIPLE_LEVELS = 0x6,
	HISTORY_MULTIPLE_LEVELS_TIME_CHANGES = 0x7,
	HISTORY_DELETED_STARTUP_ACTORS = 0x8,
	HISTORY_HEADER_FLAGS = 0x9,
	HISTORY_LEVEL_STREAMING_FIXES = 0xA,
	HISTORY_SAVE_FULL_ENGINE_VERSION = 0xB,
	HISTORY_HEADER_GUID = 0xC,
	HISTORY_CHARACTER_MOVEMENT = 0xD,
	HISTORY_CHARACTER_MOVEMENT_NOINTERP = 0xE,
	HISTORY_GUID_NAMETABLE = 0xF,
	HISTORY_GUIDCACHE_CHECKSUMS = 0x10,
	HISTORY_SAVE_PACKAGE_VERSION_UE = 0x11,
	HISTORY_RECORDING_METADATA = 0x12,
	HISTORY_USE_CUSTOM_VERSION = 0x13,
	HISTORY_PLUS_ONE = 0x14,
	HISTORY_LATEST = 0x13
};

enum class EAsyncIOPriorityAndFlags:int
{
	AIOP_PRIORITY_MASK = 0xFF,
	AIOP_FLAG_PRECACHE = 0x100,
	AIOP_FLAG_DONTCACHE = 0x200,
	AIOP_MIN = 0x0,
	AIOP_Low = 0x1,
	AIOP_BelowNormal = 0x2,
	AIOP_Normal = 0x3,
	AIOP_High = 0x4,
	AIOP_CriticalPath = 0x5,
	AIOP_MAX = 0x5,
	AIOP_NUM = 0x6,
	AIOP_Precache = 0x100
};

enum class EOrientation:int
{
	Orient_Horizontal = 0x0,
	Orient_Vertical = 0x1
};

namespace EMultiBlockLocation
{
	enum Type:int
	{
		None = 0xFF,
		Start = 0x0,
		Middle = 0x1,
		End = 0x2
	};
}

namespace EWindowTitleAlignment
{
	enum Type:int
	{
		Left = 0x0,
		Center = 0x1,
		Right = 0x2
	};
}

enum class EResourceAlignment:int
{
	VERTEXBUFFER_ALIGNMENT = 0x0,
	INDEXBUFFER_ALIGNMENT = 0x0
};

enum class EMemoryTraceRootHeap:unsigned char
{
	SystemMemory = 0x0,
	VideoMemory = 0x1,
	EndHardcoded = 0x1,
	EndReserved = 0xF
};

enum class ESoundGroup:int
{
	SOUNDGROUP_Default = 0x0,
	SOUNDGROUP_Effects = 0x1,
	SOUNDGROUP_UI = 0x2,
	SOUNDGROUP_Music = 0x3,
	SOUNDGROUP_Voice = 0x4,
	SOUNDGROUP_GameSoundGroup1 = 0x5,
	SOUNDGROUP_GameSoundGroup2 = 0x6,
	SOUNDGROUP_GameSoundGroup3 = 0x7,
	SOUNDGROUP_GameSoundGroup4 = 0x8,
	SOUNDGROUP_GameSoundGroup5 = 0x9,
	SOUNDGROUP_GameSoundGroup6 = 0xA,
	SOUNDGROUP_GameSoundGroup7 = 0xB,
	SOUNDGROUP_GameSoundGroup8 = 0xC,
	SOUNDGROUP_GameSoundGroup9 = 0xD,
	SOUNDGROUP_GameSoundGroup10 = 0xE,
	SOUNDGROUP_GameSoundGroup11 = 0xF,
	SOUNDGROUP_GameSoundGroup12 = 0x10,
	SOUNDGROUP_GameSoundGroup13 = 0x11,
	SOUNDGROUP_GameSoundGroup14 = 0x12,
	SOUNDGROUP_GameSoundGroup15 = 0x13,
	SOUNDGROUP_GameSoundGroup16 = 0x14,
	SOUNDGROUP_GameSoundGroup17 = 0x15,
	SOUNDGROUP_GameSoundGroup18 = 0x16,
	SOUNDGROUP_GameSoundGroup19 = 0x17,
	SOUNDGROUP_GameSoundGroup20 = 0x18
};

enum class TextureCompressionSettings:int
{
	TC_Default = 0x0,
	TC_Normalmap = 0x1,
	TC_Masks = 0x2,
	TC_Grayscale = 0x3,
	TC_Displacementmap = 0x4,
	TC_VectorDisplacementmap = 0x5,
	TC_HDR = 0x6,
	TC_EditorIcon = 0x7,
	TC_Alpha = 0x8,
	TC_DistanceFieldFont = 0x9,
	TC_HDR_Compressed = 0xA,
	TC_BC7 = 0xB,
	TC_HalfFloat = 0xC,
	TC_LQ = 0xD,
	TC_EncodedReflectionCapture = 0xE,
	TC_SingleFloat = 0xF,
	TC_HDR_F32 = 0x10,
	TC_MAX = 0x11
};

enum class ECompareFunction:int
{
	CF_Less = 0x0,
	CF_LessEqual = 0x1,
	CF_Greater = 0x2,
	CF_GreaterEqual = 0x3,
	CF_Equal = 0x4,
	CF_NotEqual = 0x5,
	CF_Never = 0x6,
	CF_Always = 0x7,
	ECompareFunction_Num = 0x8,
	ECompareFunction_NumBits = 0x3,
	CF_DepthNearOrEqual = 0x3,
	CF_DepthNear = 0x2,
	CF_DepthFartherOrEqual = 0x1,
	CF_DepthFarther = 0x0
};

namespace FunctionCallspace
{
	enum Type:int
	{
		Absorbed = 0x0,
		Remote = 0x1,
		Local = 0x2
	};
}

enum class EIoDispatcherPriority:unsigned __int64
{
	IoDispatcherPriority_Min = 0x80000000,
	IoDispatcherPriority_Low = 0xC0000000,
	IoDispatcherPriority_Medium = 0x0,
	IoDispatcherPriority_High = 0x3FFFFFFF,
	IoDispatcherPriority_Max = 0x7FFFFFFF
};

enum class EBlendMode:int
{
	BLEND_Opaque = 0x0,
	BLEND_Masked = 0x1,
	BLEND_Translucent = 0x2,
	BLEND_Additive = 0x3,
	BLEND_Modulate = 0x4,
	BLEND_AlphaComposite = 0x5,
	BLEND_AlphaHoldout = 0x6,
	BLEND_TranslucentColoredTransmittance = 0x7,
	BLEND_MAX = 0x8,
	BLEND_TranslucentGreyTransmittance = 0x2,
	BLEND_ColoredTransmittanceOnly = 0x4
};

enum class ETranslucencyLightingMode:int
{
	TLM_VolumetricNonDirectional = 0x0,
	TLM_VolumetricDirectional = 0x1,
	TLM_VolumetricPerVertexNonDirectional = 0x2,
	TLM_VolumetricPerVertexDirectional = 0x3,
	TLM_Surface = 0x4,
	TLM_SurfacePerPixelLighting = 0x5,
	TLM_MAX = 0x6
};

enum class ESocketErrors:int
{
	SE_NO_ERROR = 0x0,
	SE_EINTR = 0x1,
	SE_EBADF = 0x2,
	SE_EACCES = 0x3,
	SE_EFAULT = 0x4,
	SE_EINVAL = 0x5,
	SE_EMFILE = 0x6,
	SE_EWOULDBLOCK = 0x7,
	SE_EINPROGRESS = 0x8,
	SE_EALREADY = 0x9,
	SE_ENOTSOCK = 0xA,
	SE_EDESTADDRREQ = 0xB,
	SE_EMSGSIZE = 0xC,
	SE_EPROTOTYPE = 0xD,
	SE_ENOPROTOOPT = 0xE,
	SE_EPROTONOSUPPORT = 0xF,
	SE_ESOCKTNOSUPPORT = 0x10,
	SE_EOPNOTSUPP = 0x11,
	SE_EPFNOSUPPORT = 0x12,
	SE_EAFNOSUPPORT = 0x13,
	SE_EADDRINUSE = 0x14,
	SE_EADDRNOTAVAIL = 0x15,
	SE_ENETDOWN = 0x16,
	SE_ENETUNREACH = 0x17,
	SE_ENETRESET = 0x18,
	SE_ECONNABORTED = 0x19,
	SE_ECONNRESET = 0x1A,
	SE_ENOBUFS = 0x1B,
	SE_EISCONN = 0x1C,
	SE_ENOTCONN = 0x1D,
	SE_ESHUTDOWN = 0x1E,
	SE_ETOOMANYREFS = 0x1F,
	SE_ETIMEDOUT = 0x20,
	SE_ECONNREFUSED = 0x21,
	SE_ELOOP = 0x22,
	SE_ENAMETOOLONG = 0x23,
	SE_EHOSTDOWN = 0x24,
	SE_EHOSTUNREACH = 0x25,
	SE_ENOTEMPTY = 0x26,
	SE_EPROCLIM = 0x27,
	SE_EUSERS = 0x28,
	SE_EDQUOT = 0x29,
	SE_ESTALE = 0x2A,
	SE_EREMOTE = 0x2B,
	SE_EDISCON = 0x2C,
	SE_SYSNOTREADY = 0x2D,
	SE_VERNOTSUPPORTED = 0x2E,
	SE_NOTINITIALISED = 0x2F,
	SE_HOST_NOT_FOUND = 0x30,
	SE_TRY_AGAIN = 0x31,
	SE_NO_RECOVERY = 0x32,
	SE_NO_DATA = 0x33,
	SE_UDP_ERR_PORT_UNREACH = 0x34,
	SE_ADDRFAMILY = 0x35,
	SE_SYSTEM = 0x36,
	SE_NODEV = 0x37,
	SE_GET_LAST_ERROR_CODE = 0x38
};

enum class ESaveFlags:unsigned __int64
{
	SAVE_None = 0x0,
	SAVE_NoError = 0x1,
	SAVE_FromAutosave = 0x2,
	SAVE_KeepDirty = 0x4,
	SAVE_KeepGUID = 0x8,
	SAVE_Async = 0x10,
	SAVE_Unversioned_Native = 0x20,
	SAVE_CutdownPackage = 0x40,
	SAVE_KeepEditorOnlyCookedPackages = 0x80,
	SAVE_Concurrent = 0x100,
	SAVE_DiffOnly = 0x200,
	SAVE_DiffCallstack = 0x400,
	SAVE_ComputeHash = 0x800,
	SAVE_CompareLinker = 0x1000,
	SAVE_BulkDataByReference = 0x2000,
	SAVE_Unversioned_Properties = 0x4000,
	SAVE_Optional = 0xFFFF8000,
	SAVE_AllowTimeout = 0x10000,
	SAVE_RehydratePayloads = 0x20000,
	SAVE_Unversioned = 0x4020
};

namespace EImmediateFlushType
{
	enum Type:int
	{
		WaitForOutstandingTasksOnly = 0x0,
		DispatchToRHIThread = 0x1,
		FlushRHIThread = 0x2,
		FlushRHIThreadFlushResources = 0x3
	};
}

namespace ESlateBrushRoundingType
{
	enum Type:int
	{
		FixedRadius = 0x0,
		HalfHeightRadius = 0x1
	};
}

namespace EMaterialQualityLevel
{
	enum Type: char
	{
		Low = 0x0,
		High = 0x1,
		Medium = 0x2,
		Epic = 0x3,
		Num = 0x4
	};
}

namespace EProxyNormalComputationMethod
{
	enum Type:int
	{
		AngleWeighted = 0x0,
		AreaWeighted = 0x1,
		EqualWeighted = 0x2
	};
}

enum class ECubeFace:unsigned int
{
	CubeFace_PosX = 0x0,
	CubeFace_NegX = 0x1,
	CubeFace_PosY = 0x2,
	CubeFace_NegY = 0x3,
	CubeFace_PosZ = 0x4,
	CubeFace_NegZ = 0x5,
	CubeFace_MAX = 0x6
};

enum class EEdGraphPinDirection:int
{
	EGPD_Input = 0x0,
	EGPD_Output = 0x1,
	EGPD_MAX = 0x2
};

enum class FRWScopeLockType:int
{
	SLT_ReadOnly = 0x0,
	SLT_Write = 0x1
};

namespace EButtonClickMethod
{
	enum Type:int
	{
		DownAndUp = 0x0,
		MouseDown = 0x1,
		MouseUp = 0x2,
		PreciseClick = 0x3
	};
}

namespace EChunkLocation
{
	enum Type:int
	{
		DoesNotExist = 0x0,
		NotAvailable = 0x1,
		LocalSlow = 0x2,
		LocalFast = 0x3,
		BestLocation = 0x3
	};
}

namespace EChunkProgressReportingType
{
	enum Type:int
	{
		ETA = 0x0,
		PercentageComplete = 0x1
	};
}

namespace EChunkInstallSpeed
{
	enum Type:int
	{
		Paused = 0x0,
		Slow = 0x1,
		Fast = 0x2
	};
}

namespace ESlateBrushTileType
{
	enum Type:int
	{
		NoTile = 0x0,
		Horizontal = 0x1,
		Vertical = 0x2,
		Both = 0x3
	};
}

enum class EThreadPriority:int
{
	TPri_Normal = 0x0,
	TPri_AboveNormal = 0x1,
	TPri_BelowNormal = 0x2,
	TPri_Highest = 0x3,
	TPri_Lowest = 0x4,
	TPri_SlightlyBelowNormal = 0x5,
	TPri_TimeCritical = 0x6,
	TPri_Num = 0x7
};

enum class ECameraShakePlaySpace:unsigned char
{
	CameraLocal = 0x0,
	World = 0x1,
	UserDefined = 0x2
};

enum class ECollisionResponse:int
{
	ECR_Ignore = 0x0,
	ECR_Overlap = 0x1,
	ECR_Block = 0x2,
	ECR_MAX = 0x3
};

enum class ERasterizerCullMode:int
{
	CM_None = 0x0,
	CM_CW = 0x1,
	CM_CCW = 0x2,
	ERasterizerCullMode_Num = 0x3,
	ERasterizerCullMode_NumBits = 0x2
};

namespace ECompilationResult
{
	enum Type:int
	{
		Succeeded = 0x0,
		Canceled = 0x1,
		UpToDate = 0x2,
		CrashOrAssert = 0x3,
		FailedDueToHeaderChange = 0x4,
		FailedDueToEngineChange = 0x5,
		OtherCompilationError = 0x6,
		LiveCodingLimitError = 0x7,
		Unsupported = 0x8,
		Unknown = 0x9
	};
}

namespace EProjectDescriptorVersion
{
	enum Type:int
	{
		Invalid = 0x0,
		Initial = 0x1,
		NameHash = 0x2,
		ProjectPluginUnification = 0x3,
		LatestPlusOne = 0x4,
		Latest = 0x3
	};
}

namespace ELocalizationTargetDescriptorLoadingPolicy
{
	enum Type:int
	{
		Never = 0x0,
		Always = 0x1,
		Editor = 0x2,
		Game = 0x3,
		PropertyNames = 0x4,
		ToolTips = 0x5,
		Max = 0x6
	};
}

namespace ELoadingPhase
{
	enum Type:int
	{
		EarliestPossible = 0x0,
		PostConfigInit = 0x1,
		PostSplashScreen = 0x2,
		PreEarlyLoadingScreen = 0x3,
		PreLoadingScreen = 0x4,
		PreDefault = 0x5,
		Default = 0x6,
		PostDefault = 0x7,
		PostEngineInit = 0x8,
		None = 0x9,
		Max = 0xA
	};
}

namespace EHostType
{
	enum Type:int
	{
		Runtime = 0x0,
		RuntimeNoCommandlet = 0x1,
		RuntimeAndProgram = 0x2,
		CookedOnly = 0x3,
		UncookedOnly = 0x4,
		Developer = 0x5,
		DeveloperTool = 0x6,
		Editor = 0x7,
		EditorNoCommandlet = 0x8,
		EditorAndProgram = 0x9,
		Program = 0xA,
		ServerOnly = 0xB,
		ClientOnly = 0xC,
		ClientOnlyNoCommandlet = 0xD,
		Max = 0xE
	};
}

namespace ELinkerType
{
	enum Type:int
	{
		None = 0x0,
		Load = 0x1,
		Save = 0x2
	};
}

namespace EAnimNotifyEventType
{
	enum Type:int
	{
		Begin = 0x0,
		End = 0x1
	};
}

enum class EInterpCurveMode:int
{
	CIM_Linear = 0x0,
	CIM_CurveAuto = 0x1,
	CIM_Constant = 0x2,
	CIM_CurveUser = 0x3,
	CIM_CurveBreak = 0x4,
	CIM_CurveAutoClamped = 0x5,
	CIM_Unknown = 0x6
};

enum class ENetMode:int
{
	NM_Standalone = 0x0,
	NM_DedicatedServer = 0x1,
	NM_ListenServer = 0x2,
	NM_Client = 0x3,
	NM_MAX = 0x4
};

enum class EDrawRectangleFlags:int
{
	EDRF_Default = 0x0,
	EDRF_UseTriangleOptimization = 0x1,
	EDRF_UseTesselatedIndexBuffer = 0x2
};

enum class EDebugViewShaderMode:int
{
	DVSM_None = 0x0,
	DVSM_ShaderComplexity = 0x1,
	DVSM_ShaderComplexityContainedQuadOverhead = 0x2,
	DVSM_ShaderComplexityBleedingQuadOverhead = 0x3,
	DVSM_QuadComplexity = 0x4,
	DVSM_PrimitiveDistanceAccuracy = 0x5,
	DVSM_MeshUVDensityAccuracy = 0x6,
	DVSM_MaterialTextureScaleAccuracy = 0x7,
	DVSM_OutputMaterialTextureScales = 0x8,
	DVSM_RequiredTextureResolution = 0x9,
	DVSM_VirtualTexturePendingMips = 0xA,
	DVSM_LODColoration = 0xB,
	DVSM_VisualizeGPUSkinCache = 0xC,
	DVSM_MAX = 0xD
};

enum class ERichCurveTangentWeightMode:int
{
	RCTWM_WeightedNone = 0x0,
	RCTWM_WeightedArrive = 0x1,
	RCTWM_WeightedLeave = 0x2,
	RCTWM_WeightedBoth = 0x3
};

namespace EAnimLinkMethod
{
	enum Type:int
	{
		Absolute = 0x0,
		Relative = 0x1,
		Proportional = 0x2
	};
}

enum class EImportStaticMeshVersion:int
{
	BeforeImportStaticMeshVersionWasAdded = 0x0,
	RemoveStaticMeshSkinxxWorkflow = 0x1,
	StaticMeshVersionPlusOne = 0x2,
	LastVersion = 0x1
};

namespace ERigidBodyFlags
{
	enum Type:int
	{
		None = 0x0,
		Sleeping = 0x1,
		NeedsUpdate = 0x2
	};
}

enum class ERHITextureSRVOverrideSRGBType:unsigned char
{
	SRGBO_Default = 0x0,
	SRGBO_ForceDisable = 0x1
};

enum class EMaterialShadingRate:int
{
	MSR_1x1 = 0x0,
	MSR_2x1 = 0x1,
	MSR_1x2 = 0x2,
	MSR_2x2 = 0x3,
	MSR_4x2 = 0x4,
	MSR_2x4 = 0x5,
	MSR_4x4 = 0x6,
	MSR_Count = 0x7
};

namespace ESlateBrushImageType
{
	enum Type:int
	{
		NoImage = 0x0,
		FullColor = 0x1,
		Linear = 0x2,
		Vector = 0x3
	};
}

enum class EMaterialDomain:int
{
	MD_Surface = 0x0,
	MD_DeferredDecal = 0x1,
	MD_LightFunction = 0x2,
	MD_Volume = 0x3,
	MD_PostProcess = 0x4,
	MD_UI = 0x5,
	MD_RuntimeVirtualTexture = 0x6,
	MD_Compute = 0x7,
	MD_MAX = 0x8
};

enum class ENetDormancy:int
{
	DORM_Never = 0x0,
	DORM_Awake = 0x1,
	DORM_DormantAll = 0x2,
	DORM_DormantPartial = 0x3,
	DORM_Initial = 0x4,
	DORM_MAX = 0x5
};

enum class EObjectMark:int
{
	OBJECTMARK_NOMARKS = 0x0,
	OBJECTMARK_Saved = 0x4,
	OBJECTMARK_TagImp = 0x8,
	OBJECTMARK_TagExp = 0x10,
	OBJECTMARK_NotForClient = 0x20,
	OBJECTMARK_NotForServer = 0x40,
	OBJECTMARK_NotAlwaysLoadedForEditorGame = 0x80,
	OBJECTMARK_EditorOnly = 0x100,
	OBJECTMARK_NotForTargetPlatform = 0x200,
	OBJECTMARK_INHERITEDMARKS = 0x360,
	OBJECTMARK_ALLMARKS = 0xFF
};

enum class EColorWriteMask:int
{
	CW_RED = 0x1,
	CW_GREEN = 0x2,
	CW_BLUE = 0x4,
	CW_ALPHA = 0x8,
	CW_NONE = 0x0,
	CW_RGB = 0x7,
	CW_RGBA = 0xF,
	CW_RG = 0x3,
	CW_BA = 0xC,
	EColorWriteMask_NumBits = 0x4
};

enum class EConnectionState:int
{
	USOCK_Invalid = 0x0,
	USOCK_Closed = 0x1,
	USOCK_Pending = 0x2,
	USOCK_Open = 0x3
};

enum class ERichCurveExtrapolation:int
{
	RCCE_Cycle = 0x0,
	RCCE_CycleWithOffset = 0x1,
	RCCE_Oscillate = 0x2,
	RCCE_Linear = 0x3,
	RCCE_Constant = 0x4,
	RCCE_None = 0x5
};

enum class ERepDataBufferType:int
{
	ObjectBuffer = 0x0,
	ShadowBuffer = 0x1
};

enum class EGCReferenceType:int
{
	GCRT_None = 0x0,
	GCRT_Object = 0x1,
	GCRT_ExternalPackage = 0x2,
	GCRT_ArrayObject = 0x3,
	GCRT_ArrayStruct = 0x4,
	GCRT_FixedArray = 0x5,
	GCRT_AddStructReferencedObjects = 0x6,
	GCRT_AddReferencedObjects = 0x7,
	GCRT_AddTMapReferencedObjects = 0x8,
	GCRT_AddTSetReferencedObjects = 0x9,
	GCRT_AddFieldPathReferencedObject = 0xA,
	GCRT_ArrayAddFieldPathReferencedObject = 0xB,
	GCRT_EndOfPointer = 0xC,
	GCRT_EndOfStream = 0xD,
	GCRT_ArrayObjectFreezable = 0xE,
	GCRT_ArrayStructFreezable = 0xF,
	GCRT_Optional = 0x10,
	GCRT_WeakObject = 0x11,
	GCRT_ArrayWeakObject = 0x12,
	GCRT_LazyObject = 0x13,
	GCRT_ArrayLazyObject = 0x14,
	GCRT_SoftObject = 0x15,
	GCRT_ArraySoftObject = 0x16,
	GCRT_Delegate = 0x17,
	GCRT_ArrayDelegate = 0x18,
	GCRT_MulticastDelegate = 0x19,
	GCRT_ArrayMulticastDelegate = 0x1A,
	GCRT_DynamicallyTypedValue = 0x1B,
	GCRT_SlowAddReferencedObjects = 0x1C
};

enum class EFileRead:int
{
	FILEREAD_None = 0x0,
	FILEREAD_NoFail = 0x1,
	FILEREAD_Silent = 0x2,
	FILEREAD_AllowWrite = 0x4
};

enum class EFileWrite:int
{
	FILEWRITE_None = 0x0,
	FILEWRITE_NoFail = 0x1,
	FILEWRITE_NoReplaceExisting = 0x2,
	FILEWRITE_EvenIfReadOnly = 0x4,
	FILEWRITE_Append = 0x8,
	FILEWRITE_AllowRead = 0x10,
	FILEWRITE_Silent = 0x20
};

namespace ESlateBrushDrawType
{
	enum Type:int
	{
		NoDrawType = 0x0,
		Box = 0x1,
		Border = 0x2,
		Image = 0x3,
		RoundedBox = 0x4
	};
}

enum class EHorizontalAlignment:int
{
	HAlign_Fill = 0x0,
	HAlign_Left = 0x1,
	HAlign_Center = 0x2,
	HAlign_Right = 0x3
};

namespace EMaterialShaderMapUsage
{
	enum Type:int
	{
		Default = 0x0,
		LightmassExportEmissive = 0x1,
		LightmassExportDiffuse = 0x2,
		LightmassExportOpacity = 0x3,
		LightmassExportNormal = 0x4,
		MaterialExportBaseColor = 0x5,
		MaterialExportSpecular = 0x6,
		MaterialExportNormal = 0x7,
		MaterialExportTangent = 0x8,
		MaterialExportMetallic = 0x9,
		MaterialExportRoughness = 0xA,
		MaterialExportAnisotropy = 0xB,
		MaterialExportAO = 0xC,
		MaterialExportEmissive = 0xD,
		MaterialExportOpacity = 0xE,
		MaterialExportOpacityMask = 0xF,
		MaterialExportSubSurfaceColor = 0x10,
		MaterialExportClearCoat = 0x11,
		MaterialExportClearCoatRoughness = 0x12,
		MaterialExportCustomOutput = 0x13,
		MaterialExportShadingModel = 0x14,
		MaterialExportRefraction = 0x15
	};
}

namespace ERenderThreadIdleTypes
{
	enum Type:int
	{
		WaitingForAllOtherSleep = 0x0,
		WaitingForGPUQuery = 0x1,
		WaitingForGPUPresent = 0x2,
		Num = 0x3
	};
}

enum class AnimationCompressionFormat:int
{
	ACF_None = 0x0,
	ACF_Float96NoW = 0x1,
	ACF_Fixed48NoW = 0x2,
	ACF_IntervalFixed32NoW = 0x3,
	ACF_Fixed32NoW = 0x4,
	ACF_Float32NoW = 0x5,
	ACF_Identity = 0x6,
	ACF_MAX = 0x7
};

enum class EBlendOperation:int
{
	BO_Add = 0x0,
	BO_Subtract = 0x1,
	BO_Min = 0x2,
	BO_Max = 0x3,
	BO_ReverseSubtract = 0x4,
	EBlendOperation_Num = 0x5,
	EBlendOperation_NumBits = 0x3
};

enum class ESceneDepthPriorityGroup:int
{
	SDPG_World = 0x0,
	SDPG_Foreground = 0x1,
	SDPG_MAX = 0x2
};

enum class ERasterizerFillMode:int
{
	FM_Point = 0x0,
	FM_Wireframe = 0x1,
	FM_Solid = 0x2,
	ERasterizerFillMode_Num = 0x3,
	ERasterizerFillMode_NumBits = 0x2
};

enum class ESamplerFilter:int
{
	SF_Point = 0x0,
	SF_Bilinear = 0x1,
	SF_Trilinear = 0x2,
	SF_AnisotropicPoint = 0x3,
	SF_AnisotropicLinear = 0x4,
	ESamplerFilter_Num = 0x5,
	ESamplerFilter_NumBits = 0x3
};

namespace EMessageSeverity
{
	enum Type:int
	{
		CriticalError = 0x0,
		Error = 0x1,
		PerformanceWarning = 0x2,
		Warning = 0x3,
		Info = 0x4
	};
}

namespace EModType
{
	enum Type:int
	{
		Unknown = 0x0,
		Game = 0x1,
		Map = 0x2,
		TotalConversion = 0x3,
		IslandExtension = 0x4
	};
}

namespace EButtonTouchMethod
{
	enum Type:int
	{
		DownAndUp = 0x0,
		Down = 0x1,
		PreciseTap = 0x2
	};
}

enum class EImportanceLevel:int
{
	IL_Off = 0x0,
	IL_Lowest = 0x1,
	IL_Low = 0x2,
	IL_Normal = 0x3,
	IL_High = 0x4,
	IL_Highest = 0x5,
	TEMP_BROKEN2 = 0x6,
	EImportanceLevel_MAX = 0x7
};

namespace EMeshFeatureImportance
{
	enum Type:int
	{
		Off = 0x0,
		Lowest = 0x1,
		Low = 0x2,
		Normal = 0x3,
		High = 0x4,
		Highest = 0x5
	};
}

enum class EBspNodeFlags:int
{
	NF_NotCsg = 0x1,
	NF_NotVisBlocking = 0x4,
	NF_BrightCorners = 0x10,
	NF_IsNew = 0x20,
	NF_IsFront = 0x40,
	NF_IsBack = 0x80
};

namespace ENetworkLagState
{
	enum Type:int
	{
		NotLagging = 0x0,
		Lagging = 0x1
	};
}

enum class ETranslucencyVolumeCascade:int
{
	TVC_Inner = 0x0,
	TVC_Outer = 0x1,
	TVC_MAX = 0x2
};

enum class TextureAddress:int
{
	TA_Wrap = 0x0,
	TA_Clamp = 0x1,
	TA_Mirror = 0x2,
	TA_MAX = 0x3
};

namespace ERangeBoundTypes
{
	enum Type:int
	{
		Exclusive = 0x0,
		Inclusive = 0x1,
		Open = 0x2
	};
}

enum class ESlateTextureAtlasPaddingStyle:int
{
	NoPadding = 0x0,
	DilateBorder = 0x1,
	PadWithZero = 0x2
};

namespace ERootMotionMode
{
	enum Type:int
	{
		NoRootMotionExtraction = 0x0,
		IgnoreRootMotion = 0x1,
		RootMotionFromEverything = 0x2,
		RootMotionFromMontagesOnly = 0x3
	};
}

enum class EVRSShadingRate:unsigned char
{
	VRSSR_1x1 = 0x0,
	VRSSR_1x2 = 0x1,
	VRSSR_2x1 = 0x4,
	VRSSR_2x2 = 0x5,
	VRSSR_2x4 = 0x6,
	VRSSR_4x2 = 0x9,
	VRSSR_4x4 = 0xA,
	VRSSR_Last = 0xA
};

enum class EMaterialParameterAssociation:int
{
	LayerParameter = 0x0,
	BlendParameter = 0x1,
	GlobalParameter = 0x2
};

namespace ECollisionEnabled
{
	enum Type:int
	{
		NoCollision = 0x0,
		QueryOnly = 0x1,
		PhysicsOnly = 0x2,
		QueryAndPhysics = 0x3,
		ProbeOnly = 0x4,
		QueryAndProbe = 0x5
	};
}

enum class EMenuPlacement:int
{
	MenuPlacement_BelowAnchor = 0x0,
	MenuPlacement_CenteredBelowAnchor = 0x1,
	MenuPlacement_BelowRightAnchor = 0x2,
	MenuPlacement_ComboBox = 0x3,
	MenuPlacement_ComboBoxRight = 0x4,
	MenuPlacement_MenuRight = 0x5,
	MenuPlacement_AboveAnchor = 0x6,
	MenuPlacement_CenteredAboveAnchor = 0x7,
	MenuPlacement_AboveRightAnchor = 0x8,
	MenuPlacement_MenuLeft = 0x9,
	MenuPlacement_Center = 0xA,
	MenuPlacement_RightLeftCenter = 0xB,
	MenuPlacement_MatchBottomLeft = 0xC
};

namespace EClientLoginState
{
	enum Type:int
	{
		Invalid = 0x0,
		LoggingIn = 0x1,
		Welcomed = 0x2,
		ReceivedJoin = 0x3,
		CleanedUp = 0x4
	};
}

namespace ELaunchVerb
{
	enum Type:int
	{
		Open = 0x0,
		Edit = 0x1
	};
}

enum class EConstructTextureFlags:int
{
	CTF_Compress = 0x1,
	CTF_DeferCompression = 0x2,
	CTF_SRGB = 0x4,
	CTF_AllowMips = 0x8,
	CTF_ForceOneBitAlpha = 0x10,
	CTF_RemapAlphaAsMasked = 0x20,
	CTF_ForceOpaque = 0x40,
	CTF_Default = 0x5
};

enum class ERelativeTransformSpace:int
{
	RTS_World = 0x0,
	RTS_Actor = 0x1,
	RTS_Component = 0x2,
	RTS_ParentBoneSpace = 0x3
};

namespace EColumnSortMode
{
	enum Type:int
	{
		None = 0x0,
		Ascending = 0x1,
		Descending = 0x2
	};
}

namespace EMessageToken
{
	enum Type:int
	{
		Action = 0x0,
		Actor = 0x1,
		AssetName = 0x2,
		Documentation = 0x3,
		Image = 0x4,
		Object = 0x5,
		Severity = 0x6,
		Text = 0x7,
		Tutorial = 0x8,
		URL = 0x9,
		EdGraph = 0xA,
		DynamicText = 0xB
	};
}

namespace EColumnSizeMode
{
	enum Type:int
	{
		Fill = 0x0,
		Fixed = 0x1,
		Manual = 0x2,
		FillSized = 0x3
	};
}

enum class ESamplerCompareFunction:int
{
	SCF_Never = 0x0,
	SCF_Less = 0x1
};

namespace EScopedUpdate
{
	enum Type:int
	{
		ImmediateUpdates = 0x0,
		DeferredUpdates = 0x1
	};
}

namespace EBoneSpaces
{
	enum Type:int
	{
		WorldSpace = 0x0,
		ComponentSpace = 0x1
	};
}

namespace EComponentMobility
{
	enum Type:int
	{
		Static = 0x0,
		Stationary = 0x1,
		Movable = 0x2
	};
}

enum class ECollisionChannel:int
{
	ECC_WorldStatic = 0x0,
	ECC_WorldDynamic = 0x1,
	ECC_Visibility = 0x2,
	ECC_PhysicsBody = 0x3,
	ECC_Destructible = 0x4,
	ECC_GameTraceChannel1 = 0x5,
	ECC_GameTraceChannel2 = 0x6,
	ECC_GameTraceChannel3 = 0x7,
	ECC_GameTraceChannel4 = 0x8,
	ECC_GameTraceChannel5 = 0x9,
	ECC_GameTraceChannel6 = 0xA,
	ECC_GameTraceChannel7 = 0xB,
	ECC_GameTraceChannel8 = 0xC,
	ECC_GameTraceChannel9 = 0xD,
	ECC_GameTraceChannel10 = 0xE,
	ECC_GameTraceChannel11 = 0xF,
	ECC_GameTraceChannel12 = 0x10,
	ECC_GameTraceChannel13 = 0x11,
	ECC_GameTraceChannel14 = 0x12,
	ECC_GameTraceChannel15 = 0x13,
	ECC_GameTraceChannel16 = 0x14,
	ECC_GameTraceChannel17 = 0x15,
	ECC_GameTraceChannel18 = 0x16,
	ECC_GameTraceChannel19 = 0x17,
	ECC_GameTraceChannel20 = 0x18,
	ECC_GameTraceChannel21 = 0x19,
	ECC_GameTraceChannel22 = 0x1A,
	ECC_GameTraceChannel23 = 0x1B,
	ECC_GameTraceChannel24 = 0x1C,
	ECC_GameTraceChannel25 = 0x1D,
	ECC_GameTraceChannel26 = 0x1E,
	ECC_GameTraceChannel27 = 0x1F,
	ECC_OverlapAll_Deprecated = 0x20,
	ECC_MAX = 0x21
};

namespace ETransitionLogicType
{
	enum Type:int
	{
		TLT_StandardBlend = 0x0,
		TLT_Inertialization = 0x1,
		TLT_Custom = 0x2
	};
}

namespace ECameraProjectionMode
{
	enum Type:int
	{
		Perspective = 0x0,
		Orthographic = 0x1
	};
}

enum class EBloomMethod:int
{
	BM_SOG = 0x0,
	BM_FFT = 0x1,
	BM_MAX = 0x2
};

namespace EWindowZone
{
	enum Type:int
	{
		NotInWindow = 0x0,
		TopLeftBorder = 0x1,
		TopBorder = 0x2,
		TopRightBorder = 0x3,
		LeftBorder = 0x4,
		ClientArea = 0x5,
		RightBorder = 0x6,
		BottomLeftBorder = 0x7,
		BottomBorder = 0x8,
		BottomRightBorder = 0x9,
		TitleBar = 0xA,
		MinimizeButton = 0xB,
		MaximizeButton = 0xC,
		CloseButton = 0xD,
		SysMenu = 0xE,
		Unspecified = 0x0
	};
}

namespace EButtonPressMethod
{
	enum Type:int
	{
		DownAndUp = 0x0,
		ButtonPress = 0x1,
		ButtonRelease = 0x2
	};
}

namespace MarkerIndexSpecialValues
{
	enum Type:int
	{
		Unitialized = 0xFE,
		AnimationBoundary = 0xFF
	};
}

namespace EBoneTranslationRetargetingMode
{
	enum Type:int
	{
		Animation = 0x0,
		Skeleton = 0x1,
		AnimationScaled = 0x2,
		AnimationRelative = 0x3,
		OrientAndScale = 0x4
	};
}

namespace ENavigationDirtyFlag
{
	enum Type:int
	{
		Geometry = 0x1,
		DynamicModifier = 0x2,
		UseAgentHeight = 0x4,
		NavigationBounds = 0x8,
		All = 0x3
	};
}

namespace EIncludeSuperFlag
{
	enum Type:int
	{
		ExcludeSuper = 0x0,
		IncludeSuper = 0x1
	};
}

namespace EDynamicForceFeedbackAction
{
	enum Type:int
	{
		Start = 0x0,
		Update = 0x1,
		Stop = 0x2
	};
}

enum class ECompilerFlags:int
{
	CFLAG_PreferFlowControl = 0x0,
	CFLAG_Debug = 0x1,
	CFLAG_AvoidFlowControl = 0x2,
	CFLAG_SkipValidation = 0x3,
	CFLAG_StandardOptimization = 0x4,
	CFLAG_ForceOptimization = 0x5,
	CFLAG_GenerateSymbols = 0x6,
	CFLAG_ExtraShaderData = 0x7,
	CFLAG_AllowUniqueSymbols = 0x8,
	CFLAG_NoFastMath = 0x9,
	CFLAG_ZeroInitialise = 0xA,
	CFLAG_BoundsChecking = 0xB,
	CFLAG_ForceRemoveUnusedInterpolators = 0xC,
	CFLAG_VertexToGeometryShader = 0xD,
	CFLAG_VertexToPrimitiveShader = 0xE,
	CFLAG_VertexUseAutoCulling = 0xF,
	CFLAG_Archive = 0x10,
	CFLAG_UsesExternalTexture = 0x11,
	CFLAG_UseEmulatedUB = 0x12,
	CFLAG_WaveOperations = 0x13,
	CFLAG_ForceDXC = 0x14,
	CFLAG_SkipOptimizations = 0x15,
	CFLAG_SkipOptimizationsDXC = 0x16,
	CFLAG_AllowTypedUAVLoads = 0x17,
	CFLAG_Wave32 = 0x18,
	CFLAG_InlineRayTracing = 0x19,
	CFLAG_D3D12ForceShaderConductorRewrite = 0x1A,
	CFLAG_AllowRealTypes = 0x1B,
	CFLAG_PrecompileWithDXC = 0x1C,
	CFLAG_HLSL2021 = 0x1D,
	CFLAG_WarningsAsErrors = 0x1E,
	CFLAG_BindlessResources = 0x1F,
	CFLAG_BindlessSamplers = 0x20,
	CFLAG_RemoveDeadCode = 0x21,
	CFLAG_UseLegacyPreprocessor = 0x22,
	CFLAG_Max = 0x23
};

enum class EShaderParameterFlags:int
{
	SPF_Optional = 0x0,
	SPF_Mandatory = 0x1
};

namespace EDropEffect
{
	enum Type:int
	{
		None = 0x0,
		Copy = 0x1,
		Move = 0x2,
		Link = 0x3
	};
}

namespace ECollisionShape
{
	enum Type:int
	{
		Line = 0x0,
		Box = 0x1,
		Sphere = 0x2,
		Capsule = 0x3
	};
}

namespace ETransformBlendMode
{
	enum Type:int
	{
		Overwrite = 0x0,
		Accumulate = 0x1
	};
}

namespace EAudioMixerChannel
{
	enum Type:int
	{
		FrontLeft = 0x0,
		FrontRight = 0x1,
		FrontCenter = 0x2,
		LowFrequency = 0x3,
		BackLeft = 0x4,
		BackRight = 0x5,
		FrontLeftOfCenter = 0x6,
		FrontRightOfCenter = 0x7,
		BackCenter = 0x8,
		SideLeft = 0x9,
		SideRight = 0xA,
		TopCenter = 0xB,
		TopFrontLeft = 0xC,
		TopFrontCenter = 0xD,
		TopFrontRight = 0xE,
		TopBackLeft = 0xF,
		TopBackCenter = 0x10,
		TopBackRight = 0x11,
		Unknown = 0x12,
		ChannelTypeCount = 0x13,
		DefaultChannel = 0x0
	};
}

enum class ERichCurveCompressionFormat:int
{
	RCCF_Empty = 0x0,
	RCCF_Constant = 0x1,
	RCCF_Linear = 0x2,
	RCCF_Cubic = 0x3,
	RCCF_Mixed = 0x4,
	RCCF_Weighted = 0x5
};

namespace EAxisOption
{
	enum Type:int
	{
		X = 0x0,
		Y = 0x1,
		Z = 0x2,
		X_Neg = 0x3,
		Y_Neg = 0x4,
		Z_Neg = 0x5,
		Custom = 0x6
	};
}

enum class EPrimitiveIdMode:int
{
	PrimID_FromPrimitiveSceneInfo = 0x0,
	PrimID_DynamicPrimitiveShaderData = 0x1,
	PrimID_ForceZero = 0x2,
	PrimID_Num = 0x4,
	PrimID_NumBits = 0x2
};

enum class EBlendableLocation:int
{
	BL_AfterTonemapping = 0x0,
	BL_BeforeTonemapping = 0x1,
	BL_BeforeTranslucency = 0x2,
	BL_ReplacingTonemapper = 0x3,
	BL_SSRInput = 0x4,
	BL_MAX = 0x5
};

namespace EBPMapCheckSeverity
{
	enum Type:int
	{
		Info = 0x0,
		Warning = 0x1,
		PerformanceWarning = 0x2,
		Error = 0x3
	};
}

enum class EAntiAliasingMethod:int
{
	AAM_None = 0x0,
	AAM_FXAA = 0x1,
	AAM_TemporalAA = 0x2,
	AAM_MSAA = 0x3,
	AAM_TSR = 0x4,
	AAM_MAX = 0x5
};

enum class ELifetimeRepNotifyCondition:int
{
	REPNOTIFY_OnChanged = 0x0,
	REPNOTIFY_Always = 0x1
};

namespace ENotifyFilterType
{
	enum Type:int
	{
		NoFiltering = 0x0,
		LOD = 0x1
	};
}

enum class EVolumeLightingMethod:int
{
	VLM_VolumetricLightmap = 0x0,
	VLM_SparseVolumeLightingSamples = 0x1
};

namespace ESubsequentsMode
{
	enum Type:int
	{
		TrackSubsequents = 0x0,
		FireAndForget = 0x1
	};
}

namespace EPhysxUserDataType
{
	enum Type:int
	{
		Invalid = 0x0,
		BodyInstance = 0x1,
		PhysicalMaterial = 0x2,
		PhysScene = 0x3,
		ConstraintInstance = 0x4,
		PrimitiveComponent = 0x5,
		AggShape = 0x6,
		CustomPayload = 0x7
	};
}

namespace EChaosUserDataType
{
	enum Type:int
	{
		Invalid = 0x0,
		BodyInstance = 0x1,
		PhysicalMaterial = 0x2,
		PhysScene = 0x3,
		ConstraintInstance = 0x4,
		PrimitiveComponent = 0x5,
		AggShape = 0x6,
		CustomPayload = 0x7
	};
}

namespace ESecurityEvent
{
	enum Type:int
	{
		Malformed_Packet = 0x0,
		Invalid_Data = 0x1,
		Closed = 0x2
	};
}

enum class EMoveComponentFlags:int
{
	MOVECOMP_NoFlags = 0x0,
	MOVECOMP_IgnoreBases = 0x1,
	MOVECOMP_SkipPhysicsMove = 0x2,
	MOVECOMP_NeverIgnoreBlockingOverlaps = 0x4,
	MOVECOMP_DisableBlockingOverlapDispatch = 0x8
};

namespace ELandscapeCullingPrecision
{
	enum Type:int
	{
		High = 0x0,
		Medium = 0x1,
		Low = 0x2
	};
}

namespace EComponentSocketType
{
	enum Type:int
	{
		Invalid = 0x0,
		Bone = 0x1,
		Socket = 0x2
	};
}

enum class EAdditiveAnimationType:int
{
	AAT_None = 0x0,
	AAT_LocalSpaceBase = 0x1,
	AAT_RotationOffsetMeshSpace = 0x2,
	AAT_MAX = 0x3
};

enum class ERayTracingGeometryType:int
{
	RTGT_Triangles = 0x0,
	RTGT_Procedural = 0x1
};

namespace EMaxConcurrentResolutionRule
{
	enum Type:int
	{
		PreventNew = 0x0,
		StopOldest = 0x1,
		StopFarthestThenPreventNew = 0x2,
		StopFarthestThenOldest = 0x3,
		StopLowestPriority = 0x4,
		StopQuietest = 0x5,
		StopLowestPriorityThenPreventNew = 0x6,
		Count = 0x7
	};
}

namespace ESplitterResizeMode
{
	enum Type:int
	{
		FixedPosition = 0x0,
		FixedSize = 0x1,
		Fill = 0x2
	};
}

namespace ETabSpawnerMenuType
{
	enum Type:int
	{
		Enabled = 0x0,
		Disabled = 0x1,
		Hidden = 0x2
	};
}

enum class EStrataShadingModel:int
{
	SSM_Unlit = 0x0,
	SSM_DefaultLit = 0x1,
	SSM_SubsurfaceLit = 0x2,
	SSM_VolumetricFogCloud = 0x3,
	SSM_Hair = 0x4,
	SSM_Eye = 0x5,
	SSM_SingleLayerWater = 0x6,
	SSM_LightFunction = 0x7,
	SSM_PostProcess = 0x8,
	SSM_Decal = 0x9,
	SSM_UI = 0xA,
	SSM_NUM = 0xB
};

enum class EResourceLockMode:int
{
	RLM_ReadOnly = 0x0,
	RLM_WriteOnly = 0x1,
	RLM_WriteOnly_NoOverwrite = 0x2,
	RLM_Num = 0x3
};

enum class EStaticConstructor:int
{
	EC_StaticConstructor = 0x0
};

enum class EFontFallback:unsigned char
{
	FF_NoFallback = 0x0,
	FF_LocalizedFallback = 0x1,
	FF_LastResortFallback = 0x2,
	FF_Max = 0x3
};

enum class EActorRepListTypeFlags:unsigned char
{
	Default = 0x0,
	FastShared = 0x1,
	Max = 0x2
};

enum class EMoviePlaybackType:int
{
	MT_Normal = 0x0,
	MT_Looped = 0x1,
	MT_LoadingLoop = 0x2,
	MT_MAX = 0x3
};

namespace ETouchIndex
{
	enum Type:int
	{
		Touch1 = 0x0,
		Touch2 = 0x1,
		Touch3 = 0x2,
		Touch4 = 0x3,
		Touch5 = 0x4,
		Touch6 = 0x5,
		Touch7 = 0x6,
		Touch8 = 0x7,
		Touch9 = 0x8,
		Touch10 = 0x9,
		CursorPointerIndex = 0xA,
		MAX_TOUCHES = 0xB
	};
}

enum class EFriendInvitePolicy:unsigned char
{
	Public = 0x0,
	Friends_of_Friends = 0x1,
	Private = 0x2,
	InvalidOrMax = 0x3
};

namespace ENetworkReplayError
{
	enum Type:int
	{
		None = 0x0,
		ServiceUnavailable = 0x1
	};
}

enum class EInitStateDefaultsResult:unsigned char
{
	Initialized = 0x0,
	NotInitialized = 0x1
};

enum class EOnlineStatusUpdatePrivacy:unsigned char
{
	OnlyMe = 0x0,
	OnlyFriends = 0x1,
	Everyone = 0x2
};

enum class ESleepFamily:unsigned char
{
	Normal = 0x0,
	Sensitive = 0x1,
	Custom = 0x2
};

enum class EUniqueIdEncodingFlags:unsigned char
{
	NotEncoded = 0x0,
	IsEncoded = 0x1,
	IsEmpty = 0x2,
	IsPadded = 0x4,
	Reserved1 = 0x8,
	Reserved2 = 0x10,
	Reserved3 = 0x20,
	Reserved4 = 0x40,
	Reserved5 = 0x80,
	FlagsMask = 0x7,
	TypeMask = 0xF8
};

namespace EHotfixDelegates
{
	enum Type:int
	{
		Test = 0x0
	};
}

enum class ETraceTypeQuery:int
{
	TraceTypeQuery1 = 0x0,
	TraceTypeQuery2 = 0x1,
	TraceTypeQuery3 = 0x2,
	TraceTypeQuery4 = 0x3,
	TraceTypeQuery5 = 0x4,
	TraceTypeQuery6 = 0x5,
	TraceTypeQuery7 = 0x6,
	TraceTypeQuery8 = 0x7,
	TraceTypeQuery9 = 0x8,
	TraceTypeQuery10 = 0x9,
	TraceTypeQuery11 = 0xA,
	TraceTypeQuery12 = 0xB,
	TraceTypeQuery13 = 0xC,
	TraceTypeQuery14 = 0xD,
	TraceTypeQuery15 = 0xE,
	TraceTypeQuery16 = 0xF,
	TraceTypeQuery17 = 0x10,
	TraceTypeQuery18 = 0x11,
	TraceTypeQuery19 = 0x12,
	TraceTypeQuery20 = 0x13,
	TraceTypeQuery21 = 0x14,
	TraceTypeQuery22 = 0x15,
	TraceTypeQuery23 = 0x16,
	TraceTypeQuery24 = 0x17,
	TraceTypeQuery25 = 0x18,
	TraceTypeQuery26 = 0x19,
	TraceTypeQuery27 = 0x1A,
	TraceTypeQuery28 = 0x1B,
	TraceTypeQuery29 = 0x1C,
	TraceTypeQuery30 = 0x1D,
	TraceTypeQuery31 = 0x1E,
	TraceTypeQuery32 = 0x1F,
	TraceTypeQuery_MAX = 0x20
};

namespace FExternalPhysicsCustomObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		RemovedConvexHullsFromTriangleMeshImplicitObject = 0x1,
		SerializeParticleBounds = 0x2,
		SerializeEvolutionBV = 0x3,
		SerializeEvolutionGenericAcceleration = 0x4,
		GlobalElementsHaveBounds = 0x5,
		SpatialIdxSerialized = 0x6,
		HeightfieldData = 0x7,
		SerializeMultiStructures = 0x8,
		KinematicTargets = 0x9,
		TrimeshSerializesBV = 0xA,
		SerializeBroadphaseType = 0xB,
		ScaledGeometryIsConcrete = 0xC,
		TrimeshSerializesAABBTree = 0xD,
		SerializeHashResult = 0xE,
		FlushEvolutionInternalAccelerationQueue = 0xF,
		SerializeShapeWorldSpaceBounds = 0x10,
		AddDynamicKinematicSOA = 0x11,
		AddedMaterialManager = 0x12,
		AddTrimeshMaterialIndices = 0x13,
		AddConvexCenterOfMassAndVolume = 0x14,
		KinematicCentersOfMass = 0x15,
		AddShapeCollisionDisable = 0x16,
		HeightfieldImplicitBounds = 0x17,
		AddDampingToRigids = 0x18,
		TBoxReplacedWithTAABB = 0x19,
		SerializePerShapeDataSimulateFlag = 0x1A,
		ImmutableAABBTree = 0x1B,
		TrimeshCanUseSmallIndices = 0x1C,
		UnionObjectsCanAvoidHierarchy = 0x1D,
		CapsulesNoUnionOrAABBs = 0x1E,
		ConvexUsesTPlaneConcrete = 0x1F,
		HeightfieldUsesHeightsDirectly = 0x20,
		TriangleMeshHasFaceIndexMap = 0x21,
		UniquePayloadIdx = 0x22,
		SerializeCollisionTraceType = 0x23,
		ForceRebuildBodySetupIndices = 0x24,
		PhysicsMaterialSleepCounterThreshold = 0x25,
		AddShapeSimAndQueryCollisionEnabled = 0x26,
		RemoveShapeSimAndQueryDuplicateRepresentations = 0x27,
		RemovedAABBTreeFullBounds = 0x28,
		AddOneWayInteraction = 0x29,
		VersionPlusOne = 0x2A,
		LatestVersion = 0x29
	};
}

namespace EDrawDebugItemType
{
	enum Type:int
	{
		DirectionalArrow = 0x0,
		Sphere = 0x1,
		Line = 0x2,
		OnScreenMessage = 0x3,
		CoordinateSystem = 0x4,
		Point = 0x5,
		Circle = 0x6,
		Cone = 0x7
	};
}

namespace ELerpInterpolationMode
{
	enum Type:int
	{
		QuatInterp = 0x0,
		EulerInterp = 0x1,
		DualQuatInterp = 0x2
	};
}

enum class EAnimAlphaInputType:unsigned char
{
	Float = 0x0,
	Bool = 0x1,
	Curve = 0x2
};

enum class ERemoveStreamingViews:int
{
	RemoveStreamingViews_Normal = 0x0,
	RemoveStreamingViews_All = 0x1
};

namespace EMatrixColumns
{
	enum Type:int
	{
		First = 0x0,
		Second = 0x1,
		Third = 0x2,
		Fourth = 0x3
	};
}

enum class EAnimSyncGroupScope:unsigned char
{
	Local = 0x0,
	Component = 0x1
};

enum class ETransitionRequestOverwriteMode:unsigned char
{
	Append = 0x0,
	Ignore = 0x1,
	Overwrite = 0x2
};

enum class EAnimCurveType:unsigned char
{
	AttributeCurve = 0x0,
	MaterialCurve = 0x1,
	MorphTargetCurve = 0x2,
	MaxAnimCurveType = 0x3
};

enum class ENetworkSmoothingMode:unsigned char
{
	Disabled = 0x0,
	Linear = 0x1,
	Exponential = 0x2
};

enum class EPersistentStorageManagerFileSizeFlags:unsigned char
{
	None = 0x0,
	OnlyUpdateIfLess = 0x1,
	RespectQuota = 0x2
};

enum class ERadialImpulseFalloff:int
{
	RIF_Constant = 0x0,
	RIF_Linear = 0x1,
	RIF_MAX = 0x2
};

enum class EStreamingStatus:int
{
	LEVEL_Unloaded = 0x0,
	LEVEL_UnloadedButStillAround = 0x1,
	LEVEL_Loading = 0x2,
	LEVEL_Loaded = 0x3,
	LEVEL_MakingVisible = 0x4,
	LEVEL_Visible = 0x5,
	LEVEL_Preloading = 0x6,
	LEVEL_FailedToLoad = 0x7,
	LEVEL_MakingInvisible = 0x8,
	LEVEL_StreamingStatusCount = 0x9
};

enum class EBoneAxis:int
{
	BA_X = 0x0,
	BA_Y = 0x1,
	BA_Z = 0x2
};

enum class EShrinkCapsuleExtent:int
{
	SHRINK_None = 0x0,
	SHRINK_RadiusCustom = 0x1,
	SHRINK_HeightCustom = 0x2,
	SHRINK_AllCustom = 0x3
};

enum class EPlaneConstraintAxisSetting:unsigned char
{
	Custom = 0x0,
	X = 0x1,
	Y = 0x2,
	Z = 0x3,
	UseGlobalPhysicsSetting = 0x4
};

enum class ERPCBlockState:unsigned char
{
	Unchecked = 0x0,
	OnAllowList = 0x1,
	NotBlocked = 0x2,
	Blocked = 0x3
};

enum class EPhysBodyOp:int
{
	PBO_None = 0x0,
	PBO_Term = 0x1,
	PBO_MAX = 0x2
};

namespace SplashTextType
{
	enum Type:int
	{
		StartupProgress = 0x0,
		VersionInfo1 = 0x1,
		CopyrightInfo = 0x2,
		GameName = 0x3,
		NumTextTypes = 0x4
	};
}

enum class ERHIFeatureSupport:unsigned char
{
	Unsupported = 0x0,
	RuntimeDependent = 0x1,
	RuntimeGuaranteed = 0x2,
	Num = 0x3,
	NumBits = 0x2
};

enum class ERHIBindlessSupport:unsigned char
{
	Unsupported = 0x0,
	RayTracingOnly = 0x1,
	AllShaderTypes = 0x2,
	NumBits = 0x2
};

enum class EPlatformUserSelectorFlags:unsigned char
{
	None = 0x0,
	RequiresOnlineEnabledProfile = 0x2,
	ShowSkipButton = 0x4,
	AllowGuests = 0x8,
	ShowNewUsersOnly = 0x10,
	Default = 0x4
};

enum class EScreenPhysicalAccuracy:int
{
	Unknown = 0x0,
	Approximation = 0x1,
	Truth = 0x2
};

enum class EVertexInputStreamType:unsigned char
{
	Default = 0x0,
	PositionOnly = 0x1,
	PositionAndNormalOnly = 0x2,
	Count = 0x3
};

enum class EQuotaType:unsigned char
{
	EscalateQuota = 0x0,
	DeescalateQuota = 0x1
};

enum class EMaterialParameterType:unsigned char
{
	Scalar = 0x0,
	Vector = 0x1,
	DoubleVector = 0x2,
	Texture = 0x3,
	Font = 0x4,
	RuntimeVirtualTexture = 0x5,
	SparseVolumeTexture = 0x6,
	StaticSwitch = 0x7,
	NumRuntime = 0x8,
	StaticComponentMask = 0x8,
	Num = 0x9,
	None = 0xFF
};

namespace ENetMoveType
{
	enum Type:int
	{
		ServerMove = 0x0,
		ServerMoveOld = 0x1,
		ServerMoveWithRotation = 0x2,
		ServerMoveOldWithRotation = 0x3,
		ServerMoveOnlyRotation = 0x4
	};
}

enum class ERHIPipeline:unsigned char
{
	Graphics = 0x1,
	AsyncCompute = 0x2,
	None = 0x0,
	All = 0x3,
	Num = 0x2
};

enum class EIoContainerFlags:unsigned char
{
	None = 0x0,
	Compressed = 0x1,
	Encrypted = 0x2,
	Signed = 0x4,
	Indexed = 0x8
};

enum class EBufferUsageFlags:unsigned int
{
	None = 0x0,
	Static = 0x1,
	Dynamic = 0x2,
	Volatile = 0x4,
	UnorderedAccess = 0x8,
	ByteAddressBuffer = 0x10,
	SourceCopy = 0x20,
	StreamOutput = 0x40,
	DrawIndirect = 0x80,
	ShaderResource = 0x100,
	KeepCPUAccessible = 0x200,
	FastVRAM = 0x400,
	Shared = 0x1000,
	AccelerationStructure = 0x2000,
	VertexBuffer = 0x4000,
	IndexBuffer = 0xFFFF8000,
	StructuredBuffer = 0x10000,
	MultiGPUAllocate = 0x20000,
	MultiGPUGraphIgnore = 0x40000,
	RayTracingScratch = 0x80008,
	AnyDynamic = 0x6
};

enum class ETextureReallocationStatus:int
{
	TexRealloc_Succeeded = 0x0,
	TexRealloc_Failed = 0x1,
	TexRealloc_InProgress = 0x2
};

enum class EPluginType:int
{
	Engine = 0x0,
	Enterprise = 0x1,
	Project = 0x2,
	External = 0x3,
	Mod = 0x4
};

enum class EPluginLoadedFrom:int
{
	Engine = 0x0,
	Project = 0x1
};

namespace ETouchType
{
	enum Type:int
	{
		Began = 0x0,
		Moved = 0x1,
		Stationary = 0x2,
		ForceChanged = 0x3,
		FirstMove = 0x4,
		Ended = 0x5,
		NumTypes = 0x6
	};
}

enum class EGestureEvent:unsigned char
{
	None = 0x0,
	Scroll = 0x1,
	Magnify = 0x2,
	Swipe = 0x3,
	Rotate = 0x4,
	LongPress = 0x5,
	Count = 0x6
};

enum class EFocusCause:unsigned char
{
	Mouse = 0x0,
	Navigation = 0x1,
	SetDirectly = 0x2,
	Cleared = 0x3,
	OtherWidgetLostFocus = 0x4,
	WindowActivate = 0x5
};

namespace EVerseScope
{
	enum Type: char
	{
		InternalAPI = 0x0,
		PublicAPI = 0x1,
		User = 0x2
	};
}

enum class EPluginEnabledByDefault:unsigned char
{
	Unspecified = 0x0,
	Enabled = 0x1,
	Disabled = 0x2
};

enum class EMouseCaptureMode:unsigned char
{
	NoCapture = 0x0,
	CapturePermanently = 0x1,
	CapturePermanently_IncludingInitialMouseDown = 0x2,
	CaptureDuringMouseDown = 0x3,
	CaptureDuringRightMouseDown = 0x4
};

enum class EUniformBufferValidation:int
{
	None = 0x0,
	ValidateResources = 0x1
};

enum class EFootPlacementLockType:unsigned char
{
	Unlocked = 0x0,
	PivotAroundBall = 0x1,
	PivotAroundAnkle = 0x2,
	LockRotation = 0x3
};

enum class EStreamingSourceTargetState:unsigned char
{
	Loaded = 0x0,
	Activated = 0x1
};

enum class ERTAccelerationStructureBuildPriority:int
{
	Immediate = 0x0,
	High = 0x1,
	Normal = 0x2,
	Low = 0x3,
	Skip = 0x4
};

enum class EPelvisHeightMode:unsigned char
{
	AllLegs = 0x0,
	AllPlantedFeet = 0x1,
	FrontPlantedFeetUphill_FrontFeetDownhill = 0x2
};

enum class EActorMovementCompensationMode:unsigned char
{
	ComponentSpace = 0x0,
	WorldSpace = 0x1,
	SuddenMotionOnly = 0x2
};

enum class EWarpingEvaluationMode:unsigned char
{
	Manual = 0x0,
	Graph = 0x1
};

enum class ESoundwaveSampleRateSettings:unsigned char
{
	Max = 0x0,
	High = 0x1,
	Medium = 0x2,
	Low = 0x3,
	Min = 0x4,
	MatchDevice_DEPRECATED = 0x5
};

enum class EBulkDataLockFlags:int
{
	LOCK_READ_ONLY = 0x1,
	LOCK_READ_WRITE = 0x2
};

enum class EOffsetRootBoneMode:unsigned char
{
	Accumulate = 0x0,
	Interpolate = 0x1,
	Hold = 0x2,
	Release = 0x3
};

enum class EPackageExtension:unsigned char
{
	Unspecified = 0x0,
	Asset = 0x1,
	Map = 0x2,
	TextAsset = 0x3,
	TextMap = 0x4,
	Custom = 0x5,
	EmptyString = 0x6,
	Exports = 0x7,
	BulkDataDefault = 0x8,
	BulkDataOptional = 0x9,
	BulkDataMemoryMapped = 0xA,
	PayloadSidecar = 0xB
};

enum class ERPCDoSSeverityUpdate:unsigned char
{
	Escalate = 0x0,
	AutoEscalate = 0x1,
	Deescalate = 0x2
};

enum class ERPCDoSEscalateReason:unsigned char
{
	CountLimit = 0x0,
	TimeLimit = 0x1,
	AutoEscalate = 0x2,
	Deescalate = 0x3
};

enum class ERPCNotifyResult:unsigned char
{
	ExecuteRPC = 0x0,
	BlockRPC = 0x1
};

enum class EPostSequentialRPCType:unsigned char
{
	MidPacket = 0x0,
	PostPacket = 0x1
};

enum class EStaticMeshVertexTangentBasisType:int
{
	Default = 0x0,
	HighPrecision = 0x1
};

enum class EGetSparseClassDataMethod:unsigned char
{
	CreateIfNull = 0x0,
	ArchetypeIfNull = 0x1,
	ReturnIfNull = 0x2
};

enum class EFindFirstObjectOptions:int
{
	None = 0x0,
	ExactClass = 0x2,
	NativeFirst = 0x4,
	EnsureIfAmbiguous = 0x8
};

namespace EChunkPriority
{
	enum Type:int
	{
		Immediate = 0x0,
		High = 0x1,
		Low = 0x2
	};
}

enum class EPhysicsAssetSolverType:unsigned char
{
	RBAN = 0x0,
	World = 0x1
};

namespace FNavigationBoundsUpdateRequest
{
	enum Type:int
	{
		Added = 0x0,
		Removed = 0x1,
		Updated = 0x2
	};
}

enum class EActorIteratorFlags:int
{
	AllActors = 0x0,
	SkipPendingKill = 0x1,
	OnlySelectedActors = 0x2,
	OnlyActiveLevels = 0x4
};

enum class EActorIteratorType:int
{
	End = 0x0
};

enum class EClearDepthStencil:int
{
	Depth = 0x0,
	Stencil = 0x1,
	DepthStencil = 0x2
};

enum EObjectTypeQuery
{
	ObjectTypeQuery1 = 0x0,
	ObjectTypeQuery2 = 0x1,
	ObjectTypeQuery3 = 0x2,
	ObjectTypeQuery4 = 0x3,
	ObjectTypeQuery5 = 0x4,
	ObjectTypeQuery6 = 0x5,
	ObjectTypeQuery7 = 0x6,
	ObjectTypeQuery8 = 0x7,
	ObjectTypeQuery9 = 0x8,
	ObjectTypeQuery10 = 0x9,
	ObjectTypeQuery11 = 0xA,
	ObjectTypeQuery12 = 0xB,
	ObjectTypeQuery13 = 0xC,
	ObjectTypeQuery14 = 0xD,
	ObjectTypeQuery15 = 0xE,
	ObjectTypeQuery16 = 0xF,
	ObjectTypeQuery17 = 0x10,
	ObjectTypeQuery18 = 0x11,
	ObjectTypeQuery19 = 0x12,
	ObjectTypeQuery20 = 0x13,
	ObjectTypeQuery21 = 0x14,
	ObjectTypeQuery22 = 0x15,
	ObjectTypeQuery23 = 0x16,
	ObjectTypeQuery24 = 0x17,
	ObjectTypeQuery25 = 0x18,
	ObjectTypeQuery26 = 0x19,
	ObjectTypeQuery27 = 0x1A,
	ObjectTypeQuery28 = 0x1B,
	ObjectTypeQuery29 = 0x1C,
	ObjectTypeQuery30 = 0x1D,
	ObjectTypeQuery31 = 0x1E,
	ObjectTypeQuery32 = 0x1F,
	ObjectTypeQuery_MAX = 0x20
};

enum class ERayTracingInstanceLayer:unsigned char
{
	NearField = 0x0,
	FarField = 0x1
};

enum class EWarpingVectorMode:unsigned char
{
	ComponentSpaceVector = 0x0,
	ActorSpaceVector = 0x1,
	WorldSpaceVector = 0x2,
	IKFootRootLocalSpaceVector = 0x3
};

enum class EAudioChunkLoadResult:unsigned char
{
	Completed = 0x0,
	AlreadyLoaded = 0x1,
	Interrupted = 0x2,
	ChunkOutOfBounds = 0x3,
	CacheBlown = 0x4
};

enum class EChannelCreateFlags:unsigned int
{
	None = 0x1,
	OpenedLocally = 0x2
};

enum class ESetChannelActorFlags:unsigned int
{
	None = 0x0,
	SkipReplicatorCreation = 0x1,
	SkipMarkActive = 0x2
};

enum class EShaderCodeFeatures:unsigned short
{
	None = 0x0,
	WaveOps = 0x1,
	SixteenBitTypes = 0x2,
	TypedUAVLoadsExtended = 0x4,
	Atomic64 = 0x8,
	DiagnosticBuffer = 0x10,
	BindlessResources = 0x20,
	BindlessSamplers = 0x40,
	StencilRef = 0x80
};

enum class ETimerStatus:unsigned char
{
	Pending = 0x0,
	Active = 0x1,
	Paused = 0x2,
	Executing = 0x3,
	ActivePendingRemoval = 0x4
};

enum class ELevelCollectionType:unsigned char
{
	DynamicSourceLevels = 0x0,
	DynamicDuplicatedLevels = 0x1,
	StaticLevels = 0x2,
	MAX = 0x3
};

enum class ESkinCacheDefaultBehavior:unsigned char
{
	Exclusive = 0x0,
	Inclusive = 0x1
};

enum class EAssociativity:int
{
	RightToLeft = 0x0,
	LeftToRight = 0x1
};

enum class EPropertyValueIteratorFlags:unsigned char
{
	NoRecursion = 0x0,
	FullRecursion = 0x1
};

enum class EItemDropZone:int
{
	AboveItem = 0x0,
	OntoItem = 0x1,
	BelowItem = 0x2
};

enum class ELatentActionChangeType:unsigned char
{
	ActionsRemoved = 0x0,
	ActionsAdded = 0x1
};

enum class EStereoscopicEye:int
{
	eSSE_MONOSCOPIC = 0xFF,
	eSSE_LEFT_EYE = 0x0,
	eSSE_RIGHT_EYE = 0x1,
	eSSE_LEFT_EYE_SIDE = 0x2,
	eSSE_RIGHT_EYE_SIDE = 0x3
};

namespace EMovieScenePlayerStatus
{
	enum Type:int
	{
		Stopped = 0x0,
		Playing = 0x1,
		Scrubbing = 0x2,
		Jumping = 0x3,
		Stepping = 0x4,
		Paused = 0x5,
		MAX = 0x6
	};
}

namespace FEditorObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		GatheredTextProcessVersionFlagging = 0x1,
		GatheredTextPackageCacheFixesV1 = 0x2,
		RootMetaDataSupport = 0x3,
		GatheredTextPackageCacheFixesV2 = 0x4,
		TextFormatArgumentDataIsVariant = 0x5,
		SplineComponentCurvesInStruct = 0x6,
		ComboBoxControllerSupportUpdate = 0x7,
		RefactorMeshEditorMaterials = 0x8,
		AddedFontFaceAssets = 0x9,
		UPropertryForMeshSection = 0xA,
		WidgetGraphSchema = 0xB,
		AddedBackgroundBlurContentSlot = 0xC,
		StableUserDefinedEnumDisplayNames = 0xD,
		AddedInlineFontFaceAssets = 0xE,
		UPropertryForMeshSectionSerialize = 0xF,
		FastWidgetTemplates = 0x10,
		MaterialThumbnailRenderingChanges = 0x11,
		NewSlateClippingSystem = 0x12,
		MovieSceneMetaDataSerialization = 0x13,
		GatheredTextEditorOnlyPackageLocId = 0x14,
		AddedAlwaysSignNumberFormattingOption = 0x15,
		AddedMaterialSharedInputs = 0x16,
		AddedMorphTargetSectionIndices = 0x17,
		SerializeInstancedStaticMeshRenderData = 0x18,
		MeshDescriptionNewSerialization_MovedToRelease = 0x19,
		MeshDescriptionNewAttributeFormat = 0x1A,
		ChangeSceneCaptureRootComponent = 0x1B,
		StaticMeshDeprecatedRawMesh = 0x1C,
		MeshDescriptionBulkDataGuid = 0x1D,
		MeshDescriptionRemovedHoles = 0x1E,
		ChangedWidgetComponentWindowVisibilityDefault = 0x1F,
		CultureInvariantTextSerializationKeyStability = 0x20,
		ScrollBarThicknessChange = 0x21,
		RemoveLandscapeHoleMaterial = 0x22,
		MeshDescriptionTriangles = 0x23,
		ComputeWeightedNormals = 0x24,
		SkeletalMeshBuildRefactor = 0x25,
		SkeletalMeshMoveEditorSourceDataToPrivateAsset = 0x26,
		NumberParsingOptionsNumberLimitsAndClamping = 0x27,
		SkeletalMeshSourceDataSupport16bitOfMaterialNumber = 0x28,
		VersionPlusOne = 0x29,
		LatestVersion = 0x28
	};
}

namespace FSequencerObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		RenameMediaSourcePlatformPlayers = 0x1,
		ConvertEnableRootMotionToForceRootLock = 0x2,
		ConvertMultipleRowsToTracks = 0x3,
		WhenFinishedDefaultsToRestoreState = 0x4,
		EvaluationTree = 0x5,
		WhenFinishedDefaultsToProjectDefault = 0x6,
		FloatToIntConversion = 0x7,
		PurgeSpawnableBlueprints = 0x8,
		FinishUMGEvaluation = 0x9,
		SerializeFloatChannel = 0xA,
		ModifyLinearKeysForOldInterp = 0xB,
		SerializeFloatChannelCompletely = 0xC,
		SpawnableImprovements = 0xD,
		VersionPlusOne = 0xE,
		LatestVersion = 0xD
	};
}

namespace FMovieSceneEvaluationCustomVersion
{
	enum Type:int
	{
		Initial = 0x0,
		ChangeEvaluateNearestSectionDefault = 0x1,
		AddBlendingSupport = 0x2,
		EntityManager = 0x3,
		DeprecateEventGUIDs = 0x4,
		VersionPlusOne = 0x5,
		LatestVersion = 0x4
	};
}

enum class ERuntimeVirtualTextureShaderUniform:int
{
	ERuntimeVirtualTextureShaderUniform_WorldToUVTransform0 = 0x0,
	ERuntimeVirtualTextureShaderUniform_WorldToUVTransform1 = 0x1,
	ERuntimeVirtualTextureShaderUniform_WorldToUVTransform2 = 0x2,
	ERuntimeVirtualTextureShaderUniform_WorldHeightUnpack = 0x3,
	ERuntimeVirtualTextureShaderUniform_Count = 0x4
};

namespace EAsyncLoadingResult
{
	enum Type:int
	{
		Failed = 0x0,
		Succeeded = 0x1,
		Canceled = 0x2
	};
}

enum class EActiveTimerReturnType:unsigned char
{
	Stop = 0x0,
	Continue = 0x1
};

namespace ENodeAdvancedPins
{
	enum Type:int
	{
		NoPins = 0x0,
		Shown = 0x1,
		Hidden = 0x2
	};
}

namespace FFortniteNCBranchObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		AddedWorldDataLayersActorDesc = 0x1,
		FixedDataLayerInstanceDesc = 0x2,
		WorldPartitionActorDescSerializeDataLayerAssets = 0x3,
		RemappedEvaluateWorldPositionOffsetInRayTracing = 0x4,
		WorldPartitionActorDescNativeBaseClassSerialization = 0x5,
		WorldPartitionActorDescTagsSerialization = 0x6,
		WorldPartitionActorDescPropertyMapSerialization = 0x7,
		AddShapeIsProbe = 0x8,
		PhysicsAssetNewSolverSettings = 0x9,
		ChaosGeometryCollectionSaveLevelsAttribute = 0xA,
		VersionPlusOne = 0xB,
		LatestVersion = 0xA
	};
}

enum class ETickingGroup:int
{
	TG_PrePhysics = 0x0,
	TG_StartPhysics = 0x1,
	TG_DuringPhysics = 0x2,
	TG_EndPhysics = 0x3,
	TG_PostPhysics = 0x4,
	TG_PostUpdateWork = 0x5,
	TG_LastDemotable = 0x6,
	TG_NewlySpawned = 0x7,
	TG_MAX = 0x8
};

namespace FPhysicsObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		PerShapeData = 0x1,
		SerializeGTGeometryParticles = 0x2,
		GroomWithDescription = 0x3,
		GroomWithImportSettings = 0x4,
		TriangleMeshHasVertexIndexMap = 0x5,
		VariableConvexStructureData = 0x6,
		AddCCDEnableFlag = 0x7,
		ChaosClothAddWeightedValue = 0x8,
		ConvexUsesVerticesArray = 0x9,
		ChaosClothAddfictitiousforces = 0xA,
		ChaosClothAddTetherStiffnessWeightMap = 0xB,
		ChaosClothFixLODTransitionMaps = 0xC,
		ChaosConvexUsesHalfEdges = 0xD,
		ChaosConvexHasUniqueEdgeSet = 0xE,
		GeometryCollectionUserDefinedCollisionShapes = 0xF,
		ChaosKinematicTargetRemoveScale = 0x10,
		AddCollisionConstraintFlag = 0x11,
		AddDisabledFlag = 0x12,
		AddChaosMaxLinearAngularSpeed = 0x13,
		GeometryCollectionConvexDefaults = 0x14,
		VersionPlusOne = 0x15,
		LatestVersion = 0x14
	};
}

enum class EBoneVisibilityStatus:int
{
	BVS_HiddenByParent = 0x0,
	BVS_Visible = 0x1,
	BVS_ExplicitlyHidden = 0x2,
	BVS_MAX = 0x3
};

enum class ESoundType:unsigned char
{
	Class = 0x0,
	Cue = 0x1,
	Wave = 0x2
};

enum class EAudioDeviceScope:unsigned char
{
	Default = 0x0,
	Shared = 0x1,
	Unique = 0x2
};

enum class ENDISkeletalMesh_FilterMode:unsigned char
{
	None = 0x0,
	SingleRegion = 0x1,
	MultiRegion = 0x2
};

enum class ENDISkelMesh_AreaWeightingMode:unsigned char
{
	None = 0x0,
	AreaWeighted = 0x1
};

enum class ENDISkeletalMesh_SkinningMode:unsigned char
{
	Invalid = 0xFF,
	None = 0x0,
	SkinOnTheFly = 0x1,
	PreSkin = 0x2
};

enum class EMovieSceneBlendType:unsigned char
{
	Invalid = 0x0,
	Absolute = 0x1,
	Additive = 0x2,
	Relative = 0x4,
	AdditiveFromBase = 0x8
};

enum class ETextureCompressionQuality:int
{
	TCQ_Default = 0x0,
	TCQ_Lowest = 0x1,
	TCQ_Low = 0x2,
	TCQ_Medium = 0x3,
	TCQ_High = 0x4,
	TCQ_Highest = 0x5,
	TCQ_MAX = 0x6
};

enum class ETextureSizingType:int
{
	TextureSizingType_UseSingleTextureSize = 0x0,
	TextureSizingType_UseAutomaticBiasedSizes = 0x1,
	TextureSizingType_UseManualOverrideTextureSize = 0x2,
	TextureSizingType_UseSimplygonAutomaticSizing = 0x3,
	TextureSizingType_AutomaticFromTexelDensity = 0x4,
	TextureSizingType_AutomaticFromMeshScreenSize = 0x5,
	TextureSizingType_AutomaticFromMeshDrawDistance = 0x6,
	TextureSizingType_MAX = 0x7
};

enum class EMovieSceneServerClientMask:unsigned char
{
	None = 0x0,
	Server = 0x1,
	Client = 0x2,
	All = 0x3
};

enum class EMovieSceneSequenceFlags:unsigned char
{
	None = 0x0,
	Volatile = 0x1,
	BlockingEvaluation = 0x2,
	DynamicWeighting = 0x4,
	InheritedFlags = 0x1
};

enum class EMovieSceneCompletionMode:unsigned char
{
	KeepState = 0x0,
	RestoreState = 0x1,
	ProjectDefault = 0x2
};

enum class EConvertFromTypeResult:int
{
	UseSerializeItem = 0x0,
	CannotConvert = 0x1,
	Converted = 0x2
};

enum class EShaderCompileJobPriority:unsigned char
{
	None = 0xFF,
	Low = 0x0,
	Normal = 0x1,
	High = 0x2,
	ForceLocal = 0x3,
	Num = 0x4
};

enum class EMovieSceneChannelProxyType:unsigned char
{
	Static = 0x0,
	Dynamic = 0x1
};

enum class EAsyncTaskNotificationState:unsigned char
{
	None = 0x0,
	Pending = 0x1,
	Success = 0x2,
	Failure = 0x3,
	Prompt = 0x4
};

enum class EMovieSceneTransformChannel:unsigned int
{
	None = 0x0,
	TranslationX = 0x1,
	TranslationY = 0x2,
	TranslationZ = 0x4,
	Translation = 0x7,
	RotationX = 0x8,
	RotationY = 0x10,
	RotationZ = 0x20,
	Rotation = 0x38,
	ScaleX = 0x40,
	ScaleY = 0x80,
	ScaleZ = 0x100,
	Scale = 0x1C0,
	AllTransform = 0x1FF,
	Weight = 0x200,
	All = 0x3FF
};

enum class ETextShapingMethod:unsigned char
{
	Auto = 0x0,
	KerningOnly = 0x1,
	FullShaping = 0x2
};

enum class EWriteDemoFrameFlags:unsigned int
{
	None = 0x0,
	SkipGameSpecific = 0x1
};

enum class ERootMotionAccumulateMode:unsigned char
{
	Override = 0x0,
	Additive = 0x1
};

enum class ERootMotionFinishVelocityMode:unsigned char
{
	MaintainLastRootMotionVelocity = 0x0,
	SetVelocity = 0x1,
	ClampVelocity = 0x2
};

enum class ERootMotionSourceStatusFlags:unsigned char
{
	Prepared = 0x1,
	Finished = 0x2,
	MarkedForRemoval = 0x4
};

enum class ERootMotionSourceSettingsFlags:unsigned char
{
	UseSensitiveLiftoffCheck = 0x1,
	DisablePartialEndTick = 0x2,
	IgnoreZAccumulate = 0x4
};

enum class EConstraintPlasticityType:int
{
	CCPT_Free = 0x0,
	CCPT_Shrink = 0x1,
	CCPT_Grow = 0x2,
	CCPT_MAX = 0x3
};

enum class EAsyncTaskNotificationPromptAction:unsigned char
{
	None = 0x0,
	Continue = 0x1,
	Cancel = 0x2,
	Unattended = 0x3
};

enum class ESkinCacheUsage:unsigned char
{
	Auto = 0x0,
	Disabled = 0xFF,
	Enabled = 0x1
};

enum class EResendAllDataState:unsigned char
{
	None = 0x0,
	SinceOpen = 0x1,
	SinceCheckpoint = 0x2
};

enum class ESectionEvaluationFlags:unsigned char
{
	None = 0x0,
	PreRoll = 0x1,
	PostRoll = 0x2
};

enum class ESlowTaskVisibility:int
{
	Default = 0x0,
	ForceVisible = 0x1,
	Invisible = 0x2
};

enum class EShaderCompilerWorkerType:unsigned char
{
	None = 0x0,
	LocalThread = 0x1,
	Distributed = 0x2
};

enum class ELightUnits:unsigned char
{
	Unitless = 0x0,
	Candelas = 0x1,
	Lumens = 0x2
};

namespace EResourceSizeMode
{
	enum Type:int
	{
		Exclusive = 0x0,
		EstimatedTotal = 0x1
	};
}

enum class EMovieSceneTrackEasingSupportFlags:int
{
	None = 0x0,
	AutomaticEaseIn = 0x1,
	AutomaticEaseOut = 0x2,
	ManualEaseIn = 0x4,
	ManualEaseOut = 0x8,
	AutomaticEasing = 0x3,
	ManualEasing = 0xC,
	All = 0xF
};

enum class ETickableTickType:unsigned char
{
	Conditional = 0x0,
	Always = 0x1,
	Never = 0x2
};

enum class EMeshMergeType:unsigned char
{
	MeshMergeType_Default = 0x0,
	MeshMergeType_MergeActor = 0x1
};

enum class EMovieSceneCompileResult:unsigned char
{
	Success = 0x0,
	Failure = 0x1,
	Unimplemented = 0x2
};

enum class EEvaluationMethod:unsigned char
{
	Static = 0x0,
	Swept = 0x1
};

enum class ERayTracingGlobalIlluminationType:unsigned char
{
	Disabled = 0x0,
	BruteForce = 0x1,
	FinalGather = 0x2
};

enum class EReflectionsType:unsigned char
{
	ScreenSpace = 0x0,
	RayTracing = 0x1
};

enum class ELumenRayLightingModeOverride:unsigned char
{
	Default = 0x0,
	SurfaceCache = 0x1,
	HitLighting = 0x2
};

enum class EReflectedAndRefractedRayTracedShadows:unsigned char
{
	Disabled = 0x0,
	Hard_shadows = 0x1,
	Area_shadows = 0x2
};

enum class ETranslucencyType:unsigned char
{
	Raster = 0x0,
	RayTracing = 0x1
};

enum class EQuartzCommandType:unsigned char
{
	PlaySound = 0x0,
	QueueSoundToPlay = 0x1,
	RetriggerSound = 0x2,
	TickRateChange = 0x3,
	TransportReset = 0x4,
	StartOtherClock = 0x5,
	Custom = 0x6
};

namespace EBodyCollisionResponse
{
	enum Type:int
	{
		BodyCollision_Enabled = 0x0,
		BodyCollision_Disabled = 0x1
	};
}

enum class EUniformBufferBindingFlags:unsigned char
{
	Shader = 0x1,
	Static = 0x2,
	StaticAndShader = 0x3
};

enum class ODSCRecompileCommand:int
{
	None = 0x0,
	Changed = 0x1,
	Global = 0x2,
	Material = 0x3,
	SingleShader = 0x4
};

enum class EChaosSolverTickMode:unsigned char
{
	Fixed = 0x0,
	Variable = 0x1,
	VariableCapped = 0x2,
	VariableCappedWithTarget = 0x3
};

enum class EHotReloadFlags:unsigned char
{
	None = 0x0,
	WaitForCompletion = 0x1
};

enum class EMovieSceneEvaluationType:unsigned char
{
	FrameLocked = 0x0,
	WithSubFrames = 0x1
};

enum class EUpdateClockSource:unsigned char
{
	Tick = 0x0,
	Platform = 0x1,
	Audio = 0x2,
	RelativeTimecode = 0x3,
	Timecode = 0x4,
	PlayEveryFrame = 0x5,
	Custom = 0x6
};

enum class ESpawnOwnership:unsigned char
{
	InnerSequence = 0x0,
	RootSequence = 0x1,
	External = 0x2
};

enum class EPropertyPointerType:int
{
	Direct = 0x0,
	Container = 0x1
};

enum class EMultipleKeyBindingIndex:unsigned char
{
	Primary = 0x0,
	Secondary = 0x1,
	NumChords = 0x2
};

enum class ERDGBarrierLocation:unsigned char
{
	Prologue = 0x0,
	Epilogue = 0x1
};

enum class ERHITransitionCreateFlags:int
{
	None = 0x0,
	NoFence = 0x1,
	NoSplit = 0x2,
	BeginSimpleMode = 0x3
};

enum class ERayTracingMode:unsigned char
{
	Disabled = 0x0,
	Enabled = 0x1,
	Dynamic = 0x2
};

enum class EResourceTransitionFlags:int
{
	None = 0x0,
	MaintainCompression = 0x1,
	Discard = 0x2,
	Clear = 0x4,
	Last = 0x4,
	Mask = 0x7
};

enum class EQueryFlags:unsigned short
{
	None = 0x0,
	PreFilter = 0x4,
	PostFilter = 0x8,
	AnyHit = 0x10,
	SkipNarrowPhase = 0x20
};

enum class ERDGPassFlags:unsigned short
{
	None = 0x0,
	Raster = 0x1,
	Compute = 0x2,
	AsyncCompute = 0x4,
	Copy = 0x8,
	NeverCull = 0x10,
	SkipRenderPass = 0x20,
	NeverMerge = 0x40,
	NeverParallel = 0x80,
	ParallelTranslate = 0x100,
	Readback = 0x18
};

enum class EAsyncComputeBudget:int
{
	ELeast_0 = 0x0,
	EGfxHeavy_1 = 0x1,
	EBalanced_2 = 0x2,
	EComputeHeavy_3 = 0x3,
	EAll_4 = 0x4
};

enum class EStatType:int
{
	STATTYPE_CycleCounter = 0x0,
	STATTYPE_AccumulatorFLOAT = 0x1,
	STATTYPE_AccumulatorDWORD = 0x2,
	STATTYPE_CounterFLOAT = 0x3,
	STATTYPE_CounterDWORD = 0x4,
	STATTYPE_MemoryCounter = 0x5,
	STATTYPE_Error = 0x6
};

enum class EMeshApproximationType:unsigned char
{
	MeshAndMaterials = 0x0,
	MeshShapeOnly = 0x1
};

enum class EMeshApproximationBaseCappingType:unsigned char
{
	NoBaseCapping = 0x0,
	ConvexPolygon = 0x1,
	ConvexSolid = 0x2
};

enum class EOccludedGeometryFilteringPolicy:unsigned char
{
	NoOcclusionFiltering = 0x0,
	VisibilityBasedFiltering = 0x1
};

enum class EMeshApproximationSimplificationPolicy:unsigned char
{
	FixedTriangleCount = 0x0,
	TrianglesPerArea = 0x1,
	GeometricTolerance = 0x2
};

enum class EMeshApproximationGroundPlaneClippingPolicy:unsigned char
{
	NoGroundClipping = 0x0,
	DiscardWithZPlane = 0x1,
	CutWithZPlane = 0x2,
	CutAndFillWithZPlane = 0x3
};

enum class EMeshApproximationUVGenerationPolicy:unsigned char
{
	PreferUVAtlas = 0x0,
	PreferXAtlas = 0x1,
	PreferPatchBuilder = 0x2
};

namespace EColumnSortPriority
{
	enum Type:int
	{
		None = 0x0,
		Primary = 0x0,
		Secondary = 0x1,
		Max = 0x2
	};
}

enum class EPropertyObjectReferenceType:unsigned int
{
	None = 0x0,
	Strong = 0x1,
	Weak = 0x2
};

namespace ESlateBrushMirrorType
{
	enum Type:int
	{
		NoMirror = 0x0,
		Horizontal = 0x1,
		Vertical = 0x2,
		Both = 0x3
	};
}

enum class TextureFilter:int
{
	TF_Nearest = 0x0,
	TF_Bilinear = 0x1,
	TF_Trilinear = 0x2,
	TF_Default = 0x3,
	TF_MAX = 0x4
};

enum class EPlayDirection:int
{
	Forwards = 0x0,
	Backwards = 0x1
};

enum class ESkeletalMeshVertexFlags:unsigned char
{
	None = 0x0,
	UseFullPrecisionUVs = 0x1,
	HasVertexColors = 0x2,
	UseHighPrecisionTangentBasis = 0x4,
	UseBackwardsCompatibleF16TruncUVs = 0x8,
	UseHighPrecisionWeights = 0x10
};

enum class ESubmixSendMethod:unsigned char
{
	Linear = 0x0,
	CustomCurve = 0x1,
	Manual = 0x2
};

enum class ECheckBoxState:unsigned char
{
	Unchecked = 0x0,
	Checked = 0x1,
	Undetermined = 0x2
};

enum class ERDGBuilderFlags:int
{
	None = 0x0,
	AllowParallelExecute = 0x1
};

enum class ERDGTextureFlags:unsigned char
{
	None = 0x0,
	MultiFrame = 0x1,
	SkipTracking = 0x2,
	ForceImmediateFirstBarrier = 0x4,
	MaintainCompression = 0x8,
	ReadOnly = 0x0,
	ForceTracking = 0x0
};

enum class ERDGBufferFlags:unsigned char
{
	None = 0x0,
	MultiFrame = 0x1,
	SkipTracking = 0x2,
	ForceImmediateFirstBarrier = 0x4,
	ReadOnly = 0x0,
	ForceTracking = 0x0
};

enum class ERDGUnorderedAccessViewFlags:unsigned char
{
	None = 0x0,
	SkipBarrier = 0x1
};

enum class ERDGInitialDataFlags:unsigned char
{
	None = 0x0,
	NoCopy = 0x1
};

enum class ERDGResourceExtractionFlags:unsigned char
{
	None = 0x0,
	AllowTransient = 0x1
};

enum class ERasterizerDepthClipMode:unsigned char
{
	DepthClip = 0x0,
	DepthClamp = 0x1,
	Num = 0x2,
	NumBits = 0x1
};

enum class EIndirectLightingCacheQuality:int
{
	ILCQ_Off = 0x0,
	ILCQ_Point = 0x1,
	ILCQ_Volume = 0x2
};

enum class EUpdateTransformFlags:int
{
	None = 0x0,
	SkipPhysicsUpdate = 0x1,
	PropagateFromParent = 0x2,
	OnlyUpdateIfUsingSocket = 0x4
};

namespace FReplayCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		ReplayInitial = 0x1,
		SaveAbsTimeMs = 0x2,
		IncreaseBuffer = 0x3,
		SaveEngineVersion = 0x4,
		ExtraVersion = 0x5,
		MultipleLevels = 0x6,
		MultipleLvelsTimeChanges = 0x7,
		DeletedStartupActors = 0x8,
		HeaderFlags = 0x9,
		LevelStreamingFixes = 0xA,
		SaveFullEngineVersion = 0xB,
		HeaderGuid = 0xC,
		CharacterMovement = 0xD,
		CharacterMovementNoInterp = 0xE,
		GuidNameTable = 0xF,
		GuidCacheChecksums = 0x10,
		SavePackageVersionUE = 0x11,
		RecordingMetadata = 0x12,
		CustomVersions = 0x13,
		VersionPlusOne = 0x14,
		LatestVersion = 0x13,
		MinSupportedVersion = 0xD
	};
}

enum class EJsonNotation:int
{
	ObjectStart = 0x0,
	ObjectEnd = 0x1,
	ArrayStart = 0x2,
	ArrayEnd = 0x3,
	Boolean = 0x4,
	String = 0x5,
	Number = 0x6,
	Null = 0x7,
	Error = 0x8
};

enum class EJsonToken:int
{
	None = 0x0,
	Comma = 0x1,
	CurlyOpen = 0x2,
	CurlyClose = 0x3,
	SquareOpen = 0x4,
	SquareClose = 0x5,
	Colon = 0x6,
	String = 0x7,
	Number = 0x8,
	True = 0x9,
	False = 0xA,
	Null = 0xB,
	Identifier = 0xC
};

enum class EBlueprintStatus:int
{
	BS_Unknown = 0x0,
	BS_Dirty = 0x1,
	BS_Error = 0x2,
	BS_UpToDate = 0x3,
	BS_BeingCreated = 0x4,
	BS_UpToDateWithWarnings = 0x5,
	BS_MAX = 0x6
};

enum class ELightmapQuality:int
{
	LQ_LIGHTMAP = 0x0,
	HQ_LIGHTMAP = 0x1
};

enum class ELightComponentType:int
{
	LightType_Directional = 0x0,
	LightType_Point = 0x1,
	LightType_Spot = 0x2,
	LightType_Rect = 0x3,
	LightType_MAX = 0x4,
	LightType_NumBits = 0x2
};

enum class EVolumeUpdateType:int
{
	VUT_MeshDistanceFields = 0x1,
	VUT_Heightfields = 0x2,
	VUT_All = 0x3
};

enum class FGlobalDFCacheType:int
{
	GDF_MostlyStatic = 0x0,
	GDF_Full = 0x1,
	GDF_Num = 0x2
};

namespace ETranslucencyPass
{
	enum Type:int
	{
		TPT_TranslucencyStandard = 0x0,
		TPT_TranslucencyStandardModulate = 0x1,
		TPT_TranslucencyAfterDOF = 0x2,
		TPT_TranslucencyAfterDOFModulate = 0x3,
		TPT_TranslucencyAfterMotionBlur = 0x4,
		TPT_AllTranslucency = 0x5,
		TPT_MAX = 0x6
	};
}

namespace FExclusiveDepthStencil
{
	enum Type:int
	{
		DepthNop = 0x0,
		DepthRead = 0x1,
		DepthWrite = 0x2,
		DepthMask = 0xF,
		StencilNop = 0x0,
		StencilRead = 0x10,
		StencilWrite = 0x20,
		StencilMask = 0xF0,
		DepthNop_StencilNop = 0x0,
		DepthRead_StencilNop = 0x1,
		DepthWrite_StencilNop = 0x2,
		DepthNop_StencilRead = 0x10,
		DepthRead_StencilRead = 0x11,
		DepthWrite_StencilRead = 0x12,
		DepthNop_StencilWrite = 0x20,
		DepthRead_StencilWrite = 0x21,
		DepthWrite_StencilWrite = 0x22
	};
}

enum class EVoiceBlockReasons:unsigned char
{
	None = 0x0,
	Muted = 0x1,
	MutedBy = 0x2,
	Gameplay = 0x4,
	Blocked = 0x8,
	BlockedBy = 0x10
};

namespace EMeshPass
{
	enum Type: char
	{
		DepthPass = 0x0,
		BasePass = 0x1,
		AnisotropyPass = 0x2,
		SkyPass = 0x3,
		SingleLayerWaterPass = 0x4,
		SingleLayerWaterDepthPrepass = 0x5,
		CSMShadowDepth = 0x6,
		VSMShadowDepth = 0x7,
		Distortion = 0x8,
		Velocity = 0x9,
		TranslucentVelocity = 0xA,
		TranslucencyStandard = 0xB,
		TranslucencyStandardModulate = 0xC,
		TranslucencyAfterDOF = 0xD,
		TranslucencyAfterDOFModulate = 0xE,
		TranslucencyAfterMotionBlur = 0xF,
		TranslucencyAll = 0x10,
		LightmapDensity = 0x11,
		DebugViewMode = 0x12,
		CustomDepth = 0x13,
		MobileBasePassCSM = 0x14,
		VirtualTexture = 0x15,
		LumenCardCapture = 0x16,
		LumenCardNanite = 0x17,
		LumenTranslucencyRadianceCacheMark = 0x18,
		LumenFrontLayerTranslucencyGBuffer = 0x19,
		DitheredLODFadingOutMaskPass = 0x1A,
		NaniteMeshPass = 0x1B,
		MeshDecal = 0x1C,
		Num = 0x1D,
		NumBits = 0x6
	};
}

enum class EMovieSceneBuiltInEasing:unsigned char
{
	Linear = 0x0,
	SinIn = 0x1,
	SinOut = 0x2,
	SinInOut = 0x3,
	QuadIn = 0x4,
	QuadOut = 0x5,
	QuadInOut = 0x6,
	Cubic = 0x7,
	CubicIn = 0x8,
	CubicOut = 0x9,
	CubicInOut = 0xA,
	HermiteCubicInOut = 0xB,
	QuartIn = 0xC,
	QuartOut = 0xD,
	QuartInOut = 0xE,
	QuintIn = 0xF,
	QuintOut = 0x10,
	QuintInOut = 0x11,
	ExpoIn = 0x12,
	ExpoOut = 0x13,
	ExpoInOut = 0x14,
	CircIn = 0x15,
	CircOut = 0x16,
	CircInOut = 0x17,
	Custom = 0x18
};

enum class EAutomationComparisonToleranceLevel:unsigned char
{
	Zero = 0x0,
	Low = 0x1,
	Medium = 0x2,
	High = 0x3
};

enum class ETextureMipValueMode:int
{
	TMVM_None = 0x0,
	TMVM_MipLevel = 0x1,
	TMVM_MipBias = 0x2,
	TMVM_Derivative = 0x3,
	TMVM_MAX = 0x4
};

enum class EArrayPropertyFlags:int
{
	None = 0x0,
	UsesMemoryImageAllocator = 0x1
};

enum class ESlateTextureAtlasThreadId:int
{
	Unknown = 0xFF,
	Game = 0x0,
	Render = 0x1
};

enum class ERayTracingPipelineCacheFlags:unsigned char
{
	Default = 0x0,
	NonBlocking = 0x1
};

enum class EMaterialStencilCompare:int
{
	MSC_Less = 0x0,
	MSC_LessEqual = 0x1,
	MSC_Greater = 0x2,
	MSC_GreaterEqual = 0x3,
	MSC_Equal = 0x4,
	MSC_NotEqual = 0x5,
	MSC_Never = 0x6,
	MSC_Always = 0x7,
	MSC_Count = 0x8
};

namespace ESocketReceiveFlags
{
	enum Type:int
	{
		None = 0x0,
		Peek = 0x2,
		WaitAll = 0x100
	};
}
namespace ELanBeaconState
{
	enum Type:int
	{
		NotUsingLanBeacon = 0x0,
		Hosting = 0x1,
		Searching = 0x2
	};
}

enum class ELANBeaconVersionHistory:unsigned char
{
	HISTORY_INITIAL = 0xB,
	HISTORY_BEACON_GUID = 0xC,
	HISTORY_PLUS_ONE = 0xD,
	HISTORY_LATEST = 0xC
};

enum class EMontageSubStepResult:unsigned char
{
	Moved = 0x0,
	NotMoved = 0x1,
	InvalidSection = 0x2,
	InvalidMontage = 0x3
};

enum class ESocketProtocolFamily:unsigned char
{
	None = 0x0,
	IPv4 = 0x1,
	IPv6 = 0x2
};

enum class ESocketShutdownMode:int
{
	Read = 0x0,
	Write = 0x1,
	ReadWrite = 0x2
};

namespace ESocketWaitConditions
{
	enum Type:int
	{
		WaitForRead = 0x0,
		WaitForWrite = 0x1,
		WaitForReadOrWrite = 0x2
	};
}

enum class ESocketConnectionState:int
{
	SCS_NotConnected = 0x0,
	SCS_Connected = 0x1,
	SCS_ConnectionError = 0x2
};

namespace FRecomputeTangentCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		RuntimeRecomputeTangent = 0x1,
		RecomputeTangentVertexColorMask = 0x2,
		VersionPlusOne = 0x3,
		LatestVersion = 0x2
	};
}

enum class EAddressInfoFlags:unsigned short
{
	AllResults = 0x1,
	NoResolveHost = 0x2,
	NoResolveService = 0x4,
	OnlyUsableAddresses = 0x8,
	BindableAddress = 0x10,
	CanonicalName = 0x20,
	FQDomainName = 0x40,
	AllowV4MappedAddresses = 0x80,
	AllResultsWithMapping = 0x81,
	Default = 0x0
};

enum class ERecvMultiFlags:unsigned int
{
	None = 0x0,
	RetrieveTimestamps = 0x1
};

enum class ETimestampTranslation:unsigned char
{
	LocalTimestamp = 0x0,
	TimeDelta = 0x1
};

enum class EAllowOverscroll:unsigned char
{
	Yes = 0x0,
	No = 0x1
};

enum class ESoundWaveLoadingBehavior:unsigned char
{
	Inherited = 0x0,
	RetainOnLoad = 0x1,
	PrimeOnLoad = 0x2,
	LoadOnDemand = 0x3,
	ForceInline = 0x4,
	Uninitialized = 0xFF
};

enum class ERawCurveTrackTypes:unsigned char
{
	RCT_Float = 0x0,
	RCT_Vector = 0x1,
	RCT_Transform = 0x2,
	RCT_MAX = 0x3
};

enum class EFastArraySerializerDeltaFlags:unsigned char
{
	None = 0x0,
	HasBeenSerialized = 0x1,
	HasDeltaBeenRequested = 0x2,
	IsUsingDeltaSerialization = 0x4
};

enum class ESequencerState:int
{
	ESS_None = 0x0,
	ESS_Paused = 0x1,
	ESS_Playing = 0x2
};

enum class EShaderPermutationFlags:unsigned int
{
	None = 0x0,
	HasEditorOnlyData = 0x1
};

enum class EAnimNodeDataFlags:unsigned int
{
	None = 0x0,
	HasInitialUpdateFunction = 0x1,
	HasBecomeRelevantFunction = 0x2,
	HasUpdateFunction = 0x4
};

enum class EWindowDrawAttentionRequestType:int
{
	UntilActivated = 0x0,
	Stop = 0x1
};

enum class EIoChunkType:unsigned char
{
	Invalid = 0x0,
	ExportBundleData = 0x1,
	BulkData = 0x2,
	OptionalBulkData = 0x3,
	MemoryMappedBulkData = 0x4,
	ScriptObjects = 0x5,
	ContainerHeader = 0x6,
	ExternalFile = 0x7,
	ShaderCodeLibrary = 0x8,
	ShaderCode = 0x9,
	PackageStoreEntry = 0xA,
	DerivedData = 0xB,
	EditorDerivedData = 0xC,
	PackageResource = 0xD,
	MAX = 0xE
};

namespace EPhysicsTransformUpdateMode
{
	enum Type:int
	{
		SimulationUpatesComponentTransform = 0x0,
		ComponentTransformIsKinematic = 0x1
	};
}

namespace EAutomationTestFlags
{
	enum Type:int
	{
		None = 0x0,
		EditorContext = 0x1,
		ClientContext = 0x2,
		ServerContext = 0x4,
		CommandletContext = 0x8,
		ApplicationContextMask = 0xF,
		NonNullRHI = 0x100,
		RequiresUser = 0x200,
		FeatureMask = 0x300,
		Disabled = 0x10000,
		CriticalPriority = 0x100000,
		HighPriority = 0x200000,
		HighPriorityAndAbove = 0x300000,
		MediumPriority = 0x400000,
		MediumPriorityAndAbove = 0x700000,
		LowPriority = 0x800000,
		PriorityMask = 0xF00000,
		SmokeFilter = 0x1000000,
		EngineFilter = 0x2000000,
		ProductFilter = 0x4000000,
		PerfFilter = 0x8000000,
		StressFilter = 0x10000000,
		NegativeFilter = 0x20000000,
		FilterMask = 0x3F000000
	};
}

enum class EBoneFilterActionOption:unsigned char
{
	Remove = 0x0,
	Keep = 0x1,
	Invalid = 0x2
};

enum class EShadingPath:int
{
	Mobile = 0x0,
	Deferred = 0x1,
	Num = 0x2
};

enum class EGBufferLayout:int
{
	GBL_Default = 0x0,
	GBL_ForceVelocity = 0x1,
	GBL_Num = 0x2
};

enum class EPhysicsType:int
{
	PhysType_Default = 0x0,
	PhysType_Kinematic = 0x1,
	PhysType_Simulated = 0x2
};

enum class EForkProcessRole:unsigned char
{
	Parent = 0x0,
	Child = 0x1
};

namespace ECastCheckedType
{
	enum Type:int
	{
		NullAllowed = 0x0,
		NullChecked = 0x1
	};
}

enum class ESoftObjectPathCollectType:unsigned char
{
	NonPackage = 0x0,
	NeverCollect = 0x1,
	EditorOnlyCollect = 0x2,
	AlwaysCollect = 0x3
};

enum class EUserDefinedStructureStatus:int
{
	UDSS_UpToDate = 0x0,
	UDSS_Dirty = 0x1,
	UDSS_Error = 0x2,
	UDSS_Duplicate = 0x3,
	UDSS_MAX = 0x4
};

enum class EFontHinting:unsigned char
{
	Default = 0x0,
	Auto = 0x1,
	AutoLight = 0x2,
	Monochrome = 0x3,
	None = 0x4
};

namespace ENavigationOptionFlag
{
	enum Type:int
	{
		Default = 0x0,
		Enable = 0x1,
		Disable = 0x2,
		MAX = 0x3
	};
}

enum class EFVisibleMeshDrawCommandFlags:unsigned char
{
	Default = 0x0,
	MaterialUsesWorldPositionOffset = 0x1,
	MaterialMayModifyPosition = 0x1,
	HasPrimitiveIdStreamIndex = 0x2,
	ForceInstanceCulling = 0x4,
	PreserveInstanceOrder = 0x8,
	All = 0xF,
	NumBits = 0x4
};

enum class ESkinVertexFactoryMode:int
{
	Default = 0x0,
	RayTracing = 0x1
};

enum class EPackageExternalResource:int
{
	WorkspaceDomainFile = 0x0
};

namespace FUE5MainStreamObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		GeometryCollectionNaniteData = 0x1,
		GeometryCollectionNaniteDDC = 0x2,
		RemovingSourceAnimationData = 0x3,
		MeshDescriptionNewFormat = 0x4,
		PartitionActorDescSerializeGridGuid = 0x5,
		ExternalActorsMapDataPackageFlag = 0x6,
		AnimationAddedBlendProfileModes = 0x7,
		WorldPartitionActorDescSerializeDataLayers = 0x8,
		RenamingAnimationNumFrames = 0x9,
		WorldPartitionHLODActorDescSerializeHLODLayer = 0xA,
		GeometryCollectionNaniteCooked = 0xB,
		AddedCookedBoolFontFaceAssets = 0xC,
		WorldPartitionHLODActorDescSerializeCellHash = 0xD,
		GeometryCollectionNaniteTransient = 0xE,
		AddedLandscapeSplineActorDesc = 0xF,
		AddCollisionConstraintFlag = 0x10,
		MantleDbSerialize = 0x11,
		AnimSyncGroupsExplicitSyncMethod = 0x12,
		FLandscapeActorDescFixupGridIndices = 0x13,
		FoliageTypeIncludeInHLOD = 0x14,
		IntroducingAnimationDataModel = 0x15,
		WorldPartitionActorDescSerializeActorLabel = 0x16,
		WorldPartitionActorDescSerializeArchivePersistent = 0x17,
		FixForceExternalActorLevelReferenceDuplicates = 0x18,
		SerializeMeshDescriptionBase = 0x19,
		ConvexUsesVerticesArray = 0x1A,
		WorldPartitionActorDescSerializeHLODInfo = 0x1B,
		AddDisabledFlag = 0x1C,
		MoveCustomAttributesToDataModel = 0x1D,
		BlendSpaceRuntimeTriangulation = 0x1E,
		BlendSpaceSmoothingImprovements = 0x1F,
		RemovingTessellationParameters = 0x20,
		SparseClassDataStructSerialization = 0x21,
		PackedLevelInstanceBoundsFix = 0x22,
		AnimNodeConstantDataRefactorPhase0 = 0x23,
		MaterialSavedCachedData = 0x24,
		RemoveDecalBlendMode = 0x25,
		DirLightsAreAtmosphereLightsByDefault = 0x26,
		WorldPartitionStreamingCellsNamingShortened = 0x27,
		WorldPartitionActorDescGetStreamingBounds = 0x28,
		MeshDescriptionVirtualization = 0x29,
		TextureSourceVirtualization = 0x2A,
		RigVMCopyOpStoreNumBytes = 0x2B,
		MaterialTranslucencyPass = 0x2C,
		GeometryCollectionUserDefinedCollisionShapes = 0x2D,
		RemovedAtmosphericFog = 0x2E,
		SkyAtmosphereAffectsHeightFogWithBetterDefault = 0x2F,
		BlendSpaceSampleOrdering = 0x30,
		GeometryCollectionCacheRemovesMassToLocal = 0x31,
		EdGraphPinSourceIndex = 0x32,
		VirtualizedBulkDataHaveUniqueGuids = 0x33,
		RigVMMemoryStorageObject = 0x34,
		RayTracedShadowsType = 0x35,
		SkelMeshSectionVisibleInRayTracingFlagAdded = 0x36,
		AnimGraphNodeTaggingAdded = 0x37,
		DynamicMeshCompactedSerialization = 0x38,
		ConvertReductionBaseSkeletalMeshBulkDataToInlineReductionCacheData = 0x39,
		SkeletalMeshLODModelMeshInfo = 0x3A,
		TextureDoScaleMipsForAlphaCoverage = 0x3B,
		VolumetricCloudReflectionSampleCountDefaultUpdate = 0x3C,
		UseTriangleMeshBVH = 0x3D,
		DynamicMeshAttributesWeightMapsAndNames = 0x3E,
		FKControlNamingScheme = 0x3F,
		RichCurveKeyInvalidTangentMode = 0x40,
		ForceUpdateAnimationAssetCurveTangents = 0x41,
		SoundWaveVirtualizationUpdate = 0x42,
		MaterialFeatureLevelNodeFixForSM6 = 0x43,
		GeometryCollectionPerChildDamageThreshold = 0x44,
		AddRigidParticleControlFlags = 0x45,
		LiveLinkComponentPickerPerController = 0x46,
		RemoveTriangleMeshBVHFaces = 0x47,
		LensComponentNodalOffset = 0x48,
		FixGpuAlwaysRunningUpdateScriptNoneInterpolated = 0x49,
		WorldPartitionSerializeStreamingPolicyOnCook = 0x4A,
		WorldPartitionActorDescRemoveBoundsRelevantSerialization = 0x4B,
		AnimationDataModelInterface_BackedOut = 0x4C,
		LandscapeSplineActorDescDeprecation = 0x4D,
		BackoutAnimationDataModelInterface = 0x4E,
		MobileStationaryLocalLights = 0x4F,
		ManagedArrayCollectionAlwaysSerializeValue = 0x50,
		LensComponentDistortion = 0x51,
		ImgMediaPathResolutionWithEngineOrProjectTokens = 0x52,
		AddLowResolutionHeightField = 0x53,
		DecreaseLowResolutionHeightField = 0x54,
		GeometryCollectionDamagePropagationData = 0x55,
		VehicleFrictionForcePositionChange = 0x56,
		AddSetMeshDeformerFlag = 0x57,
		WorldPartitionActorDescActorAndClassPaths = 0x58,
		ReintroduceAnimationDataModelInterface = 0x59,
		IncreasedSkinWeightPrecision = 0x5A,
		MaterialHasIsUsedWithVolumetricCloudFlag = 0x5B,
		UpdateHairDescriptionBulkData = 0x5C,
		SpawnActorFromClassTransformScaleMethod = 0x5D,
		RigVMLazyEvaluation = 0x5E,
		PoseAssetRawDataGUIDUpdate = 0x5F,
		RigVMSaveFunctionAccessInModel = 0x60,
		RigVMSerializeExecuteContextStruct = 0x61,
		VisualLoggerTimeStampAsDouble = 0x62,
		MaterialInstanceBasePropertyOverridesThinSurface = 0x63,
		MaterialRefractionModeNone = 0x64,
		RigVMSaveSerializedGraphInGraphFunctionData = 0x65,
		PerPlatformAnimSequenceTargetFrameRate = 0x66,
		NiagaraGrid2DDefaultUnnamedAttributesZero = 0x67,
		RigVMGeneratedClass = 0x68,
		VersionPlusOne = 0x69,
		LatestVersion = 0x68
	};
}

enum class ERecompileModuleFlags:unsigned char
{
	None = 0x0,
	ReloadAfterRecompile = 0x1,
	FailIfGeneratedCodeChanges = 0x2,
	ForceCodeProject = 0x4
};

enum class EAsyncComputePriority:int
{
	AsyncComputePriority_Default = 0x0,
	AsyncComputePriority_High = 0x1
};

namespace FAnimObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		LinkTimeAnimBlueprintRootDiscovery = 0x1,
		StoreMarkerNamesOnSkeleton = 0x2,
		SerializeRigVMRegisterArrayState = 0x3,
		IncreaseBoneIndexLimitPerChunk = 0x4,
		UnlimitedBoneInfluences = 0x5,
		AnimSequenceCurveColors = 0x6,
		NotifyAndSyncMarkerGuids = 0x7,
		SerializeRigVMRegisterDynamicState = 0x8,
		SerializeGroomCards = 0x9,
		SerializeRigVMEntries = 0xA,
		SerializeHairBindingAsset = 0xB,
		SerializeHairClusterCullingData = 0xC,
		SerializeGroomCardsAndMeshes = 0xD,
		GroomLODStripping = 0xE,
		GroomBindingSerialization = 0xF,
		VersionPlusOne = 0x10,
		LatestVersion = 0xF
	};
}

namespace EAudioOutputTarget
{
	enum Type:int
	{
		Speaker = 0x0,
		Controller = 0x1,
		ControllerFallbackToSpeaker = 0x2
	};
}

enum class EDrawingPolicyOverrideFlags:int
{
	None = 0x0,
	TwoSided = 0x1,
	DitheredLODTransition = 0x2,
	Wireframe = 0x4,
	ReverseCullMode = 0x8
};

enum class EMeshPassFlags:int
{
	None = 0x0,
	CachedMeshCommands = 0x1,
	MainView = 0x2
};

enum class EElementType:unsigned char
{
	ET_Box = 0x0,
	ET_DebugQuad = 0x1,
	ET_Text = 0x2,
	ET_ShapedText = 0x3,
	ET_Spline = 0x4,
	ET_Line = 0x5,
	ET_Gradient = 0x6,
	ET_Viewport = 0x7,
	ET_Border = 0x8,
	ET_Custom = 0x9,
	ET_CustomVerts = 0xA,
	ET_PostProcessPass = 0xB,
	ET_RoundedBox = 0xC,
	ET_Count = 0xD
};

enum class EVTPageTableFormat:unsigned char
{
	UInt16 = 0x0,
	UInt32 = 0x1
};

enum class BodyInstanceSceneState:unsigned char
{
	NotAdded = 0x0,
	AwaitingAdd = 0x1,
	Added = 0x2,
	AwaitingRemove = 0x3,
	Removed = 0x4
};

namespace EDOFMode
{
	enum Type:int
	{
		Default = 0x0,
		SixDOF = 0x1,
		YZPlane = 0x2,
		XZPlane = 0x3,
		XYPlane = 0x4,
		CustomPlane = 0x5,
		None = 0x6
	};
}

enum class EBatchProcessingMode:unsigned int
{
	Generic = 0x0,
	UnCulled = 0x1,
	Num = 0x2
};

enum class EInstanceCullingFlags:unsigned char
{
	None = 0x0,
	DrawOnlyVSMInvalidatingGeometry = 0x1,
	NoInstanceOrderPreservation = 0x2,
	CustomDataOutCull = 0x4,
	IgnoreFrustumCull = 0x8
};

enum class EInstanceCullingMode:int
{
	Normal = 0x0,
	Stereo = 0x1
};

enum class EPrimitiveDirtyState:unsigned char
{
	None = 0x0,
	ChangedId = 0x1,
	ChangedTransform = 0x2,
	ChangedStaticLighting = 0x4,
	ChangedOther = 0x8,
	Added = 0x10,
	Removed = 0x20,
	ChangedAll = 0xF,
	AddedMask = 0x1F
};

enum class ERayTracingSceneLifetime:int
{
	RTSL_SingleFrame = 0x0
};

namespace EKinematicBonesUpdateToPhysics
{
	enum Type:int
	{
		SkipSimulatingBones = 0x0,
		SkipAllBones = 0x1
	};
}

namespace FOverlappingVerticesCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		DetectOVerlappingVertices = 0x1,
		VersionPlusOne = 0x2,
		LatestVersion = 0x1
	};
}

enum class EAccelerationStructureBuildMode:int
{
	Build = 0x0,
	Update = 0x1
};

namespace ESplitScreenType
{
	enum Type:int
	{
		None = 0x0,
		TwoPlayer_Horizontal = 0x1,
		TwoPlayer_Vertical = 0x2,
		ThreePlayer_FavorTop = 0x3,
		ThreePlayer_FavorBottom = 0x4,
		ThreePlayer_Vertical = 0x5,
		ThreePlayer_Horizontal = 0x6,
		FourPlayer_Grid = 0x7,
		FourPlayer_Vertical = 0x8,
		FourPlayer_Horizontal = 0x9,
		SplitTypeCount = 0xA
	};
}

enum class EJson:int
{
	None = 0x0,
	Null = 0x1,
	String = 0x2,
	Number = 0x3,
	Boolean = 0x4,
	Array = 0x5,
	Object = 0x6
};

enum class ERenderTargetLoadAction:unsigned char
{
	ENoAction = 0x0,
	ELoad = 0x1,
	EClear = 0x2,
	Num = 0x3,
	NumBits = 0x2
};

enum class ERenderTargetStoreAction:unsigned char
{
	ENoAction = 0x0,
	EStore = 0x1,
	EMultisampleResolve = 0x2,
	Num = 0x3,
	NumBits = 0x2
};

enum class ESubpassHint:unsigned char
{
	None = 0x0,
	DepthReadSubpass = 0x1,
	DeferredShadingSubpass = 0x2
};

enum class EConservativeRasterization:unsigned char
{
	Disabled = 0x0,
	Overestimated = 0x1
};

namespace EGBufferFormat
{
	enum Type:int
	{
		Force8BitsPerChannel = 0x0,
		Default = 0x1,
		HighPrecisionNormals = 0x3,
		Force16BitsPerChannel = 0x5
	};
}

namespace ETranslucentSortPolicy
{
	enum Type:int
	{
		SortByDistance = 0x0,
		SortByProjectedZ = 0x1,
		SortAlongAxis = 0x2
	};
}

enum class EDecompressionType:int
{
	DTYPE_Setup = 0x0,
	DTYPE_Invalid = 0x1,
	DTYPE_Preview = 0x2,
	DTYPE_Native = 0x3,
	DTYPE_RealTime = 0x4,
	DTYPE_Procedural = 0x5,
	DTYPE_Xenon = 0x6,
	DTYPE_Streaming = 0x7,
	DTYPE_MAX = 0x8
};

enum class ESceneTextureExtracts:unsigned int
{
	None = 0x0,
	Depth = 0x1,
	CustomDepth = 0x2,
	All = 0x3
};

enum class ESceneTextureSetupMode:unsigned int
{
	None = 0x0,
	SceneColor = 0x1,
	SceneDepth = 0x2,
	SceneVelocity = 0x4,
	GBufferA = 0x8,
	GBufferB = 0x10,
	GBufferC = 0x20,
	GBufferD = 0x40,
	GBufferE = 0x80,
	GBufferF = 0x100,
	SSAO = 0x200,
	CustomDepth = 0x400,
	GBuffers = 0x1F8,
	All = 0x7FF
};

enum class EMobileSceneTextureSetupMode:unsigned int
{
	None = 0x0,
	SceneColor = 0x1,
	SceneDepth = 0x2,
	CustomDepth = 0x4,
	GBufferA = 0x8,
	GBufferB = 0x10,
	GBufferC = 0x20,
	GBufferD = 0x40,
	SceneDepthAux = 0x80,
	SceneVelocity = 0x100,
	GBuffers = 0xF8,
	All = 0x1FF
};

enum class ETextureColorSpace:unsigned char
{
	TCS_None = 0x0,
	TCS_sRGB = 0x1,
	TCS_Rec2020 = 0x2,
	TCS_ACESAP0 = 0x3,
	TCS_ACESAP1 = 0x4,
	TCS_P3DCI = 0x5,
	TCS_P3D65 = 0x6,
	TCS_REDWideGamut = 0x7,
	TCS_SonySGamut3 = 0x8,
	TCS_SonySGamut3Cine = 0x9,
	TCS_AlexaWideGamut = 0xA,
	TCS_CanonCinemaGamut = 0xB,
	TCS_GoProProtuneNative = 0xC,
	TCS_PanasonicVGamut = 0xD,
	TCS_Custom = 0x63,
	TCS_MAX = 0x64
};

enum class EAnimInterpolationType:unsigned char
{
	Linear = 0x0,
	Step = 0x1
};

enum class EAppendNetExportFlags:unsigned int
{
	None = 0x0,
	ForceExportDirtyGroups = 0x1
};

enum class EVectorVMOpCategory:unsigned char
{
	Input = 0x0,
	Output = 0x1,
	Op = 0x2,
	ExtFnCall = 0x3,
	IndexGen = 0x4,
	RWBuffer = 0x5,
	Stat = 0x6,
	Fused = 0x7,
	Other = 0x8,
	MAX = 0x9
};

enum class EVectorVMOp:unsigned char
{
	done = 0x0,
	add = 0x1,
	sub = 0x2,
	mul = 0x3,
	div = 0x4,
	mad = 0x5,
	lerp = 0x6,
	rcp = 0x7,
	rsq = 0x8,
	sqrt = 0x9,
	neg = 0xA,
	abs = 0xB,
	exp = 0xC,
	exp2 = 0xD,
	log = 0xE,
	log2 = 0xF,
	sin = 0x10,
	cos = 0x11,
	tan = 0x12,
	asin = 0x13,
	acos = 0x14,
	atan = 0x15,
	atan2 = 0x16,
	ceil = 0x17,
	floor = 0x18,
	fmod = 0x19,
	frac = 0x1A,
	trunc = 0x1B,
	clamp = 0x1C,
	min = 0x1D,
	max = 0x1E,
	pow = 0x1F,
	round = 0x20,
	sign = 0x21,
	step = 0x22,
	random = 0x23,
	noise = 0x24,
	cmplt = 0x25,
	cmple = 0x26,
	cmpgt = 0x27,
	cmpge = 0x28,
	cmpeq = 0x29,
	cmpneq = 0x2A,
	select = 0x2B,
	addi = 0x2C,
	subi = 0x2D,
	muli = 0x2E,
	divi = 0x2F,
	clampi = 0x30,
	mini = 0x31,
	maxi = 0x32,
	absi = 0x33,
	negi = 0x34,
	signi = 0x35,
	randomi = 0x36,
	cmplti = 0x37,
	cmplei = 0x38,
	cmpgti = 0x39,
	cmpgei = 0x3A,
	cmpeqi = 0x3B,
	cmpneqi = 0x3C,
	bit_and = 0x3D,
	bit_or = 0x3E,
	bit_xor = 0x3F,
	bit_not = 0x40,
	bit_lshift = 0x41,
	bit_rshift = 0x42,
	logic_and = 0x43,
	logic_or = 0x44,
	logic_xor = 0x45,
	logic_not = 0x46,
	f2i = 0x47,
	i2f = 0x48,
	f2b = 0x49,
	b2f = 0x4A,
	i2b = 0x4B,
	b2i = 0x4C,
	inputdata_float = 0x4D,
	inputdata_int32 = 0x4E,
	inputdata_half = 0x4F,
	inputdata_noadvance_float = 0x50,
	inputdata_noadvance_int32 = 0x51,
	inputdata_noadvance_half = 0x52,
	outputdata_float = 0x53,
	outputdata_int32 = 0x54,
	outputdata_half = 0x55,
	acquireindex = 0x56,
	external_func_call = 0x57,
	exec_index = 0x58,
	noise2D = 0x59,
	noise3D = 0x5A,
	enter_stat_scope = 0x5B,
	exit_stat_scope = 0x5C,
	update_id = 0x5D,
	acquire_id = 0x5E,
	half_to_float = 0x5F,
	exec_indexf = 0x60,
	exec_index_addi = 0x61,
	cmplt_select = 0x62,
	cmple_select = 0x63,
	cmpeq_select = 0x64,
	cmplti_select = 0x65,
	cmplei_select = 0x66,
	cmpeqi_select = 0x67,
	cmplt_logic_and = 0x68,
	cmple_logic_and = 0x69,
	cmpgt_logic_and = 0x6A,
	cmpge_logic_and = 0x6B,
	cmpeq_logic_and = 0x6C,
	cmpne_logic_and = 0x6D,
	cmplti_logic_and = 0x6E,
	cmplei_logic_and = 0x6F,
	cmpgti_logic_and = 0x70,
	cmpgei_logic_and = 0x71,
	cmpeqi_logic_and = 0x72,
	cmpnei_logic_and = 0x73,
	cmplt_logic_or = 0x74,
	cmple_logic_or = 0x75,
	cmpgt_logic_or = 0x76,
	cmpge_logic_or = 0x77,
	cmpeq_logic_or = 0x78,
	cmpne_logic_or = 0x79,
	cmplti_logic_or = 0x7A,
	cmplei_logic_or = 0x7B,
	cmpgti_logic_or = 0x7C,
	cmpgei_logic_or = 0x7D,
	cmpeqi_logic_or = 0x7E,
	cmpnei_logic_or = 0x7F,
	mad_add = 0x80,
	mad_sub0 = 0x81,
	mad_sub1 = 0x82,
	mad_mul = 0x83,
	mad_sqrt = 0x84,
	mad_mad0 = 0x85,
	mad_mad1 = 0x86,
	mul_mad0 = 0x87,
	mul_mad1 = 0x88,
	mul_add = 0x89,
	mul_sub0 = 0x8A,
	mul_sub1 = 0x8B,
	mul_mul = 0x8C,
	mul_max = 0x8D,
	mul_2x = 0x8E,
	add_mad1 = 0x8F,
	add_add = 0x90,
	sub_cmplt1 = 0x91,
	sub_neg = 0x92,
	sub_mul = 0x93,
	div_mad0 = 0x94,
	div_f2i = 0x95,
	div_mul = 0x96,
	muli_addi = 0x97,
	addi_bit_rshift = 0x98,
	addi_muli = 0x99,
	b2i_2x = 0x9A,
	i2f_div0 = 0x9B,
	i2f_div1 = 0x9C,
	i2f_mul = 0x9D,
	i2f_mad0 = 0x9E,
	i2f_mad1 = 0x9F,
	f2i_select1 = 0xA0,
	f2i_maxi = 0xA1,
	f2i_addi = 0xA2,
	fmod_add = 0xA3,
	bit_and_i2f = 0xA4,
	bit_rshift_bit_and = 0xA5,
	neg_cmplt = 0xA6,
	bit_or_muli = 0xA7,
	bit_lshift_bit_or = 0xA8,
	random_add = 0xA9,
	random_2x = 0xAA,
	max_f2i = 0xAB,
	select_mul = 0xAC,
	select_add = 0xAD,
	sin_cos = 0xAE,
	NumOpcodes = 0xAF
};

enum class ECollisionQueryHitType:unsigned char
{
	None = 0x0,
	Touch = 0x1,
	Block = 0x2
};

enum class EStreamingOperationResult:int
{
	Success = 0x0,
	Unsupported = 0x1,
	ReplayNotFound = 0x2,
	ReplayCorrupt = 0x3,
	NotEnoughSpace = 0x4,
	NotEnoughSlots = 0x5,
	Unspecified = 0x6,
	UnfinishedTask = 0x7,
	EventNotFound = 0x8,
	DecryptFailure = 0x9
};

enum class EReplayCheckpointType:unsigned char
{
	Full = 0x0,
	Delta = 0x1
};

enum class EReplayStreamerState:unsigned char
{
	Idle = 0x0,
	Recording = 0x1,
	Playback = 0x2
};

enum class ERepLayoutCmdType:unsigned char
{
	DynamicArray = 0x0,
	Return = 0x1,
	Property = 0x2,
	PropertyBool = 0x3,
	PropertyFloat = 0x4,
	PropertyInt = 0x5,
	PropertyByte = 0x6,
	PropertyName = 0x7,
	PropertyObject = 0x8,
	PropertyUInt32 = 0x9,
	PropertyVector = 0xA,
	PropertyRotator = 0xB,
	PropertyPlane = 0xC,
	PropertyVector100 = 0xD,
	PropertyNetId = 0xE,
	RepMovement = 0xF,
	PropertyVectorNormal = 0x10,
	PropertyVector10 = 0x11,
	PropertyVectorQ = 0x12,
	PropertyString = 0x13,
	PropertyUInt64 = 0x14,
	PropertyNativeBool = 0x15,
	PropertySoftObject = 0x16,
	PropertyWeakObject = 0x17,
	PropertyInterface = 0x18,
	NetSerializeStructWithObjectReferences = 0x19
};

enum class ERepLayoutCmdFlags:unsigned char
{
	None = 0x0,
	IsSharedSerialization = 0x1,
	IsStruct = 0x2,
	IsEmptyArrayStruct = 0x4
};

enum class EConstraintTransformComponentFlags:unsigned char
{
	None = 0x0,
	ChildPosition = 0x1,
	ChildRotation = 0x2,
	ParentPosition = 0x4,
	ParentRotation = 0x8,
	AllChild = 0x3,
	AllParent = 0xC,
	AllPosition = 0x5,
	AllRotation = 0xA,
	All = 0xF
};

enum class ETextOverflowDirection:unsigned char
{
	NoOverflow = 0x0,
	LeftToRight = 0x1,
	RightToLeft = 0x2
};

enum class ELinearConstraintMotion:int
{
	LCM_Free = 0x0,
	LCM_Limited = 0x1,
	LCM_Locked = 0x2,
	LCM_MAX = 0x3
};

enum class EAngularConstraintMotion:int
{
	ACM_Free = 0x0,
	ACM_Limited = 0x1,
	ACM_Locked = 0x2,
	ACM_MAX = 0x3
};

namespace EConstraintFrame
{
	enum Type:int
	{
		Frame1 = 0x0,
		Frame2 = 0x1
	};
}

enum class ERepParentFlags:unsigned int
{
	None = 0x0,
	IsLifetime = 0x1,
	IsConditional = 0x2,
	IsConfig = 0x4,
	IsCustomDelta = 0x8,
	IsNetSerialize = 0x10,
	IsStructProperty = 0x20,
	IsZeroConstructible = 0x40,
	IsFastArray = 0x80,
	HasObjectProperties = 0x100,
	HasNetSerializeProperties = 0x200,
	HasDynamicArrayProperties = 0x400
};

enum class ETextureSourceCompressionFormat:int
{
	TSCF_None = 0x0,
	TSCF_PNG = 0x1,
	TSCF_JPEG = 0x2,
	TSCF_MAX = 0x3
};

enum class EMaterialDecalResponse:int
{
	MDR_None = 0x0,
	MDR_ColorNormalRoughness = 0x1,
	MDR_Color = 0x2,
	MDR_ColorNormal = 0x3,
	MDR_ColorRoughness = 0x4,
	MDR_Normal = 0x5,
	MDR_NormalRoughness = 0x6,
	MDR_Roughness = 0x7,
	MDR_MAX = 0x8
};

enum class ECreateRepLayoutFlags:int
{
	None = 0x0,
	MaySendProperties = 0x1
};

enum class ECreateReplicationChangelistMgrFlags:int
{
	None = 0x0,
	SkipDeltaCustomState = 0x1
};

enum class ECreateRepStateFlags:unsigned int
{
	None = 0x0,
	SkipCreateReceivingState = 0x1
};

enum class EReceivePropertiesFlags:unsigned int
{
	None = 0x0,
	RepNotifies = 0x1,
	SkipRoleSwap = 0x2
};

enum class ECustomDepthMode:unsigned int
{
	Disabled = 0x0,
	Enabled = 0x1,
	EnabledWithStencil = 0x2
};

enum class ERepLayoutFlags:unsigned char
{
	None = 0x0,
	IsActor = 0x1,
	PartialPushSupport = 0x2,
	FullPushSupport = 0x4,
	HasObjectOrNetSerializeProperties = 0x8,
	NoReplicatedProperties = 0x10,
	FullPushProperties = 0x20,
	HasInitialOnlyProperties = 0x40
};

enum class ERepLayoutResult:int
{
	Success = 0x0,
	Empty = 0x1,
	Error = 0x2,
	FatalError = 0x3
};

enum class ESerializePropertyType:unsigned char
{
	Handle = 0x0,
	Name = 0x1
};

enum class ECollisionTraceFlag:int
{
	CTF_UseDefault = 0x0,
	CTF_UseSimpleAndComplex = 0x1,
	CTF_UseSimpleAsComplex = 0x2,
	CTF_UseComplexAsSimple = 0x3,
	CTF_MAX = 0x4
};

enum class ESoundAssetCompressionType:unsigned char
{
	BinkAudio = 0x0,
	ADPCM = 0x1,
	PCM = 0x2,
	PlatformSpecific = 0x3,
	ProjectDefined = 0x4
};

enum class ESoundWavePrecacheState:int
{
	NotStarted = 0x0,
	InProgress = 0x1,
	Done = 0x2
};

enum class EStaticMeshVertexUVType:int
{
	Default = 0x0,
	HighPrecision = 0x1
};

enum class ERHIInterfaceType:int
{
	Hidden = 0x0,
	Null = 0x1,
	D3D11 = 0x2,
	D3D12 = 0x3,
	Vulkan = 0x4,
	Metal = 0x5,
	Agx = 0x6,
	OpenGL = 0x7
};

enum class ERenderQueryType:int
{
	RQT_Undefined = 0x0,
	RQT_Occlusion = 0x1,
	RQT_AbsoluteTime = 0x2
};

enum class EColorSpaceAndEOTF:int
{
	EUnknown = 0x0,
	EColorSpace_Rec709 = 0x1,
	EColorSpace_Rec2020 = 0x2,
	EColorSpace_DCIP3 = 0x3,
	EEColorSpace_MASK = 0xF,
	EEOTF_Linear = 0x10,
	EEOTF_sRGB = 0x20,
	EEOTF_PQ = 0x30,
	EEOTF_MASK = 0xF0,
	ERec709_sRGB = 0x21,
	ERec709_Linear = 0x11,
	ERec2020_PQ = 0x32,
	ERec2020_Linear = 0x12,
	EDCIP3_PQ = 0x33,
	EDCIP3_Linear = 0x13
};

enum class ERayTracingAccelerationStructureFlags:int
{
	None = 0x0,
	AllowUpdate = 0x1,
	AllowCompaction = 0x2,
	FastTrace = 0x4,
	FastBuild = 0x8,
	MinimizeMemory = 0x10
};

enum class EMaterialUsage:int
{
	MATUSAGE_SkeletalMesh = 0x0,
	MATUSAGE_ParticleSprites = 0x1,
	MATUSAGE_BeamTrails = 0x2,
	MATUSAGE_MeshParticles = 0x3,
	MATUSAGE_StaticLighting = 0x4,
	MATUSAGE_MorphTargets = 0x5,
	MATUSAGE_SplineMesh = 0x6,
	MATUSAGE_InstancedStaticMeshes = 0x7,
	MATUSAGE_GeometryCollections = 0x8,
	MATUSAGE_Clothing = 0x9,
	MATUSAGE_NiagaraSprites = 0xA,
	MATUSAGE_NiagaraRibbons = 0xB,
	MATUSAGE_NiagaraMeshParticles = 0xC,
	MATUSAGE_GeometryCache = 0xD,
	MATUSAGE_Water = 0xE,
	MATUSAGE_HairStrands = 0xF,
	MATUSAGE_LidarPointCloud = 0x10,
	MATUSAGE_VirtualHeightfieldMesh = 0x11,
	MATUSAGE_Nanite = 0x12,
	MATUSAGE_VolumetricCloud = 0x13,
	MATUSAGE_MAX = 0x14
};

enum class EPSOPrecachePriority:unsigned char
{
	Medium = 0x0,
	High = 0x1
};

enum class EMaterialGetParameterValueFlags:unsigned int
{
	None = 0x0,
	CheckNonOverrides = 0x1,
	CheckInstanceOverrides = 0x2,
	CheckAll = 0x3,
	Default = 0x3
};

enum class EMaterialShaderPrecompileMode:int
{
	None = 0x0,
	Background = 0x1,
	Synchronous = 0x2,
	Default = 0x1
};

namespace FFortniteReleaseBranchCustomObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		DisableLevelset_v14_10 = 0x1,
		ChaosClothAddTethersToCachedData = 0x2,
		ChaosKinematicTargetRemoveScale = 0x3,
		ActorComponentUCSModifiedPropertiesSparseStorage = 0x4,
		FixupNaniteLandscapeMeshes = 0x5,
		RemoveUselessLandscapeMeshesCookedCollisionData = 0x6,
		VersionPlusOne = 0x7,
		LatestVersion = 0x6
	};
}

enum class ENCPoolMethod:unsigned char
{
	None = 0x0,
	AutoRelease = 0x1,
	ManualRelease = 0x2,
	ManualRelease_OnComplete = 0x3,
	FreeInPool = 0x4
};

enum class ESetResolutionMethod:int
{
	Independent = 0x0,
	MaxAxis = 0x1,
	CellSize = 0x2
};

namespace FSkeletalMeshCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		CombineSectionWithChunk = 0x1,
		CombineSoftAndRigidVerts = 0x2,
		RecalcMaxBoneInfluences = 0x3,
		SaveNumVertices = 0x4,
		RegenerateClothingShadowFlags = 0x5,
		UseSharedColorBufferFormat = 0x6,
		UseSeparateSkinWeightBuffer = 0x7,
		NewClothingSystemAdded = 0x8,
		CachedClothInverseMasses = 0x9,
		CompactClothVertexBuffer = 0xA,
		RemoveSourceData = 0xB,
		SplitModelAndRenderData = 0xC,
		RemoveTriangleSorting = 0xD,
		RemoveDuplicatedClothingSections = 0xE,
		DeprecateSectionDisabledFlag = 0xF,
		SectionIgnoreByReduceAdded = 0x10,
		SkinWeightProfiles = 0x11,
		RemoveEnableClothLOD = 0x12,
		VersionPlusOne = 0x13,
		LatestVersion = 0x12
	};
}

namespace FExternalPhysicsMaterialCustomObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		AddedMaterialMasks = 0x1,
		VersionPlusOne = 0x2,
		LatestVersion = 0x1
	};
}

enum class EInstancePropertyValueFlags:int
{
	None = 0x0,
	CausesInstancing = 0x1,
	AllowSelfReference = 0x2,
	DoNotCreateNewInstance = 0x4
};

enum class ENavigationGenesis:unsigned char
{
	Keyboard = 0x0,
	Controller = 0x1,
	User = 0x2
};

enum class ENavigationSource:unsigned char
{
	FocusedWidget = 0x0,
	WidgetUnderCursor = 0x1
};

enum class ESleepEvent:unsigned char
{
	SET_Wakeup = 0x0,
	SET_Sleep = 0x1
};

enum class EPhysicalSurface:int
{
	SurfaceType_Default = 0x0,
	SurfaceType1 = 0x1,
	SurfaceType2 = 0x2,
	SurfaceType3 = 0x3,
	SurfaceType4 = 0x4,
	SurfaceType5 = 0x5,
	SurfaceType6 = 0x6,
	SurfaceType7 = 0x7,
	SurfaceType8 = 0x8,
	SurfaceType9 = 0x9,
	SurfaceType10 = 0xA,
	SurfaceType11 = 0xB,
	SurfaceType12 = 0xC,
	SurfaceType13 = 0xD,
	SurfaceType14 = 0xE,
	SurfaceType15 = 0xF,
	SurfaceType16 = 0x10,
	SurfaceType17 = 0x11,
	SurfaceType18 = 0x12,
	SurfaceType19 = 0x13,
	SurfaceType20 = 0x14,
	SurfaceType21 = 0x15,
	SurfaceType22 = 0x16,
	SurfaceType23 = 0x17,
	SurfaceType24 = 0x18,
	SurfaceType25 = 0x19,
	SurfaceType26 = 0x1A,
	SurfaceType27 = 0x1B,
	SurfaceType28 = 0x1C,
	SurfaceType29 = 0x1D,
	SurfaceType30 = 0x1E,
	SurfaceType31 = 0x1F,
	SurfaceType32 = 0x20,
	SurfaceType33 = 0x21,
	SurfaceType34 = 0x22,
	SurfaceType35 = 0x23,
	SurfaceType36 = 0x24,
	SurfaceType37 = 0x25,
	SurfaceType38 = 0x26,
	SurfaceType39 = 0x27,
	SurfaceType40 = 0x28,
	SurfaceType41 = 0x29,
	SurfaceType42 = 0x2A,
	SurfaceType43 = 0x2B,
	SurfaceType44 = 0x2C,
	SurfaceType45 = 0x2D,
	SurfaceType46 = 0x2E,
	SurfaceType47 = 0x2F,
	SurfaceType48 = 0x30,
	SurfaceType49 = 0x31,
	SurfaceType50 = 0x32,
	SurfaceType51 = 0x33,
	SurfaceType52 = 0x34,
	SurfaceType53 = 0x35,
	SurfaceType54 = 0x36,
	SurfaceType55 = 0x37,
	SurfaceType56 = 0x38,
	SurfaceType57 = 0x39,
	SurfaceType58 = 0x3A,
	SurfaceType59 = 0x3B,
	SurfaceType60 = 0x3C,
	SurfaceType61 = 0x3D,
	SurfaceType62 = 0x3E,
	SurfaceType_Max = 0x3F
};

namespace EFrictionCombineMode
{
	enum Type:int
	{
		Average = 0x0,
		Min = 0x1,
		Multiply = 0x2,
		Max = 0x3
	};
}

enum class ESoilType:int
{
	SoilType_None = 0x0,
	SoilType_1 = 0x1,
	SoilType_2 = 0x2,
	SoilType_3 = 0x3,
	SoilType_4 = 0x4,
	SoilType_5 = 0x5,
	SoilType_6 = 0x6,
	SoilType_7 = 0x7,
	SoilType_8 = 0x8,
	SoilType_9 = 0x9,
	SoilType_10 = 0xA,
	SoilType_11 = 0xB,
	SoilType_12 = 0xC,
	SoilType_13 = 0xD,
	SoilType_14 = 0xE,
	SoilType_15 = 0xF,
	SoilType_16 = 0x10,
	SoilType_17 = 0x11,
	SoilType_18 = 0x12,
	SoilType_19 = 0x13,
	SoilType_20 = 0x14,
	SoilType_21 = 0x15,
	SoilType_22 = 0x16,
	SoilType_23 = 0x17,
	SoilType_24 = 0x18,
	SoilType_25 = 0x19,
	SoilType_26 = 0x1A,
	SoilType_27 = 0x1B,
	SoilType_28 = 0x1C,
	SoilType_29 = 0x1D,
	SoilType_30 = 0x1E,
	SoilType_31 = 0x1F,
	SoilType_32 = 0x20,
	SoilType_33 = 0x21,
	SoilType_34 = 0x22,
	SoilType_35 = 0x23,
	SoilType_36 = 0x24,
	SoilType_37 = 0x25,
	SoilType_38 = 0x26,
	SoilType_39 = 0x27,
	SoilType_40 = 0x28,
	SoilType_41 = 0x29,
	SoilType_42 = 0x2A,
	SoilType_43 = 0x2B,
	SoilType_44 = 0x2C,
	SoilType_45 = 0x2D,
	SoilType_46 = 0x2E,
	SoilType_47 = 0x2F,
	SoilType_48 = 0x30,
	SoilType_49 = 0x31,
	SoilType_50 = 0x32,
	SoilType_51 = 0x33,
	SoilType_52 = 0x34,
	SoilType_53 = 0x35,
	SoilType_54 = 0x36,
	SoilType_55 = 0x37,
	SoilType_56 = 0x38,
	SoilType_57 = 0x39,
	SoilType_58 = 0x3A,
	SoilType_59 = 0x3B,
	SoilType_60 = 0x3C,
	SoilType_61 = 0x3D,
	SoilType_62 = 0x3E,
	SoilType_63 = 0x3F,
	SoilType_64 = 0x40,
	SoilType_Max = 0x41
};

namespace ETableViewMode
{
	enum Type:int
	{
		List = 0x0,
		Tile = 0x1,
		Tree = 0x2
	};
}

namespace EHasCustomNavigableGeometry
{
	enum Type:int
	{
		No = 0x0,
		Yes = 0x1,
		EvenIfNotCollidable = 0x2,
		DontExport = 0x3
	};
}

enum class EAttachmentRule:unsigned char
{
	KeepRelative = 0x0,
	KeepWorld = 0x1,
	SnapToTarget = 0x2,
	KeepWorldLegacy = 0x3
};

namespace ENaniteMeshPass
{
	enum Type:int
	{
		BasePass = 0x0,
		LumenCardCapture = 0x1,
		Num = 0x2
	};
}

enum class ETabIdFlags:unsigned char
{
	None = 0x0,
	SaveLayout = 0x1
};

namespace ENDICollisionQuery_AsyncGpuTraceProvider
{
	enum Type:int
	{
		Default = 0x0,
		HWRT = 0x1,
		GSDF = 0x2,
		None = 0x3
	};
}

namespace ENDISkelMesh_AdjacencyTriangleIndexFormat
{
	enum Type:int
	{
		Full = 0x0,
		Half = 0x1
	};
}

namespace ENDISkelMesh_GpuMaxInfluences
{
	enum Type:int
	{
		AllowMax4 = 0x0,
		AllowMax8 = 0x1,
		Unlimited = 0x2
	};
}

namespace ENDISkelMesh_GpuUniformSamplingFormat
{
	enum Type:int
	{
		Full = 0x0,
		Limited_24_8 = 0x1,
		Limited_23_9 = 0x2
	};
}

enum class ETextureRenderTargetFormat:int
{
	RTF_R8 = 0x0,
	RTF_RG8 = 0x1,
	RTF_RGBA8 = 0x2,
	RTF_RGBA8_SRGB = 0x3,
	RTF_R16f = 0x4,
	RTF_RG16f = 0x5,
	RTF_RGBA16f = 0x6,
	RTF_R32f = 0x7,
	RTF_RG32f = 0x8,
	RTF_RGBA32f = 0x9,
	RTF_RGB10A2 = 0xA
};

enum class ERayTracingBindingType:unsigned char
{
	HitGroup = 0x0,
	CallableShader = 0x1,
	MissShader = 0x2
};

enum class EParticleSystemOcclusionBoundsMethod:int
{
	EPSOBM_None = 0x0,
	EPSOBM_ParticleBounds = 0x1,
	EPSOBM_CustomBounds = 0x2
};

enum class EParticleAllocationMode:unsigned char
{
	AutomaticEstimate = 0x0,
	ManualEstimate = 0x1,
	FixedCount = 0x2
};

enum class EPSOPrecacheResult:int
{
	Unknown = 0x0,
	Active = 0x1,
	Complete = 0x2,
	Missed = 0x3,
	TooLate = 0x4,
	NotSupported = 0x5,
	Untracked = 0x6
};

enum class ERendererStencilMask:unsigned char
{
	ERSM_Default = 0x0,
	ERSM_255 = 0x1,
	ERSM_1 = 0x2,
	ERSM_2 = 0x3,
	ERSM_4 = 0x4,
	ERSM_8 = 0x5,
	ERSM_16 = 0x6,
	ERSM_32 = 0x7,
	ERSM_64 = 0x8,
	ERSM_128 = 0x9
};

enum class ETextureDimension:unsigned char
{
	Texture2D = 0x0,
	Texture2DArray = 0x1,
	Texture3D = 0x2,
	TextureCube = 0x3,
	TextureCubeArray = 0x4
};

enum class EStaticMeshReductionTerimationCriterion:unsigned char
{
	Triangles = 0x0,
	Vertices = 0x1,
	Any = 0x2
};

enum class EGPUSortFlags:unsigned int
{
	None = 0x0,
	LowPrecisionKeys = 0x1,
	HighPrecisionKeys = 0x2,
	AnyKeyPrecision = 0x3,
	KeyGenAfterPreRender = 0x4,
	KeyGenAfterPostRenderOpaque = 0x8,
	AnyKeyGenLocation = 0xC,
	SortAfterPreRender = 0x10,
	SortAfterPostRenderOpaque = 0x20,
	AnySortLocation = 0x30,
	ValuesAsG16R16F = 0x40,
	ValuesAsInt32 = 0x80,
	AnyValueFormat = 0xC0
};

enum class EPrintStaleReferencesOptions:int
{
	None = 0x0,
	Log = 0x1,
	Display = 0x2,
	Warning = 0x3,
	Error = 0x4,
	Fatal = 0x5,
	Ensure = 0x100,
	Minimal = 0x200,
	VerbosityMask = 0xFF
};

namespace EConsoleForGamepadLabels
{
	enum Type:int
	{
		None = 0x0,
		XBoxOne = 0x1,
		PS4 = 0x2
	};
}

enum class EPreLoadScreenTypes:unsigned char
{
	CustomSplashScreen = 0x0,
	EarlyStartupScreen = 0x1,
	EngineLoadingScreen = 0x2
};

enum class EInstallBundleSourceType:int
{
	Bulk = 0x0,
	Launcher = 0x1,
	BuildPatchServices = 0x2,
	GameCustom = 0x3,
	Count = 0x4
};

enum class EInstallBundleInstallState:int
{
	NotInstalled = 0x0,
	NeedsUpdate = 0x1,
	UpToDate = 0x2,
	Count = 0x3
};

enum class EInstallBundleRequestFlags:unsigned int
{
	None = 0x0,
	CheckForCellularDataUsage = 0x1,
	UseBackgroundDownloads = 0x2,
	SendNotificationIfDownloadCompletesInBackground = 0x4,
	ForceNoPatching = 0x8,
	TrackPersistentBundleStats = 0x10,
	SkipMount = 0x20,
	AsyncMount = 0x40,
	Defaults = 0x2
};

namespace ENotifyTriggerMode
{
	enum Type:int
	{
		AllAnimations = 0x0,
		HighestWeightedAnimation = 0x1,
		None = 0x2
	};
}

enum class EGetByNameFlags:int
{
	None = 0x0,
	ErrorIfNotFound = 0x1,
	CaseSensitive = 0x2,
	CheckAuthoredName = 0x4
};

enum class EEnumFlags:int
{
	None = 0x0,
	Flags = 0x1,
	NewerVersionExists = 0x2
};

enum class ECoreRedirectMatchFlags:int
{
	None = 0x0,
	AllowPartialMatch = 0x1
};

enum class ELocMetadataType:int
{
	None = 0x0,
	Boolean = 0x1,
	String = 0x2,
	Array = 0x3,
	Object = 0x4
};

enum class EInstallBundlePriority:unsigned char
{
	High = 0x0,
	Normal = 0x1,
	Low = 0x2,
	Count = 0x3
};

enum class EInstallBundleResult:int
{
	OK = 0x0,
	FailedPrereqRequiresLatestClient = 0x1,
	FailedPrereqRequiresLatestContent = 0x2,
	FailedCacheReserve = 0x3,
	InstallError = 0x4,
	InstallerOutOfDiskSpaceError = 0x5,
	ManifestArchiveError = 0x6,
	ConnectivityError = 0x7,
	UserCancelledError = 0x8,
	InitializationError = 0x9,
	InitializationPending = 0xA,
	Count = 0xB
};

enum class EInstallBundleCacheDumpToLog:signed char
{
	None = 0x0,
	Default = 0x1,
	CSV = 0x2
};

enum class EInstallBundleManagerInitState:int
{
	NotInitialized = 0x0,
	Failed = 0x1,
	Succeeded = 0x2
};

enum class EInstallBundleGetContentStateFlags:unsigned int
{
	None = 0x0,
	ForceNoPatching = 0x1
};

enum class EInstallBundleReleaseRequestFlags:unsigned int
{
	None = 0x0,
	RemoveFilesIfPossible = 0x1,
	ExplicitRemoveList = 0x2
};

namespace FNDIRenderTarget2DArrayFunctionVersion
{
	enum Type:int
	{
		InitialVersion = 0x0,
		AddedOptionalExecute = 0x1,
		AddedMipLevel = 0x2,
		VersionPlusOne = 0x3,
		LatestVersion = 0x2
	};
}

namespace FNDIRenderTarget2DFunctionVersion
{
	enum Type:int
	{
		InitialVersion = 0x0,
		AddedOptionalExecute = 0x1,
		AddedMipLevel = 0x2,
		VersionPlusOne = 0x3,
		LatestVersion = 0x2
	};
}

enum class ParticleSystemLODMethod:int
{
	PARTICLESYSTEMLODMETHOD_Automatic = 0x0,
	PARTICLESYSTEMLODMETHOD_DirectSet = 0x1,
	PARTICLESYSTEMLODMETHOD_ActivateAutomatic = 0x2
};

enum class EPropertyType:int
{
	CPT_None = 0x0,
	CPT_Byte = 0x1,
	CPT_UInt16 = 0x2,
	CPT_UInt32 = 0x3,
	CPT_UInt64 = 0x4,
	CPT_Int8 = 0x5,
	CPT_Int16 = 0x6,
	CPT_Int = 0x7,
	CPT_Int64 = 0x8,
	CPT_Bool = 0x9,
	CPT_Bool8 = 0xA,
	CPT_Bool16 = 0xB,
	CPT_Bool32 = 0xC,
	CPT_Bool64 = 0xD,
	CPT_Float = 0xE,
	CPT_ObjectReference = 0xF,
	CPT_Name = 0x10,
	CPT_Delegate = 0x11,
	CPT_Interface = 0x12,
	CPT_Unused_Index_19 = 0x13,
	CPT_Struct = 0x14,
	CPT_Unused_Index_21 = 0x15,
	CPT_Unused_Index_22 = 0x16,
	CPT_String = 0x17,
	CPT_Text = 0x18,
	CPT_MulticastDelegate = 0x19,
	CPT_WeakObjectReference = 0x1A,
	CPT_LazyObjectReference = 0x1B,
	CPT_ObjectPtrReference = 0x1C,
	CPT_SoftObjectReference = 0x1D,
	CPT_Double = 0x1E,
	CPT_Map = 0x1F,
	CPT_Set = 0x20,
	CPT_FieldPath = 0x21,
	CPT_FLargeWorldCoordinatesReal = 0x22,
	CPT_MAX = 0x23
};

enum class EParticleSystemUpdateMode:int
{
	EPSUM_RealTime = 0x0,
	EPSUM_FixedTime = 0x1
};

namespace EBrowseReturnVal
{
	enum Type:int
	{
		Success = 0x0,
		Failure = 0x1,
		Pending = 0x2
	};
}

namespace EMouseButtons
{
	enum Type:int
	{
		Left = 0x0,
		Middle = 0x1,
		Right = 0x2,
		Thumb01 = 0x3,
		Thumb02 = 0x4,
		Invalid = 0x5
	};
}

enum class EWindowActivation:unsigned char
{
	Activate = 0x0,
	ActivateByMouse = 0x1,
	Deactivate = 0x2
};

namespace EWindowAction
{
	enum Type:int
	{
		ClickedNonClientArea = 0x1,
		Maximize = 0x2,
		Restore = 0x3,
		WindowMenu = 0x4
	};
}

enum class EInGamePerfTrackers:unsigned char
{
	VFXSignificance = 0x0,
	Num = 0x1
};

enum class EInGamePerfTrackerThreads:unsigned char
{
	GameThread = 0x0,
	RenderThread = 0x1,
	OtherThread = 0x2,
	Num = 0x3
};

enum class EPinContainerType:unsigned char
{
	None = 0x0,
	Array = 0x1,
	Set = 0x2,
	Map = 0x3
};

namespace EAsyncPackageState
{
	enum Type:int
	{
		TimeOut = 0x0,
		PendingImports = 0x1,
		Complete = 0x2
	};
}

enum class EThreadCreateFlags:signed char
{
	None = 0x0,
	SMTExclusive = 0x1
};

enum class EStreamableManagerCombinedHandleOptions:unsigned char
{
	None = 0x0,
	MergeDebugNames = 0x1,
	RedirectParents = 0x2,
	SkipNulls = 0x4
};

enum class EQueryMobilityType:int
{
	Any = 0x0,
	Static = 0x1,
	Dynamic = 0x2
};

enum class EVolumeCacheType:unsigned char
{
	OpenVDB = 0x0
};

enum class EMaterialInstanceClearParameterFlag:int
{
	None = 0x0,
	Numeric = 0x1,
	Texture = 0x2,
	Static = 0x4,
	AllNonStatic = 0x3,
	All = 0x7
};

enum class EListItemAlignment:unsigned char
{
	EvenlyDistributed = 0x0,
	EvenlySize = 0x1,
	EvenlyWide = 0x2,
	LeftAligned = 0x3,
	RightAligned = 0x4,
	CenterAligned = 0x5,
	Fill = 0x6
};

enum class EScriptExecutionMode:unsigned char
{
	EveryParticle = 0x0,
	SpawnedParticles = 0x1,
	SingleParticle = 0x2
};

enum class EGameStringType:int
{
	GameName = 0x0,
	ProjectPath = 0x1,
	ProjectShortName = 0x2,
	Unknown = 0x3
};

enum class ETextureClass:unsigned char
{
	Invalid = 0x0,
	TwoD = 0x1,
	Cube = 0x2,
	Array = 0x3,
	CubeArray = 0x4,
	Volume = 0x5,
	TwoDDynamic = 0x6,
	RenderTarget = 0x7,
	Other2DNoSource = 0x8,
	OtherUnknown = 0x9
};

enum class ETextureMipCount:int
{
	TMC_ResidentMips = 0x0,
	TMC_AllMips = 0x1,
	TMC_AllMipsBiased = 0x2,
	TMC_MAX = 0x3
};

enum class ERHIBindlessConfiguration:int
{
	Disabled = 0x0,
	AllShaders = 0x1,
	RayTracingShaders = 0x2
};

enum class ENDISkeletalMesh_SourceMode:unsigned char
{
	Default = 0x0,
	Source = 0x1,
	AttachParent = 0x2
};

namespace EEndPlayReason
{
	enum Type:int
	{
		Destroyed = 0x0,
		LevelTransition = 0x1,
		EndPlayInEditor = 0x2,
		RemovedFromWorld = 0x3,
		Quit = 0x4
	};
}

enum class EVTRequestPageStatus:int
{
	Invalid = 0x0,
	Saturated = 0x1,
	Pending = 0x2,
	Available = 0x3
};

enum class ESendLevelControlMethod:unsigned char
{
	Linear = 0x0,
	CustomCurve = 0x1,
	Manual = 0x2
};

enum class ESubmixSendStage:unsigned char
{
	PostDistanceAttenuation = 0x0,
	PreDistanceAttenuation = 0x1
};

enum class EParticleSysParamType:int
{
	PSPT_None = 0x0,
	PSPT_Scalar = 0x1,
	PSPT_ScalarRand = 0x2,
	PSPT_Vector = 0x3,
	PSPT_VectorRand = 0x4,
	PSPT_Color = 0x5,
	PSPT_Actor = 0x6,
	PSPT_Material = 0x7,
	PSPT_VectorUnitRand = 0x8,
	PSPT_MAX = 0x9
};

enum class ENDIStaticMesh_SourceMode:unsigned char
{
	Default = 0x0,
	Source = 0x1,
	AttachParent = 0x2,
	DefaultMeshOnly = 0x3
};

enum class EPSCPoolMethod:unsigned char
{
	None = 0x0,
	AutoRelease = 0x1,
	ManualRelease = 0x2,
	ManualRelease_OnComplete = 0x3,
	FreeInPool = 0x4
};

enum class ETrailWidthMode:int
{
	ETrailWidthMode_FromCentre = 0x0,
	ETrailWidthMode_FromFirst = 0x1,
	ETrailWidthMode_FromSecond = 0x2
};

enum class ParticleReplayState:int
{
	PRS_Disabled = 0x0,
	PRS_Capturing = 0x1,
	PRS_Replaying = 0x2,
	PRS_MAX = 0x3
};

enum class EBrushType:int
{
	Brush_Default = 0x0,
	Brush_Add = 0x1,
	Brush_Subtract = 0x2,
	Brush_MAX = 0x3
};

enum class EPrimaryScreenPercentageMethod:int
{
	SpatialUpscale = 0x0,
	TemporalUpscale = 0x1,
	RawOutput = 0x2
};

enum class EMaterialTextureParameterType:unsigned int
{
	Standard2D = 0x0,
	Cube = 0x1,
	Array2D = 0x2,
	ArrayCube = 0x3,
	Volume = 0x4,
	Virtual = 0x5,
	Count = 0x6
};

enum class ENDIActorComponentSourceMode:unsigned char
{
	Default = 0x0,
	AttachParent = 0x1,
	LocalPlayer = 0x2
};

enum class EDepthDrawingMode:int
{
	DDM_None = 0x0,
	DDM_NonMaskedOnly = 0x1,
	DDM_AllOccluders = 0x2,
	DDM_AllOpaque = 0x3,
	DDM_MaskedOnly = 0x4,
	DDM_AllOpaqueNoVelocity = 0x5
};

enum class ETextureLayoutAspectRatio:int
{
	None = 0x0,
	Force2To1 = 0x1,
	ForceSquare = 0x2
};

namespace EReflectionCaptureShape
{
	enum Type:int
	{
		Sphere = 0x0,
		Box = 0x1,
		Plane = 0x2,
		Num = 0x3
	};
}

enum class ELightMapPolicyType:int
{
	LMP_NO_LIGHTMAP = 0x0,
	LMP_PRECOMPUTED_IRRADIANCE_VOLUME_INDIRECT_LIGHTING = 0x1,
	LMP_CACHED_VOLUME_INDIRECT_LIGHTING = 0x2,
	LMP_CACHED_POINT_INDIRECT_LIGHTING = 0x3,
	LMP_LQ_LIGHTMAP = 0x4,
	LMP_HQ_LIGHTMAP = 0x5,
	LMP_DISTANCE_FIELD_SHADOWS_AND_HQ_LIGHTMAP = 0x6,
	LMP_MOBILE_DISTANCE_FIELD_SHADOWS_AND_LQ_LIGHTMAP = 0x7,
	LMP_MOBILE_DISTANCE_FIELD_SHADOWS_LIGHTMAP_AND_CSM = 0x8,
	LMP_MOBILE_DIRECTIONAL_LIGHT_CSM_AND_LIGHTMAP = 0x9,
	LMP_MOBILE_DIRECTIONAL_LIGHT_AND_SH_INDIRECT = 0xA,
	LMP_MOBILE_DIRECTIONAL_LIGHT_CSM_AND_SH_INDIRECT = 0xB,
	LMP_MOBILE_MOVABLE_DIRECTIONAL_LIGHT_WITH_LIGHTMAP = 0xC,
	LMP_MOBILE_MOVABLE_DIRECTIONAL_LIGHT_CSM_WITH_LIGHTMAP = 0xD,
	LMP_MOBILE_DIRECTIONAL_LIGHT_CSM = 0xE,
	LMP_DUMMY = 0xF
};

namespace EAnimationMode
{
	enum Type:int
	{
		AnimationBlueprint = 0x0,
		AnimationSingleNode = 0x1,
		AnimationCustomMode = 0x2
	};
}

enum class EProcessRemoteFunctionFlags:unsigned int
{
	None = 0x0,
	ReplicatedActor = 0x1
};

enum class EAutomationEventType:unsigned char
{
	Info = 0x0,
	Warning = 0x1,
	Error = 0x2
};

namespace ETabState
{
	enum Type:int
	{
		OpenedTab = 0x1,
		ClosedTab = 0x2,
		SidebarTab = 0x4,
		InvalidTab = 0x8
	};
}

enum class EViewModeIndex:int
{
	VMI_BrushWireframe = 0x0,
	VMI_Wireframe = 0x1,
	VMI_Unlit = 0x2,
	VMI_Lit = 0x3,
	VMI_Lit_DetailLighting = 0x4,
	VMI_LightingOnly = 0x5,
	VMI_LightComplexity = 0x6,
	VMI_ShaderComplexity = 0x8,
	VMI_LightmapDensity = 0x9,
	VMI_LitLightmapDensity = 0xA,
	VMI_ReflectionOverride = 0xB,
	VMI_VisualizeBuffer = 0xC,
	VMI_StationaryLightOverlap = 0xE,
	VMI_CollisionPawn = 0xF,
	VMI_CollisionVisibility = 0x10,
	VMI_LODColoration = 0x12,
	VMI_QuadOverdraw = 0x13,
	VMI_PrimitiveDistanceAccuracy = 0x14,
	VMI_MeshUVDensityAccuracy = 0x15,
	VMI_ShaderComplexityWithQuadOverdraw = 0x16,
	VMI_HLODColoration = 0x17,
	VMI_GroupLODColoration = 0x18,
	VMI_MaterialTextureScaleAccuracy = 0x19,
	VMI_RequiredTextureResolution = 0x1A,
	VMI_PathTracing = 0x1B,
	VMI_RayTracingDebug = 0x1C,
	VMI_VisualizeNanite = 0x1D,
	VMI_VirtualTexturePendingMips = 0x1E,
	VMI_VisualizeLumen = 0x1F,
	VMI_VisualizeVirtualShadowMap = 0x20,
	VMI_VisualizeGPUSkinCache = 0x21,
	VMI_VisualizeSubstrate = 0x22,
	VMI_VisualizeGroom = 0x23,
	VMI_Max = 0x24,
	VMI_Unknown = 0xFF
};

enum class ERayTracingInstanceFlags:unsigned char
{
	None = 0x0,
	TriangleCullDisable = 0x2,
	TriangleCullReverse = 0x4,
	ForceOpaque = 0x8,
	ForceNonOpaque = 0x10
};

enum class ERayTracingSceneState:int
{
	Writable = 0x0,
	Readable = 0x1
};

enum class EDefaultAudioCompressionType:unsigned char
{
	BinkAudio = 0x0,
	ADPCM = 0x1,
	PCM = 0x2,
	PlatformSpecific = 0x3
};

enum class ETextWrappingPolicy:unsigned char
{
	DefaultWrapping = 0x0,
	AllowPerCharacterWrapping = 0x1
};

enum class EUIActionRepeatMode:int
{
	RepeatDisabled = 0x0,
	RepeatEnabled = 0x1
};

enum class ECurveEaseFunction:unsigned char
{
	Linear = 0x0,
	QuadIn = 0x1,
	QuadOut = 0x2,
	QuadInOut = 0x3,
	CubicIn = 0x4,
	CubicOut = 0x5,
	CubicInOut = 0x6
};

namespace EXRDeviceConnectionResult
{
	enum Type:int
	{
		NoTrackingSystem = 0x0,
		FeatureNotSupported = 0x1,
		NoValidViewport = 0x2,
		MiscFailure = 0x3,
		Success = 0x4
	};
}

enum class ECacheApplyPhase:int
{
	PostSimpleConstructionScript = 0x0,
	PostUserConstructionScript = 0x1,
	NonConstructionScript = 0x2
};

enum class EDetachmentRule:unsigned char
{
	KeepRelative = 0x0,
	KeepWorld = 0x1
};

enum class ENaturalSoundFalloffMode:unsigned char
{
	Continues = 0x0,
	Silent = 0x1,
	Hold = 0x2
};

enum class ETextTransformPolicy:unsigned char
{
	None = 0x0,
	ToLower = 0x1,
	ToUpper = 0x2
};

enum class ETextOverflowPolicy:unsigned char
{
	Clip = 0x0,
	Ellipsis = 0x1
};

enum class EAudioVolumeLocationState:unsigned char
{
	InsideTheVolume = 0x0,
	OutsideTheVolume = 0x1
};

namespace ETextCommit
{
	enum Type:int
	{
		Default = 0x0,
		OnEnter = 0x1,
		OnUserMovedFocus = 0x2,
		OnCleared = 0x3
	};
}

enum class EFontLoadingPolicy:unsigned char
{
	LazyLoad = 0x0,
	Stream = 0x1,
	Inline = 0x2
};

enum class ECameraShakeDurationType:unsigned char
{
	Fixed = 0x0,
	Infinite = 0x1,
	Custom = 0x2
};

enum class EFileOpenFlags:int
{
	IO_READ = 0x1,
	IO_WRITE = 0x2,
	IO_APPEND = 0x40
};

namespace EDynamicGlobalIlluminationMethod
{
	enum Type:int
	{
		None = 0x0,
		Lumen = 0x1,
		ScreenSpace = 0x2,
		RayTraced = 0x3,
		Plugin = 0x4
	};
}

enum class EFilterInterpolationType:int
{
	BSIT_Average = 0x0,
	BSIT_Linear = 0x1,
	BSIT_Cubic = 0x2,
	BSIT_EaseInOut = 0x3,
	BSIT_ExponentialDecay = 0x4,
	BSIT_SpringDamper = 0x5,
	BSIT_MAX = 0x6
};

enum class ETextureLossyCompressionAmount:int
{
	TLCA_Default = 0x0,
	TLCA_None = 0x1,
	TLCA_Lowest = 0x2,
	TLCA_Low = 0x3,
	TLCA_Medium = 0x4,
	TLCA_High = 0x5,
	TLCA_Highest = 0x6
};

enum class TextureGroup:int
{
	TEXTUREGROUP_World = 0x0,
	TEXTUREGROUP_WorldNormalMap = 0x1,
	TEXTUREGROUP_WorldSpecular = 0x2,
	TEXTUREGROUP_Character = 0x3,
	TEXTUREGROUP_CharacterNormalMap = 0x4,
	TEXTUREGROUP_CharacterSpecular = 0x5,
	TEXTUREGROUP_Weapon = 0x6,
	TEXTUREGROUP_WeaponNormalMap = 0x7,
	TEXTUREGROUP_WeaponSpecular = 0x8,
	TEXTUREGROUP_Vehicle = 0x9,
	TEXTUREGROUP_VehicleNormalMap = 0xA,
	TEXTUREGROUP_VehicleSpecular = 0xB,
	TEXTUREGROUP_Cinematic = 0xC,
	TEXTUREGROUP_Effects = 0xD,
	TEXTUREGROUP_EffectsNotFiltered = 0xE,
	TEXTUREGROUP_Skybox = 0xF,
	TEXTUREGROUP_UI = 0x10,
	TEXTUREGROUP_Lightmap = 0x11,
	TEXTUREGROUP_RenderTarget = 0x12,
	TEXTUREGROUP_MobileFlattened = 0x13,
	TEXTUREGROUP_ProcBuilding_Face = 0x14,
	TEXTUREGROUP_ProcBuilding_LightMap = 0x15,
	TEXTUREGROUP_Shadowmap = 0x16,
	TEXTUREGROUP_ColorLookupTable = 0x17,
	TEXTUREGROUP_Terrain_Heightmap = 0x18,
	TEXTUREGROUP_Terrain_Weightmap = 0x19,
	TEXTUREGROUP_Bokeh = 0x1A,
	TEXTUREGROUP_IESLightProfile = 0x1B,
	TEXTUREGROUP_Pixels2D = 0x1C,
	TEXTUREGROUP_HierarchicalLOD = 0x1D,
	TEXTUREGROUP_Impostor = 0x1E,
	TEXTUREGROUP_ImpostorNormalDepth = 0x1F,
	TEXTUREGROUP_8BitData = 0x20,
	TEXTUREGROUP_16BitData = 0x21,
	TEXTUREGROUP_Project01 = 0x22,
	TEXTUREGROUP_Project02 = 0x23,
	TEXTUREGROUP_Project03 = 0x24,
	TEXTUREGROUP_Project04 = 0x25,
	TEXTUREGROUP_Project05 = 0x26,
	TEXTUREGROUP_Project06 = 0x27,
	TEXTUREGROUP_Project07 = 0x28,
	TEXTUREGROUP_Project08 = 0x29,
	TEXTUREGROUP_Project09 = 0x2A,
	TEXTUREGROUP_Project10 = 0x2B,
	TEXTUREGROUP_Project11 = 0x2C,
	TEXTUREGROUP_Project12 = 0x2D,
	TEXTUREGROUP_Project13 = 0x2E,
	TEXTUREGROUP_Project14 = 0x2F,
	TEXTUREGROUP_Project15 = 0x30,
	TEXTUREGROUP_Project16 = 0x31,
	TEXTUREGROUP_Project17 = 0x32,
	TEXTUREGROUP_Project18 = 0x33,
	TEXTUREGROUP_MAX = 0x34
};

enum class TextureMipGenSettings:int
{
	TMGS_FromTextureGroup = 0x0,
	TMGS_SimpleAverage = 0x1,
	TMGS_Sharpen0 = 0x2,
	TMGS_Sharpen1 = 0x3,
	TMGS_Sharpen2 = 0x4,
	TMGS_Sharpen3 = 0x5,
	TMGS_Sharpen4 = 0x6,
	TMGS_Sharpen5 = 0x7,
	TMGS_Sharpen6 = 0x8,
	TMGS_Sharpen7 = 0x9,
	TMGS_Sharpen8 = 0xA,
	TMGS_Sharpen9 = 0xB,
	TMGS_Sharpen10 = 0xC,
	TMGS_NoMipmaps = 0xD,
	TMGS_LeaveExistingMips = 0xE,
	TMGS_Blur1 = 0xF,
	TMGS_Blur2 = 0x10,
	TMGS_Blur3 = 0x11,
	TMGS_Blur4 = 0x12,
	TMGS_Blur5 = 0x13,
	TMGS_Unfiltered = 0x14,
	TMGS_Angular = 0x15,
	TMGS_MAX = 0x16
};

enum class PluginStyle:int
{
	DEFAULT_STYLE = 0x0,
	UNREAL_STYLE = 0x1,
	UNITY_STYLE = 0x2,
	UNITY_STYLE_DEFERRED = 0x3
};

enum class EVTProducePageFlags:unsigned char
{
	None = 0x0,
	SkipPageBorders = 0x1,
	ContinuousUpdate = 0x2
};

enum class EBase64Mode:unsigned char
{
	Standard = 0x0,
	UrlSafe = 0x1
};

enum class ECameraShakeUpdateResultFlags:unsigned char
{
	ApplyAsAbsolute = 0x1,
	SkipAutoScale = 0x2,
	SkipAutoPlaySpace = 0x4,
	Default = 0x0
};

namespace EProcessResource
{
	enum Type:int
	{
		VirtualMemory = 0x0
	};
}

enum class ESlateDebuggingNavigationMethod:unsigned char
{
	Unknown = 0x0,
	Explicit = 0x1,
	CustomDelegateBound = 0x2,
	CustomDelegateUnbound = 0x3,
	NextOrPrevious = 0x4,
	HitTestGrid = 0x5
};

enum class EQuartzCommandQuantization:unsigned char
{
	Bar = 0x0,
	Beat = 0x1,
	ThirtySecondNote = 0x2,
	SixteenthNote = 0x3,
	EighthNote = 0x4,
	QuarterNote = 0x5,
	HalfNote = 0x6,
	WholeNote = 0x7,
	DottedSixteenthNote = 0x8,
	DottedEighthNote = 0x9,
	DottedQuarterNote = 0xA,
	DottedHalfNote = 0xB,
	DottedWholeNote = 0xC,
	SixteenthNoteTriplet = 0xD,
	EighthNoteTriplet = 0xE,
	QuarterNoteTriplet = 0xF,
	HalfNoteTriplet = 0x10,
	Tick = 0x11,
	Count = 0x12,
	None = 0x13
};

enum class eCrossPlayType:int
{
	CrossPlayAll = 0x1,
	CrossPlayPC = 0x2,
	CrossPlayXbox = 0x4,
	CrossPlayPlaystation = 0x8
};

namespace EFriendsLists
{
	enum Type:int
	{
		Default = 0x0,
		OnlinePlayers = 0x1,
		InGamePlayers = 0x2,
		InGameAndSessionPlayers = 0x3
	};
}

namespace EOnJoinSessionCompleteResult
{
	enum Type:int
	{
		Success = 0x0,
		SessionIsFull = 0x1,
		SessionDoesNotExist = 0x2,
		CouldNotRetrieveAddress = 0x3,
		AlreadyInSession = 0x4,
		UnknownError = 0x5
	};
}

namespace ESessionFailure
{
	enum Type:int
	{
		ServiceConnectionLost = 0x0
	};
}

enum class EUpdateStaticMeshFlags:unsigned char
{
	RasterCommands = 0x2,
	RayTracingCommands = 0x4,
	AllCommands = 0x6
};

enum class EPrimitiveAddToSceneOps:int
{
	None = 0x0,
	AddStaticMeshes = 0x1,
	CacheMeshDrawCommands = 0x2,
	CreateLightPrimitiveInteractions = 0x4,
	All = 0x7
};

enum class EConfigLayerFlags:int
{
	None = 0x0,
	AllowCommandLineOverride = 0x2,
	DedicatedServerOnly = 0x4,
	NoExpand = 0x10,
	RequiresCustomConfig = 0x20
};

namespace EOnlinePresenceState
{
	enum Type: char
	{
		Online = 0x0,
		Offline = 0x1,
		Away = 0x2,
		ExtendedAway = 0x3,
		DoNotDisturb = 0x4,
		Chat = 0x5
	};
}

enum class ERayTracingPrimitiveFlags:unsigned char
{
	UnsupportedProxyType = 0x0,
	Excluded = 0x1,
	Dynamic = 0x2,
	CacheMeshCommands = 0x4,
	CacheInstances = 0x8,
	ComputeLOD = 0x10,
	FarField = 0x20,
	Streaming = 0x40,
	StaticMesh = 0x80
};

namespace EOnlineKeyValuePairDataType
{
	enum Type:int
	{
		Empty = 0x0,
		Int32 = 0x1,
		UInt32 = 0x2,
		Int64 = 0x3,
		UInt64 = 0x4,
		Double = 0x5,
		String = 0x6,
		Float = 0x7,
		Blob = 0x8,
		Bool = 0x9,
		Json = 0xA,
		MAX = 0xB
	};
}

namespace EUserPrivileges
{
	enum Type:int
	{
		CanPlay = 0x0,
		CanPlayOnline = 0x1,
		CanCommunicateOnline = 0x2,
		CanUseUserGeneratedContent = 0x3,
		CanUserCrossPlay = 0x4
	};
}

namespace ECrossplayPlatform
{
	enum Type:int
	{
		Unknown = 0x0,
		Windows = 0x1,
		XSX = 0x2,
		PS5 = 0x3
	};
}

namespace ECustomVersionSerializationFormat
{
	enum Type:int
	{
		Unknown = 0x0,
		Guids = 0x1,
		Enums = 0x2,
		Optimized = 0x3,
		CustomVersion_Automatic_Plus_One = 0x4,
		Latest = 0x3
	};
}

namespace EInAppPurchaseState
{
	enum Type:int
	{
		Unknown = 0x0,
		Success = 0x1,
		Failed = 0x2,
		Cancelled = 0x3,
		Invalid = 0x4,
		NotAllowed = 0x5,
		Restored = 0x6,
		AlreadyOwned = 0x7
	};
}

enum class EOnlineStoreOfferDiscountType:unsigned char
{
	NotOnSale = 0x0,
	Percentage = 0x1,
	DiscountAmount = 0x2,
	PayAmount = 0x3
};

enum class EEncryptionFailureAction:unsigned char
{
	Default = 0x0,
	RejectConnection = 0x1,
	AllowConnection = 0x2
};

enum class EStreamableRenderAssetType:unsigned char
{
	None = 0x0,
	Texture = 0x1,
	StaticMesh = 0x2,
	SkeletalMesh = 0x3,
	LandscapeMeshMobile = 0x4,
	NaniteCoarseMesh = 0x5
};

enum class EDecalBlendMode:int
{
	DBM_Translucent = 0x0,
	DBM_Stain = 0x1,
	DBM_Normal = 0x2,
	DBM_Emissive = 0x3,
	DBM_DBuffer_ColorNormalRoughness = 0x4,
	DBM_DBuffer_Color = 0x5,
	DBM_DBuffer_ColorNormal = 0x6,
	DBM_DBuffer_ColorRoughness = 0x7,
	DBM_DBuffer_Normal = 0x8,
	DBM_DBuffer_NormalRoughness = 0x9,
	DBM_DBuffer_Roughness = 0xA,
	DBM_DBuffer_Emissive = 0xB,
	DBM_DBuffer_AlphaComposite = 0xC,
	DBM_DBuffer_EmissiveAlphaComposite = 0xD,
	DBM_Volumetric_DistanceFunction = 0xE,
	DBM_AlphaComposite = 0xF,
	DBM_AmbientOcclusion = 0x10,
	DBM_MAX = 0x11
};

enum class ESourceBusSendLevelControlMethod:unsigned char
{
	Linear = 0x0,
	CustomCurve = 0x1,
	Manual = 0x2
};

enum class ESlateDebuggingInputEvent:unsigned char
{
	MouseMove = 0x0,
	MouseEnter = 0x1,
	MouseLeave = 0x2,
	PreviewMouseButtonDown = 0x3,
	MouseButtonDown = 0x4,
	MouseButtonUp = 0x5,
	MouseButtonDoubleClick = 0x6,
	MouseWheel = 0x7,
	TouchStart = 0x8,
	TouchEnd = 0x9,
	TouchForceChanged = 0xA,
	TouchFirstMove = 0xB,
	TouchMoved = 0xC,
	DragDetected = 0xD,
	DragEnter = 0xE,
	DragLeave = 0xF,
	DragOver = 0x10,
	DragDrop = 0x11,
	DropMessage = 0x12,
	PreviewKeyDown = 0x13,
	KeyDown = 0x14,
	KeyUp = 0x15,
	KeyChar = 0x16,
	AnalogInput = 0x17,
	TouchGesture = 0x18,
	MotionDetected = 0x19,
	MAX = 0x1A
};

enum class EPimplPtrMode:unsigned char
{
	NoCopy = 0x0,
	DeepCopy = 0x1
};

enum class EOnlineErrorResult:unsigned char
{
	Success = 0x0,
	NoConnection = 0x1,
	RequestFailure = 0x2,
	InvalidCreds = 0x3,
	InvalidUser = 0x4,
	InvalidAuth = 0x5,
	AccessDenied = 0x6,
	TooManyRequests = 0x7,
	AlreadyPending = 0x8,
	InvalidParams = 0x9,
	CantParse = 0xA,
	InvalidResults = 0xB,
	IncompatibleVersion = 0xC,
	NotConfigured = 0xD,
	NotImplemented = 0xE,
	MissingInterface = 0xF,
	Canceled = 0x10,
	FailExtended = 0x11,
	Unknown = 0x12
};

enum class EMemoryTraceHeapAllocationFlags:unsigned char
{
	None = 0x0,
	Heap = 0x1
};

namespace EExternalAuthEnvironment
{
	enum Type:int
	{
		Unknown = 0x0,
		Development = 0x1,
		QA = 0x2,
		Production = 0x3
	};
}

enum class EClothingTeleportMode:unsigned char
{
	None = 0x0,
	Teleport = 0x1,
	TeleportAndReset = 0x2
};

enum class ERayTracingMeshCommandsMode:unsigned char
{
	RAY_TRACING = 0x0,
	PATH_TRACING = 0x1,
	LIGHTMAP_TRACING = 0x2
};

enum class EUpdateAllPrimitiveSceneInfosAsyncOps:int
{
	None = 0x0,
	CacheMeshDrawCommands = 0x1,
	CreateLightPrimitiveInteractions = 0x2,
	All = 0x3
};

enum class EBasePassDrawListType:int
{
	EBasePass_Default = 0x0,
	EBasePass_Masked = 0x1,
	EBasePass_MAX = 0x2
};

namespace EMobilePixelProjectedReflectionQuality
{
	enum Type:int
	{
		Disabled = 0x0,
		BestPerformance = 0x1,
		BetterQuality = 0x2,
		BestQuality = 0x3
	};
}

enum class EWindowTransparency:int
{
	None = 0x0,
	PerWindow = 0x1
};

enum class EUserActivityContext:unsigned char
{
	Game = 0x0,
	Editor = 0x1,
	Other = 0x2
};

enum class EOnlineNotificationResult:int
{
	None = 0x0,
	Handled = 0x1
};

enum class ESceneCaptureSource:int
{
	SCS_SceneColorHDR = 0x0,
	SCS_SceneColorHDRNoAlpha = 0x1,
	SCS_FinalColorLDR = 0x2,
	SCS_SceneColorSceneDepth = 0x3,
	SCS_SceneDepth = 0x4,
	SCS_DeviceDepth = 0x5,
	SCS_Normal = 0x6,
	SCS_BaseColor = 0x7,
	SCS_FinalColorHDR = 0x8,
	SCS_FinalToneCurveHDR = 0x9,
	SCS_MAX = 0xA
};

enum class EComponentPhysicsStateChange:unsigned char
{
	Created = 0x0,
	Destroyed = 0x1
};

enum class EMemberConnectionStatus:unsigned char
{
	Uninitialized = 0x0,
	Disconnected = 0x1,
	Initializing = 0x2,
	Connected = 0x3
};

enum class EConcurrencyMode:unsigned char
{
	Group = 0x0,
	Owner = 0x1,
	OwnerPerSound = 0x2,
	Sound = 0x3
};

enum class EJoinRequestAction:unsigned char
{
	Manual = 0x0,
	AutoApprove = 0x1,
	AutoReject = 0x2
};

enum class EPackageFormat:unsigned char
{
	Binary = 0x0,
	Text = 0x1
};

enum class EPartyState:unsigned char
{
	None = 0x0,
	CreatePending = 0x1,
	JoinPending = 0x2,
	RejoinPending = 0x3,
	LeavePending = 0x4,
	Active = 0x5,
	Disconnected = 0x6,
	CleanUp = 0x7
};

enum class EHitFlags:unsigned short
{
	None = 0x0,
	Position = 0x1,
	Normal = 0x2,
	Distance = 0x4,
	UV = 0x8,
	MeshMultiple = 0x20,
	MeshBothSides = 0x80,
	MTD = 0x200,
	FaceIndex = 0x400
};

namespace ETexturePowerOfTwoSetting
{
	enum Type:int
	{
		None = 0x0,
		PadToPowerOfTwo = 0x1,
		PadToSquarePowerOfTwo = 0x2
	};
}

namespace ETextRole
{
	enum Type:int
	{
		Custom = 0x0,
		ButtonText = 0x1,
		ComboText = 0x2
	};
}

namespace ECastRayTracedShadow
{
	enum Type:int
	{
		Disabled = 0x0,
		UseProjectSetting = 0x1,
		Enabled = 0x2
	};
}

enum class EObjectInitializerOptions:int
{
	None = 0x0,
	CopyTransientsFromClassDefaults = 0x1,
	InitializeProperties = 0x2
};

enum class ESceneCaptureCompositeMode:int
{
	SCCM_Overwrite = 0x0,
	SCCM_Additive = 0x1,
	SCCM_Composite = 0x2
};

enum class EMemberExitedReason:unsigned char
{
	Unknown = 0x0,
	Left = 0x1,
	Removed = 0x2,
	Kicked = 0x3
};

enum class EPartyInvitationRemovedReason:unsigned char
{
	Unknown = 0x0,
	Accepted = 0x1,
	Declined = 0x2,
	Cleared = 0x3,
	Expired = 0x4,
	Invalidated = 0x5
};

enum class EPartySystemState:unsigned char
{
	Initializing = 0x0,
	Initialized = 0x1,
	RequestingShutdown = 0x2,
	ShutDown = 0x3
};

enum class EPartyRequestToJoinRemovedReason:unsigned char
{
	Unknown = 0x0,
	Cancelled = 0x1,
	Expired = 0x2,
	Dismissed = 0x3,
	Accepted = 0x4
};

enum class EInvitationResponse:unsigned char
{
	UnknownFailure = 0x0,
	BadBuild = 0x1,
	Rejected = 0x2,
	Accepted = 0x3
};

enum class EStreamingSourceTargetBehavior:unsigned char
{
	Include = 0x0,
	Exclude = 0x1
};

enum class EOnSessionParticipantLeftReason:unsigned char
{
	Left = 0x0,
	Disconnected = 0x1,
	Kicked = 0x2,
	Closed = 0x3
};

enum class EAnimDataModelNotifyType:unsigned char
{
	BracketOpened = 0x0,
	BracketClosed = 0x1,
	TrackAdded = 0x2,
	TrackChanged = 0x3,
	TrackRemoved = 0x4,
	SequenceLengthChanged = 0x5,
	FrameRateChanged = 0x6,
	CurveAdded = 0x7,
	CurveChanged = 0x8,
	CurveRemoved = 0x9,
	CurveFlagsChanged = 0xA,
	CurveRenamed = 0xB,
	CurveScaled = 0xC,
	CurveColorChanged = 0xD,
	AttributeAdded = 0xE,
	AttributeRemoved = 0xF,
	AttributeChanged = 0x10,
	Populated = 0x11,
	Reset = 0x12,
	Invalid = 0x13
};

namespace FRenderingObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		IndirectLightingCache3BandSupport = 0x1,
		CustomReflectionCaptureResolutionSupport = 0x2,
		RemovedTextureStreamingLevelData = 0x3,
		IntroducedMeshDecals = 0x4,
		ReflectionCapturesStoreAverageBrightness = 0x5,
		ChangedPlanarReflectionFadeDefaults = 0x6,
		RemovedRenderTargetSize = 0x7,
		MovedParticleCutoutsToRequiredModule = 0x8,
		MapBuildDataSeparatePackage = 0x9,
		TextureStreamingMeshUVChannelData = 0xA,
		TypeHandlingForMaterialSqrtNodes = 0xB,
		FixedBSPLightmaps = 0xC,
		DistanceFieldSelfShadowBias = 0xD,
		FixedLegacyMaterialAttributeNodeTypes = 0xE,
		ShaderResourceCodeSharing = 0xF,
		MotionBlurAndTAASupportInSceneCapture2d = 0x10,
		AddedTextureRenderTargetFormats = 0x11,
		FixedMeshUVDensity = 0x12,
		AddedbUseShowOnlyList = 0x13,
		VolumetricLightmaps = 0x14,
		MaterialAttributeLayerParameters = 0x15,
		StoreReflectionCaptureBrightnessForCooking = 0x16,
		ModelVertexBufferSerialization = 0x17,
		ReplaceLightAsIfStatic = 0x18,
		ShaderPermutationId = 0x19,
		IncreaseNormalPrecision = 0x1A,
		VirtualTexturedLightmaps = 0x1B,
		GeometryCacheFastDecoder = 0x1C,
		LightmapHasShadowmapData = 0x1D,
		DiaphragmDOFOnlyForDeferredShadingRenderer = 0x1E,
		VirtualTexturedLightmapsV2 = 0x1F,
		SkyAtmosphereStaticLightingVersioning = 0x20,
		ExplicitSRGBSetting = 0x21,
		VolumetricLightmapStreaming = 0x22,
		RemovedSM4 = 0x23,
		MaterialShaderMapIdSerialization = 0x24,
		StaticMeshSectionForceOpaqueField = 0x25,
		AutoExposureChanges = 0x26,
		RemovedEmulatedInstancing = 0x27,
		PerInstanceCustomData = 0x28,
		AnisotropicMaterial = 0x29,
		AutoExposureForceOverrideBiasFlag = 0x2A,
		AutoExposureDefaultFix = 0x2B,
		VolumeExtinctionBecomesRGB = 0x2C,
		VirtualTexturedLightmapsV3 = 0x2D,
		VersionPlusOne = 0x2E,
		LatestVersion = 0x2D
	};
}

enum class FForceFeedbackChannelType:int
{
	LEFT_LARGE = 0x0,
	LEFT_SMALL = 0x1,
	RIGHT_LARGE = 0x2,
	RIGHT_SMALL = 0x3
};

enum class ESpawnActorCollisionHandlingMethod:unsigned char
{
	Undefined = 0x0,
	AlwaysSpawn = 0x1,
	AdjustIfPossibleButAlwaysSpawn = 0x2,
	AdjustIfPossibleButDontSpawnIfColliding = 0x3,
	DontSpawnIfColliding = 0x4
};

enum class ESpawnActorScaleMethod:unsigned char
{
	OverrideRootScale = 0x0,
	MultiplyWithRoot = 0x1,
	SelectDefaultAtRuntime = 0x2
};

enum class EVisibilityBasedAnimTickOption:unsigned char
{
	LocalControlTickPoseAndRefreshBones = 0x0,
	AlwaysTickPoseAndRefreshBones = 0x1,
	AlwaysTickPose = 0x2,
	OnlyTickMontagesWhenNotRendered = 0x3,
	OnlyTickPoseWhenRendered = 0x4
};

namespace FNDITextureFunctionVersion
{
	enum Type:int
	{
		InitialVersion = 0x0,
		AddMipLevelSupport = 0x1,
		VersionPlusOne = 0x2,
		LatestVersion = 0x1
	};
}

enum class ESubUVBoundingVertexCount:int
{
	BVC_FourVertices = 0x0,
	BVC_EightVertices = 0x1
};

namespace ESplineCoordinateSpace
{
	enum Type:int
	{
		Local = 0x0,
		World = 0x1
	};
}

namespace ESplinePointType
{
	enum Type:int
	{
		Linear = 0x0,
		Curve = 0x1,
		Constant = 0x2,
		CurveClamped = 0x3,
		CurveCustomTangent = 0x4
	};
}

enum class EPurchaseTransactionState:unsigned char
{
	NotStarted = 0x0,
	Processing = 0x1,
	Purchased = 0x2,
	Failed = 0x3,
	Deferred = 0x4,
	Canceled = 0x5,
	Restored = 0x6,
	NotAllowed = 0x7,
	Invalid = 0x8
};

enum class ENavDataGatheringMode:unsigned char
{
	Default = 0x0,
	Instant = 0x1,
	Lazy = 0x2
};

enum class EOnlineSharingPermissionState:unsigned char
{
	Unknown = 0x0,
	Declined = 0x1,
	Granted = 0x2
};

enum class ERecentPlayerEncounterType:unsigned char
{
	Default = 0x0,
	Teammate = 0x1,
	Opponent = 0x2
};

enum class EHorizTextAligment:int
{
	EHTA_Left = 0x0,
	EHTA_Center = 0x1,
	EHTA_Right = 0x2
};

enum class EVerticalTextAligment:int
{
	EVRTA_TextTop = 0x0,
	EVRTA_TextCenter = 0x1,
	EVRTA_TextBottom = 0x2,
	EVRTA_QuadTop = 0x3
};

enum class EPairedAxis:unsigned char
{
	Unpaired = 0x0,
	X = 0x1,
	Y = 0x2,
	Z = 0x3
};

enum class EPlatformMessageType:int
{
	EmptyStore = 0x0,
	ChatRestricted = 0x1,
	UGCRestricted = 0x2
};

enum class EOpacitySourceMode:int
{
	OSM_Alpha = 0x0,
	OSM_ColorBrightness = 0x1,
	OSM_RedChannel = 0x2,
	OSM_GreenChannel = 0x3,
	OSM_BlueChannel = 0x4
};

enum class EBlueprintNativizationFlag:unsigned char
{
	Disabled = 0x0,
	Dependency = 0x1,
	ExplicitlyEnabled = 0x2
};

enum class ETextureSamplerFilter:unsigned char
{
	Point = 0x0,
	Bilinear = 0x1,
	Trilinear = 0x2,
	AnisotropicPoint = 0x3,
	AnisotropicLinear = 0x4
};

enum class ETextureMipLoadOptions:unsigned char
{
	Default = 0x0,
	AllMips = 0x1,
	OnlyFirstMip = 0x2
};

enum class ETextureDownscaleOptions:unsigned char
{
	Default = 0x0,
	Unfiltered = 0x1,
	SimpleAverage = 0x2,
	Sharpen0 = 0x3,
	Sharpen1 = 0x4,
	Sharpen2 = 0x5,
	Sharpen3 = 0x6,
	Sharpen4 = 0x7,
	Sharpen5 = 0x8,
	Sharpen6 = 0x9,
	Sharpen7 = 0xA,
	Sharpen8 = 0xB,
	Sharpen9 = 0xC,
	Sharpen10 = 0xD
};

enum class EOnlineTournamentFormat:unsigned char
{
	SingleElimination = 0x0,
	DoubleElimination = 0x1,
	Swiss = 0x2,
	RoundRobin = 0x3,
	Custom = 0x4
};

enum class EOnlineTournamentState:unsigned char
{
	Created = 0x0,
	OpenRegistration = 0x1,
	ClosedRegistration = 0x2,
	InProgress = 0x3,
	Finished = 0x4,
	Cancelled = 0x5
};

enum class EWidgetUpdateFlags:unsigned char
{
	None = 0x0,
	NeedsTick = 0x4,
	NeedsActiveTimerUpdate = 0x8,
	NeedsRepaint = 0x10,
	NeedsVolatilePaint = 0x40,
	NeedsVolatilePrepass = 0x80,
	AnyUpdate = 0xFF
};

enum class EOnlineTournamentParticipantType:unsigned char
{
	Individual = 0x0,
	Team = 0x1
};

enum class EVectorFieldConstructionOp:int
{
	VFCO_Extrude = 0x0,
	VFCO_Revolve = 0x1,
	VFCO_MAX = 0x2
};

enum class EOnlineTournamentParticipantState:unsigned char
{
	Registered = 0x0,
	CheckedIn = 0x1,
	Present = 0x2,
	Absent = 0x3
};

enum class EOnlineTournamentMatchState:unsigned char
{
	Created = 0x0,
	InProgress = 0x1,
	Finished = 0x2
};

enum class EParseState:int
{
	Continue = 0x0,
	StopAfter = 0x1,
	StopBefore = 0x2,
	Cancel = 0x3
};

namespace FReleaseObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		StaticMeshExtendedBoundsFix = 0x1,
		NoSyncAsyncPhysAsset = 0x2,
		LevelTransArrayConvertedToTArray = 0x3,
		AddComponentNodeTemplateUniqueNames = 0x4,
		UPropertryForMeshSectionSerialize = 0x5,
		ConvertHLODScreenSize = 0x6,
		SpeedTreeBillboardSectionInfoFixup = 0x7,
		EventSectionParameterStringAssetRef = 0x8,
		SkyLightRemoveMobileIrradianceMap = 0x9,
		RenameNoTwistToAllowTwistInTwoBoneIK = 0xA,
		MaterialLayersParameterSerializationRefactor = 0xB,
		AddSkeletalMeshSectionDisable = 0xC,
		RemovedMaterialSharedInputCollection = 0xD,
		HISMCClusterTreeMigration = 0xE,
		PinDefaultValuesVerified = 0xF,
		FixBrokenStateMachineReferencesInTransitionGetters = 0x10,
		MeshDescriptionNewSerialization = 0x11,
		UnclampRGBColorCurves = 0x12,
		LinkTimeAnimBlueprintRootDiscoveryBugFix = 0x13,
		TrailNodeBlendVariableNameChange = 0x14,
		PropertiesSerializeRepCondition = 0x15,
		FocalDistanceDisablesDOF = 0x16,
		Unused_SoundClass2DReverbSend = 0x17,
		GroomAssetVersion1 = 0x18,
		GroomAssetVersion2 = 0x19,
		SerializeAnimModifierState = 0x1A,
		GroomAssetVersion3 = 0x1B,
		DeprecateFilmbackSettings = 0x1C,
		CustomImplicitCollisionType = 0x1D,
		FFieldPathOwnerSerialization = 0x1E,
		MeshDescriptionNewFormat = 0x1F,
		PinTypeIncludesUObjectWrapperFlag = 0x20,
		WeightFMeshToMeshVertData = 0x21,
		AnimationGraphNodeBindingsDisplayedAsPins = 0x22,
		SerializeRigVMOffsetSegmentPaths = 0x23,
		AbcVelocitiesSupport = 0x24,
		MarginAddedToConvexAndBox = 0x25,
		StructureDataAddedToConvex = 0x26,
		AddedFrontRightUpAxesToLiveLinkPreProcessor = 0x27,
		FixupCopiedEventSections = 0x28,
		RemoteControlSerializeFunctionArgumentsSize = 0x29,
		AddedSubSequenceEntryWarpCounter = 0x2A,
		LonglatTextureCubeDefaultMaxResolution = 0x2B,
		GeometryCollectionCacheRemovesMassToLocal = 0x2C,
		VersionPlusOne = 0x2D,
		LatestVersion = 0x2C
	};
}

enum class ESizingRule:unsigned char
{
	FixedSize = 0x0,
	Autosized = 0x1,
	UserSized = 0x2
};

enum class EEventMode:int
{
	AutoReset = 0x0,
	ManualReset = 0x1
};

enum class ECheckModuleCompatibilityFlags:int
{
	None = 0x0,
	DisplayUpToDateModules = 0x1
};

enum class ETrackingStatus:unsigned char
{
	NotTracked = 0x0,
	InertialOnly = 0x1,
	Tracked = 0x2
};

enum class EUpdateTextureValueType:int
{
	Float = 0x0,
	Int32 = 0x1,
	Uint32 = 0x2
};

enum class ESpectatorScreenMode:unsigned char
{
	Disabled = 0x0,
	SingleEyeLetterboxed = 0x1,
	Undistorted = 0x2,
	Distorted = 0x3,
	SingleEye = 0x4,
	SingleEyeCroppedToFill = 0x5,
	Texture = 0x6,
	TexturePlusEye = 0x7
};

enum class EHandKeypoint:unsigned char
{
	Palm = 0x0,
	Wrist = 0x1,
	ThumbMetacarpal = 0x2,
	ThumbProximal = 0x3,
	ThumbDistal = 0x4,
	ThumbTip = 0x5,
	IndexMetacarpal = 0x6,
	IndexProximal = 0x7,
	IndexIntermediate = 0x8,
	IndexDistal = 0x9,
	IndexTip = 0xA,
	MiddleMetacarpal = 0xB,
	MiddleProximal = 0xC,
	MiddleIntermediate = 0xD,
	MiddleDistal = 0xE,
	MiddleTip = 0xF,
	RingMetacarpal = 0x10,
	RingProximal = 0x11,
	RingIntermediate = 0x12,
	RingDistal = 0x13,
	RingTip = 0x14,
	LittleMetacarpal = 0x15,
	LittleProximal = 0x16,
	LittleIntermediate = 0x17,
	LittleDistal = 0x18,
	LittleTip = 0x19
};

enum class ERHIZBuffer:int
{
	FarPlane = 0x0,
	NearPlane = 0x1,
	IsInverted = 0x1
};

enum class EBlendProfileMode:unsigned char
{
	TimeFactor = 0x0,
	WeightFactor = 0x1,
	BlendMask = 0x2
};

enum class EXRTrackedDeviceType:unsigned char
{
	HeadMountedDisplay = 0x0,
	Controller = 0x1,
	TrackingReference = 0x2,
	Tracker = 0x3,
	Other = 0x4,
	Invalid = 0xFE,
	Any = 0xFF
};

namespace EHMDTrackingOrigin
{
	enum Type:int
	{
		Floor = 0x0,
		Eye = 0x1,
		Stage = 0x2
	};
}

enum class EControllerHand:unsigned char
{
	Left = 0x0,
	Right = 0x1,
	AnyHand = 0x2,
	Pad = 0x3,
	ExternalCamera = 0x4,
	Gun = 0x5,
	HMD = 0x6,
	Chest = 0x7,
	LeftShoulder = 0x8,
	RightShoulder = 0x9,
	LeftElbow = 0xA,
	RightElbow = 0xB,
	Waist = 0xC,
	LeftKnee = 0xD,
	RightKnee = 0xE,
	LeftFoot = 0xF,
	RightFoot = 0x10,
	Special = 0x11,
	ControllerHand_Count = 0x12
};

enum class EXRVisualType:unsigned char
{
	Controller = 0x0,
	Hand = 0x1
};

enum class ESpatialInputGestureAxis:unsigned char
{
	None = 0x0,
	Manipulation = 0x1,
	Navigation = 0x2,
	NavigationRails = 0x3
};

enum class EOcclusionCombineMode:int
{
	OCM_Minimum = 0x0,
	OCM_Multiply = 0x1,
	OCM_MAX = 0x2
};

enum class EMessageScope:unsigned char
{
	Thread = 0x0,
	Process = 0x1,
	Network = 0x2,
	All = 0x3
};

enum class EMessageFlags:unsigned int
{
	None = 0x0,
	Reliable = 0x1
};

enum class EMessageBusNotification:unsigned char
{
	Registered = 0x0,
	Unregistered = 0x1
};

namespace FAnimPhysObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		ConvertAnimNodeLookAtAxis = 0x1,
		BoxSphylElemsUseRotators = 0x2,
		ThumbnailSceneInfoAndAssetImportDataAreTransactional = 0x3,
		AddedClothingMaskWorkflow = 0x4,
		RemoveUIDFromSmartNameSerialize = 0x5,
		CreateTargetReference = 0x6,
		TuneSoftLimitStiffnessAndDamping = 0x7,
		FixInvalidClothParticleMasses = 0x8,
		CacheClothMeshInfluences = 0x9,
		SmartNameRefactorForDeterministicCooking = 0xA,
		RenameDisableAnimCurvesToAllowAnimCurveEvaluation = 0xB,
		AddLODToCurveMetaData = 0xC,
		FixupBadBlendProfileReferences = 0xD,
		AllowMultipleAudioPluginSettings = 0xE,
		ChangeRetargetSourceReferenceToSoftObjectPtr = 0xF,
		SaveEditorOnlyFullPoseForPoseAsset = 0x10,
		GeometryCacheAssetDeprecation = 0x11,
		VersionPlusOne = 0x12,
		LatestVersion = 0x11
	};
}

enum class ETransformCurveChannel:unsigned char
{
	Position = 0x0,
	Rotation = 0x1,
	Scale = 0x2,
	Invalid = 0x3
};

enum class EVectorCurveChannel:unsigned char
{
	X = 0x0,
	Y = 0x1,
	Z = 0x2,
	Invalid = 0x3
};

namespace ESlateCheckBoxType
{
	enum Type:int
	{
		CheckBox = 0x0,
		ToggleButton = 0x1
	};
}

enum class EConfigCacheType:unsigned char
{
	DiskBacked = 0x0,
	Temporary = 0x1
};

enum class EVertexStreamUsage:unsigned char
{
	Default = 0x0,
	Instancing = 0x1,
	Overridden = 0x2,
	ManualFetch = 0x4
};

enum class EMaterialLayerLinkState:unsigned char
{
	Uninitialized = 0x0,
	LinkedToParent = 0x1,
	UnlinkedFromParent = 0x2,
	NotFromParent = 0x3
};

enum class EMonthOfYear:int
{
	January = 0x1,
	February = 0x2,
	March = 0x3,
	April = 0x4,
	May = 0x5,
	June = 0x6,
	July = 0x7,
	August = 0x8,
	September = 0x9,
	October = 0xA,
	November = 0xB,
	December = 0xC
};

enum class ETargetDeviceTypes:int
{
	Indeterminate = 0x0,
	Browser = 0x1,
	Console = 0x2,
	Desktop = 0x3,
	Phone = 0x4,
	Tablet = 0x5,
	HMD = 0x6
};

enum class ETargetDeviceFeatures:int
{
	MultiLaunch = 0x0,
	PowerOff = 0x1,
	PowerOn = 0x2,
	ProcessSnapshot = 0x3,
	Reboot = 0x4
};

enum class EPlatformAuthentication:int
{
	Never = 0x0,
	Possible = 0x1,
	Always = 0x2
};

enum class ETargetPlatformFeatures:int
{
	AudioStreaming = 0x0,
	DistanceFieldShadows = 0x1,
	DistanceFieldAO = 0x2,
	GrayscaleSRGB = 0x3,
	HighQualityLightmaps = 0x4,
	LowQualityLightmaps = 0x5,
	MultipleGameInstances = 0x6,
	Packaging = 0x7,
	SdkConnectDisconnect = 0x8,
	TextureStreaming = 0x9,
	MeshLODStreaming = 0xA,
	LandscapeMeshLODStreaming = 0xB,
	UserCredentials = 0xC,
	MobileRendering = 0xD,
	DeferredRendering = 0xE,
	ShouldSplitPaksIntoSmallerSizes = 0xF,
	HalfFloatVertexFormat = 0x10,
	DeviceOutputLog = 0x11,
	MemoryMappedFiles = 0x12,
	MemoryMappedAudio = 0x13,
	MemoryMappedAnimation = 0x14,
	SparseTextures = 0x15,
	VirtualTextureStreaming = 0x16,
	LumenGI = 0x17,
	HardwareLZDecompression = 0x18,
	CookFileRegionMetadata = 0x19,
	DirectDataExchange = 0x1A
};

enum class EOfflineBVHMode:int
{
	Disabled = 0x0,
	MaximizePerformance = 0x1,
	MinimizeMemory = 0x2
};

namespace ERHIShadingPath
{
	enum Type:int
	{
		Deferred = 0x0,
		Forward = 0x1,
		Mobile = 0x2,
		Num = 0x3
	};
}

enum class EFlowDirection:unsigned char
{
	LeftToRight = 0x0,
	RightToLeft = 0x1
};

namespace ENavigationShapeType
{
	enum Type:int
	{
		Unknown = 0x0,
		Cylinder = 0x1,
		Box = 0x2,
		Convex = 0x3,
		InstancedConvex = 0x4
	};
}

namespace EReflectionMethod
{
	enum Type:int
	{
		None = 0x0,
		Lumen = 0x1,
		ScreenSpace = 0x2,
		RayTraced = 0x3
	};
}

namespace EPrimalEquipmentType
{
	enum Type:int
	{
		Hat = 0x0,
		Shirt = 0x1,
		Pants = 0x2,
		Boots = 0x3,
		Gloves = 0x4,
		DinoSaddle = 0x5,
		Trophy = 0x6,
		Costume = 0x7,
		Shield = 0x8,
		Weapon = 0x9,
		Snapshot = 0xA,
		Pet = 0xB,
		MAX = 0xC
	};
}

namespace FComputeFrameworkObjectVersion
{
	enum Type:int
	{
		InitialVersion = 0x0,
		VersionPlusOne = 0x1,
		LatestVersion = 0x0
	};
}

enum class ETargetDeviceThreadStates:int
{
	Unknown = 0x0,
	CanRun = 0x1,
	Inactive = 0x2,
	Inhibited = 0x3,
	RunQueue = 0x4,
	Running = 0x5
};

enum class ETargetDeviceThreadWaitStates:int
{
	Unknown = 0x0,
	Locked = 0x1,
	Sleeping = 0x2,
	Suspended = 0x3,
	Swapped = 0x4,
	Waiting = 0x5
};

enum class EUniqueObjectNameOptions:int
{
	None = 0x0,
	GloballyUnique = 0x2
};

enum class EShaderFundamentalType:unsigned char
{
	Bool = 0x0,
	Int = 0x1,
	Uint = 0x2,
	Float = 0x3,
	Struct = 0x4,
	None = 0xFF
};

enum class EShaderFundamentalDimensionType:unsigned char
{
	Scalar = 0x0,
	Vector = 0x1,
	Matrix = 0x2
};

enum class EShaderResourceType:unsigned char
{
	None = 0x0,
	Texture1D = 0x1,
	Texture2D = 0x2,
	Texture3D = 0x3,
	TextureCube = 0x4,
	Buffer = 0x5,
	StructuredBuffer = 0x6,
	ByteAddressBuffer = 0x7
};

enum class EShaderParamBindingType:unsigned char
{
	None = 0x0,
	ConstantParameter = 0x1,
	ReadOnlyResource = 0x2,
	ReadWriteResource = 0x3
};

enum class EStereoscopicPass:int
{
	eSSP_FULL = 0x0,
	eSSP_PRIMARY = 0x1,
	eSSP_SECONDARY = 0x2
};

namespace FCoreObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		MaterialInputNativeSerialize = 0x1,
		EnumProperties = 0x2,
		SkeletalMaterialEditorDataStripping = 0x3,
		FProperties = 0x4,
		VersionPlusOne = 0x5,
		LatestVersion = 0x4
	};
}

namespace EControllerAnalogStick
{
	enum Type:int
	{
		CAS_LeftStick = 0x0,
		CAS_RightStick = 0x1,
		CAS_MAX = 0x2
	};
}

enum class ERegexPatternFlags:int
{
	None = 0x0,
	CaseInsensitive = 0x1
};

enum class ERayTracingPayloadType:unsigned int
{
	None = 0x0,
	Minimal = 0x1,
	Default = 0x2,
	RayTracingMaterial = 0x4,
	RayTracingDebug = 0x8,
	Deferred = 0x10,
	PathTracingMaterial = 0x20,
	LumenMinimal = 0x40,
	VFX = 0x80,
	Decals = 0x100,
	SparseVoxel = 0x200
};

enum class ERayTracingSceneLayer:unsigned char
{
	Base = 0x0,
	Decals = 0x1,
	NUM = 0x2
};

enum class EAsyncExecution:int
{
	TaskGraph = 0x0,
	TaskGraphMainThread = 0x1,
	Thread = 0x2,
	ThreadIfForkSafe = 0x3,
	ThreadPool = 0x4
};

enum class EPanningMethod:signed char
{
	Linear = 0x0,
	EqualPower = 0x1
};

enum class EInterfaceValidResult:unsigned char
{
	Valid = 0x0,
	Invalid = 0x1
};

enum class EDayOfWeek:int
{
	Monday = 0x0,
	Tuesday = 0x1,
	Wednesday = 0x2,
	Thursday = 0x3,
	Friday = 0x4,
	Saturday = 0x5,
	Sunday = 0x6
};

enum class EComputeKernelFlags:unsigned int
{
	IsDefaultKernel = 0x1,
	IsolatedMemoryWrites = 0x2
};

namespace EExportedDeclaration
{
	enum Type:int
	{
		Local = 0x0,
		Member = 0x1,
		Parameter = 0x2,
		MacroParameter = 0x3
	};
}

enum class EAudioSpectrumBandPresetType:unsigned char
{
	KickDrum = 0x0,
	SnareDrum = 0x1,
	Voice = 0x2,
	Cymbals = 0x3
};

enum class EMontageBlendMode:unsigned char
{
	Standard = 0x0,
	Inertialization = 0x1
};

namespace EAnimEventTriggerOffsets
{
	enum Type:int
	{
		OffsetBefore = 0x0,
		OffsetAfter = 0x1,
		NoOffset = 0x2
	};
}

enum class ECFCoreChildFileType:unsigned char
{
	None = 0x0,
	ServerPack = 0x1,
	Source = 0x2
};

enum class ECompressionError:unsigned char
{
	None = 0x0,
	FailedToReadZip = 0x1,
	FailedToExtractFile = 0x2,
	FailedToWriteFile = 0x3
};

enum class ECFCoreExternalAuthProvider:unsigned char
{
	None = 0x0,
	Steam = 0x1,
	PSN = 0x2,
	XBL = 0x3
};

enum class EFileSystemError:unsigned char
{
	None = 0x0,
	FailedToReadFromDisk = 0x1,
	FailedToCreateDirectory = 0x2,
	FailedToSaveToDisk = 0x3,
	FailedToOpenFileForWrite = 0x4,
	FailedFileToLarge = 0x5,
	FailedGettingDiskSpaceInfo = 0x6,
	FailedReadOutOfBounds = 0x7
};

enum class ECFCoreInstallationCommands:unsigned char
{
	Download = 0x0,
	VerifyHash = 0x1,
	Unzip = 0x2,
	Cleanup = 0x1E
};

namespace EPartyReservationResult
{
	enum Type:int
	{
		NoResult = 0x0,
		RequestPending = 0x1,
		GeneralError = 0x2,
		PartyLimitReached = 0x3,
		IncorrectPlayerCount = 0x4,
		RequestTimedOut = 0x5,
		ReservationDuplicate = 0x6,
		ReservationNotFound = 0x7,
		ReservationAccepted = 0x8,
		ReservationDenied = 0x9,
		ReservationDenied_CrossPlayRestriction = 0xA,
		ReservationDenied_Banned = 0xB,
		ReservationRequestCanceled = 0xC,
		ReservationInvalid = 0xD,
		BadSessionId = 0xE,
		ReservationDenied_ContainsExistingPlayers = 0xF
	};
}

namespace EVoiceCaptureState
{
	enum Type:int
	{
		UnInitialized = 0x0,
		NotCapturing = 0x1,
		Ok = 0x2,
		NoData = 0x3,
		Stopping = 0x4,
		BufferTooSmall = 0x5,
		Error = 0x6
	};
}

namespace EBeaconState
{
	enum Type:int
	{
		AllowRequests = 0x0,
		DenyRequests = 0x1
	};
}

enum class EMaterialExpressionSetParameterValueFlags:unsigned int
{
	None = 0x0,
	SendPostEditChangeProperty = 0x1,
	NoUpdateExpressionGuid = 0x2,
	AssignGroupAndSortPriority = 0x4
};

namespace ESelectInfo
{
	enum Type:int
	{
		OnKeyPress = 0x0,
		OnNavigation = 0x1,
		OnMouseClick = 0x2,
		Direct = 0x3
	};
}

enum class ESlateDebuggingFocusEvent:unsigned char
{
	FocusChanging = 0x0,
	FocusLost = 0x1,
	FocusReceived = 0x2,
	MAX = 0x3
};

enum class EInAppPurchaseStatus:unsigned char
{
	Invalid = 0x0,
	Failed = 0x1,
	Deferred = 0x2,
	Canceled = 0x3,
	Purchased = 0x4,
	Restored = 0x5
};

enum class EOnlineProxyStoreOfferDiscountType:unsigned char
{
	NotOnSale = 0x0,
	Percentage = 0x1,
	DiscountAmount = 0x2,
	PayAmount = 0x3
};

enum class EBoneControlSpace:int
{
	BCS_WorldSpace = 0x0,
	BCS_ComponentSpace = 0x1,
	BCS_ParentBoneSpace = 0x2,
	BCS_BoneSpace = 0x3,
	BCS_MAX = 0x4
};

enum class EPopupMethod:unsigned char
{
	CreateNewWindow = 0x0,
	UseCurrentWindow = 0x1
};

enum class EConfigTestEnum:int
{
	A = 0x0,
	B = 0x1
};

enum class EMovieSceneSequenceCompilerMask:unsigned char
{
	Hierarchy = 0x1,
	EvaluationTemplate = 0x2,
	EvaluationTemplateField = 0x4,
	EntityComponentField = 0x8,
	None = 0x0
};

enum class EBeaconConnectionState:unsigned char
{
	Invalid = 0x0,
	Closed = 0x1,
	Pending = 0x2,
	Open = 0x3
};

enum class EMovieSceneObjectBindingSpace:unsigned char
{
	Local = 0x0,
	Root = 0x1,
	Unused = 0x2
};

enum class EDefaultBufferType:int
{
	VertexBuffer = 0x0,
	StructuredBuffer = 0x1,
	ByteAddressBuffer = 0x2
};

enum class ENetCloseResult:unsigned int
{
	NetDriverAlreadyExists = 0x0,
	NetDriverCreateFailure = 0x1,
	NetDriverListenFailure = 0x2,
	ConnectionLost = 0x3,
	ConnectionTimeout = 0x4,
	FailureReceived = 0x5,
	OutdatedClient = 0x6,
	OutdatedServer = 0x7,
	PendingConnectionFailure = 0x8,
	NetGuidMismatch = 0x9,
	NetChecksumMismatch = 0xA,
	SecurityMalformedPacket = 0xB,
	SecurityInvalidData = 0xC,
	SecurityClosed = 0xD,
	Unknown = 0xE,
	Success = 0xF,
	Extended = 0x10,
	HostClosedConnection = 0x11,
	Disconnect = 0x12,
	Upgrade = 0x13,
	PreLoginFailure = 0x14,
	JoinFailure = 0x15,
	JoinSplitFailure = 0x16,
	AddressResolutionFailed = 0x17,
	RPCDoS = 0x18,
	Cleanup = 0x19,
	MissingLevelPackage = 0x1A,
	PacketHandlerIncomingError = 0x1B,
	ZeroLastByte = 0x1C,
	ZeroSize = 0x1D,
	ReadHeaderFail = 0x1E,
	ReadHeaderExtraFail = 0x1F,
	AckSequenceMismatch = 0x20,
	BunchBadChannelIndex = 0x21,
	BunchChannelNameFail = 0x22,
	BunchWrongChannelType = 0x23,
	BunchHeaderOverflow = 0x24,
	BunchDataOverflow = 0x25,
	BunchServerPackageMapExports = 0x26,
	BunchPrematureControlChannel = 0x27,
	BunchPrematureChannel = 0x28,
	BunchPrematureControlClose = 0x29,
	UnknownChannelType = 0x2A,
	PrematureSend = 0x2B,
	CorruptData = 0x2C,
	SocketSendFailure = 0x2D,
	BadChildConnectionIndex = 0x2E,
	LogLimitInstant = 0x2F,
	LogLimitSustained = 0x30,
	EncryptionFailure = 0x31,
	EncryptionTokenMissing = 0x32,
	ReceivedNetGUIDBunchFail = 0x33,
	MaxReliableExceeded = 0x34,
	ReceivedNextBunchFail = 0x35,
	ReceivedNextBunchQueueFail = 0x36,
	PartialInitialReliableDestroy = 0x37,
	PartialMergeReliableDestroy = 0x38,
	PartialInitialNonByteAligned = 0x39,
	PartialNonByteAligned = 0x3A,
	PartialFinalPackageMapExports = 0x3B,
	PartialTooLarge = 0x3C,
	AlreadyOpen = 0x3D,
	ReliableBeforeOpen = 0x3E,
	ReliableBufferOverflow = 0x3F,
	RPCReliableBufferOverflow = 0x40,
	ControlChannelClose = 0x41,
	ControlChannelEndianCheck = 0x42,
	ControlChannelPlayerChannelFail = 0x43,
	ControlChannelMessageUnknown = 0x44,
	ControlChannelMessageFail = 0x45,
	ControlChannelMessagePayloadFail = 0x46,
	ControlChannelBunchOverflowed = 0x47,
	ControlChannelQueueBunchOverflowed = 0x48,
	ClientHasMustBeMappedGUIDs = 0x49,
	ClientSentDestructionInfo = 0x4A,
	UnregisteredMustBeMappedGUID = 0x4B,
	ObjectReplicatorReceivedBunchFail = 0x4C,
	ContentBlockFail = 0x4D,
	ContentBlockHeaderRepLayoutFail = 0x4E,
	ContentBlockHeaderIsActorFail = 0x4F,
	ContentBlockHeaderObjFail = 0x50,
	ContentBlockHeaderPrematureEnd = 0x51,
	ContentBlockHeaderSubObjectActor = 0x52,
	ContentBlockHeaderBadParent = 0x53,
	ContentBlockHeaderInvalidCreate = 0x54,
	ContentBlockHeaderStablyNamedFail = 0x55,
	ContentBlockHeaderNoSubObjectClass = 0x56,
	ContentBlockHeaderUObjectSubObject = 0x57,
	ContentBlockHeaderAActorSubObject = 0x58,
	ContentBlockHeaderFail = 0x59,
	ContentBlockPayloadBitsFail = 0x5A,
	FieldHeaderRepIndex = 0x5B,
	FieldHeaderBadRepIndex = 0x5C,
	FieldHeaderPayloadBitsFail = 0x5D,
	FieldPayloadFail = 0x5E,
	BeaconControlFlowError = 0x5F,
	BeaconUnableToParsePacket = 0x60,
	BeaconAuthenticationFailure = 0x61,
	BeaconLoginInvalidIdError = 0x62,
	BeaconLoginInvalidAuthHandlerError = 0x63,
	BeaconAuthError = 0x64,
	BeaconSpawnClientWorldPackageNameError = 0x65,
	BeaconSpawnExistingActorError = 0x66,
	BeaconSpawnFailureError = 0x67,
	BeaconSpawnNetGUIDAckNoActor = 0x68,
	BeaconSpawnNetGUIDAckNoHost = 0x69,
	BeaconSpawnUnexpectedError = 0x6A,
	FaultDisconnect = 0x6B,
	NotRecoverable = 0x6C
};

enum class EPlatformInfoType:unsigned char
{
	TruePlatformsOnly = 0x0,
	AllPlatformInfos = 0x1
};

enum class EAnimSyncMethod:unsigned char
{
	DoNotSync = 0x0,
	SyncGroup = 0x1,
	Graph = 0x2
};

enum class EShouldThrottle:unsigned char
{
	No = 0x0,
	Yes = 0x1
};

enum class EVertexFactoryFlags:unsigned int
{
	None = 0x0,
	UsedWithMaterials = 0x2,
	SupportsStaticLighting = 0x4,
	SupportsDynamicLighting = 0x8,
	SupportsPrecisePrevWorldPos = 0x10,
	SupportsPositionOnly = 0x20,
	SupportsCachingMeshDrawCommands = 0x40,
	SupportsPrimitiveIdStream = 0x80,
	SupportsNaniteRendering = 0x100,
	SupportsRayTracing = 0x200,
	SupportsRayTracingDynamicGeometry = 0x400,
	SupportsRayTracingProceduralPrimitive = 0x800,
	SupportsLightmapBaking = 0x1000,
	SupportsPSOPrecaching = 0x2000,
	SupportsManualVertexFetch = 0x4000,
	DoesNotSupportNullPixelShader = 0xFFFF8000,
	SupportsGPUSkinPassThrough = 0x10000,
	SupportsComputeShading = 0x20000,
	SupportsLumenMeshCards = 0x40000
};

enum class EAutoExposureMethod:int
{
	AEM_Histogram = 0x0,
	AEM_Basic = 0x1,
	AEM_Manual = 0x2,
	AEM_MAX = 0x3
};

enum class EImagePixelType:int
{
	Color = 0x0,
	Float16 = 0x1,
	Float32 = 0x2
};

namespace EPopUpOrientation
{
	enum Type:int
	{
		Horizontal = 0x0,
		Vertical = 0x1
	};
}

enum class EToolContextCoordinateSystem:int
{
	World = 0x0,
	Local = 0x1
};

enum class EInputCaptureSide:int
{
	None = 0x0,
	Left = 0x1,
	Right = 0x2,
	Both = 0x3,
	Any = 0x63
};

namespace ENavPathEvent
{
	enum Type:int
	{
		Cleared = 0x0,
		NewPath = 0x1,
		UpdatedDueToGoalMoved = 0x2,
		UpdatedDueToNavigationChanged = 0x3,
		Invalidated = 0x4,
		RePathFailed = 0x5,
		MetaPathUpdate = 0x6,
		Custom = 0x7
	};
}

enum class ETextureStreamingBuildType:int
{
	TSB_MapBuild = 0x0,
	TSB_ActorBuild = 0x1,
	TSB_ValidationOnly = 0x2,
	TSB_ViewMode = 0x3
};

enum class ERHITransientAllocationType:unsigned char
{
	Heap = 0x0,
	Page = 0x1
};

enum class EEdGraphNodeDeprecationMessageType:int
{
	None = 0x0,
	Note = 0x1,
	Warning = 0x2
};

enum class EViewInteractionState:int
{
	None = 0x0,
	Hovered = 0x1,
	Focused = 0x2
};

enum class ESpaceCurveControlPointTransformMode:int
{
	Shared = 0x0,
	PerVertex = 0x1
};

enum class ESpaceCurveControlPointOriginMode:int
{
	Shared = 0x0,
	First = 0x1,
	Last = 0x2
};

enum class ESpaceCurveControlPointFalloffType:int
{
	Linear = 0x0,
	Smooth = 0x1
};

namespace EAttenuationShape
{
	enum Type:int
	{
		Sphere = 0x0,
		Capsule = 0x1,
		Box = 0x2,
		Cone = 0x3
	};
}

enum class EIncomingResult:unsigned char
{
	Success = 0x0,
	Error = 0x1
};

enum class ENotifyRegistrationPhase:int
{
	NRP_Added = 0x0,
	NRP_Started = 0x1,
	NRP_Finished = 0x2
};

enum class ECompiledMaterialProperty:int
{
	CompiledMP_EmissiveColorCS = 0x25,
	CompiledMP_PrevWorldPositionOffset = 0x26,
	CompiledMP_MAX = 0x27
};

enum class EQuartzCommandDelegateSubType:unsigned char
{
	CommandOnFailedToQueue = 0x0,
	CommandOnQueued = 0x1,
	CommandOnCanceled = 0x2,
	CommandOnAboutToStart = 0x3,
	CommandOnStarted = 0x4,
	Count = 0x5
};

enum class EObjectIteratorThreadSafetyOptions:unsigned char
{
	None = 0x0,
	ThreadSafe = 0x1,
	ThreadSafeAdvance = 0x2
};

enum class ECreateObjectTypeHint:unsigned char
{
	Undefined = 0x0,
	StaticMesh = 0x1,
	Volume = 0x2,
	DynamicMeshActor = 0x3
};

enum class ELandscapeBlendMode:int
{
	LSBM_AdditiveBlend = 0x0,
	LSBM_AlphaBlend = 0x1,
	LSBM_MAX = 0x2
};

enum class ELandscapeClearMode:int
{
	Clear_Weightmap = 0x1,
	Clear_Heightmap = 0x2,
	Clear_All = 0x3
};

enum class ECopyResult:int
{
	COPY_OK = 0x0,
	COPY_Fail = 0x1,
	COPY_Canceled = 0x2
};

enum class EFontImportCharacterSet:int
{
	FontICS_Default = 0x0,
	FontICS_Ansi = 0x1,
	FontICS_Symbol = 0x2,
	FontICS_MAX = 0x3
};

enum class ESkeletalMeshAsyncProperties:unsigned __int64
{
	None = 0x0,
	Materials = 0x1,
	Skeleton = 0x2,
	RefSkeleton = 0x4,
	RetargetBasePose = 0x8,
	RefBasesInvMatrix = 0x10,
	MeshClothingAssets = 0x20,
	UseLegacyMeshDerivedDataKey = 0x40,
	HasActiveClothingAssets = 0x80,
	LODSettings = 0x100,
	HasVertexColors = 0x200,
	VertexColorGuid = 0x400,
	MorphTargets = 0x800,
	SkeletalMeshRenderData = 0x1000,
	MeshEditorDataObject = 0x2000,
	NeverStream = 0x4000,
	OverrideLODStreamingSettings = 0xFFFF8000,
	SupportLODStreaming = 0x10000,
	MaxNumStreamedLODs = 0x20000,
	MaxNumOptionalLODs = 0x40000,
	ImportedModel = 0x80000,
	LODInfo = 0x100000,
	SkinWeightProfiles = 0x200000,
	CachedComposedRefPoseMatrices = 0x400000,
	SamplingInfo = 0x800000,
	NodeMappingData = 0x1000000,
	ShadowPhysicsAsset = 0x2000000,
	SkelMirrorTable = 0x4000000,
	MinLod = 0x8000000,
	DisableBelowMinLodStripping = 0x10000000,
	SkelMirrorAxis = 0x20000000,
	SkelMirrorFlipAxis = 0x40000000,
	DefaultAnimationRig = 0x80000000,

};

enum class EAccessibleBehavior:unsigned char
{
	NotAccessible = 0x0,
	Auto = 0x1,
	Summary = 0x2,
	Custom = 0x3,
	ToolTip = 0x4
};

enum class EFontCacheType:unsigned char
{
	Offline = 0x0,
	Runtime = 0x1
};

enum class ECustomAttributeBlendType:unsigned char
{
	Override = 0x0,
	Blend = 0x1
};

enum class EAudioFaderCurve:unsigned char
{
	Linear = 0x0,
	Logarithmic = 0x1,
	SCurve = 0x2,
	Sin = 0x3,
	Count = 0x4
};

enum class EDirectoryVisitorFlags:unsigned char
{
	None = 0x0,
	ThreadSafe = 0x1
};

enum class EBlueprintTextLiteralType:unsigned char
{
	Empty = 0x0,
	LocalizedText = 0x1,
	InvariantText = 0x2,
	LiteralString = 0x3,
	StringTableEntry = 0x4
};

enum class ETypeAdvanceAnim:int
{
	ETAA_Default = 0x0,
	ETAA_Finished = 0x1,
	ETAA_Looped = 0x2
};

enum class EAudioEncodeHint:unsigned char
{
	VoiceEncode_Voice = 0x0,
	VoiceEncode_Audio = 0x1
};

enum class ETypedElementWorldType:unsigned char
{
	Game = 0x0,
	Editor = 0x1
};

enum class EReloadCompleteReason:int
{
	None = 0x0,
	HotReloadAutomatic = 0x1,
	HotReloadManual = 0x2
};

enum class EMultiBoxType:unsigned char
{
	MenuBar = 0x0,
	ToolBar = 0x1,
	VerticalToolBar = 0x2,
	SlimHorizontalToolBar = 0x3,
	UniformToolBar = 0x4,
	Menu = 0x5,
	ButtonRow = 0x6
};

namespace PhysCommand
{
	enum Type:int
	{
		Release = 0x0,
		ReleasePScene = 0x1,
		DeleteCPUDispatcher = 0x2,
		DeleteSimEventCallback = 0x3,
		DeleteContactModifyCallback = 0x4,
		DeleteCCDContactModifyCallback = 0x5,
		DeleteMbpBroadphaseCallback = 0x6,
		Max = 0x7
	};
}

enum class EClientRequestType:unsigned char
{
	NonePending = 0x0,
	ExistingSessionReservation = 0x1,
	ReservationUpdate = 0x2,
	EmptyServerReservation = 0x3,
	Reconnect = 0x4,
	Abandon = 0x5,
	ReservationRemoveMembers = 0x6,
	AddOrUpdateReservation = 0x7
};

enum class EMapPropertyFlags:int
{
	None = 0x0,
	UsesMemoryImageAllocator = 0x1
};

enum class ERuntimeVirtualTextureDebugType:int
{
	None = 0x0,
	Debug = 0x1
};

enum class ESkinnedAssetAsyncPropertyLockType:int
{
	None = 0x0,
	ReadOnly = 0x1,
	WriteOnly = 0x2,
	ReadWrite = 0x3
};

enum class EGenerateMipsPass:int
{
	AutoDetect = 0x0,
	Compute = 0x1,
	Raster = 0x2
};

enum class ENDILandscape_SourceMode:unsigned char
{
	Default = 0x0,
	Source = 0x1,
	AttachParent = 0x2
};

enum class EHeightfieldSource:int
{
	None = 0x0,
	Simple = 0x1,
	Complex = 0x2,
	Editor = 0x3
};

enum class EShadowCacheInvalidationBehavior:unsigned char
{
	Auto = 0x0,
	Always = 0x1,
	Rigid = 0x2,
	Static = 0x3
};

enum class ERuntimeVirtualTextureMainPassType:unsigned char
{
	Never = 0x0,
	Exclusive = 0x1,
	Always = 0x2
};

enum class ELoopingMode:int
{
	LOOP_Never = 0x0,
	LOOP_WithNotification = 0x1,
	LOOP_Forever = 0x2
};

enum class EScreenPercentageMode:int
{
	Manual = 0x0,
	BasedOnDisplayResolution = 0x1,
	BasedOnDPIScale = 0x2
};

enum class EEncryptionResponse:unsigned char
{
	Failure = 0x0,
	Success = 0x1,
	InvalidToken = 0x2,
	NoKey = 0x3,
	SessionIdMismatch = 0x4,
	InvalidParams = 0x5
};

enum class EServerMode:int
{
	eServerModeInvalid = 0x0,
	eServerModeNoAuthentication = 0x1,
	eServerModeAuthentication = 0x2,
	eServerModeAuthenticationAndSecure = 0x3
};

enum class EGpuVendorId:unsigned __int64
{
	Unknown = 0xFF,
	NotQueried = 0x0,
	Amd = 0x1002,
	ImgTec = 0x1010,
	Nvidia = 0x10DE,
	Arm = 0x13B5,
	Broadcom = 0x14E4,
	Qualcomm = 0x5143,
	Intel = 0xFFFF8086,
	Apple = 0x106B,
	Vivante = 0x7A05,
	VeriSilicon = 0x1EB1,
	Kazan = 0x10003,
	Codeplay = 0x10004,
	Mesa = 0x10005
};

enum class EMeshAttributeFlags:unsigned int
{
	None = 0x0,
	Lerpable = 0x1,
	AutoGenerated = 0x2,
	Mergeable = 0x4,
	Transient = 0x8,
	IndexReference = 0x10,
	Mandatory = 0x20
};

enum class ETextureEncodeSpeed:unsigned char
{
	Final = 0x0,
	FinalIfAvailable = 0x1,
	Fast = 0x2
};

namespace ENavPathUpdateType
{
	enum Type:int
	{
		GoalMoved = 0x0,
		NavigationChanged = 0x1,
		MetaPathUpdate = 0x2,
		Custom = 0x3
	};
}

enum class ECFCoreAutoCookingType:unsigned char
{
	All = 0x0,
	PCOnly = 0x1,
	Manual = 0x2
};

enum class ENDIMeshRendererInfoVersion:unsigned int
{
	InitialVersion = 0x0,
	AddSizeToMeshLocalBounds = 0x1,
	VersionPlusOne = 0x2,
	LatestVersion = 0x1
};

enum class EModsDirectoryMode:unsigned char
{
	None = 0x0,
	CFCore = 0x1,
	Flat = 0x2
};

enum class ECFCoreModLoaderType:unsigned char
{
	Any = 0x0,
	Forge = 0x1,
	Cauldron = 0x2,
	LiteLoader = 0x3,
	Fabric = 0x4
};

enum class ECFCoreSortOrder:unsigned char
{
	None = 0x0,
	Asc = 0x1,
	Desc = 0x2
};

enum class ECFCoreModsSearchSortField:unsigned char
{
	None = 0x0,
	Featured = 0x1,
	Popularity = 0x2,
	LastUpdated = 0x3,
	Name = 0x4,
	Author = 0x5,
	TotalDownloads = 0x6,
	Category = 0x7,
	GameVersion = 0x8,
	EarlyAccess = 0x9,
	FeaturedReleased = 0xA,
	ReleasedDate = 0xB
};

enum class ECFCoreMakrupType:unsigned char
{
	PlaceHolderDoNotUse = 0x0,
	WysiwygHtml = 0x1,
	PlainText = 0x2,
	BBCode = 0x3,
	Creole = 0x4,
	Markdown = 0x5,
	RawHtml = 0x6,
	StandardBBCode = 0x8,
	RawCSS = 0x9
};

enum class ECFCoreChangelogMarkupType:unsigned char
{
	PlaceHolderDoNotUse = 0x0,
	Text = 0x1,
	HTML = 0x2,
	Markdown = 0x3
};

enum class ECFCoreFileReleaseType:unsigned char
{
	None = 0x0,
	Release = 0x1,
	Beta = 0x2,
	Alpha = 0x3
};

enum class ECFCoreErrorCodes:unsigned char
{
	None = 0x0,
	ApiError = 0x1,
	FileSystemError = 0x2,
	FailedToInitialize = 0x3,
	AlreadyInitialized = 0x4,
	NotImplemented = 0x5,
	InvalidModParams = 0x6,
	InstalledModNotFound = 0x7,
	InstallCancelled = 0x8,
	DownloadCancelled = 0x9,
	UploadCancelled = 0xA,
	MissingModsDirectory = 0xB,
	MissingModsDirectoryMode = 0xC,
	MissingUserDataDirectory = 0xD,
	FailedToLoadModsStateFromDisk = 0xE,
	FailedToSaveModsStateToDisk = 0xF,
	MissingLatestFileInformation = 0x10,
	MissingFileInformation = 0x11,
	FileNotBelongingToMod = 0x12,
	NoPlatformFilesMatched = 0x13,
	MissingInstalledMods = 0x14,
	DetectedUnavailableMod = 0x15,
	ModAlreadyBeingInstalled = 0x16,
	FailedToDownloadFile = 0x17,
	DownloadedFileHasInvalidHash = 0x18,
	FailedDeletingOutputDirectory = 0x19,
	FailedDeletingOutputFile = 0x1A,
	FailedToUnzip = 0x1B,
	FailedToMoveModDirectory = 0x1C,
	FailedSettingAuthToken = 0x1D,
	UserNotAuthenticated = 0x1E,
	FailedToCancelAction = 0x1F,
	MissingParameter = 0x20
};

enum class EMaterialCommonBasis:int
{
	MCB_Tangent = 0x0,
	MCB_Local = 0x1,
	MCB_TranslatedWorld = 0x2,
	MCB_World = 0x3,
	MCB_View = 0x4,
	MCB_Camera = 0x5,
	MCB_MeshParticle = 0x6,
	MCB_Instance = 0x7,
	MCB_RefPose = 0x8,
	MCB_MAX = 0x9
};

enum class ECFCoreStatus:unsigned char
{
	None = 0x0,
	Draft = 0x1,
	Test = 0x2,
	PendingReview = 0x3,
	Rejected = 0x4,
	Approved = 0x5,
	Live = 0x6
};

enum class ECFCoreApiStatus:unsigned char
{
	None = 0x0,
	Private = 0x1,
	Public = 0x2
};

enum class ECFCoreHashAlgo:unsigned char
{
	None = 0x0,
	Sha1 = 0x1,
	Md5 = 0x2
};

enum class ECFCoreFileRelationType:unsigned char
{
	None = 0x0,
	EmbeddedLibrary = 0x1,
	OptionalDependency = 0x2,
	RequiredDependency = 0x3,
	Tool = 0x4,
	Incompatible = 0x5,
	Include = 0x6
};

enum class ECFCoreFileStatus:unsigned char
{
	None = 0x0,
	Processing = 0x1,
	ChangesRequired = 0x2,
	UnderReview = 0x3,
	Approved = 0x4,
	Rejected = 0x5,
	MalwareDetected = 0x6,
	Deleted = 0x7,
	Archived = 0x8,
	Testing = 0x9,
	Released = 0xA,
	ReadyForReview = 0xB,
	Deprecated = 0xC,
	Baking = 0xD,
	AwaitingPublishing = 0xE,
	FailedPublishing = 0xF
};

namespace ENodeTitleType
{
	enum Type:int
	{
		FullTitle = 0x0,
		ListView = 0x1,
		EditableTitle = 0x2,
		MenuTitle = 0x3,
		MAX_TitleTypes = 0x4
	};
}

enum class ECFCoreModStatus:unsigned char
{
	None = 0x0,
	New = 0x1,
	ChangesRequired = 0x2,
	UnderSoftReview = 0x3,
	Approved = 0x4,
	Rejected = 0x5,
	ChangesMade = 0x6,
	Inactive = 0x7,
	Abandoned = 0x8,
	Deleted = 0x9,
	UnderReview = 0xA
};

namespace ESplineMeshAxis
{
	enum Type:int
	{
		X = 0x0,
		Y = 0x1,
		Z = 0x2
	};
}

enum class EMeshVertexChangeComponents:unsigned char
{
	None = 0x0,
	VertexPositions = 0x1,
	VertexColors = 0x2,
	OverlayNormals = 0x10
};

enum class ECFCorePlatform:unsigned char
{
	None = 0x0,
	Windows = 0x1,
	XboxOne = 0x2,
	XboxXS = 0x3,
	Linux = 0x4,
	PS4 = 0x5,
	PS5 = 0x6,
	Mac = 0x7,
	IOS = 0x8,
	TVOS = 0x9,
	Android = 0xA,
	Switch = 0xB,
	WindowsServer = 0xC,
	LinuxServer = 0xD
};

enum class EInstalledModStatus:unsigned char
{
	Pending = 0x0,
	OutOfDate = 0x1,
	Normal = 0x2,
	Invalid = 0x3,
	WorkingCopy = 0x4,
	Uploading = 0x5,
	Modified = 0x6,
	Uninstalled = 0x7
};

enum class ELibraryProgressState:unsigned char
{
	Pending = 0x0,
	Downloading = 0x1,
	Uploading = 0x2,
	Validating = 0x3,
	PendingUnzipping = 0x4,
	Unzipping = 0x5,
	PendingZipping = 0x6,
	Zipping = 0x7,
	Copying = 0x8,
	CleaningUp = 0x9,
	Cancelling = 0xA,
	SuccessfullyCompleted = 0xB,
	FailedToComplete = 0xC
};

enum class EModsUpdateProgressState:unsigned char
{
	Validating = 0x0,
	Installing = 0x1,
	SuccessfullyCompleted = 0x2,
	FailedToComplete = 0x3
};

enum class EHierarchicalSimplificationMethod:unsigned char
{
	None = 0x0,
	Merge = 0x1,
	Simplify = 0x2,
	Approximate = 0x3
};

enum class EClearBinding:int
{
	ENoneBound = 0x0,
	EColorBound = 0x1,
	EDepthStencilBound = 0x2
};

enum class EGeometryScriptIndexType:unsigned char
{
	Any = 0x0,
	Triangle = 0x1,
	Vertex = 0x2,
	MaterialID = 0x3,
	PolygroupID = 0x4
};

enum class EGeometryScriptDebugMessageType:unsigned char
{
	ErrorMessage = 0x0,
	WarningMessage = 0x1
};

enum class EGeometryScriptErrorType:unsigned char
{
	NoError = 0x0,
	UnknownError = 0x1,
	InvalidInputs = 0x2,
	OperationFailed = 0x3
};

enum class EGeometryScriptOutcomePins:unsigned char
{
	Failure = 0x0,
	Success = 0x1
};

enum class EGeometryScriptSearchOutcomePins:unsigned char
{
	Found = 0x0,
	NotFound = 0x1
};

enum class EGeometryScriptContainmentOutcomePins:unsigned char
{
	Inside = 0x0,
	Outside = 0x1
};

enum class EGeometryScriptLODType:unsigned char
{
	MaxAvailable = 0x0,
	HiResSourceModel = 0x1,
	SourceModel = 0x2,
	RenderData = 0x3
};

enum class EGeometryScriptAxis:unsigned char
{
	X = 0x0,
	Y = 0x1,
	Z = 0x2
};

namespace FUE5PrivateFrostyStreamObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		HLODBatchingPolicy = 0x1,
		SerializeSceneComponentStaticBounds = 0x2,
		ChaosClothAddTethersToCachedData = 0x3,
		SerializeActorLabelInCookedBuilds = 0x4,
		ConvertWorldPartitionHLODsCellsToName = 0x5,
		ChaosClothRemoveKinematicTethers = 0x6,
		SerializeSkeletalMeshMorphTargetRenderData = 0x7,
		StripMorphTargetSourceDataForCookedBuilds = 0x8,
		VersionPlusOne = 0x9,
		LatestVersion = 0x8
	};
}

enum class EMonoChannelUpmixMethod:signed char
{
	Linear = 0x0,
	EqualPower = 0x1,
	FullVolume = 0x2
};

enum class EVirtualStackAllocatorDecommitMode:unsigned char
{
	AllOnDestruction = 0x0,
	AllOnStackEmpty = 0x1,
	ExcessOnStackEmpty = 0x2,
	NumModes = 0x3
};

enum class EDynamicMeshChangeType:unsigned char
{
	GeneralEdit = 0x0,
	MeshChange = 0x1,
	MeshReplacementChange = 0x2,
	MeshVertexChange = 0x3,
	DeformationEdit = 0x4,
	AttributeEdit = 0x5
};

enum class EDynamicMeshAttributeChangeFlags:unsigned char
{
	Unknown = 0x0,
	MeshTopology = 0x1,
	VertexPositions = 0x2,
	NormalsTangents = 0x4,
	VertexColors = 0x8,
	UVs = 0x10,
	TriangleGroups = 0x20
};

enum class EGeometryScriptCollisionGenerationMethod:unsigned char
{
	AlignedBoxes = 0x0,
	OrientedBoxes = 0x1,
	MinimalSpheres = 0x2,
	Capsules = 0x3,
	ConvexHulls = 0x4,
	SweptHulls = 0x5,
	MinVolumeShapes = 0x6
};

enum class EGeometryScriptSweptHullAxis:unsigned char
{
	X = 0x0,
	Y = 0x1,
	Z = 0x2,
	SmallestBoxDimension = 0x3,
	SmallestVolume = 0x4
};

enum class EDynamicMeshComponentRenderUpdateMode:int
{
	NoUpdate = 0x0,
	FullUpdate = 0x1,
	FastUpdate = 0x2
};

enum class EMeshRenderAttributeFlags:unsigned char
{
	None = 0x0,
	Positions = 0x1,
	VertexColors = 0x2,
	VertexNormals = 0x4,
	VertexUVs = 0x8,
	SecondaryIndexBuffers = 0x10,
	AllVertexAttribs = 0xF
};

enum class EDynamicMeshComponentTangentsMode:unsigned char
{
	NoTangents = 0x0,
	AutoCalculated = 0x1,
	ExternallyProvided = 0x2
};

enum class EChatMemberStateChange:int
{
	k_EChatMemberStateChangeEntered = 0x1,
	k_EChatMemberStateChangeLeft = 0x2,
	k_EChatMemberStateChangeDisconnected = 0x4,
	k_EChatMemberStateChangeKicked = 0x8,
	k_EChatMemberStateChangeBanned = 0x10
};

enum class EMatchMakingServerResponse:int
{
	eServerResponded = 0x0,
	eServerFailedToRespond = 0x1,
	eNoServersListedOnMasterServer = 0x2
};

enum class EP2PSessionError:int
{
	k_EP2PSessionErrorNone = 0x0,
	k_EP2PSessionErrorNoRightsToApp = 0x2,
	k_EP2PSessionErrorTimeout = 0x4,
	k_EP2PSessionErrorNotRunningApp_DELETED = 0x1,
	k_EP2PSessionErrorDestinationNotLoggedIn_DELETED = 0x3,
	k_EP2PSessionErrorMax = 0x5
};

enum class EVoiceResult:int
{
	k_EVoiceResultOK = 0x0,
	k_EVoiceResultNotInitialized = 0x1,
	k_EVoiceResultNotRecording = 0x2,
	k_EVoiceResultNoData = 0x3,
	k_EVoiceResultBufferTooSmall = 0x4,
	k_EVoiceResultDataCorrupted = 0x5,
	k_EVoiceResultRestricted = 0x6,
	k_EVoiceResultUnsupportedCodec = 0x7,
	k_EVoiceResultReceiverOutOfDate = 0x8,
	k_EVoiceResultReceiverDidNotAnswer = 0x9
};

enum class EResult:int
{
	k_EResultNone = 0x0,
	k_EResultOK = 0x1,
	k_EResultFail = 0x2,
	k_EResultNoConnection = 0x3,
	k_EResultInvalidPassword = 0x5,
	k_EResultLoggedInElsewhere = 0x6,
	k_EResultInvalidProtocolVer = 0x7,
	k_EResultInvalidParam = 0x8,
	k_EResultFileNotFound = 0x9,
	k_EResultBusy = 0xA,
	k_EResultInvalidState = 0xB,
	k_EResultInvalidName = 0xC,
	k_EResultInvalidEmail = 0xD,
	k_EResultDuplicateName = 0xE,
	k_EResultAccessDenied = 0xF,
	k_EResultTimeout = 0x10,
	k_EResultBanned = 0x11,
	k_EResultAccountNotFound = 0x12,
	k_EResultInvalidSteamID = 0x13,
	k_EResultServiceUnavailable = 0x14,
	k_EResultNotLoggedOn = 0x15,
	k_EResultPending = 0x16,
	k_EResultEncryptionFailure = 0x17,
	k_EResultInsufficientPrivilege = 0x18,
	k_EResultLimitExceeded = 0x19,
	k_EResultRevoked = 0x1A,
	k_EResultExpired = 0x1B,
	k_EResultAlreadyRedeemed = 0x1C,
	k_EResultDuplicateRequest = 0x1D,
	k_EResultAlreadyOwned = 0x1E,
	k_EResultIPNotFound = 0x1F,
	k_EResultPersistFailed = 0x20,
	k_EResultLockingFailed = 0x21,
	k_EResultLogonSessionReplaced = 0x22,
	k_EResultConnectFailed = 0x23,
	k_EResultHandshakeFailed = 0x24,
	k_EResultIOFailure = 0x25,
	k_EResultRemoteDisconnect = 0x26,
	k_EResultShoppingCartNotFound = 0x27,
	k_EResultBlocked = 0x28,
	k_EResultIgnored = 0x29,
	k_EResultNoMatch = 0x2A,
	k_EResultAccountDisabled = 0x2B,
	k_EResultServiceReadOnly = 0x2C,
	k_EResultAccountNotFeatured = 0x2D,
	k_EResultAdministratorOK = 0x2E,
	k_EResultContentVersion = 0x2F,
	k_EResultTryAnotherCM = 0x30,
	k_EResultPasswordRequiredToKickSession = 0x31,
	k_EResultAlreadyLoggedInElsewhere = 0x32,
	k_EResultSuspended = 0x33,
	k_EResultCancelled = 0x34,
	k_EResultDataCorruption = 0x35,
	k_EResultDiskFull = 0x36,
	k_EResultRemoteCallFailed = 0x37,
	k_EResultPasswordUnset = 0x38,
	k_EResultExternalAccountUnlinked = 0x39,
	k_EResultPSNTicketInvalid = 0x3A,
	k_EResultExternalAccountAlreadyLinked = 0x3B,
	k_EResultRemoteFileConflict = 0x3C,
	k_EResultIllegalPassword = 0x3D,
	k_EResultSameAsPreviousValue = 0x3E,
	k_EResultAccountLogonDenied = 0x3F,
	k_EResultCannotUseOldPassword = 0x40,
	k_EResultInvalidLoginAuthCode = 0x41,
	k_EResultAccountLogonDeniedNoMail = 0x42,
	k_EResultHardwareNotCapableOfIPT = 0x43,
	k_EResultIPTInitError = 0x44,
	k_EResultParentalControlRestricted = 0x45,
	k_EResultFacebookQueryError = 0x46,
	k_EResultExpiredLoginAuthCode = 0x47,
	k_EResultIPLoginRestrictionFailed = 0x48,
	k_EResultAccountLockedDown = 0x49,
	k_EResultAccountLogonDeniedVerifiedEmailRequired = 0x4A,
	k_EResultNoMatchingURL = 0x4B,
	k_EResultBadResponse = 0x4C,
	k_EResultRequirePasswordReEntry = 0x4D,
	k_EResultValueOutOfRange = 0x4E,
	k_EResultUnexpectedError = 0x4F,
	k_EResultDisabled = 0x50,
	k_EResultInvalidCEGSubmission = 0x51,
	k_EResultRestrictedDevice = 0x52,
	k_EResultRegionLocked = 0x53,
	k_EResultRateLimitExceeded = 0x54,
	k_EResultAccountLoginDeniedNeedTwoFactor = 0x55,
	k_EResultItemDeleted = 0x56,
	k_EResultAccountLoginDeniedThrottle = 0x57,
	k_EResultTwoFactorCodeMismatch = 0x58,
	k_EResultTwoFactorActivationCodeMismatch = 0x59,
	k_EResultAccountAssociatedToMultiplePartners = 0x5A,
	k_EResultNotModified = 0x5B,
	k_EResultNoMobileDevice = 0x5C,
	k_EResultTimeNotSynced = 0x5D,
	k_EResultSmsCodeFailed = 0x5E,
	k_EResultAccountLimitExceeded = 0x5F,
	k_EResultAccountActivityLimitExceeded = 0x60,
	k_EResultPhoneActivityLimitExceeded = 0x61,
	k_EResultRefundToWallet = 0x62,
	k_EResultEmailSendFailure = 0x63,
	k_EResultNotSettled = 0x64,
	k_EResultNeedCaptcha = 0x65,
	k_EResultGSLTDenied = 0x66,
	k_EResultGSOwnerDenied = 0x67,
	k_EResultInvalidItemType = 0x68,
	k_EResultIPBanned = 0x69,
	k_EResultGSLTExpired = 0x6A,
	k_EResultInsufficientFunds = 0x6B,
	k_EResultTooManyPending = 0x6C,
	k_EResultNoSiteLicensesFound = 0x6D,
	k_EResultWGNetworkSendExceeded = 0x6E,
	k_EResultAccountNotFriends = 0x6F,
	k_EResultLimitedUserAccount = 0x70,
	k_EResultCantRemoveItem = 0x71,
	k_EResultAccountDeleted = 0x72,
	k_EResultExistingUserCancelledLicense = 0x73,
	k_EResultCommunityCooldown = 0x74,
	k_EResultNoLauncherSpecified = 0x75,
	k_EResultMustAgreeToSSA = 0x76,
	k_EResultLauncherMigrated = 0x77,
	k_EResultSteamRealmMismatch = 0x78,
	k_EResultInvalidSignature = 0x79,
	k_EResultParseFailure = 0x7A,
	k_EResultNoVerifiedPhone = 0x7B
};

enum class EChatRoomEnterResponse:int
{
	k_EChatRoomEnterResponseSuccess = 0x1,
	k_EChatRoomEnterResponseDoesntExist = 0x2,
	k_EChatRoomEnterResponseNotAllowed = 0x3,
	k_EChatRoomEnterResponseFull = 0x4,
	k_EChatRoomEnterResponseError = 0x5,
	k_EChatRoomEnterResponseBanned = 0x6,
	k_EChatRoomEnterResponseLimited = 0x7,
	k_EChatRoomEnterResponseClanDisabled = 0x8,
	k_EChatRoomEnterResponseCommunityBan = 0x9,
	k_EChatRoomEnterResponseMemberBlockedYou = 0xA,
	k_EChatRoomEnterResponseYouBlockedMember = 0xB,
	k_EChatRoomEnterResponseRatelimitExceeded = 0xF
};

enum class EP2PSend:int
{
	k_EP2PSendUnreliable = 0x0,
	k_EP2PSendUnreliableNoDelay = 0x1,
	k_EP2PSendReliable = 0x2,
	k_EP2PSendReliableWithBuffering = 0x3
};

enum class EUGCReadAction:int
{
	k_EUGCRead_ContinueReadingUntilFinished = 0x0,
	k_EUGCRead_ContinueReading = 0x1,
	k_EUGCRead_Close = 0x2
};

enum class EUniverse:int
{
	k_EUniverseInvalid = 0x0,
	k_EUniversePublic = 0x1,
	k_EUniverseBeta = 0x2,
	k_EUniverseInternal = 0x3,
	k_EUniverseDev = 0x4,
	k_EUniverseMax = 0x5
};

enum class ELobbyDistanceFilter:int
{
	k_ELobbyDistanceFilterClose = 0x0,
	k_ELobbyDistanceFilterDefault = 0x1,
	k_ELobbyDistanceFilterFar = 0x2,
	k_ELobbyDistanceFilterWorldwide = 0x3
};

enum class ELobbyComparison:int
{
	k_ELobbyComparisonEqualToOrLessThan = 0xFE,
	k_ELobbyComparisonLessThan = 0xFF,
	k_ELobbyComparisonEqual = 0x0,
	k_ELobbyComparisonGreaterThan = 0x1,
	k_ELobbyComparisonEqualToOrGreaterThan = 0x2,
	k_ELobbyComparisonNotEqual = 0x3
};

enum class ELobbyType:int
{
	k_ELobbyTypePrivate = 0x0,
	k_ELobbyTypeFriendsOnly = 0x1,
	k_ELobbyTypePublic = 0x2,
	k_ELobbyTypeInvisible = 0x3,
	k_ELobbyTypePrivateUnique = 0x4
};

enum class ELeaderboardUploadScoreMethod:int
{
	k_ELeaderboardUploadScoreMethodNone = 0x0,
	k_ELeaderboardUploadScoreMethodKeepBest = 0x1,
	k_ELeaderboardUploadScoreMethodForceUpdate = 0x2
};

enum class EPersonaState:int
{
	k_EPersonaStateOffline = 0x0,
	k_EPersonaStateOnline = 0x1,
	k_EPersonaStateBusy = 0x2,
	k_EPersonaStateAway = 0x3,
	k_EPersonaStateSnooze = 0x4,
	k_EPersonaStateLookingToTrade = 0x5,
	k_EPersonaStateLookingToPlay = 0x6,
	k_EPersonaStateInvisible = 0x7,
	k_EPersonaStateMax = 0x8
};

enum class ELeaderboardDataRequest:int
{
	k_ELeaderboardDataRequestGlobal = 0x0,
	k_ELeaderboardDataRequestGlobalAroundUser = 0x1,
	k_ELeaderboardDataRequestFriends = 0x2,
	k_ELeaderboardDataRequestUsers = 0x3
};

enum class ELeaderboardSortMethod:int
{
	k_ELeaderboardSortMethodNone = 0x0,
	k_ELeaderboardSortMethodAscending = 0x1,
	k_ELeaderboardSortMethodDescending = 0x2
};

enum class ELeaderboardDisplayType:int
{
	k_ELeaderboardDisplayTypeNone = 0x0,
	k_ELeaderboardDisplayTypeNumeric = 0x1,
	k_ELeaderboardDisplayTypeTimeSeconds = 0x2,
	k_ELeaderboardDisplayTypeTimeMilliSeconds = 0x3
};

enum class EFriendRelationship:int
{
	k_EFriendRelationshipNone = 0x0,
	k_EFriendRelationshipBlocked = 0x1,
	k_EFriendRelationshipRequestRecipient = 0x2,
	k_EFriendRelationshipFriend = 0x3,
	k_EFriendRelationshipRequestInitiator = 0x4,
	k_EFriendRelationshipIgnored = 0x5,
	k_EFriendRelationshipIgnoredFriend = 0x6,
	k_EFriendRelationshipSuggested_DEPRECATED = 0x7,
	k_EFriendRelationshipMax = 0x8
};

enum class EFriendFlags:unsigned __int64
{
	k_EFriendFlagNone = 0x0,
	k_EFriendFlagBlocked = 0x1,
	k_EFriendFlagFriendshipRequested = 0x2,
	k_EFriendFlagImmediate = 0x4,
	k_EFriendFlagClanMember = 0x8,
	k_EFriendFlagOnGameServer = 0x10,
	k_EFriendFlagRequestingFriendship = 0x80,
	k_EFriendFlagRequestingInfo = 0x100,
	k_EFriendFlagIgnored = 0x200,
	k_EFriendFlagIgnoredFriend = 0x400,
	k_EFriendFlagChatMember = 0x1000,
	k_EFriendFlagAll = 0xFFFFFFFF
};

enum class EOverlayToStoreFlag:int
{
	k_EOverlayToStoreFlag_None = 0x0,
	k_EOverlayToStoreFlag_AddToCart = 0x1,
	k_EOverlayToStoreFlag_AddToCartAndShow = 0x2
};

enum class EAuthSessionResponse:int
{
	k_EAuthSessionResponseOK = 0x0,
	k_EAuthSessionResponseUserNotConnectedToSteam = 0x1,
	k_EAuthSessionResponseNoLicenseOrExpired = 0x2,
	k_EAuthSessionResponseVACBanned = 0x3,
	k_EAuthSessionResponseLoggedInElseWhere = 0x4,
	k_EAuthSessionResponseVACCheckTimedOut = 0x5,
	k_EAuthSessionResponseAuthTicketCanceled = 0x6,
	k_EAuthSessionResponseAuthTicketInvalidAlreadyUsed = 0x7,
	k_EAuthSessionResponseAuthTicketInvalid = 0x8,
	k_EAuthSessionResponsePublisherIssuedBan = 0x9
};

enum class EBeginAuthSessionResult:int
{
	k_EBeginAuthSessionResultOK = 0x0,
	k_EBeginAuthSessionResultInvalidTicket = 0x1,
	k_EBeginAuthSessionResultDuplicateRequest = 0x2,
	k_EBeginAuthSessionResultInvalidVersion = 0x3,
	k_EBeginAuthSessionResultGameMismatch = 0x4,
	k_EBeginAuthSessionResultExpiredTicket = 0x5
};

enum class EPersonaChange:int
{
	k_EPersonaChangeName = 0x1,
	k_EPersonaChangeStatus = 0x2,
	k_EPersonaChangeComeOnline = 0x4,
	k_EPersonaChangeGoneOffline = 0x8,
	k_EPersonaChangeGamePlayed = 0x10,
	k_EPersonaChangeGameServer = 0x20,
	k_EPersonaChangeAvatar = 0x40,
	k_EPersonaChangeJoinedSource = 0x80,
	k_EPersonaChangeLeftSource = 0x100,
	k_EPersonaChangeRelationshipChanged = 0x200,
	k_EPersonaChangeNameFirstSet = 0x400,
	k_EPersonaChangeBroadcast = 0x800,
	k_EPersonaChangeNickname = 0x1000,
	k_EPersonaChangeSteamLevel = 0x2000,
	k_EPersonaChangeRichPresence = 0x4000
};

enum class ESteamNetworkingConfigValue:int
{
	k_ESteamNetworkingConfig_Invalid = 0x0,
	k_ESteamNetworkingConfig_TimeoutInitial = 0x18,
	k_ESteamNetworkingConfig_TimeoutConnected = 0x19,
	k_ESteamNetworkingConfig_SendBufferSize = 0x9,
	k_ESteamNetworkingConfig_ConnectionUserData = 0x28,
	k_ESteamNetworkingConfig_SendRateMin = 0xA,
	k_ESteamNetworkingConfig_SendRateMax = 0xB,
	k_ESteamNetworkingConfig_NagleTime = 0xC,
	k_ESteamNetworkingConfig_IP_AllowWithoutAuth = 0x17,
	k_ESteamNetworkingConfig_MTU_PacketSize = 0x20,
	k_ESteamNetworkingConfig_MTU_DataSize = 0x21,
	k_ESteamNetworkingConfig_Unencrypted = 0x22,
	k_ESteamNetworkingConfig_SymmetricConnect = 0x25,
	k_ESteamNetworkingConfig_LocalVirtualPort = 0x26,
	k_ESteamNetworkingConfig_DualWifi_Enable = 0x27,
	k_ESteamNetworkingConfig_EnableDiagnosticsUI = 0x2E,
	k_ESteamNetworkingConfig_FakePacketLoss_Send = 0x2,
	k_ESteamNetworkingConfig_FakePacketLoss_Recv = 0x3,
	k_ESteamNetworkingConfig_FakePacketLag_Send = 0x4,
	k_ESteamNetworkingConfig_FakePacketLag_Recv = 0x5,
	k_ESteamNetworkingConfig_FakePacketReorder_Send = 0x6,
	k_ESteamNetworkingConfig_FakePacketReorder_Recv = 0x7,
	k_ESteamNetworkingConfig_FakePacketReorder_Time = 0x8,
	k_ESteamNetworkingConfig_FakePacketDup_Send = 0x1A,
	k_ESteamNetworkingConfig_FakePacketDup_Recv = 0x1B,
	k_ESteamNetworkingConfig_FakePacketDup_TimeMax = 0x1C,
	k_ESteamNetworkingConfig_PacketTraceMaxBytes = 0x29,
	k_ESteamNetworkingConfig_FakeRateLimit_Send_Rate = 0x2A,
	k_ESteamNetworkingConfig_FakeRateLimit_Send_Burst = 0x2B,
	k_ESteamNetworkingConfig_FakeRateLimit_Recv_Rate = 0x2C,
	k_ESteamNetworkingConfig_FakeRateLimit_Recv_Burst = 0x2D,
	k_ESteamNetworkingConfig_Callback_ConnectionStatusChanged = 0xC9,
	k_ESteamNetworkingConfig_Callback_AuthStatusChanged = 0xCA,
	k_ESteamNetworkingConfig_Callback_RelayNetworkStatusChanged = 0xCB,
	k_ESteamNetworkingConfig_Callback_MessagesSessionRequest = 0xCC,
	k_ESteamNetworkingConfig_Callback_MessagesSessionFailed = 0xCD,
	k_ESteamNetworkingConfig_Callback_CreateConnectionSignaling = 0xCE,
	k_ESteamNetworkingConfig_Callback_FakeIPResult = 0xCF,
	k_ESteamNetworkingConfig_P2P_STUN_ServerList = 0x67,
	k_ESteamNetworkingConfig_P2P_Transport_ICE_Enable = 0x68,
	k_ESteamNetworkingConfig_P2P_Transport_ICE_Penalty = 0x69,
	k_ESteamNetworkingConfig_P2P_Transport_SDR_Penalty = 0x6A,
	k_ESteamNetworkingConfig_SDRClient_ConsecutitivePingTimeoutsFailInitial = 0x13,
	k_ESteamNetworkingConfig_SDRClient_ConsecutitivePingTimeoutsFail = 0x14,
	k_ESteamNetworkingConfig_SDRClient_MinPingsBeforePingAccurate = 0x15,
	k_ESteamNetworkingConfig_SDRClient_SingleSocket = 0x16,
	k_ESteamNetworkingConfig_SDRClient_ForceRelayCluster = 0x1D,
	k_ESteamNetworkingConfig_SDRClient_DebugTicketAddress = 0x1E,
	k_ESteamNetworkingConfig_SDRClient_ForceProxyAddr = 0x1F,
	k_ESteamNetworkingConfig_SDRClient_FakeClusterPing = 0x24,
	k_ESteamNetworkingConfig_LogLevel_AckRTT = 0xD,
	k_ESteamNetworkingConfig_LogLevel_PacketDecode = 0xE,
	k_ESteamNetworkingConfig_LogLevel_Message = 0xF,
	k_ESteamNetworkingConfig_LogLevel_PacketGaps = 0x10,
	k_ESteamNetworkingConfig_LogLevel_P2PRendezvous = 0x11,
	k_ESteamNetworkingConfig_LogLevel_SDRRelayPings = 0x12,
	k_ESteamNetworkingConfig_DELETED_EnumerateDevVars = 0x23,
	k_ESteamNetworkingConfigValue__Force32Bit = 0x7FFFFFFF
};

enum class ENetSyncLoadType:int
{
	Unknown = 0x0,
	PropertyReference = 0x1,
	ActorSpawn = 0x2
};

enum class ESteamNetworkingConfigScope:int
{
	k_ESteamNetworkingConfig_Global = 0x1,
	k_ESteamNetworkingConfig_SocketsInterface = 0x2,
	k_ESteamNetworkingConfig_ListenSocket = 0x3,
	k_ESteamNetworkingConfig_Connection = 0x4,
	k_ESteamNetworkingConfigScope__Force32Bit = 0x7FFFFFFF
};

namespace ESteamSession
{
	enum Type:int
	{
		None = 0x0,
		LobbySession = 0x1,
		AdvertisedSessionHost = 0x2,
		AdvertisedSessionClient = 0x3,
		LANSession = 0x4
	};
}

enum class ESteamNetworkingConfigDataType:int
{
	k_ESteamNetworkingConfig_Int32 = 0x1,
	k_ESteamNetworkingConfig_Int64 = 0x2,
	k_ESteamNetworkingConfig_Float = 0x3,
	k_ESteamNetworkingConfig_String = 0x4,
	k_ESteamNetworkingConfig_Ptr = 0x5,
	k_ESteamNetworkingConfigDataType__Force32Bit = 0x7FFFFFFF
};

enum class ESteamNetworkingIdentityType:int
{
	k_ESteamNetworkingIdentityType_Invalid = 0x0,
	k_ESteamNetworkingIdentityType_SteamID = 0x10,
	k_ESteamNetworkingIdentityType_IPAddress = 0x1,
	k_ESteamNetworkingIdentityType_GenericString = 0x2,
	k_ESteamNetworkingIdentityType_GenericBytes = 0x3,
	k_ESteamNetworkingIdentityType_UnknownType = 0x4,
	k_ESteamNetworkingIdentityType__Force32bit = 0x7FFFFFFF
};

enum class ESteamNetworkingFakeIPType:int
{
	k_ESteamNetworkingFakeIPType_Invalid = 0x0,
	k_ESteamNetworkingFakeIPType_NotFake = 0x1,
	k_ESteamNetworkingFakeIPType_GlobalIPv4 = 0x2,
	k_ESteamNetworkingFakeIPType_LocalIPv4 = 0x3,
	k_ESteamNetworkingFakeIPType__Force32Bit = 0x7FFFFFFF
};

enum class ESteamNetConnectionEnd:int
{
	k_ESteamNetConnectionEnd_Invalid = 0x0,
	k_ESteamNetConnectionEnd_App_Min = 0x3E8,
	k_ESteamNetConnectionEnd_App_Generic = 0x3E8,
	k_ESteamNetConnectionEnd_App_Max = 0x7CF,
	k_ESteamNetConnectionEnd_AppException_Min = 0x7D0,
	k_ESteamNetConnectionEnd_AppException_Generic = 0x7D0,
	k_ESteamNetConnectionEnd_AppException_Max = 0xBB7,
	k_ESteamNetConnectionEnd_Local_Min = 0xBB8,
	k_ESteamNetConnectionEnd_Local_OfflineMode = 0xBB9,
	k_ESteamNetConnectionEnd_Local_ManyRelayConnectivity = 0xBBA,
	k_ESteamNetConnectionEnd_Local_HostedServerPrimaryRelay = 0xBBB,
	k_ESteamNetConnectionEnd_Local_NetworkConfig = 0xBBC,
	k_ESteamNetConnectionEnd_Local_Rights = 0xBBD,
	k_ESteamNetConnectionEnd_Local_P2P_ICE_NoPublicAddresses = 0xBBE,
	k_ESteamNetConnectionEnd_Local_Max = 0xF9F,
	k_ESteamNetConnectionEnd_Remote_Min = 0xFA0,
	k_ESteamNetConnectionEnd_Remote_Timeout = 0xFA1,
	k_ESteamNetConnectionEnd_Remote_BadCrypt = 0xFA2,
	k_ESteamNetConnectionEnd_Remote_BadCert = 0xFA3,
	k_ESteamNetConnectionEnd_Remote_BadProtocolVersion = 0xFA6,
	k_ESteamNetConnectionEnd_Remote_P2P_ICE_NoPublicAddresses = 0xFA7,
	k_ESteamNetConnectionEnd_Remote_Max = 0x1387,
	k_ESteamNetConnectionEnd_Misc_Min = 0x1388,
	k_ESteamNetConnectionEnd_Misc_Generic = 0x1389,
	k_ESteamNetConnectionEnd_Misc_InternalError = 0x138A,
	k_ESteamNetConnectionEnd_Misc_Timeout = 0x138B,
	k_ESteamNetConnectionEnd_Misc_SteamConnectivity = 0x138D,
	k_ESteamNetConnectionEnd_Misc_NoRelaySessionsToClient = 0x138E,
	k_ESteamNetConnectionEnd_Misc_P2P_Rendezvous = 0x1390,
	k_ESteamNetConnectionEnd_Misc_P2P_NAT_Firewall = 0x1391,
	k_ESteamNetConnectionEnd_Misc_PeerSentNoConnection = 0x1392,
	k_ESteamNetConnectionEnd_Misc_Max = 0x176F,
	k_ESteamNetConnectionEnd__Force32Bit = 0x7FFFFFFF
};

enum class ESteamControllerPad:int
{
	k_ESteamControllerPad_Left = 0x0,
	k_ESteamControllerPad_Right = 0x1
};

enum class EActivateGameOverlayToWebPageMode:int
{
	k_EActivateGameOverlayToWebPageMode_Default = 0x0,
	k_EActivateGameOverlayToWebPageMode_Modal = 0x1
};

enum class EAccountType:int
{
	k_EAccountTypeInvalid = 0x0,
	k_EAccountTypeIndividual = 0x1,
	k_EAccountTypeMultiseat = 0x2,
	k_EAccountTypeGameServer = 0x3,
	k_EAccountTypeAnonGameServer = 0x4,
	k_EAccountTypePending = 0x5,
	k_EAccountTypeContentServer = 0x6,
	k_EAccountTypeClan = 0x7,
	k_EAccountTypeChat = 0x8,
	k_EAccountTypeConsoleUser = 0x9,
	k_EAccountTypeAnonUser = 0xA,
	k_EAccountTypeMax = 0xB
};

enum class EChatSteamIDInstanceFlags:int
{
	k_EChatAccountInstanceMask = 0xFFF,
	k_EChatInstanceFlagClan = 0x80000,
	k_EChatInstanceFlagLobby = 0x40000,
	k_EChatInstanceFlagMMSLobby = 0x20000
};

enum class ESteamIPType:int
{
	k_ESteamIPTypeIPv4 = 0x0,
	k_ESteamIPTypeIPv6 = 0x1
};

enum class ESecondaryScreenPercentageMethod:int
{
	NearestSpatialUpscale = 0x0,
	LowerPixelDensitySimulation = 0x1
};

enum class ESteamEncryptedAppTicketState:int
{
	None = 0x0,
	TicketRequested = 0x1,
	TicketAvailable = 0x2,
	TicketFailure = 0x3
};

enum class EAnimSubsystemEnumeration:int
{
	Stop = 0x0,
	Continue = 0x1
};

enum class EUserHasLicenseForAppResult:int
{
	k_EUserHasLicenseResultHasLicense = 0x0,
	k_EUserHasLicenseResultDoesNotHaveLicense = 0x1,
	k_EUserHasLicenseResultNoAuth = 0x2
};

enum class EDurationControlOnlineState:int
{
	k_EDurationControlOnlineState_Invalid = 0x0,
	k_EDurationControlOnlineState_Offline = 0x1,
	k_EDurationControlOnlineState_Online = 0x2,
	k_EDurationControlOnlineState_OnlineHighPri = 0x3
};

enum class EChatEntryType:int
{
	k_EChatEntryTypeInvalid = 0x0,
	k_EChatEntryTypeChatMsg = 0x1,
	k_EChatEntryTypeTyping = 0x2,
	k_EChatEntryTypeInviteGame = 0x3,
	k_EChatEntryTypeEmote = 0x4,
	k_EChatEntryTypeLeftConversation = 0x6,
	k_EChatEntryTypeEntered = 0x7,
	k_EChatEntryTypeWasKicked = 0x8,
	k_EChatEntryTypeWasBanned = 0x9,
	k_EChatEntryTypeDisconnected = 0xA,
	k_EChatEntryTypeHistoricalChat = 0xB,
	k_EChatEntryTypeLinkBlocked = 0xE
};

enum class ENotificationPosition:int
{
	k_EPositionTopLeft = 0x0,
	k_EPositionTopRight = 0x1,
	k_EPositionBottomLeft = 0x2,
	k_EPositionBottomRight = 0x3
};

enum class ESteamAPICallFailure:int
{
	k_ESteamAPICallFailureNone = 0xFF,
	k_ESteamAPICallFailureSteamGone = 0x0,
	k_ESteamAPICallFailureNetworkFailure = 0x1,
	k_ESteamAPICallFailureInvalidHandle = 0x2,
	k_ESteamAPICallFailureMismatchedCallback = 0x3
};

enum class EGamepadTextInputMode:int
{
	k_EGamepadTextInputModeNormal = 0x0,
	k_EGamepadTextInputModePassword = 0x1
};

enum class EGamepadTextInputLineMode:int
{
	k_EGamepadTextInputLineModeSingleLine = 0x0,
	k_EGamepadTextInputLineModeMultipleLines = 0x1
};

enum class ETextFilteringContext:int
{
	k_ETextFilteringContextUnknown = 0x0,
	k_ETextFilteringContextGameContent = 0x1,
	k_ETextFilteringContextChat = 0x2,
	k_ETextFilteringContextName = 0x3
};

enum class ESteamIPv6ConnectivityState:int
{
	k_ESteamIPv6ConnectivityState_Unknown = 0x0,
	k_ESteamIPv6ConnectivityState_Good = 0x1,
	k_ESteamIPv6ConnectivityState_Bad = 0x2
};

enum class ESteamIPv6ConnectivityProtocol:int
{
	k_ESteamIPv6ConnectivityProtocol_Invalid = 0x0,
	k_ESteamIPv6ConnectivityProtocol_HTTP = 0x1,
	k_ESteamIPv6ConnectivityProtocol_UDP = 0x2
};

enum class EFloatingGamepadTextInputMode:int
{
	k_EFloatingGamepadTextInputModeModeSingleLine = 0x0,
	k_EFloatingGamepadTextInputModeModeMultipleLines = 0x1,
	k_EFloatingGamepadTextInputModeModeEmail = 0x2,
	k_EFloatingGamepadTextInputModeModeNumeric = 0x3
};

enum class ECastToken:unsigned char
{
	CST_ObjectToInterface = 0x0,
	CST_ObjectToBool = 0x1,
	CST_InterfaceToBool = 0x2,
	CST_DoubleToFloat = 0x3,
	CST_FloatToDouble = 0x4,
	CST_Max = 0xFF
};

enum class EGameSearchErrorCode_t:int
{
	k_EGameSearchErrorCode_OK = 0x1,
	k_EGameSearchErrorCode_Failed_Search_Already_In_Progress = 0x2,
	k_EGameSearchErrorCode_Failed_No_Search_In_Progress = 0x3,
	k_EGameSearchErrorCode_Failed_Not_Lobby_Leader = 0x4,
	k_EGameSearchErrorCode_Failed_No_Host_Available = 0x5,
	k_EGameSearchErrorCode_Failed_Search_Params_Invalid = 0x6,
	k_EGameSearchErrorCode_Failed_Offline = 0x7,
	k_EGameSearchErrorCode_Failed_NotAuthorized = 0x8,
	k_EGameSearchErrorCode_Failed_Unknown_Error = 0x9
};

enum class EPlayerResult_t:int
{
	k_EPlayerResultFailedToConnect = 0x1,
	k_EPlayerResultAbandoned = 0x2,
	k_EPlayerResultKicked = 0x3,
	k_EPlayerResultIncomplete = 0x4,
	k_EPlayerResultCompleted = 0x5
};

enum class EGameDelegates_SaveGame:short
{
	MaxSize = 0x0,
	Icon = 0x1,
	Title = 0x2,
	SubTitle = 0x3,
	Detail = 0x4
};

enum class ESNetSocketConnectionType:int
{
	k_ESNetSocketConnectionTypeNotConnected = 0x0,
	k_ESNetSocketConnectionTypeUDP = 0x1,
	k_ESNetSocketConnectionTypeUDPRelay = 0x2
};

enum class ERemoteStoragePlatform:int
{
	k_ERemoteStoragePlatformNone = 0x0,
	k_ERemoteStoragePlatformWindows = 0x1,
	k_ERemoteStoragePlatformOSX = 0x2,
	k_ERemoteStoragePlatformPS3 = 0x4,
	k_ERemoteStoragePlatformLinux = 0x8,
	k_ERemoteStoragePlatformSwitch = 0x10,
	k_ERemoteStoragePlatformAndroid = 0x20,
	k_ERemoteStoragePlatformIOS = 0x40,
	k_ERemoteStoragePlatformAll = 0xFF
};

enum class ERemoteStoragePublishedFileVisibility:int
{
	k_ERemoteStoragePublishedFileVisibilityPublic = 0x0,
	k_ERemoteStoragePublishedFileVisibilityFriendsOnly = 0x1,
	k_ERemoteStoragePublishedFileVisibilityPrivate = 0x2,
	k_ERemoteStoragePublishedFileVisibilityUnlisted = 0x3
};

enum class EWorkshopFileType:int
{
	k_EWorkshopFileTypeFirst = 0x0,
	k_EWorkshopFileTypeCommunity = 0x0,
	k_EWorkshopFileTypeMicrotransaction = 0x1,
	k_EWorkshopFileTypeCollection = 0x2,
	k_EWorkshopFileTypeArt = 0x3,
	k_EWorkshopFileTypeVideo = 0x4,
	k_EWorkshopFileTypeScreenshot = 0x5,
	k_EWorkshopFileTypeGame = 0x6,
	k_EWorkshopFileTypeSoftware = 0x7,
	k_EWorkshopFileTypeConcept = 0x8,
	k_EWorkshopFileTypeWebGuide = 0x9,
	k_EWorkshopFileTypeIntegratedGuide = 0xA,
	k_EWorkshopFileTypeMerch = 0xB,
	k_EWorkshopFileTypeControllerBinding = 0xC,
	k_EWorkshopFileTypeSteamworksAccessInvite = 0xD,
	k_EWorkshopFileTypeSteamVideo = 0xE,
	k_EWorkshopFileTypeGameManagedItem = 0xF,
	k_EWorkshopFileTypeMax = 0x10
};

enum class EWorkshopVideoProvider:int
{
	k_EWorkshopVideoProviderNone = 0x0,
	k_EWorkshopVideoProviderYoutube = 0x1
};

enum class EWorkshopFileAction:int
{
	k_EWorkshopFileActionPlayed = 0x0,
	k_EWorkshopFileActionCompleted = 0x1
};

enum class EWorkshopEnumerationType:int
{
	k_EWorkshopEnumerationTypeRankedByVote = 0x0,
	k_EWorkshopEnumerationTypeRecent = 0x1,
	k_EWorkshopEnumerationTypeTrending = 0x2,
	k_EWorkshopEnumerationTypeFavoritesOfFriends = 0x3,
	k_EWorkshopEnumerationTypeVotedByFriends = 0x4,
	k_EWorkshopEnumerationTypeContentByFriends = 0x5,
	k_EWorkshopEnumerationTypeRecentFromFollowedUsers = 0x6
};

enum class ERemoteStorageLocalFileChange:int
{
	k_ERemoteStorageLocalFileChange_Invalid = 0x0,
	k_ERemoteStorageLocalFileChange_FileUpdated = 0x1,
	k_ERemoteStorageLocalFileChange_FileDeleted = 0x2
};

enum class ERemoteStorageFilePathType:int
{
	k_ERemoteStorageFilePathType_Invalid = 0x0,
	k_ERemoteStorageFilePathType_Absolute = 0x1,
	k_ERemoteStorageFilePathType_APIFilename = 0x2
};

enum class EVRScreenshotType:int
{
	k_EVRScreenshotType_None = 0x0,
	k_EVRScreenshotType_Mono = 0x1,
	k_EVRScreenshotType_Stereo = 0x2,
	k_EVRScreenshotType_MonoCubemap = 0x3,
	k_EVRScreenshotType_MonoPanorama = 0x4,
	k_EVRScreenshotType_StereoPanorama = 0x5
};

enum class EHTTPMethod:int
{
	k_EHTTPMethodInvalid = 0x0,
	k_EHTTPMethodGET = 0x1,
	k_EHTTPMethodHEAD = 0x2,
	k_EHTTPMethodPOST = 0x3,
	k_EHTTPMethodPUT = 0x4,
	k_EHTTPMethodDELETE = 0x5,
	k_EHTTPMethodOPTIONS = 0x6,
	k_EHTTPMethodPATCH = 0x7
};

enum class EControllerActionOrigin:int
{
	k_EControllerActionOrigin_None = 0x0,
	k_EControllerActionOrigin_A = 0x1,
	k_EControllerActionOrigin_B = 0x2,
	k_EControllerActionOrigin_X = 0x3,
	k_EControllerActionOrigin_Y = 0x4,
	k_EControllerActionOrigin_LeftBumper = 0x5,
	k_EControllerActionOrigin_RightBumper = 0x6,
	k_EControllerActionOrigin_LeftGrip = 0x7,
	k_EControllerActionOrigin_RightGrip = 0x8,
	k_EControllerActionOrigin_Start = 0x9,
	k_EControllerActionOrigin_Back = 0xA,
	k_EControllerActionOrigin_LeftPad_Touch = 0xB,
	k_EControllerActionOrigin_LeftPad_Swipe = 0xC,
	k_EControllerActionOrigin_LeftPad_Click = 0xD,
	k_EControllerActionOrigin_LeftPad_DPadNorth = 0xE,
	k_EControllerActionOrigin_LeftPad_DPadSouth = 0xF,
	k_EControllerActionOrigin_LeftPad_DPadWest = 0x10,
	k_EControllerActionOrigin_LeftPad_DPadEast = 0x11,
	k_EControllerActionOrigin_RightPad_Touch = 0x12,
	k_EControllerActionOrigin_RightPad_Swipe = 0x13,
	k_EControllerActionOrigin_RightPad_Click = 0x14,
	k_EControllerActionOrigin_RightPad_DPadNorth = 0x15,
	k_EControllerActionOrigin_RightPad_DPadSouth = 0x16,
	k_EControllerActionOrigin_RightPad_DPadWest = 0x17,
	k_EControllerActionOrigin_RightPad_DPadEast = 0x18,
	k_EControllerActionOrigin_LeftTrigger_Pull = 0x19,
	k_EControllerActionOrigin_LeftTrigger_Click = 0x1A,
	k_EControllerActionOrigin_RightTrigger_Pull = 0x1B,
	k_EControllerActionOrigin_RightTrigger_Click = 0x1C,
	k_EControllerActionOrigin_LeftStick_Move = 0x1D,
	k_EControllerActionOrigin_LeftStick_Click = 0x1E,
	k_EControllerActionOrigin_LeftStick_DPadNorth = 0x1F,
	k_EControllerActionOrigin_LeftStick_DPadSouth = 0x20,
	k_EControllerActionOrigin_LeftStick_DPadWest = 0x21,
	k_EControllerActionOrigin_LeftStick_DPadEast = 0x22,
	k_EControllerActionOrigin_Gyro_Move = 0x23,
	k_EControllerActionOrigin_Gyro_Pitch = 0x24,
	k_EControllerActionOrigin_Gyro_Yaw = 0x25,
	k_EControllerActionOrigin_Gyro_Roll = 0x26,
	k_EControllerActionOrigin_PS4_X = 0x27,
	k_EControllerActionOrigin_PS4_Circle = 0x28,
	k_EControllerActionOrigin_PS4_Triangle = 0x29,
	k_EControllerActionOrigin_PS4_Square = 0x2A,
	k_EControllerActionOrigin_PS4_LeftBumper = 0x2B,
	k_EControllerActionOrigin_PS4_RightBumper = 0x2C,
	k_EControllerActionOrigin_PS4_Options = 0x2D,
	k_EControllerActionOrigin_PS4_Share = 0x2E,
	k_EControllerActionOrigin_PS4_LeftPad_Touch = 0x2F,
	k_EControllerActionOrigin_PS4_LeftPad_Swipe = 0x30,
	k_EControllerActionOrigin_PS4_LeftPad_Click = 0x31,
	k_EControllerActionOrigin_PS4_LeftPad_DPadNorth = 0x32,
	k_EControllerActionOrigin_PS4_LeftPad_DPadSouth = 0x33,
	k_EControllerActionOrigin_PS4_LeftPad_DPadWest = 0x34,
	k_EControllerActionOrigin_PS4_LeftPad_DPadEast = 0x35,
	k_EControllerActionOrigin_PS4_RightPad_Touch = 0x36,
	k_EControllerActionOrigin_PS4_RightPad_Swipe = 0x37,
	k_EControllerActionOrigin_PS4_RightPad_Click = 0x38,
	k_EControllerActionOrigin_PS4_RightPad_DPadNorth = 0x39,
	k_EControllerActionOrigin_PS4_RightPad_DPadSouth = 0x3A,
	k_EControllerActionOrigin_PS4_RightPad_DPadWest = 0x3B,
	k_EControllerActionOrigin_PS4_RightPad_DPadEast = 0x3C,
	k_EControllerActionOrigin_PS4_CenterPad_Touch = 0x3D,
	k_EControllerActionOrigin_PS4_CenterPad_Swipe = 0x3E,
	k_EControllerActionOrigin_PS4_CenterPad_Click = 0x3F,
	k_EControllerActionOrigin_PS4_CenterPad_DPadNorth = 0x40,
	k_EControllerActionOrigin_PS4_CenterPad_DPadSouth = 0x41,
	k_EControllerActionOrigin_PS4_CenterPad_DPadWest = 0x42,
	k_EControllerActionOrigin_PS4_CenterPad_DPadEast = 0x43,
	k_EControllerActionOrigin_PS4_LeftTrigger_Pull = 0x44,
	k_EControllerActionOrigin_PS4_LeftTrigger_Click = 0x45,
	k_EControllerActionOrigin_PS4_RightTrigger_Pull = 0x46,
	k_EControllerActionOrigin_PS4_RightTrigger_Click = 0x47,
	k_EControllerActionOrigin_PS4_LeftStick_Move = 0x48,
	k_EControllerActionOrigin_PS4_LeftStick_Click = 0x49,
	k_EControllerActionOrigin_PS4_LeftStick_DPadNorth = 0x4A,
	k_EControllerActionOrigin_PS4_LeftStick_DPadSouth = 0x4B,
	k_EControllerActionOrigin_PS4_LeftStick_DPadWest = 0x4C,
	k_EControllerActionOrigin_PS4_LeftStick_DPadEast = 0x4D,
	k_EControllerActionOrigin_PS4_RightStick_Move = 0x4E,
	k_EControllerActionOrigin_PS4_RightStick_Click = 0x4F,
	k_EControllerActionOrigin_PS4_RightStick_DPadNorth = 0x50,
	k_EControllerActionOrigin_PS4_RightStick_DPadSouth = 0x51,
	k_EControllerActionOrigin_PS4_RightStick_DPadWest = 0x52,
	k_EControllerActionOrigin_PS4_RightStick_DPadEast = 0x53,
	k_EControllerActionOrigin_PS4_DPad_North = 0x54,
	k_EControllerActionOrigin_PS4_DPad_South = 0x55,
	k_EControllerActionOrigin_PS4_DPad_West = 0x56,
	k_EControllerActionOrigin_PS4_DPad_East = 0x57,
	k_EControllerActionOrigin_PS4_Gyro_Move = 0x58,
	k_EControllerActionOrigin_PS4_Gyro_Pitch = 0x59,
	k_EControllerActionOrigin_PS4_Gyro_Yaw = 0x5A,
	k_EControllerActionOrigin_PS4_Gyro_Roll = 0x5B,
	k_EControllerActionOrigin_XBoxOne_A = 0x5C,
	k_EControllerActionOrigin_XBoxOne_B = 0x5D,
	k_EControllerActionOrigin_XBoxOne_X = 0x5E,
	k_EControllerActionOrigin_XBoxOne_Y = 0x5F,
	k_EControllerActionOrigin_XBoxOne_LeftBumper = 0x60,
	k_EControllerActionOrigin_XBoxOne_RightBumper = 0x61,
	k_EControllerActionOrigin_XBoxOne_Menu = 0x62,
	k_EControllerActionOrigin_XBoxOne_View = 0x63,
	k_EControllerActionOrigin_XBoxOne_LeftTrigger_Pull = 0x64,
	k_EControllerActionOrigin_XBoxOne_LeftTrigger_Click = 0x65,
	k_EControllerActionOrigin_XBoxOne_RightTrigger_Pull = 0x66,
	k_EControllerActionOrigin_XBoxOne_RightTrigger_Click = 0x67,
	k_EControllerActionOrigin_XBoxOne_LeftStick_Move = 0x68,
	k_EControllerActionOrigin_XBoxOne_LeftStick_Click = 0x69,
	k_EControllerActionOrigin_XBoxOne_LeftStick_DPadNorth = 0x6A,
	k_EControllerActionOrigin_XBoxOne_LeftStick_DPadSouth = 0x6B,
	k_EControllerActionOrigin_XBoxOne_LeftStick_DPadWest = 0x6C,
	k_EControllerActionOrigin_XBoxOne_LeftStick_DPadEast = 0x6D,
	k_EControllerActionOrigin_XBoxOne_RightStick_Move = 0x6E,
	k_EControllerActionOrigin_XBoxOne_RightStick_Click = 0x6F,
	k_EControllerActionOrigin_XBoxOne_RightStick_DPadNorth = 0x70,
	k_EControllerActionOrigin_XBoxOne_RightStick_DPadSouth = 0x71,
	k_EControllerActionOrigin_XBoxOne_RightStick_DPadWest = 0x72,
	k_EControllerActionOrigin_XBoxOne_RightStick_DPadEast = 0x73,
	k_EControllerActionOrigin_XBoxOne_DPad_North = 0x74,
	k_EControllerActionOrigin_XBoxOne_DPad_South = 0x75,
	k_EControllerActionOrigin_XBoxOne_DPad_West = 0x76,
	k_EControllerActionOrigin_XBoxOne_DPad_East = 0x77,
	k_EControllerActionOrigin_XBox360_A = 0x78,
	k_EControllerActionOrigin_XBox360_B = 0x79,
	k_EControllerActionOrigin_XBox360_X = 0x7A,
	k_EControllerActionOrigin_XBox360_Y = 0x7B,
	k_EControllerActionOrigin_XBox360_LeftBumper = 0x7C,
	k_EControllerActionOrigin_XBox360_RightBumper = 0x7D,
	k_EControllerActionOrigin_XBox360_Start = 0x7E,
	k_EControllerActionOrigin_XBox360_Back = 0x7F,
	k_EControllerActionOrigin_XBox360_LeftTrigger_Pull = 0x80,
	k_EControllerActionOrigin_XBox360_LeftTrigger_Click = 0x81,
	k_EControllerActionOrigin_XBox360_RightTrigger_Pull = 0x82,
	k_EControllerActionOrigin_XBox360_RightTrigger_Click = 0x83,
	k_EControllerActionOrigin_XBox360_LeftStick_Move = 0x84,
	k_EControllerActionOrigin_XBox360_LeftStick_Click = 0x85,
	k_EControllerActionOrigin_XBox360_LeftStick_DPadNorth = 0x86,
	k_EControllerActionOrigin_XBox360_LeftStick_DPadSouth = 0x87,
	k_EControllerActionOrigin_XBox360_LeftStick_DPadWest = 0x88,
	k_EControllerActionOrigin_XBox360_LeftStick_DPadEast = 0x89,
	k_EControllerActionOrigin_XBox360_RightStick_Move = 0x8A,
	k_EControllerActionOrigin_XBox360_RightStick_Click = 0x8B,
	k_EControllerActionOrigin_XBox360_RightStick_DPadNorth = 0x8C,
	k_EControllerActionOrigin_XBox360_RightStick_DPadSouth = 0x8D,
	k_EControllerActionOrigin_XBox360_RightStick_DPadWest = 0x8E,
	k_EControllerActionOrigin_XBox360_RightStick_DPadEast = 0x8F,
	k_EControllerActionOrigin_XBox360_DPad_North = 0x90,
	k_EControllerActionOrigin_XBox360_DPad_South = 0x91,
	k_EControllerActionOrigin_XBox360_DPad_West = 0x92,
	k_EControllerActionOrigin_XBox360_DPad_East = 0x93,
	k_EControllerActionOrigin_SteamV2_A = 0x94,
	k_EControllerActionOrigin_SteamV2_B = 0x95,
	k_EControllerActionOrigin_SteamV2_X = 0x96,
	k_EControllerActionOrigin_SteamV2_Y = 0x97,
	k_EControllerActionOrigin_SteamV2_LeftBumper = 0x98,
	k_EControllerActionOrigin_SteamV2_RightBumper = 0x99,
	k_EControllerActionOrigin_SteamV2_LeftGrip_Lower = 0x9A,
	k_EControllerActionOrigin_SteamV2_LeftGrip_Upper = 0x9B,
	k_EControllerActionOrigin_SteamV2_RightGrip_Lower = 0x9C,
	k_EControllerActionOrigin_SteamV2_RightGrip_Upper = 0x9D,
	k_EControllerActionOrigin_SteamV2_LeftBumper_Pressure = 0x9E,
	k_EControllerActionOrigin_SteamV2_RightBumper_Pressure = 0x9F,
	k_EControllerActionOrigin_SteamV2_LeftGrip_Pressure = 0xA0,
	k_EControllerActionOrigin_SteamV2_RightGrip_Pressure = 0xA1,
	k_EControllerActionOrigin_SteamV2_LeftGrip_Upper_Pressure = 0xA2,
	k_EControllerActionOrigin_SteamV2_RightGrip_Upper_Pressure = 0xA3,
	k_EControllerActionOrigin_SteamV2_Start = 0xA4,
	k_EControllerActionOrigin_SteamV2_Back = 0xA5,
	k_EControllerActionOrigin_SteamV2_LeftPad_Touch = 0xA6,
	k_EControllerActionOrigin_SteamV2_LeftPad_Swipe = 0xA7,
	k_EControllerActionOrigin_SteamV2_LeftPad_Click = 0xA8,
	k_EControllerActionOrigin_SteamV2_LeftPad_Pressure = 0xA9,
	k_EControllerActionOrigin_SteamV2_LeftPad_DPadNorth = 0xAA,
	k_EControllerActionOrigin_SteamV2_LeftPad_DPadSouth = 0xAB,
	k_EControllerActionOrigin_SteamV2_LeftPad_DPadWest = 0xAC,
	k_EControllerActionOrigin_SteamV2_LeftPad_DPadEast = 0xAD,
	k_EControllerActionOrigin_SteamV2_RightPad_Touch = 0xAE,
	k_EControllerActionOrigin_SteamV2_RightPad_Swipe = 0xAF,
	k_EControllerActionOrigin_SteamV2_RightPad_Click = 0xB0,
	k_EControllerActionOrigin_SteamV2_RightPad_Pressure = 0xB1,
	k_EControllerActionOrigin_SteamV2_RightPad_DPadNorth = 0xB2,
	k_EControllerActionOrigin_SteamV2_RightPad_DPadSouth = 0xB3,
	k_EControllerActionOrigin_SteamV2_RightPad_DPadWest = 0xB4,
	k_EControllerActionOrigin_SteamV2_RightPad_DPadEast = 0xB5,
	k_EControllerActionOrigin_SteamV2_LeftTrigger_Pull = 0xB6,
	k_EControllerActionOrigin_SteamV2_LeftTrigger_Click = 0xB7,
	k_EControllerActionOrigin_SteamV2_RightTrigger_Pull = 0xB8,
	k_EControllerActionOrigin_SteamV2_RightTrigger_Click = 0xB9,
	k_EControllerActionOrigin_SteamV2_LeftStick_Move = 0xBA,
	k_EControllerActionOrigin_SteamV2_LeftStick_Click = 0xBB,
	k_EControllerActionOrigin_SteamV2_LeftStick_DPadNorth = 0xBC,
	k_EControllerActionOrigin_SteamV2_LeftStick_DPadSouth = 0xBD,
	k_EControllerActionOrigin_SteamV2_LeftStick_DPadWest = 0xBE,
	k_EControllerActionOrigin_SteamV2_LeftStick_DPadEast = 0xBF,
	k_EControllerActionOrigin_SteamV2_Gyro_Move = 0xC0,
	k_EControllerActionOrigin_SteamV2_Gyro_Pitch = 0xC1,
	k_EControllerActionOrigin_SteamV2_Gyro_Yaw = 0xC2,
	k_EControllerActionOrigin_SteamV2_Gyro_Roll = 0xC3,
	k_EControllerActionOrigin_Switch_A = 0xC4,
	k_EControllerActionOrigin_Switch_B = 0xC5,
	k_EControllerActionOrigin_Switch_X = 0xC6,
	k_EControllerActionOrigin_Switch_Y = 0xC7,
	k_EControllerActionOrigin_Switch_LeftBumper = 0xC8,
	k_EControllerActionOrigin_Switch_RightBumper = 0xC9,
	k_EControllerActionOrigin_Switch_Plus = 0xCA,
	k_EControllerActionOrigin_Switch_Minus = 0xCB,
	k_EControllerActionOrigin_Switch_Capture = 0xCC,
	k_EControllerActionOrigin_Switch_LeftTrigger_Pull = 0xCD,
	k_EControllerActionOrigin_Switch_LeftTrigger_Click = 0xCE,
	k_EControllerActionOrigin_Switch_RightTrigger_Pull = 0xCF,
	k_EControllerActionOrigin_Switch_RightTrigger_Click = 0xD0,
	k_EControllerActionOrigin_Switch_LeftStick_Move = 0xD1,
	k_EControllerActionOrigin_Switch_LeftStick_Click = 0xD2,
	k_EControllerActionOrigin_Switch_LeftStick_DPadNorth = 0xD3,
	k_EControllerActionOrigin_Switch_LeftStick_DPadSouth = 0xD4,
	k_EControllerActionOrigin_Switch_LeftStick_DPadWest = 0xD5,
	k_EControllerActionOrigin_Switch_LeftStick_DPadEast = 0xD6,
	k_EControllerActionOrigin_Switch_RightStick_Move = 0xD7,
	k_EControllerActionOrigin_Switch_RightStick_Click = 0xD8,
	k_EControllerActionOrigin_Switch_RightStick_DPadNorth = 0xD9,
	k_EControllerActionOrigin_Switch_RightStick_DPadSouth = 0xDA,
	k_EControllerActionOrigin_Switch_RightStick_DPadWest = 0xDB,
	k_EControllerActionOrigin_Switch_RightStick_DPadEast = 0xDC,
	k_EControllerActionOrigin_Switch_DPad_North = 0xDD,
	k_EControllerActionOrigin_Switch_DPad_South = 0xDE,
	k_EControllerActionOrigin_Switch_DPad_West = 0xDF,
	k_EControllerActionOrigin_Switch_DPad_East = 0xE0,
	k_EControllerActionOrigin_Switch_ProGyro_Move = 0xE1,
	k_EControllerActionOrigin_Switch_ProGyro_Pitch = 0xE2,
	k_EControllerActionOrigin_Switch_ProGyro_Yaw = 0xE3,
	k_EControllerActionOrigin_Switch_ProGyro_Roll = 0xE4,
	k_EControllerActionOrigin_Switch_RightGyro_Move = 0xE5,
	k_EControllerActionOrigin_Switch_RightGyro_Pitch = 0xE6,
	k_EControllerActionOrigin_Switch_RightGyro_Yaw = 0xE7,
	k_EControllerActionOrigin_Switch_RightGyro_Roll = 0xE8,
	k_EControllerActionOrigin_Switch_LeftGyro_Move = 0xE9,
	k_EControllerActionOrigin_Switch_LeftGyro_Pitch = 0xEA,
	k_EControllerActionOrigin_Switch_LeftGyro_Yaw = 0xEB,
	k_EControllerActionOrigin_Switch_LeftGyro_Roll = 0xEC,
	k_EControllerActionOrigin_Switch_LeftGrip_Lower = 0xED,
	k_EControllerActionOrigin_Switch_LeftGrip_Upper = 0xEE,
	k_EControllerActionOrigin_Switch_RightGrip_Lower = 0xEF,
	k_EControllerActionOrigin_Switch_RightGrip_Upper = 0xF0,
	k_EControllerActionOrigin_PS4_DPad_Move = 0xF1,
	k_EControllerActionOrigin_XBoxOne_DPad_Move = 0xF2,
	k_EControllerActionOrigin_XBox360_DPad_Move = 0xF3,
	k_EControllerActionOrigin_Switch_DPad_Move = 0xF4,
	k_EControllerActionOrigin_PS5_X = 0xF5,
	k_EControllerActionOrigin_PS5_Circle = 0xF6,
	k_EControllerActionOrigin_PS5_Triangle = 0xF7,
	k_EControllerActionOrigin_PS5_Square = 0xF8,
	k_EControllerActionOrigin_PS5_LeftBumper = 0xF9,
	k_EControllerActionOrigin_PS5_RightBumper = 0xFA,
	k_EControllerActionOrigin_PS5_Option = 0xFB,
	k_EControllerActionOrigin_PS5_Create = 0xFC,
	k_EControllerActionOrigin_PS5_Mute = 0xFD,
	k_EControllerActionOrigin_PS5_LeftPad_Touch = 0xFE,
	k_EControllerActionOrigin_PS5_LeftPad_Swipe = 0xFF,
	k_EControllerActionOrigin_PS5_LeftPad_Click = 0x100,
	k_EControllerActionOrigin_PS5_LeftPad_DPadNorth = 0x101,
	k_EControllerActionOrigin_PS5_LeftPad_DPadSouth = 0x102,
	k_EControllerActionOrigin_PS5_LeftPad_DPadWest = 0x103,
	k_EControllerActionOrigin_PS5_LeftPad_DPadEast = 0x104,
	k_EControllerActionOrigin_PS5_RightPad_Touch = 0x105,
	k_EControllerActionOrigin_PS5_RightPad_Swipe = 0x106,
	k_EControllerActionOrigin_PS5_RightPad_Click = 0x107,
	k_EControllerActionOrigin_PS5_RightPad_DPadNorth = 0x108,
	k_EControllerActionOrigin_PS5_RightPad_DPadSouth = 0x109,
	k_EControllerActionOrigin_PS5_RightPad_DPadWest = 0x10A,
	k_EControllerActionOrigin_PS5_RightPad_DPadEast = 0x10B,
	k_EControllerActionOrigin_PS5_CenterPad_Touch = 0x10C,
	k_EControllerActionOrigin_PS5_CenterPad_Swipe = 0x10D,
	k_EControllerActionOrigin_PS5_CenterPad_Click = 0x10E,
	k_EControllerActionOrigin_PS5_CenterPad_DPadNorth = 0x10F,
	k_EControllerActionOrigin_PS5_CenterPad_DPadSouth = 0x110,
	k_EControllerActionOrigin_PS5_CenterPad_DPadWest = 0x111,
	k_EControllerActionOrigin_PS5_CenterPad_DPadEast = 0x112,
	k_EControllerActionOrigin_PS5_LeftTrigger_Pull = 0x113,
	k_EControllerActionOrigin_PS5_LeftTrigger_Click = 0x114,
	k_EControllerActionOrigin_PS5_RightTrigger_Pull = 0x115,
	k_EControllerActionOrigin_PS5_RightTrigger_Click = 0x116,
	k_EControllerActionOrigin_PS5_LeftStick_Move = 0x117,
	k_EControllerActionOrigin_PS5_LeftStick_Click = 0x118,
	k_EControllerActionOrigin_PS5_LeftStick_DPadNorth = 0x119,
	k_EControllerActionOrigin_PS5_LeftStick_DPadSouth = 0x11A,
	k_EControllerActionOrigin_PS5_LeftStick_DPadWest = 0x11B,
	k_EControllerActionOrigin_PS5_LeftStick_DPadEast = 0x11C,
	k_EControllerActionOrigin_PS5_RightStick_Move = 0x11D,
	k_EControllerActionOrigin_PS5_RightStick_Click = 0x11E,
	k_EControllerActionOrigin_PS5_RightStick_DPadNorth = 0x11F,
	k_EControllerActionOrigin_PS5_RightStick_DPadSouth = 0x120,
	k_EControllerActionOrigin_PS5_RightStick_DPadWest = 0x121,
	k_EControllerActionOrigin_PS5_RightStick_DPadEast = 0x122,
	k_EControllerActionOrigin_PS5_DPad_Move = 0x123,
	k_EControllerActionOrigin_PS5_DPad_North = 0x124,
	k_EControllerActionOrigin_PS5_DPad_South = 0x125,
	k_EControllerActionOrigin_PS5_DPad_West = 0x126,
	k_EControllerActionOrigin_PS5_DPad_East = 0x127,
	k_EControllerActionOrigin_PS5_Gyro_Move = 0x128,
	k_EControllerActionOrigin_PS5_Gyro_Pitch = 0x129,
	k_EControllerActionOrigin_PS5_Gyro_Yaw = 0x12A,
	k_EControllerActionOrigin_PS5_Gyro_Roll = 0x12B,
	k_EControllerActionOrigin_XBoxOne_LeftGrip_Lower = 0x12C,
	k_EControllerActionOrigin_XBoxOne_LeftGrip_Upper = 0x12D,
	k_EControllerActionOrigin_XBoxOne_RightGrip_Lower = 0x12E,
	k_EControllerActionOrigin_XBoxOne_RightGrip_Upper = 0x12F,
	k_EControllerActionOrigin_XBoxOne_Share = 0x130,
	k_EControllerActionOrigin_SteamDeck_A = 0x131,
	k_EControllerActionOrigin_SteamDeck_B = 0x132,
	k_EControllerActionOrigin_SteamDeck_X = 0x133,
	k_EControllerActionOrigin_SteamDeck_Y = 0x134,
	k_EControllerActionOrigin_SteamDeck_L1 = 0x135,
	k_EControllerActionOrigin_SteamDeck_R1 = 0x136,
	k_EControllerActionOrigin_SteamDeck_Menu = 0x137,
	k_EControllerActionOrigin_SteamDeck_View = 0x138,
	k_EControllerActionOrigin_SteamDeck_LeftPad_Touch = 0x139,
	k_EControllerActionOrigin_SteamDeck_LeftPad_Swipe = 0x13A,
	k_EControllerActionOrigin_SteamDeck_LeftPad_Click = 0x13B,
	k_EControllerActionOrigin_SteamDeck_LeftPad_DPadNorth = 0x13C,
	k_EControllerActionOrigin_SteamDeck_LeftPad_DPadSouth = 0x13D,
	k_EControllerActionOrigin_SteamDeck_LeftPad_DPadWest = 0x13E,
	k_EControllerActionOrigin_SteamDeck_LeftPad_DPadEast = 0x13F,
	k_EControllerActionOrigin_SteamDeck_RightPad_Touch = 0x140,
	k_EControllerActionOrigin_SteamDeck_RightPad_Swipe = 0x141,
	k_EControllerActionOrigin_SteamDeck_RightPad_Click = 0x142,
	k_EControllerActionOrigin_SteamDeck_RightPad_DPadNorth = 0x143,
	k_EControllerActionOrigin_SteamDeck_RightPad_DPadSouth = 0x144,
	k_EControllerActionOrigin_SteamDeck_RightPad_DPadWest = 0x145,
	k_EControllerActionOrigin_SteamDeck_RightPad_DPadEast = 0x146,
	k_EControllerActionOrigin_SteamDeck_L2_SoftPull = 0x147,
	k_EControllerActionOrigin_SteamDeck_L2 = 0x148,
	k_EControllerActionOrigin_SteamDeck_R2_SoftPull = 0x149,
	k_EControllerActionOrigin_SteamDeck_R2 = 0x14A,
	k_EControllerActionOrigin_SteamDeck_LeftStick_Move = 0x14B,
	k_EControllerActionOrigin_SteamDeck_L3 = 0x14C,
	k_EControllerActionOrigin_SteamDeck_LeftStick_DPadNorth = 0x14D,
	k_EControllerActionOrigin_SteamDeck_LeftStick_DPadSouth = 0x14E,
	k_EControllerActionOrigin_SteamDeck_LeftStick_DPadWest = 0x14F,
	k_EControllerActionOrigin_SteamDeck_LeftStick_DPadEast = 0x150,
	k_EControllerActionOrigin_SteamDeck_LeftStick_Touch = 0x151,
	k_EControllerActionOrigin_SteamDeck_RightStick_Move = 0x152,
	k_EControllerActionOrigin_SteamDeck_R3 = 0x153,
	k_EControllerActionOrigin_SteamDeck_RightStick_DPadNorth = 0x154,
	k_EControllerActionOrigin_SteamDeck_RightStick_DPadSouth = 0x155,
	k_EControllerActionOrigin_SteamDeck_RightStick_DPadWest = 0x156,
	k_EControllerActionOrigin_SteamDeck_RightStick_DPadEast = 0x157,
	k_EControllerActionOrigin_SteamDeck_RightStick_Touch = 0x158,
	k_EControllerActionOrigin_SteamDeck_L4 = 0x159,
	k_EControllerActionOrigin_SteamDeck_R4 = 0x15A,
	k_EControllerActionOrigin_SteamDeck_L5 = 0x15B,
	k_EControllerActionOrigin_SteamDeck_R5 = 0x15C,
	k_EControllerActionOrigin_SteamDeck_DPad_Move = 0x15D,
	k_EControllerActionOrigin_SteamDeck_DPad_North = 0x15E,
	k_EControllerActionOrigin_SteamDeck_DPad_South = 0x15F,
	k_EControllerActionOrigin_SteamDeck_DPad_West = 0x160,
	k_EControllerActionOrigin_SteamDeck_DPad_East = 0x161,
	k_EControllerActionOrigin_SteamDeck_Gyro_Move = 0x162,
	k_EControllerActionOrigin_SteamDeck_Gyro_Pitch = 0x163,
	k_EControllerActionOrigin_SteamDeck_Gyro_Yaw = 0x164,
	k_EControllerActionOrigin_SteamDeck_Gyro_Roll = 0x165,
	k_EControllerActionOrigin_SteamDeck_Reserved1 = 0x166,
	k_EControllerActionOrigin_SteamDeck_Reserved2 = 0x167,
	k_EControllerActionOrigin_SteamDeck_Reserved3 = 0x168,
	k_EControllerActionOrigin_SteamDeck_Reserved4 = 0x169,
	k_EControllerActionOrigin_SteamDeck_Reserved5 = 0x16A,
	k_EControllerActionOrigin_SteamDeck_Reserved6 = 0x16B,
	k_EControllerActionOrigin_SteamDeck_Reserved7 = 0x16C,
	k_EControllerActionOrigin_SteamDeck_Reserved8 = 0x16D,
	k_EControllerActionOrigin_SteamDeck_Reserved9 = 0x16E,
	k_EControllerActionOrigin_SteamDeck_Reserved10 = 0x16F,
	k_EControllerActionOrigin_SteamDeck_Reserved11 = 0x170,
	k_EControllerActionOrigin_SteamDeck_Reserved12 = 0x171,
	k_EControllerActionOrigin_SteamDeck_Reserved13 = 0x172,
	k_EControllerActionOrigin_SteamDeck_Reserved14 = 0x173,
	k_EControllerActionOrigin_SteamDeck_Reserved15 = 0x174,
	k_EControllerActionOrigin_SteamDeck_Reserved16 = 0x175,
	k_EControllerActionOrigin_SteamDeck_Reserved17 = 0x176,
	k_EControllerActionOrigin_SteamDeck_Reserved18 = 0x177,
	k_EControllerActionOrigin_SteamDeck_Reserved19 = 0x178,
	k_EControllerActionOrigin_SteamDeck_Reserved20 = 0x179,
	k_EControllerActionOrigin_Count = 0x17A,
	k_EControllerActionOrigin_MaximumPossibleValue = 0x7FFF
};

enum class ESteamInputType:int
{
	k_ESteamInputType_Unknown = 0x0,
	k_ESteamInputType_SteamController = 0x1,
	k_ESteamInputType_XBox360Controller = 0x2,
	k_ESteamInputType_XBoxOneController = 0x3,
	k_ESteamInputType_GenericGamepad = 0x4,
	k_ESteamInputType_PS4Controller = 0x5,
	k_ESteamInputType_AppleMFiController = 0x6,
	k_ESteamInputType_AndroidController = 0x7,
	k_ESteamInputType_SwitchJoyConPair = 0x8,
	k_ESteamInputType_SwitchJoyConSingle = 0x9,
	k_ESteamInputType_SwitchProController = 0xA,
	k_ESteamInputType_MobileTouch = 0xB,
	k_ESteamInputType_PS3Controller = 0xC,
	k_ESteamInputType_PS5Controller = 0xD,
	k_ESteamInputType_SteamDeckController = 0xE,
	k_ESteamInputType_Count = 0xF,
	k_ESteamInputType_MaximumPossibleValue = 0xFF
};

enum class EXboxOrigin:int
{
	k_EXboxOrigin_A = 0x0,
	k_EXboxOrigin_B = 0x1,
	k_EXboxOrigin_X = 0x2,
	k_EXboxOrigin_Y = 0x3,
	k_EXboxOrigin_LeftBumper = 0x4,
	k_EXboxOrigin_RightBumper = 0x5,
	k_EXboxOrigin_Menu = 0x6,
	k_EXboxOrigin_View = 0x7,
	k_EXboxOrigin_LeftTrigger_Pull = 0x8,
	k_EXboxOrigin_LeftTrigger_Click = 0x9,
	k_EXboxOrigin_RightTrigger_Pull = 0xA,
	k_EXboxOrigin_RightTrigger_Click = 0xB,
	k_EXboxOrigin_LeftStick_Move = 0xC,
	k_EXboxOrigin_LeftStick_Click = 0xD,
	k_EXboxOrigin_LeftStick_DPadNorth = 0xE,
	k_EXboxOrigin_LeftStick_DPadSouth = 0xF,
	k_EXboxOrigin_LeftStick_DPadWest = 0x10,
	k_EXboxOrigin_LeftStick_DPadEast = 0x11,
	k_EXboxOrigin_RightStick_Move = 0x12,
	k_EXboxOrigin_RightStick_Click = 0x13,
	k_EXboxOrigin_RightStick_DPadNorth = 0x14,
	k_EXboxOrigin_RightStick_DPadSouth = 0x15,
	k_EXboxOrigin_RightStick_DPadWest = 0x16,
	k_EXboxOrigin_RightStick_DPadEast = 0x17,
	k_EXboxOrigin_DPad_North = 0x18,
	k_EXboxOrigin_DPad_South = 0x19,
	k_EXboxOrigin_DPad_West = 0x1A,
	k_EXboxOrigin_DPad_East = 0x1B,
	k_EXboxOrigin_Count = 0x1C
};

enum class EUserUGCList:int
{
	k_EUserUGCList_Published = 0x0,
	k_EUserUGCList_VotedOn = 0x1,
	k_EUserUGCList_VotedUp = 0x2,
	k_EUserUGCList_VotedDown = 0x3,
	k_EUserUGCList_WillVoteLater = 0x4,
	k_EUserUGCList_Favorited = 0x5,
	k_EUserUGCList_Subscribed = 0x6,
	k_EUserUGCList_UsedOrPlayed = 0x7,
	k_EUserUGCList_Followed = 0x8
};

enum class EUGCMatchingUGCType:int
{
	k_EUGCMatchingUGCType_Items = 0x0,
	k_EUGCMatchingUGCType_Items_Mtx = 0x1,
	k_EUGCMatchingUGCType_Items_ReadyToUse = 0x2,
	k_EUGCMatchingUGCType_Collections = 0x3,
	k_EUGCMatchingUGCType_Artwork = 0x4,
	k_EUGCMatchingUGCType_Videos = 0x5,
	k_EUGCMatchingUGCType_Screenshots = 0x6,
	k_EUGCMatchingUGCType_AllGuides = 0x7,
	k_EUGCMatchingUGCType_WebGuides = 0x8,
	k_EUGCMatchingUGCType_IntegratedGuides = 0x9,
	k_EUGCMatchingUGCType_UsableInGame = 0xA,
	k_EUGCMatchingUGCType_ControllerBindings = 0xB,
	k_EUGCMatchingUGCType_GameManagedItems = 0xC,
	k_EUGCMatchingUGCType_All = 0xFF
};

enum class EUGCQuery:int
{
	k_EUGCQuery_RankedByVote = 0x0,
	k_EUGCQuery_RankedByPublicationDate = 0x1,
	k_EUGCQuery_AcceptedForGameRankedByAcceptanceDate = 0x2,
	k_EUGCQuery_RankedByTrend = 0x3,
	k_EUGCQuery_FavoritedByFriendsRankedByPublicationDate = 0x4,
	k_EUGCQuery_CreatedByFriendsRankedByPublicationDate = 0x5,
	k_EUGCQuery_RankedByNumTimesReported = 0x6,
	k_EUGCQuery_CreatedByFollowedUsersRankedByPublicationDate = 0x7,
	k_EUGCQuery_NotYetRated = 0x8,
	k_EUGCQuery_RankedByTotalVotesAsc = 0x9,
	k_EUGCQuery_RankedByVotesUp = 0xA,
	k_EUGCQuery_RankedByTextSearch = 0xB,
	k_EUGCQuery_RankedByTotalUniqueSubscriptions = 0xC,
	k_EUGCQuery_RankedByPlaytimeTrend = 0xD,
	k_EUGCQuery_RankedByTotalPlaytime = 0xE,
	k_EUGCQuery_RankedByAveragePlaytimeTrend = 0xF,
	k_EUGCQuery_RankedByLifetimeAveragePlaytime = 0x10,
	k_EUGCQuery_RankedByPlaytimeSessionsTrend = 0x11,
	k_EUGCQuery_RankedByLifetimePlaytimeSessions = 0x12,
	k_EUGCQuery_RankedByLastUpdatedDate = 0x13
};

enum class EItemStatistic:int
{
	k_EItemStatistic_NumSubscriptions = 0x0,
	k_EItemStatistic_NumFavorites = 0x1,
	k_EItemStatistic_NumFollowers = 0x2,
	k_EItemStatistic_NumUniqueSubscriptions = 0x3,
	k_EItemStatistic_NumUniqueFavorites = 0x4,
	k_EItemStatistic_NumUniqueFollowers = 0x5,
	k_EItemStatistic_NumUniqueWebsiteViews = 0x6,
	k_EItemStatistic_ReportScore = 0x7,
	k_EItemStatistic_NumSecondsPlayed = 0x8,
	k_EItemStatistic_NumPlaytimeSessions = 0x9,
	k_EItemStatistic_NumComments = 0xA,
	k_EItemStatistic_NumSecondsPlayedDuringTimePeriod = 0xB,
	k_EItemStatistic_NumPlaytimeSessionsDuringTimePeriod = 0xC
};

enum class EItemPreviewType:int
{
	k_EItemPreviewType_Image = 0x0,
	k_EItemPreviewType_YouTubeVideo = 0x1,
	k_EItemPreviewType_Sketchfab = 0x2,
	k_EItemPreviewType_EnvironmentMap_HorizontalCross = 0x3,
	k_EItemPreviewType_EnvironmentMap_LatLong = 0x4,
	k_EItemPreviewType_ReservedMax = 0xFF
};

enum class EItemUpdateStatus:int
{
	k_EItemUpdateStatusInvalid = 0x0,
	k_EItemUpdateStatusPreparingConfig = 0x1,
	k_EItemUpdateStatusPreparingContent = 0x2,
	k_EItemUpdateStatusUploadingContent = 0x3,
	k_EItemUpdateStatusUploadingPreviewFile = 0x4,
	k_EItemUpdateStatusCommittingChanges = 0x5
};

enum class AudioPlayback_Status:int
{
	AudioPlayback_Undefined = 0x0,
	AudioPlayback_Playing = 0x1,
	AudioPlayback_Paused = 0x2,
	AudioPlayback_Idle = 0x3
};

enum class EParentalFeature:int
{
	k_EFeatureInvalid = 0x0,
	k_EFeatureStore = 0x1,
	k_EFeatureCommunity = 0x2,
	k_EFeatureProfile = 0x3,
	k_EFeatureFriends = 0x4,
	k_EFeatureNews = 0x5,
	k_EFeatureTrading = 0x6,
	k_EFeatureSettings = 0x7,
	k_EFeatureConsole = 0x8,
	k_EFeatureBrowser = 0x9,
	k_EFeatureParentalSetup = 0xA,
	k_EFeatureLibrary = 0xB,
	k_EFeatureTest = 0xC,
	k_EFeatureSiteLicense = 0xD,
	k_EFeatureMax = 0xE
};

enum class EInputActionOrigin:int
{
	k_EInputActionOrigin_None = 0x0,
	k_EInputActionOrigin_SteamController_A = 0x1,
	k_EInputActionOrigin_SteamController_B = 0x2,
	k_EInputActionOrigin_SteamController_X = 0x3,
	k_EInputActionOrigin_SteamController_Y = 0x4,
	k_EInputActionOrigin_SteamController_LeftBumper = 0x5,
	k_EInputActionOrigin_SteamController_RightBumper = 0x6,
	k_EInputActionOrigin_SteamController_LeftGrip = 0x7,
	k_EInputActionOrigin_SteamController_RightGrip = 0x8,
	k_EInputActionOrigin_SteamController_Start = 0x9,
	k_EInputActionOrigin_SteamController_Back = 0xA,
	k_EInputActionOrigin_SteamController_LeftPad_Touch = 0xB,
	k_EInputActionOrigin_SteamController_LeftPad_Swipe = 0xC,
	k_EInputActionOrigin_SteamController_LeftPad_Click = 0xD,
	k_EInputActionOrigin_SteamController_LeftPad_DPadNorth = 0xE,
	k_EInputActionOrigin_SteamController_LeftPad_DPadSouth = 0xF,
	k_EInputActionOrigin_SteamController_LeftPad_DPadWest = 0x10,
	k_EInputActionOrigin_SteamController_LeftPad_DPadEast = 0x11,
	k_EInputActionOrigin_SteamController_RightPad_Touch = 0x12,
	k_EInputActionOrigin_SteamController_RightPad_Swipe = 0x13,
	k_EInputActionOrigin_SteamController_RightPad_Click = 0x14,
	k_EInputActionOrigin_SteamController_RightPad_DPadNorth = 0x15,
	k_EInputActionOrigin_SteamController_RightPad_DPadSouth = 0x16,
	k_EInputActionOrigin_SteamController_RightPad_DPadWest = 0x17,
	k_EInputActionOrigin_SteamController_RightPad_DPadEast = 0x18,
	k_EInputActionOrigin_SteamController_LeftTrigger_Pull = 0x19,
	k_EInputActionOrigin_SteamController_LeftTrigger_Click = 0x1A,
	k_EInputActionOrigin_SteamController_RightTrigger_Pull = 0x1B,
	k_EInputActionOrigin_SteamController_RightTrigger_Click = 0x1C,
	k_EInputActionOrigin_SteamController_LeftStick_Move = 0x1D,
	k_EInputActionOrigin_SteamController_LeftStick_Click = 0x1E,
	k_EInputActionOrigin_SteamController_LeftStick_DPadNorth = 0x1F,
	k_EInputActionOrigin_SteamController_LeftStick_DPadSouth = 0x20,
	k_EInputActionOrigin_SteamController_LeftStick_DPadWest = 0x21,
	k_EInputActionOrigin_SteamController_LeftStick_DPadEast = 0x22,
	k_EInputActionOrigin_SteamController_Gyro_Move = 0x23,
	k_EInputActionOrigin_SteamController_Gyro_Pitch = 0x24,
	k_EInputActionOrigin_SteamController_Gyro_Yaw = 0x25,
	k_EInputActionOrigin_SteamController_Gyro_Roll = 0x26,
	k_EInputActionOrigin_SteamController_Reserved0 = 0x27,
	k_EInputActionOrigin_SteamController_Reserved1 = 0x28,
	k_EInputActionOrigin_SteamController_Reserved2 = 0x29,
	k_EInputActionOrigin_SteamController_Reserved3 = 0x2A,
	k_EInputActionOrigin_SteamController_Reserved4 = 0x2B,
	k_EInputActionOrigin_SteamController_Reserved5 = 0x2C,
	k_EInputActionOrigin_SteamController_Reserved6 = 0x2D,
	k_EInputActionOrigin_SteamController_Reserved7 = 0x2E,
	k_EInputActionOrigin_SteamController_Reserved8 = 0x2F,
	k_EInputActionOrigin_SteamController_Reserved9 = 0x30,
	k_EInputActionOrigin_SteamController_Reserved10 = 0x31,
	k_EInputActionOrigin_PS4_X = 0x32,
	k_EInputActionOrigin_PS4_Circle = 0x33,
	k_EInputActionOrigin_PS4_Triangle = 0x34,
	k_EInputActionOrigin_PS4_Square = 0x35,
	k_EInputActionOrigin_PS4_LeftBumper = 0x36,
	k_EInputActionOrigin_PS4_RightBumper = 0x37,
	k_EInputActionOrigin_PS4_Options = 0x38,
	k_EInputActionOrigin_PS4_Share = 0x39,
	k_EInputActionOrigin_PS4_LeftPad_Touch = 0x3A,
	k_EInputActionOrigin_PS4_LeftPad_Swipe = 0x3B,
	k_EInputActionOrigin_PS4_LeftPad_Click = 0x3C,
	k_EInputActionOrigin_PS4_LeftPad_DPadNorth = 0x3D,
	k_EInputActionOrigin_PS4_LeftPad_DPadSouth = 0x3E,
	k_EInputActionOrigin_PS4_LeftPad_DPadWest = 0x3F,
	k_EInputActionOrigin_PS4_LeftPad_DPadEast = 0x40,
	k_EInputActionOrigin_PS4_RightPad_Touch = 0x41,
	k_EInputActionOrigin_PS4_RightPad_Swipe = 0x42,
	k_EInputActionOrigin_PS4_RightPad_Click = 0x43,
	k_EInputActionOrigin_PS4_RightPad_DPadNorth = 0x44,
	k_EInputActionOrigin_PS4_RightPad_DPadSouth = 0x45,
	k_EInputActionOrigin_PS4_RightPad_DPadWest = 0x46,
	k_EInputActionOrigin_PS4_RightPad_DPadEast = 0x47,
	k_EInputActionOrigin_PS4_CenterPad_Touch = 0x48,
	k_EInputActionOrigin_PS4_CenterPad_Swipe = 0x49,
	k_EInputActionOrigin_PS4_CenterPad_Click = 0x4A,
	k_EInputActionOrigin_PS4_CenterPad_DPadNorth = 0x4B,
	k_EInputActionOrigin_PS4_CenterPad_DPadSouth = 0x4C,
	k_EInputActionOrigin_PS4_CenterPad_DPadWest = 0x4D,
	k_EInputActionOrigin_PS4_CenterPad_DPadEast = 0x4E,
	k_EInputActionOrigin_PS4_LeftTrigger_Pull = 0x4F,
	k_EInputActionOrigin_PS4_LeftTrigger_Click = 0x50,
	k_EInputActionOrigin_PS4_RightTrigger_Pull = 0x51,
	k_EInputActionOrigin_PS4_RightTrigger_Click = 0x52,
	k_EInputActionOrigin_PS4_LeftStick_Move = 0x53,
	k_EInputActionOrigin_PS4_LeftStick_Click = 0x54,
	k_EInputActionOrigin_PS4_LeftStick_DPadNorth = 0x55,
	k_EInputActionOrigin_PS4_LeftStick_DPadSouth = 0x56,
	k_EInputActionOrigin_PS4_LeftStick_DPadWest = 0x57,
	k_EInputActionOrigin_PS4_LeftStick_DPadEast = 0x58,
	k_EInputActionOrigin_PS4_RightStick_Move = 0x59,
	k_EInputActionOrigin_PS4_RightStick_Click = 0x5A,
	k_EInputActionOrigin_PS4_RightStick_DPadNorth = 0x5B,
	k_EInputActionOrigin_PS4_RightStick_DPadSouth = 0x5C,
	k_EInputActionOrigin_PS4_RightStick_DPadWest = 0x5D,
	k_EInputActionOrigin_PS4_RightStick_DPadEast = 0x5E,
	k_EInputActionOrigin_PS4_DPad_North = 0x5F,
	k_EInputActionOrigin_PS4_DPad_South = 0x60,
	k_EInputActionOrigin_PS4_DPad_West = 0x61,
	k_EInputActionOrigin_PS4_DPad_East = 0x62,
	k_EInputActionOrigin_PS4_Gyro_Move = 0x63,
	k_EInputActionOrigin_PS4_Gyro_Pitch = 0x64,
	k_EInputActionOrigin_PS4_Gyro_Yaw = 0x65,
	k_EInputActionOrigin_PS4_Gyro_Roll = 0x66,
	k_EInputActionOrigin_PS4_DPad_Move = 0x67,
	k_EInputActionOrigin_PS4_Reserved1 = 0x68,
	k_EInputActionOrigin_PS4_Reserved2 = 0x69,
	k_EInputActionOrigin_PS4_Reserved3 = 0x6A,
	k_EInputActionOrigin_PS4_Reserved4 = 0x6B,
	k_EInputActionOrigin_PS4_Reserved5 = 0x6C,
	k_EInputActionOrigin_PS4_Reserved6 = 0x6D,
	k_EInputActionOrigin_PS4_Reserved7 = 0x6E,
	k_EInputActionOrigin_PS4_Reserved8 = 0x6F,
	k_EInputActionOrigin_PS4_Reserved9 = 0x70,
	k_EInputActionOrigin_PS4_Reserved10 = 0x71,
	k_EInputActionOrigin_XBoxOne_A = 0x72,
	k_EInputActionOrigin_XBoxOne_B = 0x73,
	k_EInputActionOrigin_XBoxOne_X = 0x74,
	k_EInputActionOrigin_XBoxOne_Y = 0x75,
	k_EInputActionOrigin_XBoxOne_LeftBumper = 0x76,
	k_EInputActionOrigin_XBoxOne_RightBumper = 0x77,
	k_EInputActionOrigin_XBoxOne_Menu = 0x78,
	k_EInputActionOrigin_XBoxOne_View = 0x79,
	k_EInputActionOrigin_XBoxOne_LeftTrigger_Pull = 0x7A,
	k_EInputActionOrigin_XBoxOne_LeftTrigger_Click = 0x7B,
	k_EInputActionOrigin_XBoxOne_RightTrigger_Pull = 0x7C,
	k_EInputActionOrigin_XBoxOne_RightTrigger_Click = 0x7D,
	k_EInputActionOrigin_XBoxOne_LeftStick_Move = 0x7E,
	k_EInputActionOrigin_XBoxOne_LeftStick_Click = 0x7F,
	k_EInputActionOrigin_XBoxOne_LeftStick_DPadNorth = 0x80,
	k_EInputActionOrigin_XBoxOne_LeftStick_DPadSouth = 0x81,
	k_EInputActionOrigin_XBoxOne_LeftStick_DPadWest = 0x82,
	k_EInputActionOrigin_XBoxOne_LeftStick_DPadEast = 0x83,
	k_EInputActionOrigin_XBoxOne_RightStick_Move = 0x84,
	k_EInputActionOrigin_XBoxOne_RightStick_Click = 0x85,
	k_EInputActionOrigin_XBoxOne_RightStick_DPadNorth = 0x86,
	k_EInputActionOrigin_XBoxOne_RightStick_DPadSouth = 0x87,
	k_EInputActionOrigin_XBoxOne_RightStick_DPadWest = 0x88,
	k_EInputActionOrigin_XBoxOne_RightStick_DPadEast = 0x89,
	k_EInputActionOrigin_XBoxOne_DPad_North = 0x8A,
	k_EInputActionOrigin_XBoxOne_DPad_South = 0x8B,
	k_EInputActionOrigin_XBoxOne_DPad_West = 0x8C,
	k_EInputActionOrigin_XBoxOne_DPad_East = 0x8D,
	k_EInputActionOrigin_XBoxOne_DPad_Move = 0x8E,
	k_EInputActionOrigin_XBoxOne_LeftGrip_Lower = 0x8F,
	k_EInputActionOrigin_XBoxOne_LeftGrip_Upper = 0x90,
	k_EInputActionOrigin_XBoxOne_RightGrip_Lower = 0x91,
	k_EInputActionOrigin_XBoxOne_RightGrip_Upper = 0x92,
	k_EInputActionOrigin_XBoxOne_Share = 0x93,
	k_EInputActionOrigin_XBoxOne_Reserved6 = 0x94,
	k_EInputActionOrigin_XBoxOne_Reserved7 = 0x95,
	k_EInputActionOrigin_XBoxOne_Reserved8 = 0x96,
	k_EInputActionOrigin_XBoxOne_Reserved9 = 0x97,
	k_EInputActionOrigin_XBoxOne_Reserved10 = 0x98,
	k_EInputActionOrigin_XBox360_A = 0x99,
	k_EInputActionOrigin_XBox360_B = 0x9A,
	k_EInputActionOrigin_XBox360_X = 0x9B,
	k_EInputActionOrigin_XBox360_Y = 0x9C,
	k_EInputActionOrigin_XBox360_LeftBumper = 0x9D,
	k_EInputActionOrigin_XBox360_RightBumper = 0x9E,
	k_EInputActionOrigin_XBox360_Start = 0x9F,
	k_EInputActionOrigin_XBox360_Back = 0xA0,
	k_EInputActionOrigin_XBox360_LeftTrigger_Pull = 0xA1,
	k_EInputActionOrigin_XBox360_LeftTrigger_Click = 0xA2,
	k_EInputActionOrigin_XBox360_RightTrigger_Pull = 0xA3,
	k_EInputActionOrigin_XBox360_RightTrigger_Click = 0xA4,
	k_EInputActionOrigin_XBox360_LeftStick_Move = 0xA5,
	k_EInputActionOrigin_XBox360_LeftStick_Click = 0xA6,
	k_EInputActionOrigin_XBox360_LeftStick_DPadNorth = 0xA7,
	k_EInputActionOrigin_XBox360_LeftStick_DPadSouth = 0xA8,
	k_EInputActionOrigin_XBox360_LeftStick_DPadWest = 0xA9,
	k_EInputActionOrigin_XBox360_LeftStick_DPadEast = 0xAA,
	k_EInputActionOrigin_XBox360_RightStick_Move = 0xAB,
	k_EInputActionOrigin_XBox360_RightStick_Click = 0xAC,
	k_EInputActionOrigin_XBox360_RightStick_DPadNorth = 0xAD,
	k_EInputActionOrigin_XBox360_RightStick_DPadSouth = 0xAE,
	k_EInputActionOrigin_XBox360_RightStick_DPadWest = 0xAF,
	k_EInputActionOrigin_XBox360_RightStick_DPadEast = 0xB0,
	k_EInputActionOrigin_XBox360_DPad_North = 0xB1,
	k_EInputActionOrigin_XBox360_DPad_South = 0xB2,
	k_EInputActionOrigin_XBox360_DPad_West = 0xB3,
	k_EInputActionOrigin_XBox360_DPad_East = 0xB4,
	k_EInputActionOrigin_XBox360_DPad_Move = 0xB5,
	k_EInputActionOrigin_XBox360_Reserved1 = 0xB6,
	k_EInputActionOrigin_XBox360_Reserved2 = 0xB7,
	k_EInputActionOrigin_XBox360_Reserved3 = 0xB8,
	k_EInputActionOrigin_XBox360_Reserved4 = 0xB9,
	k_EInputActionOrigin_XBox360_Reserved5 = 0xBA,
	k_EInputActionOrigin_XBox360_Reserved6 = 0xBB,
	k_EInputActionOrigin_XBox360_Reserved7 = 0xBC,
	k_EInputActionOrigin_XBox360_Reserved8 = 0xBD,
	k_EInputActionOrigin_XBox360_Reserved9 = 0xBE,
	k_EInputActionOrigin_XBox360_Reserved10 = 0xBF,
	k_EInputActionOrigin_Switch_A = 0xC0,
	k_EInputActionOrigin_Switch_B = 0xC1,
	k_EInputActionOrigin_Switch_X = 0xC2,
	k_EInputActionOrigin_Switch_Y = 0xC3,
	k_EInputActionOrigin_Switch_LeftBumper = 0xC4,
	k_EInputActionOrigin_Switch_RightBumper = 0xC5,
	k_EInputActionOrigin_Switch_Plus = 0xC6,
	k_EInputActionOrigin_Switch_Minus = 0xC7,
	k_EInputActionOrigin_Switch_Capture = 0xC8,
	k_EInputActionOrigin_Switch_LeftTrigger_Pull = 0xC9,
	k_EInputActionOrigin_Switch_LeftTrigger_Click = 0xCA,
	k_EInputActionOrigin_Switch_RightTrigger_Pull = 0xCB,
	k_EInputActionOrigin_Switch_RightTrigger_Click = 0xCC,
	k_EInputActionOrigin_Switch_LeftStick_Move = 0xCD,
	k_EInputActionOrigin_Switch_LeftStick_Click = 0xCE,
	k_EInputActionOrigin_Switch_LeftStick_DPadNorth = 0xCF,
	k_EInputActionOrigin_Switch_LeftStick_DPadSouth = 0xD0,
	k_EInputActionOrigin_Switch_LeftStick_DPadWest = 0xD1,
	k_EInputActionOrigin_Switch_LeftStick_DPadEast = 0xD2,
	k_EInputActionOrigin_Switch_RightStick_Move = 0xD3,
	k_EInputActionOrigin_Switch_RightStick_Click = 0xD4,
	k_EInputActionOrigin_Switch_RightStick_DPadNorth = 0xD5,
	k_EInputActionOrigin_Switch_RightStick_DPadSouth = 0xD6,
	k_EInputActionOrigin_Switch_RightStick_DPadWest = 0xD7,
	k_EInputActionOrigin_Switch_RightStick_DPadEast = 0xD8,
	k_EInputActionOrigin_Switch_DPad_North = 0xD9,
	k_EInputActionOrigin_Switch_DPad_South = 0xDA,
	k_EInputActionOrigin_Switch_DPad_West = 0xDB,
	k_EInputActionOrigin_Switch_DPad_East = 0xDC,
	k_EInputActionOrigin_Switch_ProGyro_Move = 0xDD,
	k_EInputActionOrigin_Switch_ProGyro_Pitch = 0xDE,
	k_EInputActionOrigin_Switch_ProGyro_Yaw = 0xDF,
	k_EInputActionOrigin_Switch_ProGyro_Roll = 0xE0,
	k_EInputActionOrigin_Switch_DPad_Move = 0xE1,
	k_EInputActionOrigin_Switch_Reserved1 = 0xE2,
	k_EInputActionOrigin_Switch_Reserved2 = 0xE3,
	k_EInputActionOrigin_Switch_Reserved3 = 0xE4,
	k_EInputActionOrigin_Switch_Reserved4 = 0xE5,
	k_EInputActionOrigin_Switch_Reserved5 = 0xE6,
	k_EInputActionOrigin_Switch_Reserved6 = 0xE7,
	k_EInputActionOrigin_Switch_Reserved7 = 0xE8,
	k_EInputActionOrigin_Switch_Reserved8 = 0xE9,
	k_EInputActionOrigin_Switch_Reserved9 = 0xEA,
	k_EInputActionOrigin_Switch_Reserved10 = 0xEB,
	k_EInputActionOrigin_Switch_RightGyro_Move = 0xEC,
	k_EInputActionOrigin_Switch_RightGyro_Pitch = 0xED,
	k_EInputActionOrigin_Switch_RightGyro_Yaw = 0xEE,
	k_EInputActionOrigin_Switch_RightGyro_Roll = 0xEF,
	k_EInputActionOrigin_Switch_LeftGyro_Move = 0xF0,
	k_EInputActionOrigin_Switch_LeftGyro_Pitch = 0xF1,
	k_EInputActionOrigin_Switch_LeftGyro_Yaw = 0xF2,
	k_EInputActionOrigin_Switch_LeftGyro_Roll = 0xF3,
	k_EInputActionOrigin_Switch_LeftGrip_Lower = 0xF4,
	k_EInputActionOrigin_Switch_LeftGrip_Upper = 0xF5,
	k_EInputActionOrigin_Switch_RightGrip_Lower = 0xF6,
	k_EInputActionOrigin_Switch_RightGrip_Upper = 0xF7,
	k_EInputActionOrigin_Switch_Reserved11 = 0xF8,
	k_EInputActionOrigin_Switch_Reserved12 = 0xF9,
	k_EInputActionOrigin_Switch_Reserved13 = 0xFA,
	k_EInputActionOrigin_Switch_Reserved14 = 0xFB,
	k_EInputActionOrigin_Switch_Reserved15 = 0xFC,
	k_EInputActionOrigin_Switch_Reserved16 = 0xFD,
	k_EInputActionOrigin_Switch_Reserved17 = 0xFE,
	k_EInputActionOrigin_Switch_Reserved18 = 0xFF,
	k_EInputActionOrigin_Switch_Reserved19 = 0x100,
	k_EInputActionOrigin_Switch_Reserved20 = 0x101,
	k_EInputActionOrigin_PS5_X = 0x102,
	k_EInputActionOrigin_PS5_Circle = 0x103,
	k_EInputActionOrigin_PS5_Triangle = 0x104,
	k_EInputActionOrigin_PS5_Square = 0x105,
	k_EInputActionOrigin_PS5_LeftBumper = 0x106,
	k_EInputActionOrigin_PS5_RightBumper = 0x107,
	k_EInputActionOrigin_PS5_Option = 0x108,
	k_EInputActionOrigin_PS5_Create = 0x109,
	k_EInputActionOrigin_PS5_Mute = 0x10A,
	k_EInputActionOrigin_PS5_LeftPad_Touch = 0x10B,
	k_EInputActionOrigin_PS5_LeftPad_Swipe = 0x10C,
	k_EInputActionOrigin_PS5_LeftPad_Click = 0x10D,
	k_EInputActionOrigin_PS5_LeftPad_DPadNorth = 0x10E,
	k_EInputActionOrigin_PS5_LeftPad_DPadSouth = 0x10F,
	k_EInputActionOrigin_PS5_LeftPad_DPadWest = 0x110,
	k_EInputActionOrigin_PS5_LeftPad_DPadEast = 0x111,
	k_EInputActionOrigin_PS5_RightPad_Touch = 0x112,
	k_EInputActionOrigin_PS5_RightPad_Swipe = 0x113,
	k_EInputActionOrigin_PS5_RightPad_Click = 0x114,
	k_EInputActionOrigin_PS5_RightPad_DPadNorth = 0x115,
	k_EInputActionOrigin_PS5_RightPad_DPadSouth = 0x116,
	k_EInputActionOrigin_PS5_RightPad_DPadWest = 0x117,
	k_EInputActionOrigin_PS5_RightPad_DPadEast = 0x118,
	k_EInputActionOrigin_PS5_CenterPad_Touch = 0x119,
	k_EInputActionOrigin_PS5_CenterPad_Swipe = 0x11A,
	k_EInputActionOrigin_PS5_CenterPad_Click = 0x11B,
	k_EInputActionOrigin_PS5_CenterPad_DPadNorth = 0x11C,
	k_EInputActionOrigin_PS5_CenterPad_DPadSouth = 0x11D,
	k_EInputActionOrigin_PS5_CenterPad_DPadWest = 0x11E,
	k_EInputActionOrigin_PS5_CenterPad_DPadEast = 0x11F,
	k_EInputActionOrigin_PS5_LeftTrigger_Pull = 0x120,
	k_EInputActionOrigin_PS5_LeftTrigger_Click = 0x121,
	k_EInputActionOrigin_PS5_RightTrigger_Pull = 0x122,
	k_EInputActionOrigin_PS5_RightTrigger_Click = 0x123,
	k_EInputActionOrigin_PS5_LeftStick_Move = 0x124,
	k_EInputActionOrigin_PS5_LeftStick_Click = 0x125,
	k_EInputActionOrigin_PS5_LeftStick_DPadNorth = 0x126,
	k_EInputActionOrigin_PS5_LeftStick_DPadSouth = 0x127,
	k_EInputActionOrigin_PS5_LeftStick_DPadWest = 0x128,
	k_EInputActionOrigin_PS5_LeftStick_DPadEast = 0x129,
	k_EInputActionOrigin_PS5_RightStick_Move = 0x12A,
	k_EInputActionOrigin_PS5_RightStick_Click = 0x12B,
	k_EInputActionOrigin_PS5_RightStick_DPadNorth = 0x12C,
	k_EInputActionOrigin_PS5_RightStick_DPadSouth = 0x12D,
	k_EInputActionOrigin_PS5_RightStick_DPadWest = 0x12E,
	k_EInputActionOrigin_PS5_RightStick_DPadEast = 0x12F,
	k_EInputActionOrigin_PS5_DPad_North = 0x130,
	k_EInputActionOrigin_PS5_DPad_South = 0x131,
	k_EInputActionOrigin_PS5_DPad_West = 0x132,
	k_EInputActionOrigin_PS5_DPad_East = 0x133,
	k_EInputActionOrigin_PS5_Gyro_Move = 0x134,
	k_EInputActionOrigin_PS5_Gyro_Pitch = 0x135,
	k_EInputActionOrigin_PS5_Gyro_Yaw = 0x136,
	k_EInputActionOrigin_PS5_Gyro_Roll = 0x137,
	k_EInputActionOrigin_PS5_DPad_Move = 0x138,
	k_EInputActionOrigin_PS5_Reserved1 = 0x139,
	k_EInputActionOrigin_PS5_Reserved2 = 0x13A,
	k_EInputActionOrigin_PS5_Reserved3 = 0x13B,
	k_EInputActionOrigin_PS5_Reserved4 = 0x13C,
	k_EInputActionOrigin_PS5_Reserved5 = 0x13D,
	k_EInputActionOrigin_PS5_Reserved6 = 0x13E,
	k_EInputActionOrigin_PS5_Reserved7 = 0x13F,
	k_EInputActionOrigin_PS5_Reserved8 = 0x140,
	k_EInputActionOrigin_PS5_Reserved9 = 0x141,
	k_EInputActionOrigin_PS5_Reserved10 = 0x142,
	k_EInputActionOrigin_PS5_Reserved11 = 0x143,
	k_EInputActionOrigin_PS5_Reserved12 = 0x144,
	k_EInputActionOrigin_PS5_Reserved13 = 0x145,
	k_EInputActionOrigin_PS5_Reserved14 = 0x146,
	k_EInputActionOrigin_PS5_Reserved15 = 0x147,
	k_EInputActionOrigin_PS5_Reserved16 = 0x148,
	k_EInputActionOrigin_PS5_Reserved17 = 0x149,
	k_EInputActionOrigin_PS5_Reserved18 = 0x14A,
	k_EInputActionOrigin_PS5_Reserved19 = 0x14B,
	k_EInputActionOrigin_PS5_Reserved20 = 0x14C,
	k_EInputActionOrigin_SteamDeck_A = 0x14D,
	k_EInputActionOrigin_SteamDeck_B = 0x14E,
	k_EInputActionOrigin_SteamDeck_X = 0x14F,
	k_EInputActionOrigin_SteamDeck_Y = 0x150,
	k_EInputActionOrigin_SteamDeck_L1 = 0x151,
	k_EInputActionOrigin_SteamDeck_R1 = 0x152,
	k_EInputActionOrigin_SteamDeck_Menu = 0x153,
	k_EInputActionOrigin_SteamDeck_View = 0x154,
	k_EInputActionOrigin_SteamDeck_LeftPad_Touch = 0x155,
	k_EInputActionOrigin_SteamDeck_LeftPad_Swipe = 0x156,
	k_EInputActionOrigin_SteamDeck_LeftPad_Click = 0x157,
	k_EInputActionOrigin_SteamDeck_LeftPad_DPadNorth = 0x158,
	k_EInputActionOrigin_SteamDeck_LeftPad_DPadSouth = 0x159,
	k_EInputActionOrigin_SteamDeck_LeftPad_DPadWest = 0x15A,
	k_EInputActionOrigin_SteamDeck_LeftPad_DPadEast = 0x15B,
	k_EInputActionOrigin_SteamDeck_RightPad_Touch = 0x15C,
	k_EInputActionOrigin_SteamDeck_RightPad_Swipe = 0x15D,
	k_EInputActionOrigin_SteamDeck_RightPad_Click = 0x15E,
	k_EInputActionOrigin_SteamDeck_RightPad_DPadNorth = 0x15F,
	k_EInputActionOrigin_SteamDeck_RightPad_DPadSouth = 0x160,
	k_EInputActionOrigin_SteamDeck_RightPad_DPadWest = 0x161,
	k_EInputActionOrigin_SteamDeck_RightPad_DPadEast = 0x162,
	k_EInputActionOrigin_SteamDeck_L2_SoftPull = 0x163,
	k_EInputActionOrigin_SteamDeck_L2 = 0x164,
	k_EInputActionOrigin_SteamDeck_R2_SoftPull = 0x165,
	k_EInputActionOrigin_SteamDeck_R2 = 0x166,
	k_EInputActionOrigin_SteamDeck_LeftStick_Move = 0x167,
	k_EInputActionOrigin_SteamDeck_L3 = 0x168,
	k_EInputActionOrigin_SteamDeck_LeftStick_DPadNorth = 0x169,
	k_EInputActionOrigin_SteamDeck_LeftStick_DPadSouth = 0x16A,
	k_EInputActionOrigin_SteamDeck_LeftStick_DPadWest = 0x16B,
	k_EInputActionOrigin_SteamDeck_LeftStick_DPadEast = 0x16C,
	k_EInputActionOrigin_SteamDeck_LeftStick_Touch = 0x16D,
	k_EInputActionOrigin_SteamDeck_RightStick_Move = 0x16E,
	k_EInputActionOrigin_SteamDeck_R3 = 0x16F,
	k_EInputActionOrigin_SteamDeck_RightStick_DPadNorth = 0x170,
	k_EInputActionOrigin_SteamDeck_RightStick_DPadSouth = 0x171,
	k_EInputActionOrigin_SteamDeck_RightStick_DPadWest = 0x172,
	k_EInputActionOrigin_SteamDeck_RightStick_DPadEast = 0x173,
	k_EInputActionOrigin_SteamDeck_RightStick_Touch = 0x174,
	k_EInputActionOrigin_SteamDeck_L4 = 0x175,
	k_EInputActionOrigin_SteamDeck_R4 = 0x176,
	k_EInputActionOrigin_SteamDeck_L5 = 0x177,
	k_EInputActionOrigin_SteamDeck_R5 = 0x178,
	k_EInputActionOrigin_SteamDeck_DPad_Move = 0x179,
	k_EInputActionOrigin_SteamDeck_DPad_North = 0x17A,
	k_EInputActionOrigin_SteamDeck_DPad_South = 0x17B,
	k_EInputActionOrigin_SteamDeck_DPad_West = 0x17C,
	k_EInputActionOrigin_SteamDeck_DPad_East = 0x17D,
	k_EInputActionOrigin_SteamDeck_Gyro_Move = 0x17E,
	k_EInputActionOrigin_SteamDeck_Gyro_Pitch = 0x17F,
	k_EInputActionOrigin_SteamDeck_Gyro_Yaw = 0x180,
	k_EInputActionOrigin_SteamDeck_Gyro_Roll = 0x181,
	k_EInputActionOrigin_SteamDeck_Reserved1 = 0x182,
	k_EInputActionOrigin_SteamDeck_Reserved2 = 0x183,
	k_EInputActionOrigin_SteamDeck_Reserved3 = 0x184,
	k_EInputActionOrigin_SteamDeck_Reserved4 = 0x185,
	k_EInputActionOrigin_SteamDeck_Reserved5 = 0x186,
	k_EInputActionOrigin_SteamDeck_Reserved6 = 0x187,
	k_EInputActionOrigin_SteamDeck_Reserved7 = 0x188,
	k_EInputActionOrigin_SteamDeck_Reserved8 = 0x189,
	k_EInputActionOrigin_SteamDeck_Reserved9 = 0x18A,
	k_EInputActionOrigin_SteamDeck_Reserved10 = 0x18B,
	k_EInputActionOrigin_SteamDeck_Reserved11 = 0x18C,
	k_EInputActionOrigin_SteamDeck_Reserved12 = 0x18D,
	k_EInputActionOrigin_SteamDeck_Reserved13 = 0x18E,
	k_EInputActionOrigin_SteamDeck_Reserved14 = 0x18F,
	k_EInputActionOrigin_SteamDeck_Reserved15 = 0x190,
	k_EInputActionOrigin_SteamDeck_Reserved16 = 0x191,
	k_EInputActionOrigin_SteamDeck_Reserved17 = 0x192,
	k_EInputActionOrigin_SteamDeck_Reserved18 = 0x193,
	k_EInputActionOrigin_SteamDeck_Reserved19 = 0x194,
	k_EInputActionOrigin_SteamDeck_Reserved20 = 0x195,
	k_EInputActionOrigin_Count = 0x196,
	k_EInputActionOrigin_MaximumPossibleValue = 0x7FFF
};

enum class ESteamInputGlyphSize:int
{
	k_ESteamInputGlyphSize_Small = 0x0,
	k_ESteamInputGlyphSize_Medium = 0x1,
	k_ESteamInputGlyphSize_Large = 0x2,
	k_ESteamInputGlyphSize_Count = 0x3
};

enum class EControllerHapticLocation:int
{
	k_EControllerHapticLocation_Left = 0x1,
	k_EControllerHapticLocation_Right = 0x2,
	k_EControllerHapticLocation_Both = 0x3
};

enum class ESteamPartyBeaconLocationData:int
{
	k_ESteamPartyBeaconLocationDataInvalid = 0x0,
	k_ESteamPartyBeaconLocationDataName = 0x1,
	k_ESteamPartyBeaconLocationDataIconURLSmall = 0x2,
	k_ESteamPartyBeaconLocationDataIconURLMedium = 0x3,
	k_ESteamPartyBeaconLocationDataIconURLLarge = 0x4
};

enum class ESteamDeviceFormFactor:int
{
	k_ESteamDeviceFormFactorUnknown = 0x0,
	k_ESteamDeviceFormFactorPhone = 0x1,
	k_ESteamDeviceFormFactorTablet = 0x2,
	k_ESteamDeviceFormFactorComputer = 0x3,
	k_ESteamDeviceFormFactorTV = 0x4
};

enum class ESteamPartyBeaconLocationType:int
{
	k_ESteamPartyBeaconLocationType_Invalid = 0x0,
	k_ESteamPartyBeaconLocationType_ChatGroup = 0x1,
	k_ESteamPartyBeaconLocationType_Max = 0x2
};

enum class ESteamInputActionEventType:int
{
	ESteamInputActionEventType_DigitalAction = 0x0,
	ESteamInputActionEventType_AnalogAction = 0x1
};

enum class EInputSourceMode:int
{
	k_EInputSourceMode_None = 0x0,
	k_EInputSourceMode_Dpad = 0x1,
	k_EInputSourceMode_Buttons = 0x2,
	k_EInputSourceMode_FourButtons = 0x3,
	k_EInputSourceMode_AbsoluteMouse = 0x4,
	k_EInputSourceMode_RelativeMouse = 0x5,
	k_EInputSourceMode_JoystickMove = 0x6,
	k_EInputSourceMode_JoystickMouse = 0x7,
	k_EInputSourceMode_JoystickCamera = 0x8,
	k_EInputSourceMode_ScrollWheel = 0x9,
	k_EInputSourceMode_Trigger = 0xA,
	k_EInputSourceMode_TouchMenu = 0xB,
	k_EInputSourceMode_MouseJoystick = 0xC,
	k_EInputSourceMode_MouseRegion = 0xD,
	k_EInputSourceMode_RadialMenu = 0xE,
	k_EInputSourceMode_SingleButton = 0xF,
	k_EInputSourceMode_Switches = 0x10
};

enum class ESteamNetworkingSocketsDebugOutputType:int
{
	k_ESteamNetworkingSocketsDebugOutputType_None = 0x0,
	k_ESteamNetworkingSocketsDebugOutputType_Bug = 0x1,
	k_ESteamNetworkingSocketsDebugOutputType_Error = 0x2,
	k_ESteamNetworkingSocketsDebugOutputType_Important = 0x3,
	k_ESteamNetworkingSocketsDebugOutputType_Warning = 0x4,
	k_ESteamNetworkingSocketsDebugOutputType_Msg = 0x5,
	k_ESteamNetworkingSocketsDebugOutputType_Verbose = 0x6,
	k_ESteamNetworkingSocketsDebugOutputType_Debug = 0x7,
	k_ESteamNetworkingSocketsDebugOutputType_Everything = 0x8,
	k_ESteamNetworkingSocketsDebugOutputType__Force32Bit = 0x7FFFFFFF
};

enum class ESteamNetworkingConnectionState:int
{
	k_ESteamNetworkingConnectionState_None = 0x0,
	k_ESteamNetworkingConnectionState_Connecting = 0x1,
	k_ESteamNetworkingConnectionState_FindingRoute = 0x2,
	k_ESteamNetworkingConnectionState_Connected = 0x3,
	k_ESteamNetworkingConnectionState_ClosedByPeer = 0x4,
	k_ESteamNetworkingConnectionState_ProblemDetectedLocally = 0x5,
	k_ESteamNetworkingConnectionState_FinWait = 0xFF,
	k_ESteamNetworkingConnectionState_Linger = 0xFE,
	k_ESteamNetworkingConnectionState_Dead = 0xFD,
	k_ESteamNetworkingConnectionState__Force32Bit = 0x7FFFFFFF
};

enum class ESteamNetworkingAvailability:int
{
	k_ESteamNetworkingAvailability_CannotTry = 0x9A,
	k_ESteamNetworkingAvailability_Failed = 0x9B,
	k_ESteamNetworkingAvailability_Previously = 0x9C,
	k_ESteamNetworkingAvailability_Retrying = 0xF6,
	k_ESteamNetworkingAvailability_NeverTried = 0x1,
	k_ESteamNetworkingAvailability_Waiting = 0x2,
	k_ESteamNetworkingAvailability_Attempting = 0x3,
	k_ESteamNetworkingAvailability_Current = 0x64,
	k_ESteamNetworkingAvailability_Unknown = 0x0,
	k_ESteamNetworkingAvailability__Force32bit = 0x7FFFFFFF
};

enum class ESteamNetworkingGetConfigValueResult:int
{
	k_ESteamNetworkingGetConfigValue_BadValue = 0xFF,
	k_ESteamNetworkingGetConfigValue_BadScopeObj = 0xFE,
	k_ESteamNetworkingGetConfigValue_BufferTooSmall = 0xFD,
	k_ESteamNetworkingGetConfigValue_OK = 0x1,
	k_ESteamNetworkingGetConfigValue_OKInherited = 0x2,
	k_ESteamNetworkingGetConfigValueResult__Force32Bit = 0x7FFFFFFF
};

enum class FSteamConnectionMethod:signed char
{
	None = 0x0,
	Direct = 0x1,
	P2P = 0x2,
	PartnerHosted = 0x3
};

enum class EColorVisionDeficiency:unsigned char
{
	NormalVision = 0x0,
	Deuteranope = 0x1,
	Protanope = 0x2,
	Tritanope = 0x3
};

enum class EAudioParameterType:unsigned char
{
	None = 0x0,
	Boolean = 0x1,
	Integer = 0x2,
	Float = 0x3,
	String = 0x4,
	Object = 0x5,
	NoneArray = 0x6,
	BooleanArray = 0x7,
	IntegerArray = 0x8,
	FloatArray = 0x9,
	StringArray = 0xA,
	ObjectArray = 0xB,
	Trigger = 0xC,
	COUNT = 0xD
};

enum class EIntersectionResult:int
{
	NotComputed = 0x0,
	Intersects = 0x1,
	NoIntersection = 0x2,
	InvalidQuery = 0x3
};

enum class EIntersectionType:int
{
	Empty = 0x0,
	Point = 0x1,
	Segment = 0x2,
	Line = 0x3,
	Polygon = 0x4,
	Plane = 0x5,
	MultiSegment = 0x6,
	Unknown = 0x7
};

namespace EAutoReceiveInput
{
	enum Type:int
	{
		Disabled = 0x0,
		Player0 = 0x1,
		Player1 = 0x2,
		Player2 = 0x3,
		Player3 = 0x4,
		Player4 = 0x5,
		Player5 = 0x6,
		Player6 = 0x7,
		Player7 = 0x8
	};
}

enum class EResizeBufferFlags:int
{
	None = 0x0,
	AllowSlackOnGrow = 0x1,
	AllowSlackOnReduce = 0x2
};

enum class ETextureChromaticAdaptationMethod:unsigned char
{
	TCAM_None = 0x0,
	TCAM_Bradford = 0x1,
	TCAM_CAT02 = 0x2
};

enum class EModulationRouting:unsigned char
{
	Disable = 0x0,
	Inherit = 0x1,
	Override = 0x2,
	Union = 0x3
};

enum class EVectorQuantization:unsigned char
{
	RoundWholeNumber = 0x0,
	RoundOneDecimal = 0x1,
	RoundTwoDecimals = 0x2
};

enum class EDynamicMeshComponentColorOverrideMode:unsigned char
{
	None = 0x0,
	VertexColors = 0x1,
	Polygroups = 0x2,
	Constant = 0x3
};

enum class ReverbPreset:int
{
	REVERB_Default = 0x0,
	REVERB_Bathroom = 0x1,
	REVERB_StoneRoom = 0x2,
	REVERB_Auditorium = 0x3,
	REVERB_ConcertHall = 0x4,
	REVERB_Cave = 0x5,
	REVERB_Hallway = 0x6,
	REVERB_StoneCorridor = 0x7,
	REVERB_Alley = 0x8,
	REVERB_Forest = 0x9,
	REVERB_City = 0xA,
	REVERB_Mountains = 0xB,
	REVERB_Quarry = 0xC,
	REVERB_Plain = 0xD,
	REVERB_ParkingLot = 0xE,
	REVERB_SewerPipe = 0xF,
	REVERB_Underwater = 0x10,
	REVERB_SmallRoom = 0x11,
	REVERB_MediumRoom = 0x12,
	REVERB_LargeRoom = 0x13,
	REVERB_MediumHall = 0x14,
	REVERB_LargeHall = 0x15,
	REVERB_Plate = 0x16,
	REVERB_MAX = 0x17
};

enum class ECustomBoneAttributeLookup:unsigned char
{
	BoneOnly = 0x0,
	ImmediateParent = 0x1,
	ParentHierarchy = 0x2
};

enum class ETextFlowDirection:unsigned char
{
	Auto = 0x0,
	LeftToRight = 0x1,
	RightToLeft = 0x2,
	Culture = 0x3
};

enum class EPackageReloadPhase:unsigned char
{
	PrePackageLoad = 0x0,
	PrePackageFixup = 0x1,
	OnPackageFixup = 0x2,
	PostPackageFixup = 0x3,
	PreBatch = 0x4,
	PostBatchPreGC = 0x5,
	PostBatchPostGC = 0x6
};

namespace ENavigationAreaMode
{
	enum Type:int
	{
		Apply = 0x0,
		Replace = 0x1,
		ApplyInLowPass = 0x2,
		ReplaceInLowPass = 0x3
	};
}

enum class EHoudiniParameterType:unsigned char
{
	Invalid = 0x0,
	Button = 0x1,
	ButtonStrip = 0x2,
	Color = 0x3,
	ColorRamp = 0x4,
	File = 0x5,
	FileDir = 0x6,
	FileGeo = 0x7,
	FileImage = 0x8,
	Float = 0x9,
	FloatRamp = 0xA,
	Folder = 0xB,
	FolderList = 0xC,
	Input = 0xD,
	Int = 0xE,
	IntChoice = 0xF,
	Label = 0x10,
	MultiParm = 0x11,
	Separator = 0x12,
	String = 0x13,
	StringChoice = 0x14,
	StringAssetRef = 0x15,
	Toggle = 0x16
};

enum class ESteamAuthStatus:unsigned char
{
	None = 0x0,
	AuthSuccess = 0x1,
	AuthFail = 0x2,
	ValidationStarted = 0x4,
	KickUser = 0x8,
	FailKick = 0xA,
	HasOrIsPendingAuth = 0x5
};

enum class EFlushLevelStreamingType:unsigned char
{
	None = 0x0,
	Full = 0x1,
	Visibility = 0x2
};

enum class EAsyncTraceType:unsigned char
{
	Test = 0x0,
	Single = 0x1,
	Multi = 0x2
};

enum class EHoudiniFolderParameterType:unsigned char
{
	Invalid = 0x0,
	Collapsible = 0x1,
	Simple = 0x2,
	Tabs = 0x3,
	Radio = 0x4,
	Other = 0x5
};

enum class EUserVerificationStatus:int
{
	NotStarted = 0x0,
	CheckingAccountExistsFromListenServer = 0x1,
	CheckingAccountExistsFromDedicatedServer = 0x2,
	CheckingSanctions = 0x3,
	EstablishingAntiCheatProof = 0x4,
	WaitingForAntiCheatIntegrity = 0x5,
	Verified = 0x6,
	Failed = 0x7
};

enum class EAuthPhaseFailureCode:int
{
	Success = 0x0,
	All_CanNotAccessConfig = 0x1000,
	All_CanNotAccessAntiCheat = 0x1001,
	All_CanNotAccessOSS = 0x1002,
	All_CanNotAccessSocketSubsystem = 0x1003,
	All_InvalidMessageType = 0x1004,
	All_ConnectionHasGoneAway = 0x1005,
	Phase_AutomaticEncryption_AutomaticEncryptionNotCompiled = 0x2000,
	Phase_AutomaticEncryption_DedicatedServerMisconfigured = 0x2001,
	Phase_AutomaticEncryption_FailedToSignConnectionKeyPair = 0x2002,
	Phase_AntiCheatProof_InvalidSignatureForUnprotectedClient = 0x2100,
	Phase_AntiCheatProof_AntiCheatRegistrationFailed = 0x2101,
	Phase_AntiCheatIntegrity_KickedDueToEACFailure = 0x2200,
	Phase_LegacyCredentialAuth_ConnectionNotEncrypted = 0x2300,
	Phase_LegacyIdentityCheck_CanNotCallUserInfo = 0x2400,
	Phase_LegacyIdentityCheck_UserAccountNotFound = 0x2401,
	Phase_LegacyIdentityCheck_UserAccountNotFoundAfterLoad = 0x2402,
	Phase_SanctionCheck_AccountBanned = 0x2500,
	Phase_SanctionCheck_FailedToCopySanctionResult = 0x2501,
	Phase_SanctionCheck_FailedToRetrieveSanctions = 0x2502,
	Phase_P2PAddressCheck_InvalidSourceAddress = 0x2600,
	Phase_P2PAddressCheck_UserIdDoesNotMatchSource = 0x2601,
	Msg_RequestClientEphemeralKey_UnexpectedAutomaticEncryptionNotEnabled = 0x3000,
	Msg_RequestClientEphemeralKey_UnexpectedIncorrectRole = 0x3001,
	Msg_RequestClientEphemeralKey_KeyNotLoaded = 0x3002,
	Msg_RequestClientEphemeralKey_InvalidData = 0x3003,
	Msg_RequestClientEphemeralKey_UntrustedDedicatedServer = 0x3004,
	Msg_RequestClientEphemeralKey_ResponsePacketGenerationFailed = 0x3005,
	Msg_DeliverClientEphemeralKey_UnexpectedAutomaticEncryptionNotEnabled = 0x3100,
	Msg_DeliverClientEphemeralKey_UnexpectedIncorrectRole = 0x3101,
	Msg_DeliverClientEphemeralKey_InvalidData = 0x3102,
	Msg_DeliverClientEphemeralKey_FailedToVerify = 0x3103,
	Msg_DeliverClientEphemeralKey_FailedToEncrypt = 0x3104,
	Msg_SymmetricKeyExchange_UnexpectedAutomaticEncryptionNotEnabled = 0x3200,
	Msg_SymmetricKeyExchange_UnexpectedIncorrectRole = 0x3201,
	Msg_SymmetricKeyExchange_InvalidData = 0x3202,
	Msg_SymmetricKeyExchange_FailedToDecrypt = 0x3203,
	Msg_RequestClientToken_ConnectionNotEncrypted = 0x3300,
	Msg_RequestClientToken_UnexpectedIncorrectRole = 0x3301,
	Msg_RequestClientToken_UnexpectedTrustedServersNotEnabled = 0x3302,
	Msg_RequestClientToken_ConnectionNotTrusted = 0x3303,
	Msg_RequestClientToken_InvalidUserId = 0x3304,
	Msg_RequestClientToken_MissingTransferrableUserCredentials = 0x3305,
	Msg_DeliverClientToken_ConnectionNotEncrypted = 0x3400,
	Msg_DeliverClientToken_UnexpectedIncorrectRole = 0x3401,
	Msg_DeliverClientToken_UnexpectedTrustedServersNotEnabled = 0x3402,
	Msg_DeliverClientToken_ConnectionNotTrusted = 0x3403,
	Msg_DeliverClientToken_InvalidUserId = 0x3404,
	Msg_DeliverClientToken_TokenIsForADifferentAccount = 0x3405,
	Msg_DeliverClientToken_AuthenticationFailed = 0x3406,
	Msg_RequestIdToken_ConnectionNotEncrypted = 0x3500,
	Msg_RequestIdToken_UnexpectedIncorrectRole = 0x3501,
	Msg_RequestIdToken_ConnectionNotTrusted = 0x3502,
	Msg_RequestIdToken_InvalidUserId = 0x3503,
	Msg_RequestIdToken_CanNotRetrieveIdToken = 0x3504,
	Msg_DeliverIdToken_ConnectionNotEncrypted = 0x3600,
	Msg_DeliverIdToken_UnexpectedIncorrectRole = 0x3601,
	Msg_DeliverIdToken_ConnectionNotTrusted = 0x3602,
	Msg_DeliverIdToken_TokenIsForADifferentAccount = 0x3603,
	Msg_DeliverIdToken_AuthenticationFailed = 0x3604,
	Msg_EnableEncryption_UnexpectedAutomaticEncryptionNotEnabled = 0x3700,
	Msg_EnableEncryption_UnexpectedIncorrectRole = 0x3701
};

enum class EEOSNetDriverRole:signed char
{
	DedicatedServer = 0x0,
	ListenServer = 0x1,
	ClientConnectedToDedicatedServer = 0x2,
	ClientConnectedToListenServer = 0x3
};

enum class EOS_EAuthScopeFlags:int
{
	EOS_AS_NoFlags = 0x0,
	EOS_AS_BasicProfile = 0x1,
	EOS_AS_FriendsList = 0x2,
	EOS_AS_Presence = 0x4,
	EOS_AS_FriendsManagement = 0x8,
	EOS_AS_Email = 0x10,
	EOS_AS_Country = 0x20
};

enum class EStatTypingRule:unsigned char
{
	Int32 = 0x0,
	Bool = 0x1,
	FloatTruncated = 0x2,
	FloatEncoded = 0x3,
	DoubleEncoded = 0x4
};

enum class EGeometryScriptMeshSelectionType:unsigned char
{
	Vertices = 0x0,
	Triangles = 0x1,
	Polygroups = 0x2
};

enum class EGeometryScriptCombineSelectionMode:unsigned char
{
	Add = 0x0,
	Subtract = 0x1,
	Intersection = 0x2
};

enum class ESteamAuthMsgType:unsigned char
{
	None = 0x0,
	Auth = 0x1,
	Result = 0x2,
	ResendKey = 0x3,
	ResendResult = 0x4,
	Max = 0x5
};

enum class ESteamAuthResponseCode:unsigned char
{
	OK = 0x0,
	NotConnectedToSteam = 0x1,
	NoOwnership = 0x2,
	VACBanned = 0x3,
	LoggedInElsewhere = 0x4,
	VACCheckTimeout = 0x5,
	TicketCancelled = 0x6,
	TicketAlreadyUsed = 0x7,
	TicketInvalid = 0x8,
	PublisherBanned = 0x9,
	FailedToCreateUser = 0x14,
	Count = 0x15
};

enum class EOS_EAntiCheatCommonClientAuthStatus:int
{
	EOS_ACCCAS_Invalid = 0x0,
	EOS_ACCCAS_LocalAuthComplete = 0x1,
	EOS_ACCCAS_RemoteAuthComplete = 0x2
};

enum class EOS_EAntiCheatCommonClientAction:int
{
	EOS_ACCCA_Invalid = 0x0,
	EOS_ACCCA_RemovePlayer = 0x1
};

enum class EGeometryScriptMeshSelectionConversionType:unsigned char
{
	NoConversion = 0x0,
	ToVertices = 0x1,
	ToTriangles = 0x2,
	ToPolygroups = 0x3
};

enum class EGeometryScriptEmptySelectionBehavior:unsigned char
{
	FullMeshSelection = 0x0,
	EmptySelection = 0x1
};

enum class EMultiBlockType:unsigned char
{
	None = 0x0,
	ButtonRow = 0x1,
	EditableText = 0x2,
	Heading = 0x3,
	MenuEntry = 0x4,
	Separator = 0x5,
	ToolBarButton = 0x6,
	ToolBarComboButton = 0x7,
	Widget = 0x8
};

enum class EPingType:unsigned int
{
	None = 0x0,
	RoundTrip = 0x1,
	RoundTripExclFrame = 0x2,
	ICMP = 0x4,
	UDPQoS = 0x8,
	Max = 0x8,
	Count = 0x4
};

enum class ENetPingControlMessage:unsigned char
{
	SetPingAddress = 0x0,
	PingFailure = 0x1,
	Max = 0x1
};

enum class EPingAverageType:unsigned char
{
	None = 0x0,
	MovingAverage = 0x1,
	PlayerStateAvg = 0x2
};

enum class EBlueprintType:int
{
	BPTYPE_Normal = 0x0,
	BPTYPE_Const = 0x1,
	BPTYPE_MacroLibrary = 0x2,
	BPTYPE_Interface = 0x3,
	BPTYPE_LevelScript = 0x4,
	BPTYPE_FunctionLibrary = 0x5,
	BPTYPE_MAX = 0x6
};

enum class EDynamicResolutionStatus:int
{
	Unsupported = 0x0,
	Disabled = 0x1,
	Paused = 0x2,
	Enabled = 0x3,
	DebugForceEnabled = 0x4
};

enum class EMaterialTranslucencyPass:int
{
	MTP_BeforeDOF = 0x0,
	MTP_AfterDOF = 0x1,
	MTP_AfterMotionBlur = 0x2,
	MTP_MAX = 0x3
};

enum class ERDGPooledBufferAlignment:unsigned char
{
	None = 0x0,
	Page = 0x1,
	PowerOfTwo = 0x2
};

enum class ERootMotionModifierState:unsigned char
{
	Waiting = 0x0,
	Active = 0x1,
	MarkedForRemoval = 0x2,
	Disabled = 0x3
};

enum class EWarpPointAnimProvider:unsigned char
{
	None = 0x0,
	Static = 0x1,
	Bone = 0x2
};

enum class EMotionWarpRotationType:unsigned char
{
	Default = 0x0,
	Facing = 0x1
};

enum class EBlendSpaceAxis:int
{
	BSA_None = 0x0,
	BSA_X = 0x1,
	BSA_Y = 0x2
};

enum class EVTRequestPagePriority:int
{
	Normal = 0x0,
	High = 0x1
};

enum class AnimationKeyFormat:int
{
	AKF_ConstantKeyLerp = 0x0,
	AKF_VariableKeyLerp = 0x1,
	AKF_PerTrackCompression = 0x2,
	AKF_MAX = 0x3
};

enum class ovrPlatformInitializeResult_:int
{
	ovrPlatformInitialize_Success = 0x0,
	ovrPlatformInitialize_Uninitialized = 0xFF,
	ovrPlatformInitialize_PreLoaded = 0xFE,
	ovrPlatformInitialize_FileInvalid = 0xFD,
	ovrPlatformInitialize_SignatureInvalid = 0xFC,
	ovrPlatformInitialize_UnableToVerify = 0xFB,
	ovrPlatformInitialize_VersionMismatch = 0xFA,
	ovrPlatformInitialize_Unknown = 0xF9,
	ovrPlatformInitialize_InvalidCredentials = 0xF8,
	ovrPlatformInitialize_NotEntitled = 0xF7
};

enum class ovrVoipMuteState_:int
{
	ovrVoipMuteState_Unknown = 0x0,
	ovrVoipMuteState_Muted = 0x1,
	ovrVoipMuteState_Unmuted = 0x2
};

enum class ovrMessageType_:int
{
	ovrMessage_Unknown = 0x0,
	ovrMessage_Achievements_AddCount = 0x3E76231,
	ovrMessage_Achievements_AddFields = 0x14AA2129,
	ovrMessage_Achievements_GetAllDefinitions = 0x3D3458D,
	ovrMessage_Achievements_GetAllProgress = 0x4F9FDE1D,
	ovrMessage_Achievements_GetDefinitionsByName = 0x629101BC,
	ovrMessage_Achievements_GetNextAchievementDefinitionArrayPage = 0x2A7DD255,
	ovrMessage_Achievements_GetNextAchievementProgressArrayPage = 0x2F42E727,
	ovrMessage_Achievements_GetProgressByName = 0x152663B1,
	ovrMessage_Achievements_Unlock = 0x593CCBDD,
	ovrMessage_ApplicationLifecycle_GetRegisteredPIDs = 0x4E5CF62,
	ovrMessage_ApplicationLifecycle_GetSessionKey = 0x3AAF591D,
	ovrMessage_ApplicationLifecycle_RegisterSessionKey = 0x4DB6AFF8,
	ovrMessage_Application_GetVersion = 0x68670A0E,
	ovrMessage_Application_LaunchOtherApp = 0x54E2D1F8,
	ovrMessage_AssetFile_Delete = 0x6D5D7886,
	ovrMessage_AssetFile_DeleteById = 0x5AE8CD52,
	ovrMessage_AssetFile_DeleteByName = 0x420AC1CF,
	ovrMessage_AssetFile_Download = 0x11449FC5,
	ovrMessage_AssetFile_DownloadById = 0x2D008992,
	ovrMessage_AssetFile_DownloadByName = 0x6336CEFA,
	ovrMessage_AssetFile_DownloadCancel = 0x80AD3C7,
	ovrMessage_AssetFile_DownloadCancelById = 0x51659514,
	ovrMessage_AssetFile_DownloadCancelByName = 0x446AECFA,
	ovrMessage_AssetFile_GetList = 0x4AFC6F74,
	ovrMessage_AssetFile_Status = 0x2D32F60,
	ovrMessage_AssetFile_StatusById = 0x5D955D38,
	ovrMessage_AssetFile_StatusByName = 0x41CFDA50,
	ovrMessage_CloudStorage2_GetUserDirectoryPath = 0x76A42EEE,
	ovrMessage_CloudStorage_Delete = 0x28DA456D,
	ovrMessage_CloudStorage_GetNextCloudStorageMetadataArrayPage = 0x5C07A2EF,
	ovrMessage_CloudStorage_Load = 0x40846B41,
	ovrMessage_CloudStorage_LoadBucketMetadata = 0x7327A50D,
	ovrMessage_CloudStorage_LoadConflictMetadata = 0x445A52F2,
	ovrMessage_CloudStorage_LoadHandle = 0x326ADA36,
	ovrMessage_CloudStorage_LoadMetadata = 0x3E6A292,
	ovrMessage_CloudStorage_ResolveKeepLocal = 0x30588D05,
	ovrMessage_CloudStorage_ResolveKeepRemote = 0x7525A306,
	ovrMessage_CloudStorage_Save = 0x4BBB5C2E,
	ovrMessage_Entitlement_GetIsViewerEntitled = 0x186B58B1,
	ovrMessage_IAP_ConsumePurchase = 0x1FBB72D9,
	ovrMessage_IAP_GetNextProductArrayPage = 0x1BD94AAF,
	ovrMessage_IAP_GetNextPurchaseArrayPage = 0x47570A95,
	ovrMessage_IAP_GetProductsBySKU = 0x7E9ACAF5,
	ovrMessage_IAP_GetViewerPurchases = 0x3A0F8419,
	ovrMessage_IAP_GetViewerPurchasesDurableCache = 0x63599E2B,
	ovrMessage_IAP_LaunchCheckoutFlow = 0x3F9B0D0D,
	ovrMessage_LanguagePack_GetCurrent = 0x1F90F0D5,
	ovrMessage_LanguagePack_SetCurrent = 0x5B4FBBE0,
	ovrMessage_Leaderboard_GetEntries = 0x5DB3474C,
	ovrMessage_Leaderboard_GetEntriesAfterRank = 0x18378BEF,
	ovrMessage_Leaderboard_GetNextEntries = 0x4E207CD9,
	ovrMessage_Leaderboard_GetPreviousEntries = 0x4901DAC0,
	ovrMessage_Leaderboard_WriteEntry = 0x117FC8FE,
	ovrMessage_Livestreaming_GetStatus = 0x489A6995,
	ovrMessage_Livestreaming_PauseStream = 0x369C7683,
	ovrMessage_Livestreaming_ResumeStream = 0x22526D8F,
	ovrMessage_Matchmaking_Browse = 0x1E6532C8,
	ovrMessage_Matchmaking_Browse2 = 0x66429E5B,
	ovrMessage_Matchmaking_Cancel = 0x206849AF,
	ovrMessage_Matchmaking_Cancel2 = 0x10FE8DD4,
	ovrMessage_Matchmaking_CreateAndEnqueueRoom = 0x604C5DC8,
	ovrMessage_Matchmaking_CreateAndEnqueueRoom2 = 0x295BEADB,
	ovrMessage_Matchmaking_CreateRoom = 0x33B132A,
	ovrMessage_Matchmaking_CreateRoom2 = 0x496DA384,
	ovrMessage_Matchmaking_Enqueue = 0x40C16C71,
	ovrMessage_Matchmaking_Enqueue2 = 0x121212B5,
	ovrMessage_Matchmaking_EnqueueRoom = 0x708A4064,
	ovrMessage_Matchmaking_EnqueueRoom2 = 0x5528DBA4,
	ovrMessage_Matchmaking_GetAdminSnapshot = 0x3C215F94,
	ovrMessage_Matchmaking_GetStats = 0x42FC9438,
	ovrMessage_Matchmaking_JoinRoom = 0x4D32D7FD,
	ovrMessage_Matchmaking_ReportResultInsecure = 0x1A36D18D,
	ovrMessage_Matchmaking_StartMatch = 0x44D40945,
	ovrMessage_Media_ShareToFacebook = 0xE38AEF,
	ovrMessage_Notification_GetNextRoomInviteNotificationArrayPage = 0x621FB77,
	ovrMessage_Notification_GetRoomInvites = 0x6F916B92,
	ovrMessage_Notification_MarkAsRead = 0x717259E3,
	ovrMessage_Party_GetCurrent = 0x47933760,
	ovrMessage_RichPresence_Clear = 0x57B752B3,
	ovrMessage_RichPresence_Set = 0x3C147509,
	ovrMessage_Room_CreateAndJoinPrivate = 0x75D6E377,
	ovrMessage_Room_CreateAndJoinPrivate2 = 0x5A3A6243,
	ovrMessage_Room_Get = 0x659A8FB8,
	ovrMessage_Room_GetCurrent = 0x9A6A504,
	ovrMessage_Room_GetCurrentForUser = 0xE0017E5,
	ovrMessage_Room_GetInvitableUsers = 0x1E325792,
	ovrMessage_Room_GetInvitableUsers2 = 0x4F53E8B0,
	ovrMessage_Room_GetModeratedRooms = 0x983FD77,
	ovrMessage_Room_GetNextRoomArrayPage = 0x4E8379C6,
	ovrMessage_Room_InviteUser = 0x4129EC13,
	ovrMessage_Room_Join = 0x16CA8F09,
	ovrMessage_Room_Join2 = 0x4DAB1C42,
	ovrMessage_Room_KickUser = 0x49835736,
	ovrMessage_Room_LaunchInvitableUserFlow = 0x323FE273,
	ovrMessage_Room_Leave = 0x72382475,
	ovrMessage_Room_SetDescription = 0x3044852F,
	ovrMessage_Room_UpdateDataStore = 0x26E4028,
	ovrMessage_Room_UpdateMembershipLockStatus = 0x370BB7AC,
	ovrMessage_Room_UpdateOwner = 0x32B63D1D,
	ovrMessage_Room_UpdatePrivateRoomJoinPolicy = 0x1141029B,
	ovrMessage_User_Get = 0x6BCF9E47,
	ovrMessage_User_GetAccessToken = 0x6A85ABE,
	ovrMessage_User_GetLoggedInUser = 0x436F345D,
	ovrMessage_User_GetLoggedInUserFriends = 0x587C2A8D,
	ovrMessage_User_GetLoggedInUserFriendsAndRooms = 0x5E870B87,
	ovrMessage_User_GetLoggedInUserRecentlyMetUsersAndRooms = 0x295FBA30,
	ovrMessage_User_GetNextUserAndRoomArrayPage = 0x7FBDD2DF,
	ovrMessage_User_GetNextUserArrayPage = 0x267CF743,
	ovrMessage_User_GetOrgScopedID = 0x18F0B01B,
	ovrMessage_User_GetSdkAccounts = 0x67526A83,
	ovrMessage_User_GetUserProof = 0x22810483,
	ovrMessage_User_LaunchFriendRequestFlow = 0x904B598,
	ovrMessage_User_LaunchProfile = 0xA397297,
	ovrMessage_Voip_SetSystemVoipSuppressed = 0x453FC9AA,
	ovrMessage_Notification_ApplicationLifecycle_LaunchIntentChanged = 0x4B34CA3,
	ovrMessage_Notification_AssetFile_DownloadUpdate = 0x2FDD0CCD,
	ovrMessage_Notification_Cal_FinalizeApplication = 0x750C5099,
	ovrMessage_Notification_Cal_ProposeApplication = 0x2E7451F5,
	ovrMessage_Notification_HTTP_Transfer = 0x7DD46E2F,
	ovrMessage_Notification_Livestreaming_StatusChange = 0x2247596E,
	ovrMessage_Notification_Matchmaking_MatchFound = 0xBC3FCD7,
	ovrMessage_Notification_Networking_ConnectionStateChange = 0x5E02D49A,
	ovrMessage_Notification_Networking_PeerConnectRequest = 0x4D31E2CF,
	ovrMessage_Notification_Networking_PingResult = 0x51153012,
	ovrMessage_Notification_Party_PartyUpdate = 0x1D118AB2,
	ovrMessage_Notification_Room_InviteAccepted = 0x6D1071B1,
	ovrMessage_Notification_Room_InviteReceived = 0x6A499D54,
	ovrMessage_Notification_Room_RoomUpdate = 0x60EC3C2F,
	ovrMessage_Notification_Voip_ConnectRequest = 0x36243816,
	ovrMessage_Notification_Voip_StateChange = 0x34EFA660,
	ovrMessage_Notification_Voip_SystemVoipState = 0x58D254A5,
	ovrMessage_PlatformInitializeWithAccessToken = 0x35692F2B,
	ovrMessage_Platform_InitializeStandaloneOculus = 0x51F8CE0C,
	ovrMessage_PlatformInitializeAndroidAsynchronous = 0x1AD307B4,
	ovrMessage_PlatformInitializeWindowsAsynchronous = 0x6DA7BA8F
};

enum class ovrRoomJoinability_:int
{
	ovrRoom_JoinabilityUnknown = 0x0,
	ovrRoom_JoinabilityAreIn = 0x1,
	ovrRoom_JoinabilityAreKicked = 0x2,
	ovrRoom_JoinabilityCanJoin = 0x3,
	ovrRoom_JoinabilityIsFull = 0x4,
	ovrRoom_JoinabilityNoViewer = 0x5,
	ovrRoom_JoinabilityPolicyPrevents = 0x6
};

enum class ovrRoomJoinPolicy_:int
{
	ovrRoom_JoinPolicyNone = 0x0,
	ovrRoom_JoinPolicyEveryone = 0x1,
	ovrRoom_JoinPolicyFriendsOfMembers = 0x2,
	ovrRoom_JoinPolicyFriendsOfOwner = 0x3,
	ovrRoom_JoinPolicyInvitedUsers = 0x4,
	ovrRoom_JoinPolicyUnknown = 0x5
};

enum class ovrLeaderboardStartAt_:int
{
	ovrLeaderboard_StartAtTop = 0x0,
	ovrLeaderboard_StartAtCenteredOnViewer = 0x1,
	ovrLeaderboard_StartAtCenteredOnViewerOrTop = 0x2,
	ovrLeaderboard_StartAtUnknown = 0x3
};

enum class ovrLeaderboardFilterType_:int
{
	ovrLeaderboard_FilterNone = 0x0,
	ovrLeaderboard_FilterFriends = 0x1,
	ovrLeaderboard_FilterUnknown = 0x2
};

enum class ovrUserPresenceStatus_:int
{
	ovrUserPresenceStatus_Unknown = 0x0,
	ovrUserPresenceStatus_Online = 0x1,
	ovrUserPresenceStatus_Offline = 0x2
};

enum class ovrPeerConnectionState_:int
{
	ovrPeerState_Unknown = 0x0,
	ovrPeerState_Connected = 0x1,
	ovrPeerState_Timeout = 0x2,
	ovrPeerState_Closed = 0x3
};

enum class ovrSendPolicy_:int
{
	ovrSend_Unreliable = 0x0,
	ovrSend_Reliable = 0x1,
	ovrSend_Unknown = 0x2
};

enum class ovrKeyValuePairType_:int
{
	ovrKeyValuePairType_String = 0x0,
	ovrKeyValuePairType_Int = 0x1,
	ovrKeyValuePairType_Double = 0x2,
	ovrKeyValuePairType_Unknown = 0x3
};

enum class ovrMatchmakingCriterionImportance_:int
{
	ovrMatchmaking_ImportanceRequired = 0x0,
	ovrMatchmaking_ImportanceHigh = 0x1,
	ovrMatchmaking_ImportanceMedium = 0x2,
	ovrMatchmaking_ImportanceLow = 0x3,
	ovrMatchmaking_ImportanceUnknown = 0x4
};

enum class ovrAchievementType_:int
{
	ovrAchievement_TypeUnknown = 0x0,
	ovrAchievement_TypeSimple = 0x1,
	ovrAchievement_TypeBitfield = 0x2,
	ovrAchievement_TypeCount = 0x3
};

enum class EGetWorldErrorMode:int
{
	ReturnNull = 0x0,
	LogAndReturnNull = 0x1,
	Assert = 0x2
};

enum class EStreamingSourcePriority:unsigned char
{
	Highest = 0x0,
	High = 0x40,
	Normal = 0x80,
	Low = 0xC0,
	Lowest = 0xFF,
	Default = 0x80
};

enum class EComputeNTBsFlags:unsigned int
{
	None = 0x0,
	Normals = 0x1,
	Tangents = 0x2,
	UseMikkTSpace = 0x4,
	WeightedNTBs = 0x8,
	BlendOverlappingNormals = 0x10,
	IgnoreDegenerateTriangles = 0x20
};

enum class EExprToken:unsigned char
{
	EX_LocalVariable = 0x0,
	EX_InstanceVariable = 0x1,
	EX_DefaultVariable = 0x2,
	EX_Return = 0x4,
	EX_Jump = 0x6,
	EX_JumpIfNot = 0x7,
	EX_Assert = 0x9,
	EX_Nothing = 0xB,
	EX_Let = 0xF,
	EX_ClassContext = 0x12,
	EX_MetaCast = 0x13,
	EX_LetBool = 0x14,
	EX_EndParmValue = 0x15,
	EX_EndFunctionParms = 0x16,
	EX_Self = 0x17,
	EX_Skip = 0x18,
	EX_Context = 0x19,
	EX_Context_FailSilent = 0x1A,
	EX_VirtualFunction = 0x1B,
	EX_FinalFunction = 0x1C,
	EX_IntConst = 0x1D,
	EX_FloatConst = 0x1E,
	EX_StringConst = 0x1F,
	EX_ObjectConst = 0x20,
	EX_NameConst = 0x21,
	EX_RotationConst = 0x22,
	EX_VectorConst = 0x23,
	EX_ByteConst = 0x24,
	EX_IntZero = 0x25,
	EX_IntOne = 0x26,
	EX_True = 0x27,
	EX_False = 0x28,
	EX_TextConst = 0x29,
	EX_NoObject = 0x2A,
	EX_TransformConst = 0x2B,
	EX_IntConstByte = 0x2C,
	EX_NoInterface = 0x2D,
	EX_DynamicCast = 0x2E,
	EX_StructConst = 0x2F,
	EX_EndStructConst = 0x30,
	EX_SetArray = 0x31,
	EX_EndArray = 0x32,
	EX_PropertyConst = 0x33,
	EX_UnicodeStringConst = 0x34,
	EX_Int64Const = 0x35,
	EX_UInt64Const = 0x36,
	EX_DoubleConst = 0x37,
	EX_Cast = 0x38,
	EX_SetSet = 0x39,
	EX_EndSet = 0x3A,
	EX_SetMap = 0x3B,
	EX_EndMap = 0x3C,
	EX_SetConst = 0x3D,
	EX_EndSetConst = 0x3E,
	EX_MapConst = 0x3F,
	EX_EndMapConst = 0x40,
	EX_Vector3fConst = 0x41,
	EX_StructMemberContext = 0x42,
	EX_LetMulticastDelegate = 0x43,
	EX_LetDelegate = 0x44,
	EX_LocalVirtualFunction = 0x45,
	EX_LocalFinalFunction = 0x46,
	EX_LocalOutVariable = 0x48,
	EX_DeprecatedOp4A = 0x4A,
	EX_InstanceDelegate = 0x4B,
	EX_PushExecutionFlow = 0x4C,
	EX_PopExecutionFlow = 0x4D,
	EX_ComputedJump = 0x4E,
	EX_PopExecutionFlowIfNot = 0x4F,
	EX_Breakpoint = 0x50,
	EX_InterfaceContext = 0x51,
	EX_ObjToInterfaceCast = 0x52,
	EX_EndOfScript = 0x53,
	EX_CrossInterfaceCast = 0x54,
	EX_InterfaceToObjCast = 0x55,
	EX_WireTracepoint = 0x5A,
	EX_SkipOffsetConst = 0x5B,
	EX_AddMulticastDelegate = 0x5C,
	EX_ClearMulticastDelegate = 0x5D,
	EX_Tracepoint = 0x5E,
	EX_LetObj = 0x5F,
	EX_LetWeakObjPtr = 0x60,
	EX_BindDelegate = 0x61,
	EX_RemoveMulticastDelegate = 0x62,
	EX_CallMulticastDelegate = 0x63,
	EX_LetValueOnPersistentFrame = 0x64,
	EX_ArrayConst = 0x65,
	EX_EndArrayConst = 0x66,
	EX_SoftObjectConst = 0x67,
	EX_CallMath = 0x68,
	EX_SwitchValue = 0x69,
	EX_InstrumentationEvent = 0x6A,
	EX_ArrayGetByRef = 0x6B,
	EX_ClassSparseDataVariable = 0x6C,
	EX_FieldPathConst = 0x6D,
	EX_StringLocConst = 0x6E,
	EX_Max = 0xFF
};

enum class EGeometryScriptBakeCurvatureClampMode:unsigned char
{
	None = 0x0,
	OnlyPositive = 0x1,
	OnlyNegative = 0x2
};

enum class EGeometryScriptBakeCurvatureColorMode:unsigned char
{
	Grayscale = 0x0,
	RedBlue = 0x1,
	RedGreenBlue = 0x2
};

enum class EGeometryScriptBakeCurvatureTypeMode:unsigned char
{
	Mean = 0x0,
	Max = 0x1,
	Min = 0x2,
	Gaussian = 0x3
};

enum class EGeometryScriptBakeTypes:unsigned char
{
	TangentSpaceNormal = 0x0,
	ObjectSpaceNormal = 0x1,
	FaceNormal = 0x2,
	BentNormal = 0x3,
	Position = 0x4,
	Curvature = 0x5,
	AmbientOcclusion = 0x6,
	Texture = 0x7,
	MultiTexture = 0x8,
	VertexColor = 0x9,
	MaterialID = 0xA
};

enum class EGeometryScriptBakeNormalSpace:unsigned char
{
	Tangent = 0x0,
	Object = 0x1
};

enum class ERDGHandleRegistryDestructPolicy:int
{
	Registry = 0x0,
	Allocator = 0x1,
	Never = 0x2
};

enum class EGeometryScriptBakeResolution:unsigned char
{
	Resolution16 = 0x0,
	Resolution32 = 0x1,
	Resolution64 = 0x2,
	Resolution128 = 0x3,
	Resolution256 = 0x4,
	Resolution512 = 0x5,
	Resolution1024 = 0x6,
	Resolution2048 = 0x7,
	Resolution4096 = 0x8,
	Resolution8192 = 0x9
};

enum class EGeometryScriptBakeBitDepth:unsigned char
{
	ChannelBits8 = 0x0,
	ChannelBits16 = 0x1
};

enum class EGeometryScriptBakeSamplesPerPixel:unsigned char
{
	Sample1 = 0x0,
	Sample4 = 0x1,
	Sample16 = 0x2,
	Sample64 = 0x3,
	Samples256 = 0x4
};

enum class EGeometryScriptBakeOutputMode:unsigned char
{
	RGBA = 0x0,
	PerChannel = 0x1
};

enum class EMeshLODIdentifier:int
{
	LOD0 = 0x0,
	LOD1 = 0x1,
	LOD2 = 0x2,
	LOD3 = 0x3,
	LOD4 = 0x4,
	LOD5 = 0x5,
	LOD6 = 0x6,
	LOD7 = 0x7,
	HiResSource = 0x64,
	Default = 0x3E8,
	MaxQuality = 0x3E9
};

enum class EAchievementType:int
{
	Unknown = 0x0,
	Simple = 0x1,
	Bitfield = 0x2,
	Count = 0x3
};

namespace EHttpResponseCodes
{
	enum Type:int
	{
		Unknown = 0x0,
		Continue = 0x64,
		SwitchProtocol = 0x65,
		Ok = 0xC8,
		Created = 0xC9,
		Accepted = 0xCA,
		Partial = 0xCB,
		NoContent = 0xCC,
		ResetContent = 0xCD,
		PartialContent = 0xCE,
		Ambiguous = 0x12C,
		Moved = 0x12D,
		Redirect = 0x12E,
		RedirectMethod = 0x12F,
		NotModified = 0x130,
		UseProxy = 0x131,
		RedirectKeepVerb = 0x133,
		BadRequest = 0x190,
		Denied = 0x191,
		PaymentReq = 0x192,
		Forbidden = 0x193,
		NotFound = 0x194,
		BadMethod = 0x195,
		NoneAcceptable = 0x196,
		ProxyAuthReq = 0x197,
		RequestTimeout = 0x198,
		Conflict = 0x199,
		Gone = 0x19A,
		LengthRequired = 0x19B,
		PrecondFailed = 0x19C,
		RequestTooLarge = 0x19D,
		UriTooLong = 0x19E,
		UnsupportedMedia = 0x19F,
		TooManyRequests = 0x1AD,
		RetryWith = 0x1C1,
		ServerError = 0x1F4,
		NotSupported = 0x1F5,
		BadGateway = 0x1F6,
		ServiceUnavail = 0x1F7,
		GatewayTimeout = 0x1F8,
		VersionNotSup = 0x1F9
	};
}

namespace EHttpRequestStatus
{
	enum Type:int
	{
		NotStarted = 0x0,
		Processing = 0x1,
		Failed = 0x2,
		Failed_ConnectionError = 0x3,
		Succeeded = 0x4
	};
}

namespace FPlatformObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		VersionPlusOne = 0x1,
		LatestVersion = 0x0
	};
}

namespace FVRObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		UseFNameInsteadOfEControllerHandForMotionSource = 0x1,
		UseBoolsForARSessionConfigPlaneDetectionConfiguration = 0x2,
		UseSubobjectForStereoLayerShapeProperties = 0x3,
		VersionPlusOne = 0x4,
		LatestVersion = 0x3
	};
}

namespace FNetworkingObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		VersionPlusOne = 0x1,
		LatestVersion = 0x0
	};
}

namespace FOnlineObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		VersionPlusOne = 0x1,
		LatestVersion = 0x0
	};
}

namespace FFrameworkObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		UseBodySetupCollisionProfile = 0x1,
		AnimBlueprintSubgraphFix = 0x2,
		MeshSocketScaleUtilization = 0x3,
		ExplicitAttachmentRules = 0x4,
		MoveCompressedAnimDataToTheDDC = 0x5,
		FixNonTransactionalPins = 0x6,
		SmartNameRefactor = 0x7,
		AddSourceReferenceSkeletonToRig = 0x8,
		ConstraintInstanceBehaviorParameters = 0x9,
		PoseAssetSupportPerBoneMask = 0xA,
		PhysAssetUseSkeletalBodySetup = 0xB,
		RemoveSoundWaveCompressionName = 0xC,
		AddInternalClothingGraphicalSkinning = 0xD,
		WheelOffsetIsFromWheel = 0xE,
		MoveCurveTypesToSkeleton = 0xF,
		CacheDestructibleOverlaps = 0x10,
		GeometryCacheMissingMaterials = 0x11,
		LODsUseResolutionIndependentScreenSize = 0x12,
		BlendSpacePostLoadSnapToGrid = 0x13,
		SupportBlendSpaceRateScale = 0x14,
		LODHysteresisUseResolutionIndependentScreenSize = 0x15,
		ChangeAudioComponentOverrideSubtitlePriorityDefault = 0x16,
		HardSoundReferences = 0x17,
		EnforceConstInAnimBlueprintFunctionGraphs = 0x18,
		InputKeySelectorTextStyle = 0x19,
		EdGraphPinContainerType = 0x1A,
		ChangeAssetPinsToString = 0x1B,
		LocalVariablesBlueprintVisible = 0x1C,
		RemoveUField_Next = 0x1D,
		UserDefinedStructsBlueprintVisible = 0x1E,
		PinsStoreFName = 0x1F,
		UserDefinedStructsStoreDefaultInstance = 0x20,
		FunctionTerminatorNodesUseMemberReference = 0x21,
		EditableEventsUseConstRefParameters = 0x22,
		BlueprintGeneratedClassIsAlwaysAuthoritative = 0x23,
		EnforceBlueprintFunctionVisibility = 0x24,
		StoringUCSSerializationIndex = 0x25,
		VersionPlusOne = 0x26,
		LatestVersion = 0x25
	};
}

namespace FMobileObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		InstancedStaticMeshLightmapSerialization = 0x1,
		LQVolumetricLightmapLayers = 0x2,
		StoreReflectionCaptureCompressedMobile = 0x3,
		VersionPlusOne = 0x4,
		LatestVersion = 0x3
	};
}

namespace FBlueprintsObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		OverridenEventReferenceFixup = 0x1,
		CleanBlueprintFunctionFlags = 0x2,
		ArrayGetByRefUpgrade = 0x3,
		EdGraphPinOptimized = 0x4,
		AllowDeletionConformed = 0x5,
		AdvancedContainerSupport = 0x6,
		SCSHasComponentTemplateClass = 0x7,
		ComponentTemplateClassSupport = 0x8,
		ArrayGetFuncsReplacedByCustomNode = 0x9,
		DisallowObjectConfigVars = 0xA,
		VersionPlusOne = 0xB,
		LatestVersion = 0xA
	};
}

namespace FBuildObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		VersionPlusOne = 0x1,
		LatestVersion = 0x0
	};
}

enum class ETemperatureMethod:int
{
	TEMP_WhiteBalance = 0x0,
	TEMP_ColorTemperature = 0x1,
	TEMP_MAX = 0x2
};

enum class ENodeEnabledState:unsigned char
{
	Enabled = 0x0,
	Disabled = 0x1,
	DevelopmentOnly = 0x2
};

enum class ESaveOrphanPinMode:unsigned char
{
	SaveNone = 0x0,
	SaveAll = 0x1,
	SaveAllButExec = 0x2
};

enum class EByteOrderMark:signed char
{
	UTF8 = 0x0,
	Unspecified = 0x1
};

enum class ELargeMemoryReaderFlags:unsigned char
{
	None = 0x0,
	TakeOwnership = 0x1,
	Persistent = 0x2
};

enum class EBufferWriterFlags:unsigned char
{
	None = 0x0,
	TakeOwnership = 0x1,
	AllowResize = 0x2
};

enum class ECFCoreThumbsUpDirection:unsigned char
{
	None = 0x0,
	Up = 0x1,
	Down = 0x2
};

enum class ECppProperty:int
{
	EC_CppProperty = 0x0
};

enum class EHttpFlushReason:unsigned char
{
	Default = 0x0,
	Background = 0x1,
	Shutdown = 0x2,
	FullFlush = 0x3,
	Count = 0x4
};

enum class EReportNewBugStatus:unsigned char
{
	NotReporting = 0x0,
	TakingScreenShot = 0x1,
	WritingVideoReplayBufferToDisk = 0x2,
	Uploading = 0x3,
	Done = 0x4,
	Failed = 0x5
};

enum class EBakeTextureResolution:int
{
	Resolution16 = 0x10,
	Resolution32 = 0x20,
	Resolution64 = 0x40,
	Resolution128 = 0x80,
	Resolution256 = 0x100,
	Resolution512 = 0x200,
	Resolution1024 = 0x400,
	Resolution2048 = 0x800,
	Resolution4096 = 0x1000,
	Resolution8192 = 0x2000
};

enum class EBakeTextureSamplesPerPixel:int
{
	Sample1 = 0x1,
	Sample4 = 0x4,
	Sample16 = 0x10,
	Sample64 = 0x40,
	Sample256 = 0x100
};

enum class ECollisionQuery:unsigned char
{
	ObjectQuery = 0x0,
	TraceQuery = 0x1
};

enum class EGeometryScriptCombineAttributesMode:unsigned char
{
	EnableAllMatching = 0x0,
	UseTarget = 0x1,
	UseSource = 0x2
};

enum class EGeometryScriptSmoothBoneWeightsType:unsigned char
{
	DirectDistance = 0x0,
	GeodesicVoxel = 0x1
};

namespace FAssetRegistryVersion
{
	enum Type:int
	{
		PreVersioning = 0x0,
		HardSoftDependencies = 0x1,
		AddAssetRegistryState = 0x2,
		ChangedAssetData = 0x3,
		RemovedMD5Hash = 0x4,
		AddedHardManage = 0x5,
		AddedCookedMD5Hash = 0x6,
		AddedDependencyFlags = 0x7,
		FixedTags = 0x8,
		WorkspaceDomain = 0x9,
		PackageImportedClasses = 0xA,
		PackageFileSummaryVersionChange = 0xB,
		ObjectResourceOptionalVersionChange = 0xC,
		AddedChunkHashes = 0xD,
		ClassPaths = 0xE,
		RemoveAssetPathFNames = 0xF,
		AddedHeader = 0x10,
		AssetPackageDataHasExtension = 0x11,
		VersionPlusOne = 0x12,
		LatestVersion = 0x11
	};
}

enum class EGeometryScriptBooleanOperation:unsigned char
{
	Union = 0x0,
	Intersection = 0x1,
	Subtract = 0x2
};

enum class ECollisionShapeType:unsigned char
{
	Sphere = 0x0,
	Plane = 0x1,
	Box = 0x2,
	Capsule = 0x3,
	Convex = 0x4,
	Trimesh = 0x5,
	Heightfield = 0x6,
	None = 0x7
};

namespace ENavigationCoordSystem
{
	enum Type:int
	{
		Unreal = 0x0,
		Navigation = 0x1,
		MAX = 0x2
	};
}

enum class ERigTransformStackEntryType:int
{
	TransformPose = 0x0,
	ControlOffset = 0x1,
	ControlShape = 0x2,
	CurveValue = 0x3
};

namespace ERigTransformType
{
	enum Type:int
	{
		InitialLocal = 0x0,
		CurrentLocal = 0x1,
		InitialGlobal = 0x2,
		CurrentGlobal = 0x3,
		NumTransformTypes = 0x4
	};
}

enum class EEulerRotationOrder:unsigned char
{
	XYZ = 0x0,
	XZY = 0x1,
	YXZ = 0x2,
	YZX = 0x3,
	ZXY = 0x4,
	ZYX = 0x5
};

enum class EHairGeometryType:int
{
	Strands = 0x0,
	Cards = 0x1,
	Meshes = 0x2,
	NoneGeometry = 0x3
};

enum class EHairBindingType:int
{
	NoneBinding = 0x0,
	Rigid = 0x1,
	Skinning = 0x2
};

namespace EVertexColorViewMode
{
	enum Type:int
	{
		Invalid = 0x0,
		Color = 0x1,
		Alpha = 0x2,
		Red = 0x3,
		Green = 0x4,
		Blue = 0x5
	};
}

enum class TextureCookPlatformTilingSettings:unsigned char
{
	TCPTS_FromTextureGroup = 0x0,
	TCPTS_Tile = 0x1,
	TCPTS_DoNotTile = 0x2,
	TCPTS_MAX = 0x3
};

enum class ENavigationDataResolution:unsigned char
{
	Low = 0x0,
	Default = 0x1,
	High = 0x2,
	Invalid = 0x3,
	MAX = 0x3
};

enum class EUpdateRateShiftBucket:unsigned char
{
	ShiftBucket0 = 0x0,
	ShiftBucket1 = 0x1,
	ShiftBucket2 = 0x2,
	ShiftBucket3 = 0x3,
	ShiftBucket4 = 0x4,
	ShiftBucket5 = 0x5,
	ShiftBucketMax = 0x6
};

enum class ERigElementType:unsigned char
{
	None = 0x0,
	Bone = 0x1,
	Null = 0x2,
	Space = 0x2,
	Control = 0x4,
	Curve = 0x8,
	RigidBody = 0x10,
	Reference = 0x20,
	Last = 0x40,
	All = 0x3F,
	ToResetAfterConstructionEvent = 0xD
};

enum class ECompositeTextureMode:int
{
	CTM_Disabled = 0x0,
	CTM_NormalRoughnessToRed = 0x1,
	CTM_NormalRoughnessToGreen = 0x2,
	CTM_NormalRoughnessToBlue = 0x3,
	CTM_NormalRoughnessToAlpha = 0x4,
	CTM_MAX = 0x5
};

enum class ESkyLightSourceType:int
{
	SLS_CapturedScene = 0x0,
	SLS_SpecifiedCubemap = 0x1,
	SLS_MAX = 0x2
};

enum class EShowFlagShippingValue:int
{
	Dynamic = 0x0,
	ForceEnabled = 0x1,
	ForceDisabled = 0x2
};

enum class EGeometryScriptMathWarpType:unsigned char
{
	SinWave1D = 0x0,
	SinWave2D = 0x1,
	SinWave3D = 0x2
};

enum class EGeometryScriptFlareType:unsigned char
{
	SinMode = 0x0,
	SinSquaredMode = 0x1,
	TriangleMode = 0x2
};

enum class EWindowType:int
{
	Normal = 0x0,
	Menu = 0x1,
	ToolTip = 0x2,
	Notification = 0x3,
	CursorDecorator = 0x4,
	GameWindow = 0x5
};

enum class EGroomViewMode:unsigned char
{
	None = 0x0,
	SimHairStrands = 0x1,
	RenderHairStrands = 0x2,
	UV = 0x3,
	RootUV = 0x4,
	RootUDIM = 0x5,
	Seed = 0x6,
	Dimension = 0x7,
	RadiusVariation = 0x8,
	Tangent = 0x9,
	Color = 0xA,
	Roughness = 0xB,
	AO = 0xC,
	ClumpID = 0xD,
	Cluster = 0xE,
	ClusterAABB = 0xF,
	Group = 0x10,
	LODColoration = 0x11,
	ControlPoints = 0x12,
	MacroGroups = 0x13,
	LightBounds = 0x14,
	DeepOpacityMaps = 0x15,
	MacroGroupScreenRect = 0x16,
	SamplePerPixel = 0x17,
	CoverageType = 0x18,
	TAAResolveType = 0x19,
	VoxelsDensity = 0x1A,
	MeshProjection = 0x1B,
	Coverage = 0x1C,
	MaterialDepth = 0x1D,
	MaterialBaseColor = 0x1E,
	MaterialRoughness = 0x1F,
	MaterialSpecular = 0x20,
	MaterialTangent = 0x21,
	CardGuides = 0x22,
	Tile = 0x23,
	Count = 0x24
};

enum class ERDGImportedBufferFlags:int
{
	None = 0x0,
	CreateSRV = 0x1,
	CreateUAV = 0x2,
	CreateViews = 0x3
};

enum class EGeometryScriptMeshEditPolygroupMode:unsigned char
{
	PreserveExisting = 0x0,
	AutoGenerateNew = 0x1,
	SetConstant = 0x2
};

enum class EGeometryScriptMeshBevelSelectionMode:unsigned char
{
	TriangleArea = 0x0,
	AllPolygroupEdges = 0x1,
	SharedPolygroupEdges = 0x2
};

enum class EGeometryScriptLinearExtrudeDirection:unsigned char
{
	FixedDirection = 0x0,
	AverageFaceNormal = 0x1
};

enum class EGeometryScriptPolyOperationArea:unsigned char
{
	EntireSelection = 0x0,
	PerPolygroup = 0x1,
	PerTriangle = 0x2
};

enum class EGeometryScriptOffsetFacesType:unsigned char
{
	VertexNormal = 0x0,
	FaceNormal = 0x1,
	ParallelFaceOffset = 0x2
};

enum class EMemZeroed:int
{
	MEM_Zeroed = 0x1
};

enum class EReplicationGraphBehavior:unsigned char
{
	Default = 0x0,
	NotRouted = 0x1,
	RelevantAllConnections = 0x2,
	RelevantOwnerConnection = 0x3,
	RelevantTeamConnection = 0x4,
	NetChild_Dynamic = 0x40,
	NetChild_Static = 0x41,
	NetChild_ForceStaticDormancy = 0x42,
	Spatialize_Static = 0x80,
	Spatialize_Dynamic = 0x81,
	Spatialize_Dormancy = 0x82,
	Spatialize_ForceStaticDormancy = 0x83
};

enum class EHairStrandsAllocationType:unsigned char
{
	Immediate = 0x0,
	Deferred = 0x1
};

enum class EHairResourceLoadingType:unsigned char
{
	Async = 0x0,
	Sync = 0x1
};

enum class EHairResourceStatus:unsigned char
{
	None = 0x0,
	Loading = 0x1,
	Valid = 0x2
};

enum class EHairStrandsResourcesType:unsigned char
{
	Guides = 0x0,
	Strands = 0x1,
	Cards = 0x2
};

enum class EGeometryScriptTopologyConnectionType:unsigned char
{
	Geometric = 0x0,
	Polygroup = 0x1,
	MaterialID = 0x2
};

enum class EGroomInterpolationQuality:unsigned char
{
	Low = 0x0,
	Medium = 0x1,
	High = 0x2,
	Unknown = 0x3
};

enum class EGroomInterpolationWeight:unsigned char
{
	Parametric = 0x0,
	Root = 0x1,
	Index = 0x2,
	Unknown = 0x3
};

enum class EAutoPossessAI:unsigned char
{
	Disabled = 0x0,
	PlacedInWorld = 0x1,
	Spawned = 0x2,
	PlacedInWorldOrSpawned = 0x3
};

enum class EGeometryScriptTangentTypes:unsigned char
{
	FastMikkT = 0x0,
	PerTriangle = 0x1
};

enum class EMaterialFunctionUsage:unsigned char
{
	Default = 0x0,
	MaterialLayer = 0x1,
	MaterialLayerBlend = 0x2
};

enum class EGroomInterpolationType:unsigned char
{
	None = 0x0,
	RigidTransform = 0x2,
	OffsetTransform = 0x4,
	SmoothTransform = 0x8
};

enum class EGroomGeometryType:unsigned char
{
	Strands = 0x0,
	Cards = 0x1,
	Meshes = 0x2
};

enum class EGroomBindingType:unsigned char
{
	NoneBinding = 0x0,
	Rigid = 0x1,
	Skinning = 0x2
};

enum class EGroomStrandsSize:unsigned char
{
	None = 0x0,
	Size2 = 0x2,
	Size4 = 0x4,
	Size8 = 0x8,
	Size16 = 0x10,
	Size32 = 0x20
};

enum class EHairInterpolationQuality:unsigned char
{
	Low = 0x0,
	Medium = 0x1,
	High = 0x2,
	Unknown = 0x3
};

enum class EHairInterpolationWeight:unsigned char
{
	Parametric = 0x0,
	Root = 0x1,
	Index = 0x2,
	Distance = 0x3,
	Unknown = 0x4
};

enum class EGeometryScriptPrimitiveOriginMode:unsigned char
{
	Center = 0x0,
	Base = 0x1
};

enum class EGeometryScriptPrimitivePolygroupMode:unsigned char
{
	SingleGroup = 0x0,
	PerFace = 0x1,
	PerQuad = 0x2
};

enum class EGeometryScriptPrimitiveUVMode:unsigned char
{
	Uniform = 0x0,
	ScaleToFill = 0x1
};

enum class EGroomOverrideType:unsigned char
{
	Auto = 0x0,
	Enable = 0x1,
	Disable = 0x2
};

enum class EWaterRenderFlags:int
{
	eWRF_NONE = 0x0,
	eWRF_UNDER = 0x1,
	eWRF_ABOVE = 0x2,
	eWRF_UNDER_FOR_MASK = 0x4,
	eWRF_ABOVE_FOR_MASK = 0x8
};

enum class EAttenuationDistanceModel:unsigned char
{
	Linear = 0x0,
	Logarithmic = 0x1,
	Inverse = 0x2,
	LogReverse = 0x3,
	NaturalSound = 0x4,
	Custom = 0x5
};

enum class EHairCardsSourceType:unsigned char
{
	Procedural = 0x0,
	Imported = 0x1
};

enum class EHairCardsClusterType:unsigned char
{
	Low = 0x0,
	High = 0x1
};

enum class EHairCardsGenerationType:unsigned char
{
	CardsCount = 0x0,
	UseGuides = 0x1
};

enum class EPropertyExportCPPFlags:int
{
	CPPF_None = 0x0,
	CPPF_OptionalValue = 0x1,
	CPPF_ArgumentOrReturnValue = 0x2,
	CPPF_Implementation = 0x4,
	CPPF_CustomTypeName = 0x8,
	CPPF_NoConst = 0x10,
	CPPF_NoRef = 0x20,
	CPPF_NoStaticArray = 0x40,
	CPPF_BlueprintCppBackend = 0x80
};

enum class EHairAtlasTextureType:unsigned char
{
	Depth = 0x0,
	Tangent = 0x1,
	Attribute = 0x2,
	Coverage = 0x3,
	AuxilaryData = 0x4,
	Material = 0x5
};

enum class ENotifyRegistrationType:int
{
	NRT_Class = 0x0,
	NRT_ClassCDO = 0x1,
	NRT_Struct = 0x2,
	NRT_Enum = 0x3,
	NRT_Package = 0x4,
	NRT_NoExportObject = 0x5
};

enum class EGroomCacheAttributes:unsigned char
{
	None = 0x0,
	Position = 0x1,
	Width = 0x2,
	Color = 0x4,
	PositionWidth = 0x3,
	PositionColor = 0x5,
	WidthColor = 0x5,
	PositionWidthColor = 0x7
};

enum class EGroomCacheType:unsigned char
{
	None = 0x0,
	Strands = 0x1,
	Guides = 0x2
};

enum class EToolSide:int
{
	Left = 0x1,
	Mouse = 0x1,
	Right = 0x2
};

enum class EToolShutdownType:unsigned char
{
	Completed = 0x0,
	Accept = 0x1,
	Cancel = 0x2
};

enum class ECheatPunishType:unsigned char
{
	Unknown = 0x0,
	KickClient = 0x1,
	KickMatch = 0x2,
	PunishInfo = 0x3
};

enum class EGeometryScriptRemeshSmoothingType:unsigned char
{
	Uniform = 0x0,
	UVPreserving = 0x1,
	Mixed = 0x2
};

enum class EGeometryScriptRemeshEdgeConstraintType:unsigned char
{
	Fixed = 0x0,
	Refine = 0x1,
	Free = 0x2,
	Ignore = 0x3
};

enum class EGeometryScriptUniformRemeshTargetType:unsigned char
{
	TriangleCount = 0x0,
	TargetEdgeLength = 0x1
};

enum class ERemeshType:unsigned char
{
	Standard = 0x0,
	FullPass = 0x1,
	NormalFlow = 0x2
};

enum class ERemeshSmoothingType:unsigned char
{
	Uniform = 0x0,
	Cotangent = 0x1,
	MeanValue = 0x2
};

enum class EGeometryScriptFillHolesMethod:unsigned char
{
	Automatic = 0x0,
	MinimalFill = 0x1,
	PolygonTriangulation = 0x2,
	TriangleFan = 0x3,
	PlanarProjection = 0x4
};

enum class EGeometryScriptRemoveHiddenTrianglesMethod:unsigned char
{
	FastWindingNumber = 0x0,
	RaycastOcclusionTest = 0x1
};

enum class EGeometryScriptRepairMeshMode:unsigned char
{
	DeleteOnly = 0x0,
	RepairOrDelete = 0x1,
	RepairOrSkip = 0x2
};

namespace EIndexBufferStride
{
	enum Type:int
	{
		Force16Bit = 0x1,
		Force32Bit = 0x2,
		AutoDetect = 0x3
	};
}

enum class EGCTokenType:unsigned int
{
	Native = 0x0,
	NonNative = 0x1
};

enum class EHoleFillOpFillType:unsigned char
{
	TriangleFan = 0x0,
	PolygonEarClipping = 0x1,
	Planar = 0x2,
	Minimal = 0x3,
	Smooth = 0x4
};

enum class ESelectedObjectsModificationType:int
{
	Replace = 0x0,
	Add = 0x1,
	Remove = 0x2,
	Clear = 0x3
};

enum class ERigVMMemoryType:unsigned char
{
	Work = 0x0,
	Literal = 0x1,
	External = 0x2,
	Debug = 0x3,
	Invalid = 0x4
};

enum class ERigVMPropertyPathSegmentType:int
{
	StructMember = 0x0,
	ArrayElement = 0x1,
	MapValue = 0x2
};

enum class ERigVMExecuteResult:unsigned char
{
	Failed = 0x0,
	Succeeded = 0x1
};

enum class EGeometryScriptSamplingDistributionMode:unsigned char
{
	Uniform = 0x0,
	Smaller = 0x1,
	Larger = 0x2
};

enum class EGeometryScriptSamplingWeightMode:unsigned char
{
	WeightToRadius = 0x0,
	FilledWeightToRadius = 0x1,
	WeightedRandom = 0x2
};

enum class ERigVMParameterType:unsigned char
{
	Input = 0x0,
	Output = 0x1,
	Invalid = 0x2
};

enum class EEdGraphNodeDeprecationType:int
{
	NodeTypeIsDeprecated = 0x0,
	NodeHasDeprecatedReference = 0x1
};

enum class EStandardToolContextMaterials:int
{
	VertexColorMaterial = 0x1
};

enum class EMultiTransformerMode:int
{
	DefaultGizmo = 0x1,
	QuickAxisTranslation = 0x2
};

enum class ERigVMNameOp:unsigned char
{
	None = 0x0,
	Concat = 0x1,
	Left = 0x2,
	Right = 0x3,
	LeftChop = 0x4,
	RightChop = 0x5,
	ReplaceCase = 0x6,
	ReplaceNoCase = 0x7,
	EndsWithCase = 0x8,
	EndsWithNoCase = 0x9,
	StartsWithCase = 0xA,
	StartsWithNoCase = 0xB,
	ContainsCase = 0xC,
	ContainsNoCase = 0xD
};

enum class EGeometryScriptRemoveMeshSimplificationType:unsigned char
{
	StandardQEM = 0x0,
	VolumePreserving = 0x1,
	AttributeAware = 0x2
};

enum class ESelectiveTessellatePatternType:unsigned char
{
	ConcentricRings = 0x0
};

enum class ESceneSnapQueryTargetType:unsigned char
{
	None = 0x0,
	MeshVertex = 0x1,
	MeshEdge = 0x2,
	Grid = 0x4,
	All = 0x7
};

enum class ERigVMRegisterType:unsigned char
{
	Plain = 0x0,
	String = 0x1,
	Name = 0x2,
	Struct = 0x3,
	Invalid = 0x4
};

enum class EGeometryScriptUVFlattenMethod:unsigned char
{
	ExpMap = 0x0,
	Conformal = 0x1,
	SpectralConformal = 0x2
};

enum class EGeometryScriptUVIslandSource:unsigned char
{
	PolyGroups = 0x0,
	UVIslands = 0x1
};

enum class ERigVMPinDirection:unsigned char
{
	Input = 0x0,
	Output = 0x1,
	IO = 0x2,
	Visible = 0x3,
	Hidden = 0x4,
	Invalid = 0x5
};

enum class ETransformGizmoSubElements:unsigned __int64
{
	None = 0x0,
	TranslateAxisX = 0x2,
	TranslateAxisY = 0x4,
	TranslateAxisZ = 0x8,
	TranslateAllAxes = 0xE,
	TranslatePlaneXY = 0x10,
	TranslatePlaneXZ = 0x20,
	TranslatePlaneYZ = 0x40,
	TranslateAllPlanes = 0x70,
	RotateAxisX = 0x80,
	RotateAxisY = 0x100,
	RotateAxisZ = 0x200,
	RotateAllAxes = 0x380,
	ScaleAxisX = 0x400,
	ScaleAxisY = 0x800,
	ScaleAxisZ = 0x1000,
	ScaleAllAxes = 0x1C00,
	ScalePlaneYZ = 0x2000,
	ScalePlaneXZ = 0x4000,
	ScalePlaneXY = 0xFFFF8000,
	ScaleAllPlanes = 0xFFFFE000,
	ScaleUniform = 0x10000,
	StandardTranslateRotate = 0x3FE,
	TranslateRotateUniformScale = 0x103FE,
	FullTranslateRotateScale = 0x1FFFE
};

namespace FUE5ReleaseStreamObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		ReflectionMethodEnum = 0x1,
		WorldPartitionActorDescSerializeHLODInfo = 0x2,
		RemovingTessellation = 0x3,
		LevelInstanceSerializeRuntimeBehavior = 0x4,
		PoseAssetRuntimeRefactor = 0x5,
		WorldPartitionActorDescSerializeActorFolderPath = 0x6,
		HairStrandsVertexFormatChange = 0x7,
		AddChaosMaxLinearAngularSpeed = 0x8,
		PackedLevelInstanceVersion = 0x9,
		PackedLevelInstanceBoundsFix = 0xA,
		CustomPropertyAnimGraphNodesUseOptionalPinManager = 0xB,
		TextFormatArgumentData64bitSupport = 0xC,
		MaterialLayerStacksAreNotParameters = 0xD,
		MaterialInterfaceSavedCachedData = 0xE,
		AddClothMappingLODBias = 0xF,
		AddLevelActorPackagingScheme = 0x10,
		WorldPartitionActorDescSerializeAttachParent = 0x11,
		ConvertedActorGridPlacementToSpatiallyLoadedFlag = 0x12,
		ActorGridPlacementDeprecateDefaultValueFixup = 0x13,
		PackedLevelActorUseWorldPartitionActorDesc = 0x14,
		AddLevelActorFolders = 0x15,
		RemoveSkeletalMeshLODModelBulkDatas = 0x16,
		ExcludeBrightnessFromEncodedHDRCubemap = 0x17,
		VolumetricCloudSampleCountUnification = 0x18,
		PoseAssetRawDataGUID = 0x19,
		ConvolutionBloomIntensity = 0x1A,
		WorldPartitionHLODActorDescSerializeHLODSubActors = 0x1B,
		LargeWorldCoordinates = 0x1C,
		BlueprintPinsUseRealNumbers = 0x1D,
		UpdatedDirectionalLightShadowDefaults = 0x1E,
		GeometryCollectionConvexDefaults = 0x1F,
		ChaosClothFasterDamping = 0x20,
		WorldPartitionLandscapeActorDescSerializeLandscapeActorGuid = 0x21,
		AddedInertiaTensorAndRotationOfMassAddedToConvex = 0x22,
		ChaosInertiaConvertedToVec3 = 0x23,
		SerializeFloatPinDefaultValuesAsSinglePrecision = 0x24,
		AnimLayeredBoneBlendMasks = 0x25,
		StoreReflectionCaptureEncodedHDRDataInRG11B10Format = 0x26,
		RawAnimSequenceTrackSerializer = 0x27,
		RemoveDuplicatedStyleInfo = 0x28,
		LinkedAnimGraphMemberReference = 0x29,
		VersionPlusOne = 0x2A,
		LatestVersion = 0x29
	};
}

enum class EGeometryScriptMorphologicalOpType:unsigned char
{
	Dilate = 0x0,
	Contract = 0x1,
	Close = 0x2,
	Open = 0x3
};

enum class ERigVMUserWorkflowType:unsigned char
{
	Invalid = 0x0,
	NodeContext = 0x1,
	PinContext = 0x2,
	OnPinDefaultChanged = 0x4,
	All = 0x7
};

enum class EOverlapFilterOption:int
{
	OverlapFilter_All = 0x0,
	OverlapFilter_DynamicOnly = 0x1,
	OverlapFilter_StaticOnly = 0x2
};

enum class ESlateInvalidationPaintType:int
{
	None = 0x0,
	Slow = 0x1,
	Fast = 0x2
};

enum class EConsumeMouseWheel:unsigned char
{
	WhenScrollingPossible = 0x0,
	Always = 0x1,
	Never = 0x2
};

enum class ETimelineSigType:int
{
	ETS_EventSignature = 0x0,
	ETS_FloatSignature = 0x1,
	ETS_VectorSignature = 0x2,
	ETS_LinearColorSignature = 0x3,
	ETS_InvalidSignature = 0x4,
	ETS_MAX = 0x5
};

enum class EConfigExpansionFlags:int
{
	None = 0x0,
	ForUncooked = 0x1,
	ForCooked = 0x2,
	ForPlugin = 0x4,
	All = 0xFF
};

enum class EGeometryScriptGridSizingMethod:unsigned char
{
	GridCellSize = 0x0,
	GridResolution = 0x1
};

enum class ESoftObjectPathSerializeType:unsigned char
{
	NeverSerialize = 0x0,
	SkipSerializeIfArchiveHasSize = 0x1,
	AlwaysSerialize = 0x2
};

enum class ERigVMOpCode:unsigned char
{
	Execute_0_Operands = 0x0,
	Execute_1_Operands = 0x1,
	Execute_2_Operands = 0x2,
	Execute_3_Operands = 0x3,
	Execute_4_Operands = 0x4,
	Execute_5_Operands = 0x5,
	Execute_6_Operands = 0x6,
	Execute_7_Operands = 0x7,
	Execute_8_Operands = 0x8,
	Execute_9_Operands = 0x9,
	Execute_10_Operands = 0xA,
	Execute_11_Operands = 0xB,
	Execute_12_Operands = 0xC,
	Execute_13_Operands = 0xD,
	Execute_14_Operands = 0xE,
	Execute_15_Operands = 0xF,
	Execute_16_Operands = 0x10,
	Execute_17_Operands = 0x11,
	Execute_18_Operands = 0x12,
	Execute_19_Operands = 0x13,
	Execute_20_Operands = 0x14,
	Execute_21_Operands = 0x15,
	Execute_22_Operands = 0x16,
	Execute_23_Operands = 0x17,
	Execute_24_Operands = 0x18,
	Execute_25_Operands = 0x19,
	Execute_26_Operands = 0x1A,
	Execute_27_Operands = 0x1B,
	Execute_28_Operands = 0x1C,
	Execute_29_Operands = 0x1D,
	Execute_30_Operands = 0x1E,
	Execute_31_Operands = 0x1F,
	Execute_32_Operands = 0x20,
	Execute_33_Operands = 0x21,
	Execute_34_Operands = 0x22,
	Execute_35_Operands = 0x23,
	Execute_36_Operands = 0x24,
	Execute_37_Operands = 0x25,
	Execute_38_Operands = 0x26,
	Execute_39_Operands = 0x27,
	Execute_40_Operands = 0x28,
	Execute_41_Operands = 0x29,
	Execute_42_Operands = 0x2A,
	Execute_43_Operands = 0x2B,
	Execute_44_Operands = 0x2C,
	Execute_45_Operands = 0x2D,
	Execute_46_Operands = 0x2E,
	Execute_47_Operands = 0x2F,
	Execute_48_Operands = 0x30,
	Execute_49_Operands = 0x31,
	Execute_50_Operands = 0x32,
	Execute_51_Operands = 0x33,
	Execute_52_Operands = 0x34,
	Execute_53_Operands = 0x35,
	Execute_54_Operands = 0x36,
	Execute_55_Operands = 0x37,
	Execute_56_Operands = 0x38,
	Execute_57_Operands = 0x39,
	Execute_58_Operands = 0x3A,
	Execute_59_Operands = 0x3B,
	Execute_60_Operands = 0x3C,
	Execute_61_Operands = 0x3D,
	Execute_62_Operands = 0x3E,
	Execute_63_Operands = 0x3F,
	Execute_64_Operands = 0x40,
	Zero = 0x41,
	BoolFalse = 0x42,
	BoolTrue = 0x43,
	Copy = 0x44,
	Increment = 0x45,
	Decrement = 0x46,
	Equals = 0x47,
	NotEquals = 0x48,
	JumpAbsolute = 0x49,
	JumpForward = 0x4A,
	JumpBackward = 0x4B,
	JumpAbsoluteIf = 0x4C,
	JumpForwardIf = 0x4D,
	JumpBackwardIf = 0x4E,
	ChangeType = 0x4F,
	Exit = 0x50,
	BeginBlock = 0x51,
	EndBlock = 0x52,
	ArrayReset = 0x53,
	ArrayGetNum = 0x54,
	ArraySetNum = 0x55,
	ArrayGetAtIndex = 0x56,
	ArraySetAtIndex = 0x57,
	ArrayAdd = 0x58,
	ArrayInsert = 0x59,
	ArrayRemove = 0x5A,
	ArrayFind = 0x5B,
	ArrayAppend = 0x5C,
	ArrayClone = 0x5D,
	ArrayIterator = 0x5E,
	ArrayUnion = 0x5F,
	ArrayDifference = 0x60,
	ArrayIntersection = 0x61,
	ArrayReverse = 0x62,
	InvokeEntry = 0x63,
	JumpToBranch = 0x64,
	Invalid = 0x65,
	FirstArrayOpCode = 0x53,
	LastArrayOpCode = 0x62
};

enum class ERigVMCopyType:unsigned char
{
	Default = 0x0,
	FloatToDouble = 0x1,
	DoubleToFloat = 0x2
};

enum class EGeometryScriptSampleSpacing:unsigned char
{
	UniformDistance = 0x0,
	UniformTime = 0x1,
	ErrorTolerance = 0x2
};

enum class EHoudiniExecutableType:int
{
	HRSHE_Houdini = 0x0,
	HRSHE_HoudiniFX = 0x1,
	HRSHE_HoudiniCore = 0x2,
	HRSHE_HoudiniIndie = 0x3
};

enum class EHoudiniRuntimeSettingsRecomputeFlag:int
{
	HRSRF_Always = 0x0,
	HRSRF_OnlyIfMissing = 0x1,
	HRSRF_Never = 0x2,
	HRSRF_MAX = 0x3
};

enum class EHoudiniRuntimeSettingsSessionType:int
{
	HRSST_InProcess = 0x0,
	HRSST_Socket = 0x1,
	HRSST_NamedPipe = 0x2,
	HRSST_None = 0x3,
	HRSST_MAX = 0x4
};

enum class EHoudiniMultiParmModificationType:unsigned char
{
	None = 0x0,
	Inserted = 0x1,
	Removed = 0x2,
	Modified = 0x3
};

enum class EShadowMapFlags:int
{
	SMF_None = 0x0,
	SMF_Streamed = 0x1
};

enum class EHoudiniRampPointConstructStatus:unsigned char
{
	None = 0x0,
	INITIALIZED = 0x1,
	POSITION_INSERTED = 0x2,
	VALUE_INSERTED = 0x3,
	INTERPTYPE_INSERTED = 0x4
};

enum class EAudioPlugin:unsigned char
{
	SPATIALIZATION = 0x0,
	REVERB = 0x1,
	OCCLUSION = 0x2,
	MODULATION = 0x3,
	SOURCEDATAOVERRIDE = 0x4,
	COUNT = 0x5
};

enum class EPDGLinkState:unsigned char
{
	Inactive = 0x0,
	Linking = 0x1,
	Linked = 0x2,
	Error_Not_Linked = 0x3
};

enum class EPDGWorkResultState:unsigned char
{
	None = 0x0,
	ToLoad = 0x1,
	Loading = 0x2,
	Loaded = 0x3,
	ToDelete = 0x4,
	Deleting = 0x5,
	Deleted = 0x6,
	NotLoaded = 0x7
};

enum class EGeometryScriptPixelSamplingMethod:unsigned char
{
	Bilinear = 0x0,
	Nearest = 0x1
};

enum class EPDGNodeState:unsigned char
{
	None = 0x0,
	Dirtied = 0x1,
	Dirtying = 0x2,
	Cooking = 0x3,
	Cook_Complete = 0x4,
	Cook_Failed = 0x5
};

namespace EDrawDynamicFlags
{
	enum Type:int
	{
		None = 0x0,
		ForceLowestLOD = 0x1,
		FarShadowCascade = 0x2
	};
}

enum class ERigControlValueType:unsigned char
{
	Initial = 0x0,
	Current = 0x1,
	Minimum = 0x2,
	Maximum = 0x3
};

enum class ERigControlType:unsigned char
{
	Bool = 0x0,
	Float = 0x1,
	Integer = 0x2,
	Vector2D = 0x3,
	Position = 0x4,
	Scale = 0x5,
	Rotator = 0x6,
	Transform = 0x7,
	TransformNoScale = 0x8,
	EulerTransform = 0x9
};

enum class ERigControlAxis:unsigned char
{
	X = 0x0,
	Y = 0x1,
	Z = 0x2
};

enum class EControlRigContextChannelToKey:unsigned int
{
	None = 0x0,
	TranslationX = 0x1,
	TranslationY = 0x2,
	TranslationZ = 0x4,
	Translation = 0x7,
	RotationX = 0x8,
	RotationY = 0x10,
	RotationZ = 0x20,
	Rotation = 0x38,
	ScaleX = 0x40,
	ScaleY = 0x80,
	ScaleZ = 0x100,
	Scale = 0x1C0,
	AllTransform = 0x1FF
};

enum class EControlRigSetKey:unsigned char
{
	DoNotCare = 0x0,
	Always = 0x1,
	Never = 0x2
};

enum class ERigMetadataType:unsigned char
{
	Bool = 0x0,
	BoolArray = 0x1,
	Float = 0x2,
	FloatArray = 0x3,
	Int32 = 0x4,
	Int32Array = 0x5,
	Name = 0x6,
	NameArray = 0x7,
	Vector = 0x8,
	VectorArray = 0x9,
	Rotator = 0xA,
	RotatorArray = 0xB,
	Quat = 0xC,
	QuatArray = 0xD,
	Transform = 0xE,
	TransformArray = 0xF,
	LinearColor = 0x10,
	LinearColorArray = 0x11,
	RigElementKey = 0x12,
	RigElementKeyArray = 0x13,
	Invalid = 0x14
};

enum class ERigHierarchyNotification:unsigned char
{
	ElementAdded = 0x0,
	ElementRemoved = 0x1,
	ElementRenamed = 0x2,
	ElementSelected = 0x3,
	ElementDeselected = 0x4,
	ParentChanged = 0x5,
	HierarchyReset = 0x6,
	ControlSettingChanged = 0x7,
	ControlVisibilityChanged = 0x8,
	ControlDrivenListChanged = 0x9,
	ControlShapeTransformChanged = 0xA,
	ParentWeightsChanged = 0xB,
	InteractionBracketOpened = 0xC,
	InteractionBracketClosed = 0xD,
	ElementReordered = 0xE,
	Max = 0xF
};

enum class ERigEvent:unsigned char
{
	None = 0x0,
	RequestAutoKey = 0x1,
	OpenUndoBracket = 0x2,
	CloseUndoBracket = 0x3,
	Max = 0x4
};

enum class ERigBoneType:unsigned char
{
	Imported = 0x0,
	User = 0x1
};

enum class ERigControlAnimationType:unsigned char
{
	AnimationControl = 0x0,
	AnimationChannel = 0x1,
	ProxyControl = 0x2,
	VisualCue = 0x3
};

enum class ERigControlVisibility:unsigned char
{
	UserDefined = 0x0,
	BasedOnSelection = 0x1
};

enum class ERigControlTransformChannel:unsigned char
{
	TranslationX = 0x0,
	TranslationY = 0x1,
	TranslationZ = 0x2,
	Pitch = 0x3,
	Yaw = 0x4,
	Roll = 0x5,
	ScaleX = 0x6,
	ScaleY = 0x7,
	ScaleZ = 0x8
};

enum class ERigSpaceType:unsigned char
{
	Global = 0x0,
	Bone = 0x1,
	Control = 0x2,
	Space = 0x3
};

enum class EControlRigInteractionType:unsigned char
{
	None = 0x0,
	Translate = 0x1,
	Rotate = 0x2,
	Scale = 0x4,
	All = 0x7
};

enum class ERigVMNodeCreatedReason:unsigned char
{
	NodeSpawner = 0x0,
	ScriptedEvent = 0x1,
	Paste = 0x2,
	BackwardsCompatibility = 0x3,
	Unknown = 0x4
};

enum class ETransformConstraintType:unsigned char
{
	Translation = 0x0,
	Rotation = 0x1,
	Scale = 0x2,
	Parent = 0x3,
	LookAt = 0x4
};

enum class EConstraintType:unsigned char
{
	Transform = 0x0,
	Aim = 0x1,
	MAX = 0x2
};

enum class EOS_EExternalAccountType:int
{
	EOS_EAT_EPIC = 0x0,
	EOS_EAT_STEAM = 0x1,
	EOS_EAT_PSN = 0x2,
	EOS_EAT_XBL = 0x3,
	EOS_EAT_DISCORD = 0x4,
	EOS_EAT_GOG = 0x5,
	EOS_EAT_NINTENDO = 0x6,
	EOS_EAT_UPLAY = 0x7,
	EOS_EAT_OPENID = 0x8,
	EOS_EAT_APPLE = 0x9,
	EOS_EAT_GOOGLE = 0xA,
	EOS_EAT_OCULUS = 0xB,
	EOS_EAT_ITCHIO = 0xC,
	EOS_EAT_AMAZON = 0xD
};

enum class EOS_EApplicationStatus:int
{
	EOS_AS_BackgroundConstrained = 0x0,
	EOS_AS_BackgroundUnconstrained = 0x1,
	EOS_AS_BackgroundSuspended = 0x2,
	EOS_AS_Foreground = 0x3
};

enum class EOS_ENetworkStatus:int
{
	EOS_NS_Disabled = 0x0,
	EOS_NS_Offline = 0x1,
	EOS_NS_Online = 0x2
};

enum class EOS_EResult:int
{
	EOS_Success = 0x0,
	EOS_NoConnection = 0x1,
	EOS_InvalidCredentials = 0x2,
	EOS_InvalidUser = 0x3,
	EOS_InvalidAuth = 0x4,
	EOS_AccessDenied = 0x5,
	EOS_MissingPermissions = 0x6,
	EOS_Token_Not_Account = 0x7,
	EOS_TooManyRequests = 0x8,
	EOS_AlreadyPending = 0x9,
	EOS_InvalidParameters = 0xA,
	EOS_InvalidRequest = 0xB,
	EOS_UnrecognizedResponse = 0xC,
	EOS_IncompatibleVersion = 0xD,
	EOS_NotConfigured = 0xE,
	EOS_AlreadyConfigured = 0xF,
	EOS_NotImplemented = 0x10,
	EOS_Canceled = 0x11,
	EOS_NotFound = 0x12,
	EOS_OperationWillRetry = 0x13,
	EOS_NoChange = 0x14,
	EOS_VersionMismatch = 0x15,
	EOS_LimitExceeded = 0x16,
	EOS_Disabled = 0x17,
	EOS_DuplicateNotAllowed = 0x18,
	EOS_MissingParameters_DEPRECATED = 0x19,
	EOS_InvalidSandboxId = 0x1A,
	EOS_TimedOut = 0x1B,
	EOS_PartialResult = 0x1C,
	EOS_Missing_Role = 0x1D,
	EOS_Missing_Feature = 0x1E,
	EOS_Invalid_Sandbox = 0x1F,
	EOS_Invalid_Deployment = 0x20,
	EOS_Invalid_Product = 0x21,
	EOS_Invalid_ProductUserID = 0x22,
	EOS_ServiceFailure = 0x23,
	EOS_CacheDirectoryMissing = 0x24,
	EOS_CacheDirectoryInvalid = 0x25,
	EOS_InvalidState = 0x26,
	EOS_RequestInProgress = 0x27,
	EOS_ApplicationSuspended = 0x28,
	EOS_NetworkDisconnected = 0x29,
	EOS_Auth_AccountLocked = 0x3E9,
	EOS_Auth_AccountLockedForUpdate = 0x3EA,
	EOS_Auth_InvalidRefreshToken = 0x3EB,
	EOS_Auth_InvalidToken = 0x3EC,
	EOS_Auth_AuthenticationFailure = 0x3ED,
	EOS_Auth_InvalidPlatformToken = 0x3EE,
	EOS_Auth_WrongAccount = 0x3EF,
	EOS_Auth_WrongClient = 0x3F0,
	EOS_Auth_FullAccountRequired = 0x3F1,
	EOS_Auth_HeadlessAccountRequired = 0x3F2,
	EOS_Auth_PasswordResetRequired = 0x3F3,
	EOS_Auth_PasswordCannotBeReused = 0x3F4,
	EOS_Auth_Expired = 0x3F5,
	EOS_Auth_ScopeConsentRequired = 0x3F6,
	EOS_Auth_ApplicationNotFound = 0x3F7,
	EOS_Auth_ScopeNotFound = 0x3F8,
	EOS_Auth_AccountFeatureRestricted = 0x3F9,
	EOS_Auth_AccountPortalLoadError = 0x3FA,
	EOS_Auth_CorrectiveActionRequired = 0x3FB,
	EOS_Auth_PinGrantCode = 0x3FC,
	EOS_Auth_PinGrantExpired = 0x3FD,
	EOS_Auth_PinGrantPending = 0x3FE,
	EOS_Auth_ExternalAuthNotLinked = 0x406,
	EOS_Auth_ExternalAuthRevoked = 0x408,
	EOS_Auth_ExternalAuthInvalid = 0x409,
	EOS_Auth_ExternalAuthRestricted = 0x40A,
	EOS_Auth_ExternalAuthCannotLogin = 0x40B,
	EOS_Auth_ExternalAuthExpired = 0x40C,
	EOS_Auth_ExternalAuthIsLastLoginType = 0x40D,
	EOS_Auth_ExchangeCodeNotFound = 0x410,
	EOS_Auth_OriginatingExchangeCodeSessionExpired = 0x411,
	EOS_Auth_AccountNotActive = 0x41A,
	EOS_Auth_MFARequired = 0x424,
	EOS_Auth_ParentalControls = 0x42E,
	EOS_Auth_NoRealId = 0x438,
	EOS_Friends_InviteAwaitingAcceptance = 0x7D0,
	EOS_Friends_NoInvitation = 0x7D1,
	EOS_Friends_AlreadyFriends = 0x7D3,
	EOS_Friends_NotFriends = 0x7D4,
	EOS_Friends_TargetUserTooManyInvites = 0x7D5,
	EOS_Friends_LocalUserTooManyInvites = 0x7D6,
	EOS_Friends_TargetUserFriendLimitExceeded = 0x7D7,
	EOS_Friends_LocalUserFriendLimitExceeded = 0x7D8,
	EOS_Presence_DataInvalid = 0xBB8,
	EOS_Presence_DataLengthInvalid = 0xBB9,
	EOS_Presence_DataKeyInvalid = 0xBBA,
	EOS_Presence_DataKeyLengthInvalid = 0xBBB,
	EOS_Presence_DataValueInvalid = 0xBBC,
	EOS_Presence_DataValueLengthInvalid = 0xBBD,
	EOS_Presence_RichTextInvalid = 0xBBE,
	EOS_Presence_RichTextLengthInvalid = 0xBBF,
	EOS_Presence_StatusInvalid = 0xBC0,
	EOS_Ecom_EntitlementStale = 0xFA0,
	EOS_Ecom_CatalogOfferStale = 0xFA1,
	EOS_Ecom_CatalogItemStale = 0xFA2,
	EOS_Ecom_CatalogOfferPriceInvalid = 0xFA3,
	EOS_Ecom_CheckoutLoadError = 0xFA4,
	EOS_Sessions_SessionInProgress = 0x1388,
	EOS_Sessions_TooManyPlayers = 0x1389,
	EOS_Sessions_NoPermission = 0x138A,
	EOS_Sessions_SessionAlreadyExists = 0x138B,
	EOS_Sessions_InvalidLock = 0x138C,
	EOS_Sessions_InvalidSession = 0x138D,
	EOS_Sessions_SandboxNotAllowed = 0x138E,
	EOS_Sessions_InviteFailed = 0x138F,
	EOS_Sessions_InviteNotFound = 0x1390,
	EOS_Sessions_UpsertNotAllowed = 0x1391,
	EOS_Sessions_AggregationFailed = 0x1392,
	EOS_Sessions_HostAtCapacity = 0x1393,
	EOS_Sessions_SandboxAtCapacity = 0x1394,
	EOS_Sessions_SessionNotAnonymous = 0x1395,
	EOS_Sessions_OutOfSync = 0x1396,
	EOS_Sessions_TooManyInvites = 0x1397,
	EOS_Sessions_PresenceSessionExists = 0x1398,
	EOS_Sessions_DeploymentAtCapacity = 0x1399,
	EOS_Sessions_NotAllowed = 0x139A,
	EOS_Sessions_PlayerSanctioned = 0x139B,
	EOS_PlayerDataStorage_FilenameInvalid = 0x1770,
	EOS_PlayerDataStorage_FilenameLengthInvalid = 0x1771,
	EOS_PlayerDataStorage_FilenameInvalidChars = 0x1772,
	EOS_PlayerDataStorage_FileSizeTooLarge = 0x1773,
	EOS_PlayerDataStorage_FileSizeInvalid = 0x1774,
	EOS_PlayerDataStorage_FileHandleInvalid = 0x1775,
	EOS_PlayerDataStorage_DataInvalid = 0x1776,
	EOS_PlayerDataStorage_DataLengthInvalid = 0x1777,
	EOS_PlayerDataStorage_StartIndexInvalid = 0x1778,
	EOS_PlayerDataStorage_RequestInProgress = 0x1779,
	EOS_PlayerDataStorage_UserThrottled = 0x177A,
	EOS_PlayerDataStorage_EncryptionKeyNotSet = 0x177B,
	EOS_PlayerDataStorage_UserErrorFromDataCallback = 0x177C,
	EOS_PlayerDataStorage_FileHeaderHasNewerVersion = 0x177D,
	EOS_PlayerDataStorage_FileCorrupted = 0x177E,
	EOS_Connect_ExternalTokenValidationFailed = 0x1B58,
	EOS_Connect_UserAlreadyExists = 0x1B59,
	EOS_Connect_AuthExpired = 0x1B5A,
	EOS_Connect_InvalidToken = 0x1B5B,
	EOS_Connect_UnsupportedTokenType = 0x1B5C,
	EOS_Connect_LinkAccountFailed = 0x1B5D,
	EOS_Connect_ExternalServiceUnavailable = 0x1B5E,
	EOS_Connect_ExternalServiceConfigurationFailure = 0x1B5F,
	EOS_Connect_LinkAccountFailedMissingNintendoIdAccount_DEPRECATED = 0x1B60,
	EOS_UI_SocialOverlayLoadError = 0x1F40,
	EOS_Lobby_NotOwner = 0x2328,
	EOS_Lobby_InvalidLock = 0x2329,
	EOS_Lobby_LobbyAlreadyExists = 0x232A,
	EOS_Lobby_SessionInProgress = 0x232B,
	EOS_Lobby_TooManyPlayers = 0x232C,
	EOS_Lobby_NoPermission = 0x232D,
	EOS_Lobby_InvalidSession = 0x232E,
	EOS_Lobby_SandboxNotAllowed = 0x232F,
	EOS_Lobby_InviteFailed = 0x2330,
	EOS_Lobby_InviteNotFound = 0x2331,
	EOS_Lobby_UpsertNotAllowed = 0x2332,
	EOS_Lobby_AggregationFailed = 0x2333,
	EOS_Lobby_HostAtCapacity = 0x2334,
	EOS_Lobby_SandboxAtCapacity = 0x2335,
	EOS_Lobby_TooManyInvites = 0x2336,
	EOS_Lobby_DeploymentAtCapacity = 0x2337,
	EOS_Lobby_NotAllowed = 0x2338,
	EOS_Lobby_MemberUpdateOnly = 0x2339,
	EOS_Lobby_PresenceLobbyExists = 0x233A,
	EOS_Lobby_VoiceNotEnabled = 0x233B,
	EOS_TitleStorage_UserErrorFromDataCallback = 0x2710,
	EOS_TitleStorage_EncryptionKeyNotSet = 0x2711,
	EOS_TitleStorage_FileCorrupted = 0x2712,
	EOS_TitleStorage_FileHeaderHasNewerVersion = 0x2713,
	EOS_Mods_ModSdkProcessIsAlreadyRunning = 0x2AF8,
	EOS_Mods_ModSdkCommandIsEmpty = 0x2AF9,
	EOS_Mods_ModSdkProcessCreationFailed = 0x2AFA,
	EOS_Mods_CriticalError = 0x2AFB,
	EOS_Mods_ToolInternalError = 0x2AFC,
	EOS_Mods_IPCFailure = 0x2AFD,
	EOS_Mods_InvalidIPCResponse = 0x2AFE,
	EOS_Mods_URILaunchFailure = 0x2AFF,
	EOS_Mods_ModIsNotInstalled = 0x2B00,
	EOS_Mods_UserDoesNotOwnTheGame = 0x2B01,
	EOS_Mods_OfferRequestByIdInvalidResult = 0x2B02,
	EOS_Mods_CouldNotFindOffer = 0x2B03,
	EOS_Mods_OfferRequestByIdFailure = 0x2B04,
	EOS_Mods_PurchaseFailure = 0x2B05,
	EOS_Mods_InvalidGameInstallInfo = 0x2B06,
	EOS_Mods_CannotGetManifestLocation = 0x2B07,
	EOS_Mods_UnsupportedOS = 0x2B08,
	EOS_AntiCheat_ClientProtectionNotAvailable = 0x2EE0,
	EOS_AntiCheat_InvalidMode = 0x2EE1,
	EOS_AntiCheat_ClientProductIdMismatch = 0x2EE2,
	EOS_AntiCheat_ClientSandboxIdMismatch = 0x2EE3,
	EOS_AntiCheat_ProtectMessageSessionKeyRequired = 0x2EE4,
	EOS_AntiCheat_ProtectMessageValidationFailed = 0x2EE5,
	EOS_AntiCheat_ProtectMessageInitializationFailed = 0x2EE6,
	EOS_AntiCheat_PeerAlreadyRegistered = 0x2EE7,
	EOS_AntiCheat_PeerNotFound = 0x2EE8,
	EOS_AntiCheat_PeerNotProtected = 0x2EE9,
	EOS_AntiCheat_ClientDeploymentIdMismatch = 0x2EEA,
	EOS_AntiCheat_DeviceIdAuthIsNotSupported = 0x2EEB,
	EOS_RTC_TooManyParticipants = 0x32C8,
	EOS_RTC_RoomAlreadyExists = 0x32C9,
	EOS_RTC_UserKicked = 0x32CA,
	EOS_RTC_UserBanned = 0x32CB,
	EOS_RTC_RoomWasLeft = 0x32CC,
	EOS_RTC_ReconnectionTimegateExpired = 0x32CD,
	EOS_RTC_ShutdownInvoked = 0x32CE,
	EOS_RTC_UserIsInBlocklist = 0x32CF,
	EOS_ProgressionSnapshot_SnapshotIdUnavailable = 0x36B0,
	EOS_KWS_ParentEmailMissing = 0x3A98,
	EOS_KWS_UserGraduated = 0x3A99,
	EOS_Android_JavaVMNotStored = 0x4268,
	EOS_Permission_RequiredPatchAvailable = 0x4650,
	EOS_Permission_RequiredSystemUpdate = 0x4651,
	EOS_Permission_AgeRestrictionFailure = 0x4652,
	EOS_Permission_AccountTypeFailure = 0x4653,
	EOS_Permission_ChatRestriction = 0x4654,
	EOS_Permission_UGCRestriction = 0x4655,
	EOS_Permission_OnlinePlayRestricted = 0x4656,
	EOS_DesktopCrossplay_ApplicationNotBootstrapped = 0x4A38,
	EOS_DesktopCrossplay_ServiceNotInstalled = 0x4A39,
	EOS_DesktopCrossplay_ServiceStartFailed = 0x4A3A,
	EOS_DesktopCrossplay_ServiceNotRunning = 0x4A3B,
	EOS_UnexpectedError = 0x7FFFFFFF
};

enum class ERigExecutionType:unsigned char
{
	Runtime = 0x0,
	Editing = 0x1,
	Max = 0x2
};

enum class EAspectRatioAxisConstraint:int
{
	AspectRatio_MaintainYFOV = 0x0,
	AspectRatio_MaintainXFOV = 0x1,
	AspectRatio_MajorAxisFOV = 0x2,
	AspectRatio_MAX = 0x3
};

enum class EMovieScenePositionType:unsigned char
{
	Frame = 0x0,
	Time = 0x1,
	MarkedFrame = 0x2
};

enum class EUpdatePositionMethod:unsigned char
{
	Play = 0x0,
	Jump = 0x1,
	Scrub = 0x2
};

namespace ESelectionMode
{
	enum Type:int
	{
		None = 0x0,
		Single = 0x1,
		SingleToggle = 0x2,
		Multi = 0x3
	};
}

enum class EClothLODBiasMode:unsigned char
{
	MappingsToSameLOD = 0x0,
	MappingsToMinLOD = 0x1,
	MappingsToAnyLOD = 0x2
};

enum class ESkeletalMeshGeoImportVersions:unsigned char
{
	Before_Versionning = 0x0,
	SkeletalMeshBuildRefactor = 0x1,
	VersionPlusOne = 0x2,
	LatestVersion = 0x1
};

enum class ESkeletalMeshSkinningImportVersions:unsigned char
{
	Before_Versionning = 0x0,
	SkeletalMeshBuildRefactor = 0x1,
	VersionPlusOne = 0x2,
	LatestVersion = 0x1
};

enum class EMovieSceneControlRigSpaceType:unsigned char
{
	Parent = 0x0,
	World = 0x1,
	ControlRig = 0x2
};

enum class ETimeStretchCurveMapping:unsigned char
{
	T_Original = 0x0,
	T_TargetMin = 0x1,
	T_TargetMax = 0x2,
	MAX = 0x3
};

enum class EOutputCanBeNullptr:int
{
	Never = 0x0,
	IfNoTabValid = 0x1,
	IfNoOpenTabValid = 0x2
};

enum class ESidebarLocation:unsigned char
{
	Left = 0x0,
	Right = 0x1,
	None = 0x2
};

enum class EShaderResourceUsageFlags:unsigned char
{
	GlobalUniformBuffer = 0x1,
	BindlessResources = 0x2,
	BindlessSamplers = 0x4
};

enum class EAllowKinematicDeferral:int
{
	AllowDeferral = 0x0,
	DisallowDeferral = 0x1
};

enum class EQueueMode:int
{
	Mpsc = 0x0,
	Spsc = 0x1
};

enum class EUVOutput:unsigned char
{
	DoNotOutputChannel = 0x0,
	OutputChannel = 0x1
};

enum class EHeaderComboVisibility:int
{
	Always = 0x0,
	Ghosted = 0x1,
	OnHover = 0x2,
	Never = 0x3
};

namespace FControlRigObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		RemovalOfHierarchyRefPins = 0x1,
		OperatorsStoringPropertyPaths = 0x2,
		SwitchedToRigVM = 0x3,
		ControlOffsetTransform = 0x4,
		RigElementKeyCache = 0x5,
		BlueprintVariableSupport = 0x6,
		RigHierarchyV2 = 0x7,
		RigHierarchyMultiParentConstraints = 0x8,
		RigHierarchyControlSpaceFavorites = 0x9,
		StorageMinMaxValuesAsFloatStorage = 0xA,
		RenameGizmoToShape = 0xB,
		BoundVariableWithInjectionNode = 0xC,
		PerChannelLimits = 0xD,
		RemovedMultiParentParentCache = 0xE,
		RemoveParameters = 0xF,
		CurveElementValueStateFlag = 0x10,
		ControlAnimationType = 0x11,
		TemplatesPreferredPermutatation = 0x12,
		PreferredEulerAnglesForControls = 0x13,
		HierarchyElementMetadata = 0x14,
		LibraryNodeTemplates = 0x15,
		RestrictSpaceSwitchingForControls = 0x16,
		ControlTransformChannelFiltering = 0x17,
		StoreFunctionsInGeneratedClass = 0x18,
		RigHierarchyStoringPreviousNames = 0x19,
		VersionPlusOne = 0x1A,
		LatestVersion = 0x19
	};
}

enum class ESlateVertexRounding:unsigned char
{
	Disabled = 0x0,
	Enabled = 0x1
};

enum class EMouseLockMode:unsigned char
{
	DoNotLock = 0x0,
	LockOnCapture = 0x1,
	LockAlways = 0x2,
	LockInFullscreen = 0x3
};

enum class EPreviewAnimationBlueprintApplicationMethod:unsigned char
{
	LinkedLayers = 0x0,
	LinkedAnimGraph = 0x1
};

enum class EControlRigVectorKind:unsigned char
{
	Direction = 0x0,
	Location = 0x1
};

enum class ETableRowSignalSelectionMode:int
{
	Deferred = 0x0,
	Instantaneous = 0x1
};

enum class EControlRigComponentMapDirection:unsigned char
{
	Input = 0x0,
	Output = 0x1
};

enum class EControlRigComponentSpace:unsigned char
{
	WorldSpace = 0x0,
	ActorSpace = 0x1,
	ComponentSpace = 0x2,
	RigSpace = 0x3,
	LocalSpace = 0x4,
	Max = 0x5
};

enum class EAirAbsorptionMethod:unsigned char
{
	Linear = 0x0,
	CustomCurve = 0x1
};

enum class EReverbSendMethod:unsigned char
{
	Linear = 0x0,
	CustomCurve = 0x1,
	Manual = 0x2
};

enum class EPriorityAttenuationMethod:unsigned char
{
	Linear = 0x0,
	CustomCurve = 0x1,
	Manual = 0x2
};

enum class ELoadModuleFlags:int
{
	None = 0x0,
	LogFailures = 0x1
};

enum class EModuleLoadResult:int
{
	Success = 0x0,
	FileNotFound = 0x1,
	FileIncompatible = 0x2,
	CouldNotBeLoadedByOS = 0x3,
	FailedToInitialize = 0x4
};

enum class EGoogleExchangeToken:unsigned char
{
	GoogleExchangeToken = 0x0
};

enum class EGoogleRefreshToken:unsigned char
{
	GoogleRefreshToken = 0x0
};

enum class EGoogleAuthTokenType:unsigned char
{
	ExchangeToken = 0x0,
	RefreshToken = 0x1,
	AccessToken = 0x2
};

enum class EHandleEvent:unsigned char
{
	LocalTransformUpdated = 0x0,
	GlobalTransformUpdated = 0x1,
	ComponentUpdated = 0x2,
	Max = 0x3
};

namespace EMobilePlanarReflectionMode
{
	enum Type:int
	{
		Usual = 0x0,
		MobilePPRExclusive = 0x1,
		MobilePPR = 0x2
	};
}

enum class EMemoryTraceHeapFlags:unsigned short
{
	None = 0x0,
	Root = 0x1,
	NeverFrees = 0x2
};

enum class ERigVMTransformSpace:unsigned char
{
	LocalSpace = 0x0,
	GlobalSpace = 0x1,
	Max = 0x2
};

enum class EUsdPurpose:int
{
	Default = 0x0,
	Proxy = 0x1,
	Render = 0x2,
	Guide = 0x4
};

enum class EUsdRootMotionHandling:int
{
	NoAdditionalRootMotion = 0x0,
	UseMotionFromSkelRoot = 0x1,
	UseMotionFromSkeleton = 0x2
};

enum class EUsdDefaultKind:int
{
	None = 0x0,
	Model = 0x1,
	Component = 0x2,
	Group = 0x4,
	Assembly = 0x8,
	Subcomponent = 0x10
};

enum class ECollapsingType:int
{
	Assets = 0x0,
	Components = 0x1
};

enum class ERefractionMode:int
{
	RM_IndexOfRefraction = 0x0,
	RM_PixelNormalOffset = 0x1,
	RM_2DOffset = 0x2,
	RM_None = 0x3
};

enum class ESchemaTranslationLaunchPolicy:int
{
	ExclusiveSync = 0x0,
	Sync = 0x1,
	Async = 0x2
};

namespace ENavLinkDirection
{
	enum Type:int
	{
		BothWays = 0x0,
		LeftToRight = 0x1,
		RightToLeft = 0x2
	};
}

enum class EConcurrencyVolumeScaleMode:int
{
	Default = 0x0,
	Distance = 0x1,
	Priority = 0x2
};

enum class EApplyRendertargetOption:int
{
	DoNothing = 0x0,
	CheckApply = 0x1,
	ForceApply = 0x1
};

enum class ERigVMAnimEasingType:unsigned char
{
	Linear = 0x0,
	QuadraticEaseIn = 0x1,
	QuadraticEaseOut = 0x2,
	QuadraticEaseInOut = 0x3,
	CubicEaseIn = 0x4,
	CubicEaseOut = 0x5,
	CubicEaseInOut = 0x6,
	QuarticEaseIn = 0x7,
	QuarticEaseOut = 0x8,
	QuarticEaseInOut = 0x9,
	QuinticEaseIn = 0xA,
	QuinticEaseOut = 0xB,
	QuinticEaseInOut = 0xC,
	SineEaseIn = 0xD,
	SineEaseOut = 0xE,
	SineEaseInOut = 0xF,
	CircularEaseIn = 0x10,
	CircularEaseOut = 0x11,
	CircularEaseInOut = 0x12,
	ExponentialEaseIn = 0x13,
	ExponentialEaseOut = 0x14,
	ExponentialEaseInOut = 0x15,
	ElasticEaseIn = 0x16,
	ElasticEaseOut = 0x17,
	ElasticEaseInOut = 0x18,
	BackEaseIn = 0x19,
	BackEaseOut = 0x1A,
	BackEaseInOut = 0x1B,
	BounceEaseIn = 0x1C,
	BounceEaseOut = 0x1D,
	BounceEaseInOut = 0x1E
};

namespace ERigVMClampSpatialMode
{
	enum Type:int
	{
		Plane = 0x0,
		Cylinder = 0x1,
		Sphere = 0x2
	};
}

enum class ETransformSpaceMode:unsigned char
{
	LocalSpace = 0x0,
	GlobalSpace = 0x1,
	BaseSpace = 0x2,
	BaseJoint = 0x3,
	Max = 0x4
};

enum class ETransformGetterType:unsigned char
{
	Initial = 0x0,
	Current = 0x1,
	Max = 0x2
};

enum class EAudioSpeakers:int
{
	SPEAKER_FrontLeft = 0x0,
	SPEAKER_FrontRight = 0x1,
	SPEAKER_FrontCenter = 0x2,
	SPEAKER_LowFrequency = 0x3,
	SPEAKER_LeftSurround = 0x4,
	SPEAKER_RightSurround = 0x5,
	SPEAKER_LeftBack = 0x6,
	SPEAKER_RightBack = 0x7,
	SPEAKER_Count = 0x8
};

enum class ESamplerSourceMode:int
{
	SSM_FromTextureAsset = 0x0,
	SSM_Wrap_WorldGroupSettings = 0x1,
	SSM_Clamp_WorldGroupSettings = 0x2,
	SSM_TerrainWeightmapGroupSettings = 0x3
};

enum class EControlRigTestDataPlaybackMode:unsigned char
{
	Live = 0x0,
	ReplayInputs = 0x1,
	GroundTruth = 0x2,
	Max = 0x3
};

enum class ESchemaTranslationStatus:int
{
	Pending = 0x0,
	InProgress = 0x1,
	Done = 0x2
};

enum class ECRSimConstraintType:unsigned char
{
	Distance = 0x0,
	DistanceFromA = 0x1,
	DistanceFromB = 0x2,
	Plane = 0x3
};

enum class ECRSimPointForceType:unsigned char
{
	Direction = 0x0
};

enum class ECRSimSoftCollisionType:unsigned char
{
	Plane = 0x0,
	Sphere = 0x1,
	Cone = 0x2
};

enum class EVoiceSampleRate:int
{
	Low16000Hz = 0x3E80,
	Normal24000Hz = 0x5DC0
};

namespace EScriptInstrumentation
{
	enum Type:int
	{
		Class = 0x0,
		ClassScope = 0x1,
		Instance = 0x2,
		Event = 0x3,
		InlineEvent = 0x4,
		ResumeEvent = 0x5,
		PureNodeEntry = 0x6,
		NodeDebugSite = 0x7,
		NodeEntry = 0x8,
		NodeExit = 0x9,
		PushState = 0xA,
		RestoreState = 0xB,
		ResetState = 0xC,
		SuspendState = 0xD,
		PopState = 0xE,
		TunnelEndOfThread = 0xF,
		Stop = 0x10
	};
}

enum class ETransitionType:unsigned char
{
	None = 0x0,
	Paused = 0x1,
	Loading = 0x2,
	Saving = 0x3,
	Connecting = 0x4,
	Precaching = 0x5,
	WaitingToConnect = 0x6,
	MAX = 0x7
};

enum class EFullyLoadPackageType:int
{
	FULLYLOAD_Map = 0x0,
	FULLYLOAD_Game_PreLoadClass = 0x1,
	FULLYLOAD_Game_PostLoadClass = 0x2,
	FULLYLOAD_Always = 0x3,
	FULLYLOAD_Mutator = 0x4,
	FULLYLOAD_MAX = 0x5
};

enum class ERotatorQuantization:unsigned char
{
	ByteComponents = 0x0,
	ShortComponents = 0x1
};

enum class EMeshBufferAccess:unsigned char
{
	Default = 0x0,
	ForceCPUAndGPU = 0x1
};

namespace EControlRigDrawHierarchyMode
{
	enum Type:int
	{
		Axes = 0x0,
		Max = 0x1
	};
}

enum class EAdditiveBasePoseType:int
{
	ABPT_None = 0x0,
	ABPT_RefPose = 0x1,
	ABPT_AnimScaled = 0x2,
	ABPT_AnimFrame = 0x3,
	ABPT_LocalAnimFrame = 0x4,
	ABPT_MAX = 0x5
};

enum class EResizingAxis:unsigned char
{
	None = 0x0,
	LeftRightMask = 0x1,
	UpDownMask = 0x10,
	CrossMask = 0x11
};

enum class ESequenceTimeUnit:unsigned char
{
	DisplayRate = 0x0,
	TickResolution = 0x1
};

namespace FEnterpriseObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		FixSerializationOfBulkAndExtraData = 0x1,
		BookmarkExtensibilityUpgrade = 0x2,
		MediaFrameworkUserDataLazyObject = 0x3,
		LiveLinkTimeSynchronization = 0x4,
		AjaMediaConfiguration = 0x5,
		HasUDataprepRecipe = 0x6,
		HasUDatatprepAssetInterface = 0x7,
		MeshDescriptionBulkDataGuidIsHash = 0x8,
		LiveLinkControllerSplitPerRole = 0x9,
		CoreTechParametricSurfaceOptim = 0xA,
		VersionPlusOne = 0xB,
		LatestVersion = 0xA
	};
}

enum class EMovieSceneKeyInterpolation:unsigned char
{
	Auto = 0x0,
	User = 0x1,
	Break = 0x2,
	Linear = 0x3,
	Constant = 0x4
};

namespace ENetTraceVerbosity
{
	enum Type: int
	{
		None = 0x0,
		Trace = 0x1,
		Verbose = 0x2,
		VeryVerbose = 0x3
	};
}

enum class EVirtualizationMode:unsigned char
{
	Disabled = 0x0,
	PlayWhenSilent = 0x1,
	Restart = 0x2
};

enum class EChannelType:int
{
	CHTYPE_None = 0x0,
	CHTYPE_Control = 0x1,
	CHTYPE_Actor = 0x2,
	CHTYPE_File = 0x3,
	CHTYPE_Voice = 0x4,
	CHTYPE_BattlEye = 0x5,
	CHTYPE_MAX = 0x8
};

enum class EPostCopyOperation:unsigned char
{
	None = 0x0,
	LogicalNegateBool = 0x1
};

enum class EHairBufferSwapType:int
{
	BeginOfFrame = 0x0,
	EndOfFrame = 0x1,
	Tick = 0x2,
	RenderFrame = 0x3
};

enum class ESlateLineJoinType:unsigned char
{
	Sharp = 0x0,
	Simple = 0x1
};

enum class EHairStrandsBookmark:unsigned char
{
	ProcessTasks = 0x0,
	ProcessLODSelection = 0x1,
	ProcessGuideInterpolation = 0x2,
	ProcessGatherCluster = 0x3,
	ProcessStrandsInterpolation = 0x4,
	ProcessDebug = 0x5,
	ProcessEndOfFrame = 0x6
};

enum class EHairResourceUsageType:unsigned char
{
	Static = 0x0,
	Dynamic = 0x1
};

namespace ECurveBlendOption
{
	enum Type:int
	{
		Override = 0x0,
		DoNotOverride = 0x1,
		NormalizeByWeight = 0x2,
		BlendByWeight = 0x3,
		UseBasePose = 0x4,
		UseMaxValue = 0x5,
		UseMinValue = 0x6
	};
}

enum class ERunAttributes:unsigned char
{
	None = 0x0,
	SupportsText = 0x1
};

enum class EDepthStencilTargetActions:unsigned char
{
	DepthMask = 0x4,
	DontLoad_DontStore = 0x0,
	DontLoad_StoreDepthStencil = 0x11,
	DontLoad_StoreStencilNotDepth = 0x1,
	ClearDepthStencil_StoreDepthStencil = 0x99,
	LoadDepthStencil_StoreDepthStencil = 0x55,
	LoadDepthNotStencil_StoreDepthNotStencil = 0x50,
	LoadDepthNotStencil_DontStore = 0x40,
	LoadDepthStencil_StoreStencilNotDepth = 0x45,
	ClearDepthStencil_DontStoreDepthStencil = 0x88,
	LoadDepthStencil_DontStoreDepthStencil = 0x44,
	ClearDepthStencil_StoreDepthNotStencil = 0x98,
	ClearDepthStencil_StoreStencilNotDepth = 0x89,
	ClearDepthStencil_ResolveDepthNotStencil = 0xA8,
	ClearDepthStencil_ResolveStencilNotDepth = 0x8A,
	LoadDepthClearStencil_StoreDepthStencil = 0x59,
	ClearStencilDontLoadDepth_StoreStencilNotDepth = 0x9
};

namespace EGameplayTagQueryExprType
{
	enum Type:int
	{
		Undefined = 0x0,
		AnyTagsMatch = 0x1,
		AllTagsMatch = 0x2,
		NoTagsMatch = 0x3,
		AnyExprMatch = 0x4,
		AllExprMatch = 0x5,
		NoExprMatch = 0x6
	};
}

namespace EGameplayTagQueryStreamVersion
{
	enum Type:int
	{
		InitialVersion = 0x0,
		VersionPlusOne = 0x1,
		LatestVersion = 0x0
	};
}

namespace EGameplayTagMatchType
{
	enum Type:int
	{
		Explicit = 0x0,
		IncludeParentTags = 0x1
	};
}

enum class EGameplayContainerMatchType:unsigned char
{
	Any = 0x0,
	All = 0x1
};

enum class EReplayHeaderFlags:unsigned int
{
	None = 0x0,
	ClientRecorded = 0x1,
	HasStreamingFixes = 0x2,
	DeltaCheckpoints = 0x4,
	GameSpecificFrameData = 0x8,
	ReplayConnection = 0x10,
	ActorPrioritizationEnabled = 0x20,
	NetRelevancyEnabled = 0x40,
	AsyncRecorded = 0x80
};

enum class ELaplacianWeightScheme:int
{
	Uniform = 0x0,
	Umbrella = 0x1,
	Valence = 0x2,
	MeanValue = 0x3,
	Cotangent = 0x4,
	ClampedCotangent = 0x5,
	IDTCotanget = 0x6
};

enum class ESoundscapeColorAltitudeClampMode:unsigned char
{
	Relative = 0x0,
	Absolute = 0x1
};

enum class EMeshLODSelectionType:unsigned char
{
	AllLODs = 0x0,
	SpecificLOD = 0x1,
	CalculateLOD = 0x2,
	LowestDetailLOD = 0x3
};

enum class EAutoCenter:unsigned char
{
	None = 0x0,
	PrimaryWorkArea = 0x1,
	PreferredWorkArea = 0x2
};

enum class ESoundscapeLOD:unsigned char
{
	LOD1 = 0x0,
	LOD2 = 0x1,
	LOD3 = 0x2
};

namespace FDestructionObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		AddedTimestampedGeometryComponentCache = 0x1,
		AddedCacheDataReduction = 0x2,
		GeometryCollectionInDDC = 0x3,
		GeometryCollectionInDDCAndAsset = 0x4,
		ChaosArchiveAdded = 0x5,
		FieldsAdded = 0x6,
		DensityUnitsChanged = 0x7,
		BulkSerializeArrays = 0x8,
		GroupAndAttributeNameRemapping = 0x9,
		ImplicitObjectDoCollideAttribute = 0xA,
		VersionPlusOne = 0xB,
		LatestVersion = 0xA
	};
}

enum class ESlateColorStylingMode:unsigned char
{
	UseColor_Specified = 0x0,
	UseColor_ColorTable = 0x1,
	UseColor_Foreground = 0x2,
	UseColor_Foreground_Subdued = 0x3,
	UseColor_UseStyle = 0x4
};

enum class EAudioComponentPlayState:unsigned char
{
	Playing = 0x0,
	Stopped = 0x1,
	Paused = 0x2,
	FadingIn = 0x3,
	FadingOut = 0x4,
	Count = 0x5
};

enum class ERotationComponent:unsigned char
{
	EulerX = 0x0,
	EulerY = 0x1,
	EulerZ = 0x2,
	QuaternionAngle = 0x3,
	SwingAngle = 0x4,
	TwistAngle = 0x5
};

enum class EBlueprintCompileMode:unsigned char
{
	Default = 0x0,
	Development = 0x1,
	FinalRelease = 0x2
};

enum class EEasingFuncType:unsigned char
{
	Linear = 0x0,
	Sinusoidal = 0x1,
	Cubic = 0x2,
	QuadraticInOut = 0x3,
	CubicInOut = 0x4,
	HermiteCubic = 0x5,
	QuarticInOut = 0x6,
	QuinticInOut = 0x7,
	CircularIn = 0x8,
	CircularOut = 0x9,
	CircularInOut = 0xA,
	ExpIn = 0xB,
	ExpOut = 0xC,
	ExpInOut = 0xD,
	CustomCurve = 0xE
};

namespace EBlueprintExceptionType
{
	enum Type:int
	{
		Breakpoint = 0x0,
		Tracepoint = 0x1,
		WireTracepoint = 0x2,
		AccessViolation = 0x3,
		InfiniteLoop = 0x4,
		NonFatalError = 0x5,
		FatalError = 0x6,
		AbortExecution = 0x7
	};
}

enum class ERenderTargetActions:unsigned char
{
	LoadOpMask = 0x2,
	DontLoad_DontStore = 0x0,
	DontLoad_Store = 0x1,
	Clear_Store = 0x9,
	Load_Store = 0x5,
	Clear_DontStore = 0x8,
	Load_DontStore = 0x4,
	Clear_Resolve = 0xA,
	Load_Resolve = 0x6
};

enum class ERuntimeVirtualTextureAttributeType:unsigned char
{
	BaseColor = 0x0,
	Normal = 0x1,
	Roughness = 0x2,
	Specular = 0x3,
	Mask = 0x4,
	WorldHeight = 0x5,
	Count = 0x6
};

enum class ECustomVersionDifference:int
{
	Missing = 0x0,
	Newer = 0x1,
	Older = 0x2,
	Invalid = 0x3
};

enum class LandscapeSplineMeshOrientation:int
{
	LSMO_XUp = 0x0,
	LSMO_YUp = 0x1,
	LSMO_MAX = 0x2
};

enum class EKnownIniFile:unsigned char
{
	Engine = 0x0,
	Game = 0x1,
	Input = 0x2,
	DeviceProfiles = 0x3,
	GameUserSettings = 0x4,
	Scalability = 0x5,
	RuntimeOptions = 0x6,
	InstallBundle = 0x7,
	Hardware = 0x8,
	GameplayTags = 0x9,
	NumKnownFiles = 0xA
};

enum class EShaderCodeResourceBindingType:unsigned char
{
	Invalid = 0x0,
	SamplerState = 0x1,
	Texture2D = 0x2,
	Texture2DArray = 0x3,
	Texture2DMS = 0x4,
	Texture3D = 0x5,
	TextureCube = 0x6,
	TextureCubeArray = 0x7,
	TextureMetadata = 0x8,
	Buffer = 0x9,
	StructuredBuffer = 0xA,
	ByteAddressBuffer = 0xB,
	RaytracingAccelerationStructure = 0xC,
	RWTexture2D = 0xD,
	RWTexture2DArray = 0xE,
	RWTexture3D = 0xF,
	RWTextureCube = 0x10,
	RWTextureMetadata = 0x11,
	RWBuffer = 0x12,
	RWStructuredBuffer = 0x13,
	RWByteAddressBuffer = 0x14,
	RasterizerOrderedTexture2D = 0x15,
	MAX = 0x16
};

enum class EPCGMetadataTypes:unsigned char
{
	Float = 0x0,
	Double = 0x1,
	Integer32 = 0x2,
	Integer64 = 0x3,
	Vector2 = 0x4,
	Vector = 0x5,
	Vector4 = 0x6,
	Quaternion = 0x7,
	Transform = 0x8,
	String = 0x9,
	Boolean = 0xA,
	Rotator = 0xB,
	Name = 0xC,
	Count = 0xD,
	Unknown = 0xFF
};

enum class EPCGAttributeAccessorFlags:int
{
	StrictType = 0x1,
	AllowBroadcast = 0x2,
	AllowConstructible = 0x4,
	AllowSetDefaultValue = 0x8
};

enum class EPCGPointProperties:unsigned char
{
	Density = 0x0,
	BoundsMin = 0x1,
	BoundsMax = 0x2,
	Extents = 0x3,
	Color = 0x4,
	Position = 0x5,
	Rotation = 0x6,
	Scale = 0x7,
	Transform = 0x8,
	Steepness = 0x9,
	LocalCenter = 0xA
};

enum class EPCGAttributePropertySelection:int
{
	Attribute = 0x0,
	PointProperty = 0x1
};

enum class EPCGDataType:unsigned int
{
	None = 0x0,
	Point = 0x2,
	Spline = 0x4,
	LandscapeSpline = 0x8,
	PolyLine = 0xC,
	Landscape = 0x10,
	Texture = 0x20,
	RenderTarget = 0x40,
	BaseTexture = 0x60,
	Surface = 0x70,
	Volume = 0x80,
	Primitive = 0x100,
	Concrete = 0x1FE,
	Composite = 0x200,
	Spatial = 0x3FE,
	Param = 0x8000000,
	Settings = 0x10000000,
	Other = 0x20000000,
	Any = 0x3FFFFFFF
};

enum class ERecomputeUVsPropertiesUnwrapType:int
{
	ExpMap = 0x0,
	Conformal = 0x1,
	SpectralConformal = 0x2,
	IslandMerging = 0x3
};

enum class ERecomputeUVsPropertiesIslandMode:int
{
	PolyGroups = 0x0,
	ExistingUVs = 0x1
};

enum class ERecomputeUVsToolOrientationMode:int
{
	None = 0x0,
	MinBounds = 0x1
};

enum class ERecomputeUVsPropertiesLayoutType:int
{
	None = 0x0,
	Repack = 0x1,
	NormalizeToExistingBounds = 0x2,
	NormalizeToBounds = 0x3,
	NormalizeToWorld = 0x4
};

enum class EUVLayoutType:int
{
	Transform = 0x0,
	Stack = 0x1,
	Repack = 0x2
};

enum class ENormalCalculationMethod:unsigned char
{
	AreaWeighted = 0x0,
	AngleWeighted = 0x1,
	AreaAngleWeighting = 0x2
};

enum class ESplitNormalMethod:unsigned char
{
	UseExistingTopology = 0x0,
	FaceNormalThreshold = 0x1,
	FaceGroupID = 0x2,
	PerTriangle = 0x3,
	PerVertex = 0x4
};

enum class EPCGMetadataOp:unsigned char
{
	Min = 0x0,
	Max = 0x1,
	Sub = 0x2,
	Add = 0x3,
	Mul = 0x4,
	Div = 0x5,
	SourceValue = 0x6,
	TargetValue = 0x7
};

enum class EPCGMetadataFilterMode:unsigned char
{
	ExcludeAttributes = 0x0,
	IncludeAttributes = 0x1
};

enum class EBoneRotationSource:int
{
	BRS_KeepComponentSpaceRotation = 0x0,
	BRS_KeepLocalSpaceRotation = 0x1,
	BRS_CopyFromTarget = 0x2
};

enum class ERHIDescriptorHeapType:unsigned char
{
	Standard = 0x0,
	Sampler = 0x1,
	RenderTarget = 0x2,
	DepthStencil = 0x3,
	Count = 0x4,
	Invalid = 0xFF
};

enum class EMorphologyOperation:unsigned char
{
	Dilate = 0x0,
	Contract = 0x1,
	Close = 0x2,
	Open = 0x3
};

enum class EDataValidationResult:unsigned char
{
	Invalid = 0x0,
	Valid = 0x1,
	NotValidated = 0x2
};

enum class EPCGExecutionPhase:unsigned char
{
	NotExecuted = 0x0,
	PrepareData = 0x1,
	Execute = 0x2,
	PostExecute = 0x3,
	Done = 0x4
};

enum class EPCGIntersectionDensityFunction:unsigned char
{
	Multiply = 0x0,
	Minimum = 0x1
};

enum class EPCGUnionType:unsigned char
{
	LeftToRightPriority = 0x0,
	RightToLeftPriority = 0x1,
	KeepAll = 0x2
};

enum class EPCGUnionDensityFunction:unsigned char
{
	Maximum = 0x0,
	ClampedAddition = 0x1,
	Binary = 0x2
};

enum class EPCGDifferenceDensityFunction:unsigned char
{
	Minimum = 0x0,
	ClampedSubstraction = 0x1,
	Binary = 0x2
};

enum class EPCGChangeType:unsigned char
{
	None = 0x0,
	Cosmetic = 0x1,
	Settings = 0x2,
	Input = 0x4,
	Edge = 0x8,
	Node = 0x10,
	Structural = 0x20
};

enum class ESimpleRenderTargetMode:int
{
	EExistingColorAndDepth = 0x0,
	EUninitializedColorAndDepth = 0x1,
	EUninitializedColorExistingDepth = 0x2,
	EUninitializedColorClearDepth = 0x3,
	EClearColorExistingDepth = 0x4,
	EClearColorAndDepth = 0x5,
	EExistingContents_NoDepthStore = 0x6,
	EExistingColorAndClearDepth = 0x7,
	EExistingColorAndDepthAndClearStencil = 0x8
};

enum class EHLODLevelExclusion:unsigned char
{
	HLOD0 = 0x1,
	HLOD1 = 0x2,
	HLOD2 = 0x4,
	HLOD3 = 0x8,
	HLOD4 = 0x10,
	HLOD5 = 0x20,
	HLOD6 = 0x40,
	HLOD7 = 0x80
};

enum class ERenderResourceState:unsigned char
{
	Default = 0x0,
	BatchReleased = 0x1,
	Deleted = 0x2
};

enum class PCGDistanceShape:int
{
	SphereBounds = 0x0,
	BoxBounds = 0x1,
	Center = 0x2
};

enum class PCGNormalToDensityMode:signed char
{
	Set = 0x0,
	Minimum = 0x1,
	Maximum = 0x2,
	Add = 0x3,
	Subtract = 0x4,
	Multiply = 0x5,
	Divide = 0x6
};

enum class EQuarztQuantizationReference:unsigned char
{
	BarRelative = 0x0,
	TransportRelative = 0x1,
	CurrentTimeRelative = 0x2,
	Count = 0x3
};

enum class EMemOned:int
{
	MEM_Oned = 0x1
};

enum class EAimMode:unsigned char
{
	AimAtTarget = 0x0,
	OrientToTarget = 0x1,
	MAX = 0x2
};

enum class EHoudiniPluginSerializationVersion:int
{
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_BASE = 0x5,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_ADDED_UNREAL_SPLINE = 0x6,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_ADDED_KEEP_TRANSFORM = 0x7,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_MULTI_GEO_INPUT = 0x8,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_GEO_PART_NODE_PATH = 0x9,
	VER_HOUDINI_PLUGIN_SERIALIZATION_HOUDINI_SPLINE_TO_TRANSFORM = 0xA,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_UNREAL_SPLINE_RESOLUTION_PER_INPUT = 0xB,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_CUSTOM_LINKER = 0xC,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_ACTOR_INSTANCING = 0xD,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_LANDSCAPES = 0xE,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_PARAMETERS_UNIT = 0xF,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_BAKENAME_OVERRIDE = 0x10,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_COOK_TEMP_PACKAGES = 0x11,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_COOK_TEMP_PACKAGES_MESH_AND_LAYERS = 0x12,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_OUTLINER_INPUT_SAVE_ACTOR_ONLY = 0x13,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_GEOMETRY_INPUT_TRANSFORMS = 0x14,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_ADDED_PARAM_HELP = 0x15,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_INSTANCE_COLORS = 0x16,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_PARAMETERS_NOSWAP = 0x17,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_OUTLINER_INPUT_SAVE_MAT = 0x18,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_FILE_PARAM_READ_ONLY = 0x19,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_OUTLINER_INSTANCE_INDEX = 0x1A,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_INPUT_LANDSCAPE_TRANSFORM = 0x1B,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_OUTLINER_INPUT_SAVE_ACTOR_PATHNAME = 0x1C,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_419_SERIALIZATION_FIX = 0x1D,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_POST_419_SERIALIZATION_FIX = 0x1E,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_INPUT_SOFT_REF = 0x1F,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_V2_BASE = 0x64,
	VER_HOUDINI_PLUGIN_SERIALIZATION_VERSION_BASE_PLUS_ONE = 0x65,
	VER_HOUDINI_PLUGIN_SERIALIZATION_AUTOMATIC_VERSION = 0x64
};

enum class EApplyTransformMode:unsigned char
{
	Override = 0x0,
	Additive = 0x1,
	Max = 0x2
};

enum class EFieldOperationType:int
{
	Field_Multiply = 0x0,
	Field_Divide = 0x1,
	Field_Add = 0x2,
	Field_Substract = 0x3,
	Field_Operation_Max = 0x4
};

enum class ESetMaskConditionType:int
{
	Field_Set_Always = 0x0,
	Field_Set_IFF_NOT_Interior = 0x1,
	Field_Set_IFF_NOT_Exterior = 0x2,
	Field_MaskCondition_Max = 0x3
};

enum class EWaveFunctionType:int
{
	Field_Wave_Cosine = 0x0,
	Field_Wave_Gaussian = 0x1,
	Field_Wave_Falloff = 0x2,
	Field_Wave_Decay = 0x3,
	Field_Wave_Max = 0x4
};

enum class EFieldFalloffType:int
{
	Field_FallOff_None = 0x0,
	Field_Falloff_Linear = 0x1,
	Field_Falloff_Inverse = 0x2,
	Field_Falloff_Squared = 0x3,
	Field_Falloff_Logarithmic = 0x4,
	Field_Falloff_Max = 0x5
};

enum class EFieldPhysicsType:int
{
	Field_None = 0x0,
	Field_DynamicState = 0x1,
	Field_LinearForce = 0x2,
	Field_ExternalClusterStrain = 0x3,
	Field_Kill = 0x4,
	Field_LinearVelocity = 0x5,
	Field_AngularVelociy = 0x6,
	Field_AngularTorque = 0x7,
	Field_InternalClusterStrain = 0x8,
	Field_DisableThreshold = 0x9,
	Field_SleepingThreshold = 0xA,
	Field_PositionStatic = 0xB,
	Field_PositionAnimated = 0xC,
	Field_PositionTarget = 0xD,
	Field_DynamicConstraint = 0xE,
	Field_CollisionGroup = 0xF,
	Field_ActivateDisabled = 0x10,
	Field_InitialLinearVelocity = 0x11,
	Field_InitialAngularVelocity = 0x12,
	Field_LinearImpulse = 0x13,
	Field_PhysicsType_Max = 0x14
};

enum class EFieldOutputType:int
{
	Field_Output_Vector = 0x0,
	Field_Output_Scalar = 0x1,
	Field_Output_Integer = 0x2,
	Field_Output_Max = 0x3
};

namespace EFoliagePlacementMode
{
	enum Type:int
	{
		Manual = 0x0,
		Procedural = 0x1
	};
}

namespace FFoliageCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		FoliageUsingHierarchicalISMC = 0x1,
		HierarchicalISMCNonTransactional = 0x2,
		AddedFoliageTypeUpdateGuid = 0x3,
		ProceduralGuid = 0x4,
		CrossLevelBase = 0x5,
		FoliageTypeCustomization = 0x6,
		FoliageTypeCustomizationScaling = 0x7,
		FoliageTypeProceduralScaleAndShade = 0x8,
		FoliageHISMCBlueprints = 0x9,
		AddedMobility = 0xA,
		FoliageUsingFoliageISMC = 0xB,
		FoliageActorSupport = 0xC,
		FoliageActorSupportNoWeakPtr = 0xD,
		FoliageRepairInstancesWithLevelTransform = 0xE,
		FoliageDiscardOnLoad = 0xF,
		VersionPlusOne = 0x10,
		LatestVersion = 0xF
	};
}

enum class EFoliageInstanceFlags:int
{
	FOLIAGE_AlignToNormal = 0x1,
	FOLIAGE_NoRandomYaw = 0x2,
	FOLIAGE_Readjusted = 0x4,
	FOLIAGE_InstanceDeleted = 0x8
};

enum class EObjectDataResourceFlags:unsigned int
{
	None = 0x0,
	Inline = 0x1,
	Streaming = 0x2,
	Optional = 0x4,
	Duplicate = 0x8,
	MemoryMapped = 0x10,
	DerivedDataReference = 0x20
};

enum class EVisibilityAggressiveness:int
{
	VIS_LeastAggressive = 0x0,
	VIS_ModeratelyAggressive = 0x1,
	VIS_MostAggressive = 0x2,
	VIS_Max = 0x3
};

enum class EHISMViewRelevanceType:unsigned char
{
	Grass = 0x0,
	Foliage = 0x1,
	HISM = 0x2
};

enum class EHoudiniAssetState:unsigned char
{
	NeedInstantiation = 0x0,
	NewHDA = 0x1,
	PreInstantiation = 0x2,
	Instantiating = 0x3,
	PreCook = 0x4,
	Cooking = 0x5,
	PostCook = 0x6,
	PreProcess = 0x7,
	Processing = 0x8,
	None = 0x9,
	NeedRebuild = 0xA,
	NeedDelete = 0xB,
	Deleting = 0xC,
	ProcessTemplate = 0xD
};

enum class EFoliageScaling:unsigned char
{
	Uniform = 0x0,
	Free = 0x1,
	LockXY = 0x2,
	LockXZ = 0x3,
	LockYZ = 0x4
};

enum class EPCGDifferenceMode:unsigned char
{
	Inferred = 0x0,
	Continuous = 0x1,
	Discrete = 0x2
};

enum class ERigSwitchParentMode:unsigned char
{
	World = 0x0,
	DefaultParent = 0x1,
	ParentItem = 0x2
};

enum class EDepthOfFieldMethod:int
{
	DOFM_BokehDOF = 0x0,
	DOFM_Gaussian = 0x1,
	DOFM_CircleDOF = 0x2,
	DOFM_MAX = 0x3
};

enum class EPreferredTriangulationDirection:unsigned char
{
	None = 0x0,
	Tangential = 0x1,
	Radial = 0x2
};

enum class EBlendSpacePerBoneBlendMode:unsigned char
{
	ManualPerBoneOverride = 0x0,
	BlendProfile = 0x1
};

enum class ECanBeCharacterBase:int
{
	ECB_No = 0x0,
	ECB_Yes = 0x1,
	ECB_Owner = 0x2,
	ECB_MAX = 0x3
};

enum class EQuartzDelegateType:unsigned char
{
	MetronomeTick = 0x0,
	CommandEvent = 0x1,
	Count = 0x2
};

enum class ESlateParentWindowSearchMethod:unsigned char
{
	ActiveWindow = 0x0,
	MainWindow = 0x1
};

enum class EVertexColorMaskChannel:unsigned char
{
	Red = 0x0,
	Green = 0x1,
	Blue = 0x2,
	Alpha = 0x3,
	MAX_None = 0x4
};

enum class FoliageVertexColorMask:int
{
	FOLIAGEVERTEXCOLORMASK_Disabled = 0x0,
	FOLIAGEVERTEXCOLORMASK_Red = 0x1,
	FOLIAGEVERTEXCOLORMASK_Green = 0x2,
	FOLIAGEVERTEXCOLORMASK_Blue = 0x3,
	FOLIAGEVERTEXCOLORMASK_Alpha = 0x4
};

enum class EFoliageImplType:unsigned char
{
	Unknown = 0x0,
	StaticMesh = 0x1,
	Actor = 0x2,
	ISMActor = 0x3
};

enum class EClippingFlags:unsigned char
{
	None = 0x0,
	AlwaysClip = 0x1
};

enum class EClippingMethod:unsigned char
{
	Scissor = 0x0,
	Stencil = 0x1
};

enum class ERayTracingGroupCullingPriority:unsigned char
{
	CP_0_NEVER_CULL = 0x0,
	CP_1 = 0x1,
	CP_2 = 0x2,
	CP_3 = 0x3,
	CP_4_DEFAULT = 0x4,
	CP_5 = 0x5,
	CP_6 = 0x6,
	CP_7 = 0x7,
	CP_8_QUICKLY_CULL = 0x8
};

enum class ESlateTickType:unsigned char
{
	Time = 0x1,
	PlatformAndInput = 0x2,
	Widgets = 0x4,
	TimeAndWidgets = 0x5,
	All = 0x7
};

enum class EFireEventsAtPosition:unsigned char
{
	AtStartOfEvaluation = 0x0,
	AtEndOfEvaluation = 0x1,
	AfterSpawn = 0x2
};

enum class EFieldCommandHandlesType:unsigned char
{
	FilteredHandles = 0x0,
	InsideHandles = 0x1,
	NumHandles = 0x2
};

enum class EFieldCommandOutputType:unsigned char
{
	LinearForce = 0x0,
	LinearVelocity = 0x1,
	AngularTorque = 0x2,
	AngularVelocity = 0x3,
	NumOutputs = 0x4
};

enum class EFieldCommandResultType:unsigned char
{
	FinalResult = 0x0,
	TransientResult = 0x1,
	NumResults = 0x2
};

enum class EFieldResolutionType:int
{
	Field_Resolution_Minimal = 0x0,
	Field_Resolution_DisabledParents = 0x1,
	Field_Resolution_Maximum = 0x2,
	Field_Resolution_Max = 0x3
};

enum class EFieldFilterType:int
{
	Field_Filter_Dynamic = 0x0,
	Field_Filter_Kinematic = 0x1,
	Field_Filter_Static = 0x2,
	Field_Filter_All = 0x3,
	Field_Filter_Sleeping = 0x4,
	Field_Filter_Disabled = 0x5,
	Field_Filter_Max = 0x6
};

enum class EFieldObjectType:int
{
	Field_Object_Rigid = 0x0,
	Field_Object_Cloth = 0x1,
	Field_Object_Destruction = 0x2,
	Field_Object_Character = 0x3,
	Field_Object_All = 0x4,
	Field_Object_Max = 0x5
};

enum class EFieldPositionType:int
{
	Field_Position_CenterOfMass = 0x0,
	Field_Position_PivotPoint = 0x1,
	Field_Position_Max = 0x2
};

enum class EPCGSplineSamplingMode:unsigned char
{
	Subdivision = 0x0,
	Distance = 0x1
};

enum class EPCGSplineSamplingDimension:unsigned char
{
	OnSpline = 0x0,
	OnHorizontal = 0x1,
	OnVertical = 0x2,
	OnVolume = 0x3,
	OnInterior = 0x4
};

enum class EPCGSplineSamplingFill:unsigned char
{
	Fill = 0x0,
	EdgesOnly = 0x1
};

enum class EPCGSplineSamplingInteriorOrientation:unsigned char
{
	Uniform = 0x0,
	FollowCurvature = 0x1
};

enum class EConstraintsManagerNotifyType:int
{
	ConstraintAdded = 0x0,
	ConstraintRemoved = 0x1,
	ConstraintRemovedWithCompensation = 0x2,
	ManagerUpdated = 0x3
};

enum class EDetailMode:int
{
	DM_Low = 0x0,
	DM_Medium = 0x1,
	DM_High = 0x2,
	DM_MAX = 0x3
};

enum class EPCGTextureDensityFunction:unsigned char
{
	Ignore = 0x0,
	Multiply = 0x1
};

enum class EPCGTextureColorChannel:unsigned char
{
	Red = 0x0,
	Green = 0x1,
	Blue = 0x2,
	Alpha = 0x3
};

enum class EGeometryCollectionCacheType:unsigned char
{
	None = 0x0,
	Record = 0x1,
	Play = 0x2,
	RecordAndPlay = 0x3
};

enum class EHoudiniInputType:unsigned char
{
	Invalid = 0x0,
	Geometry = 0x1,
	Curve = 0x2,
	Asset = 0x3,
	Landscape = 0x4,
	World = 0x5,
	Skeletal = 0x6,
	GeometryCollection = 0x7
};

enum class EHoudiniOutputType:unsigned char
{
	Invalid = 0x0,
	Mesh = 0x1,
	Instancer = 0x2,
	Landscape = 0x3,
	Curve = 0x4,
	Skeletal = 0x5,
	GeometryCollection = 0x6,
	DataTable = 0x7
};

enum class EHoudiniStaticMeshMethod:unsigned char
{
	RawMesh = 0x0,
	FMeshDescription = 0x1,
	UHoudiniStaticMesh = 0x2
};

enum class EPCGMeshSamplingMethod:int
{
	OnePointPerTriangle = 0x0,
	OnePointPerVertex = 0x1,
	PoissonSampling = 0x2
};

enum class EPrimaryAssetCookRule:unsigned char
{
	Unknown = 0x0,
	NeverCook = 0x1,
	ProductionNeverCook = 0x2,
	DevelopmentCook = 0x2,
	DevelopmentAlwaysProductionNeverCook = 0x3,
	DevelopmentAlwaysCook = 0x3,
	DevelopmentAlwaysProductionUnknownCook = 0x4,
	AlwaysCook = 0x5
};

enum class EPrimaryAssetProductionLevel:int
{
	Development = 0x0,
	Production = 0x1,
	Count = 0x2
};

enum class ELODStreamingCallbackResult:int
{
	Success = 0x0,
	TimedOut = 0x1,
	AssetRemoved = 0x2,
	ComponentRemoved = 0x3,
	StreamingDisabled = 0x4,
	NotImplemented = 0x5
};

enum class EAssetManagerFilter:int
{
	Default = 0x0,
	UnloadedOnly = 0x1
};

enum class ENormalMode:int
{
	NM_PreserveSmoothingGroups = 0x0,
	NM_RecalculateNormals = 0x1,
	NM_RecalculateNormalsSmooth = 0x2,
	NM_RecalculateNormalsHard = 0x3,
	TEMP_BROKEN = 0x4,
	ENormalMode_MAX = 0x5
};

enum class ETextureSourceEncoding:unsigned char
{
	TSE_None = 0x0,
	TSE_Linear = 0x1,
	TSE_sRGB = 0x2,
	TSE_ST2084 = 0x3,
	TSE_Gamma22 = 0x4,
	TSE_BT1886 = 0x5,
	TSE_Gamma26 = 0x6,
	TSE_Cineon = 0x7,
	TSE_REDLog = 0x8,
	TSE_REDLog3G10 = 0x9,
	TSE_SLog1 = 0xA,
	TSE_SLog2 = 0xB,
	TSE_SLog3 = 0xC,
	TSE_AlexaV3LogC = 0xD,
	TSE_CanonLog = 0xE,
	TSE_ProTune = 0xF,
	TSE_VLog = 0x10,
	TSE_MAX = 0x11
};

enum class ELightingBuildQuality:int
{
	Quality_Preview = 0x0,
	Quality_Medium = 0x1,
	Quality_High = 0x2,
	Quality_Production = 0x3,
	Quality_MAX = 0x4
};

enum class EDLSSSettingOverride:unsigned char
{
	Enabled = 0x0,
	Disabled = 0x1,
	UseProjectSettings = 0x2
};

enum class EDLSSPreset:unsigned char
{
	Default = 0x0,
	A = 0x1,
	B = 0x2,
	C = 0x3,
	D = 0x4,
	E = 0x5,
	F = 0x6,
	G = 0x7
};

enum class EDLSSQualityMode:int
{
	MinValue = 0xFE,
	UltraPerformance = 0xFE,
	Performance = 0xFF,
	Balanced = 0x0,
	Quality = 0x1,
	UltraQuality = 0x2,
	DLAA = 0x3,
	MaxValue = 0x3,
	NumValues = 0x6
};

enum class EBlueprintPinStyleType:int
{
	BPST_Original = 0x0,
	BPST_VariantA = 0x1
};

enum class ENGXDLSSDenoiserMode:int
{
	Off = 0x0,
	DLSSRR = 0x1,
	MaxValue = 0x1
};

enum class ENGXBinariesSearchOrder:int
{
	MinValue = 0x0,
	CustomThenGeneric = 0x0,
	ForceGeneric = 0x1,
	ForceCustom = 0x2,
	ForceDevelopmentGeneric = 0x3,
	MaxValue = 0x3
};

enum class ENGXProjectIdentifier:int
{
	MinValue = 0x0,
	NGXApplicationIDThenUEProjectID = 0x0,
	ForceUEProjectID = 0x1,
	ForceNGXApplicationID = 0x2,
	MaxValue = 0x2
};

enum class ETAAPassConfig:int
{
	Main = 0x0,
	MainUpsampling = 0x1,
	MainSuperSampling = 0x2,
	ScreenSpaceReflections = 0x3,
	LightShaft = 0x4,
	DiaphragmDOF = 0x5,
	DiaphragmDOFUpsampling = 0x6,
	Hair = 0x7,
	MAX = 0x8
};

enum class ETAAQuality:unsigned char
{
	Low = 0x0,
	Medium = 0x1,
	High = 0x2,
	MAX = 0x3
};

enum class EMainTAAPassConfig:unsigned char
{
	Disabled = 0x0,
	TAA = 0x1,
	TSR = 0x2,
	ThirdParty = 0x3
};

enum class ENGXSupport:unsigned char
{
	Supported = 0x0,
	NotSupported = 0x1,
	NotSupportedIncompatibleHardware = 0x2,
	NotSupportedDriverOutOfDate = 0x3,
	NotSupportedOperatingSystemOutOfDate = 0x4,
	NotSupportedIncompatibleAPICaptureToolActive = 0x5
};

enum class EDLSSSupport:unsigned char
{
	Supported = 0x0,
	NotSupported = 0x1,
	NotSupportedIncompatibleHardware = 0x2,
	NotSupportedDriverOutOfDate = 0x3,
	NotSupportedOperatingSystemOutOfDate = 0x4,
	NotSupportedIncompatibleAPICaptureToolActive = 0x5
};

namespace FLiveLinkCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		NewLiveLinkRoleSystem = 0x1,
		VersionPlusOne = 0x2,
		LatestVersion = 0x1
	};
}

enum class EShaderVisibility:int
{
	SV_Vertex = 0x0,
	SV_Pixel = 0x1,
	SV_Geometry = 0x2,
	SV_Mesh = 0x3,
	SV_Amplification = 0x4,
	SV_All = 0x5,
	SV_ShaderVisibilityCount = 0x6
};

enum class ERTRootSignatureType:int
{
	RS_Raster = 0x0,
	RS_RayTracingGlobal = 0x1,
	RS_RayTracingLocal = 0x2
};

enum class EStreamlineResource:int
{
	Depth = 0x0,
	MotionVectors = 0x1,
	HUDLessColor = 0x2,
	UIColorAndAlpha = 0x3
};

enum class sentry_level_e:int
{
	SENTRY_LEVEL_DEBUG = 0xFF,
	SENTRY_LEVEL_INFO = 0x0,
	SENTRY_LEVEL_WARNING = 0x1,
	SENTRY_LEVEL_ERROR = 0x2,
	SENTRY_LEVEL_FATAL = 0x3
};

enum class ESentryLevel:unsigned char
{
	Debug = 0x0,
	Info = 0x1,
	Warning = 0x2,
	Error = 0x3,
	Fatal = 0x4
};

enum class EMontagePlayReturnType:unsigned char
{
	MontageLength = 0x0,
	Duration = 0x1
};

enum class EMaterialInstanceUsedByRTFlag:unsigned int
{
	None = 0x0,
	ResourceCreate = 0x1,
	CacheUniformExpressions = 0x2,
	All = 0x3
};

enum class EChartAggregationMode:unsigned char
{
	TextureSize = 0x0,
	SurfaceArea = 0x1,
	PixelDensity = 0x2,
	UVSize = 0x3
};

enum class EOS_EPacketReliability:int
{
	EOS_PR_UnreliableUnordered = 0x0,
	EOS_PR_ReliableUnordered = 0x1,
	EOS_PR_ReliableOrdered = 0x2
};

enum class EOS_EConnectionClosedReason:int
{
	EOS_CCR_Unknown = 0x0,
	EOS_CCR_ClosedByLocalUser = 0x1,
	EOS_CCR_ClosedByPeer = 0x2,
	EOS_CCR_TimedOut = 0x3,
	EOS_CCR_TooManyConnections = 0x4,
	EOS_CCR_InvalidMessage = 0x5,
	EOS_CCR_InvalidData = 0x6,
	EOS_CCR_ConnectionFailed = 0x7,
	EOS_CCR_ConnectionClosed = 0x8,
	EOS_CCR_NegotiationFailed = 0x9,
	EOS_CCR_UnexpectedError = 0xA
};

enum class EOS_PlayerDataStorage_EReadResult:int
{
	EOS_RR_ContinueReading = 0x1,
	EOS_RR_FailRequest = 0x2,
	EOS_RR_CancelRequest = 0x3
};

enum class EOS_PlayerDataStorage_EWriteResult:int
{
	EOS_WR_ContinueWriting = 0x1,
	EOS_WR_CompleteRequest = 0x2,
	EOS_WR_FailRequest = 0x3,
	EOS_WR_CancelRequest = 0x4
};

enum class EOS_TitleStorage_EReadResult:int
{
	EOS_TS_RR_ContinueReading = 0x1,
	EOS_TS_RR_FailRequest = 0x2,
	EOS_TS_RR_CancelRequest = 0x3
};

enum class EHairCardsFactoryFlags:unsigned int
{
	InvertedUV = 0x1,
	TextureRootUV = 0x2,
	TextureGroupIndex = 0x4,
	TextureBaseColor = 0x8,
	TextureRoughness = 0xA,
	TextureAttribute = 0xC
};

enum class EPackageSegment:unsigned char
{
	Header = 0x0,
	Exports = 0x1,
	BulkDataDefault = 0x2,
	BulkDataOptional = 0x3,
	BulkDataMemoryMapped = 0x4,
	PayloadSidecar = 0x5
};

enum class EHairCardsSimulationType:int
{
	None = 0x0,
	Guide = 0x1,
	RBF = 0x2
};

enum class EDeformationType:unsigned char
{
	Simulation = 0x0,
	RestGuide = 0x1,
	OffsetGuide = 0x2
};

enum class EHairPatchAttribute:unsigned char
{
	None = 0x0,
	GuideInflucence = 0x1,
	ClusterInfluence = 0x2
};

enum class EHairAABBUpdateType:int
{
	UpdateClusterAABB = 0x0,
	UpdateGroupAABB = 0x1
};

enum class EHairSimulationInterpolationMode:unsigned char
{
	Rigid = 0x0,
	Skinned = 0x1,
	RBF = 0x2
};

enum class ESplineType:unsigned char
{
	BSpline = 0x0,
	Hermite = 0x1,
	Max = 0x2
};

enum class EComparisonOp:int
{
	ECO_Unknown = 0x0,
	ECO_Equal = 0x1,
	ECO_NotEqual = 0x2,
	ECO_Larger = 0x3,
	ECO_LargerThan = 0x4,
	ECO_Smaller = 0x5,
	ECO_SmallerThan = 0x6
};

namespace EAlphaChannelMode
{
	enum Type:int
	{
		Disabled = 0x0,
		LinearColorSpaceOnly = 0x1,
		AllowThroughTonemapper = 0x2
	};
}

namespace EIPv4SubnetClasses
{
	enum Type:int
	{
		Invalid = 0x0,
		ClassA = 0x1,
		ClassB = 0x2,
		ClassC = 0x3
	};
}

enum class EMoviePipelineValidationState:unsigned char
{
	Valid = 0x0,
	Warnings = 0x1,
	Errors = 0x2
};

enum class EControlRigCurveAlignment:unsigned char
{
	Front = 0x0,
	Stretched = 0x1
};

enum class EMovieRenderPipelineState:unsigned char
{
	Uninitialized = 0x0,
	ProducingFrames = 0x1,
	Finalize = 0x2,
	Export = 0x3,
	Finished = 0x4
};

enum class EMovieRenderShotState:unsigned char
{
	Uninitialized = 0x0,
	WarmingUp = 0x1,
	MotionBlur = 0x2,
	Rendering = 0x3,
	Finished = 0x4
};

enum class ETextEntryType:unsigned char
{
	TextEntryCanceled = 0x0,
	TextEntryAccepted = 0x1,
	TextEntryUpdated = 0x2
};

enum class ERayTracingGeometryInitializerType:int
{
	Rendering = 0x0,
	StreamingDestination = 0x1,
	StreamingSource = 0x2
};

enum class EPrimitiveTopologyType:unsigned char
{
	Triangle = 0x0,
	Patch = 0x1,
	Line = 0x2,
	Point = 0x3,
	Num = 0x4,
	NumBits = 0x2
};

enum class EMoviePipelineShutterTiming:unsigned char
{
	FrameOpen = 0x0,
	FrameCenter = 0x1,
	FrameClose = 0x2
};

enum class ECustomTimeStepSynchronizationState:int
{
	Closed = 0x0,
	Error = 0x1,
	Synchronized = 0x2,
	Synchronizing = 0x3
};

enum class ENetLevelVisibilityRequest:int
{
	MakingVisible = 0x0,
	MakingInvisible = 0x1
};

enum class ELevelStreamingState:unsigned char
{
	Removed = 0x0,
	Unloaded = 0x1,
	FailedToLoad = 0x2,
	Loading = 0x3,
	LoadedNotVisible = 0x4,
	MakingVisible = 0x5,
	LoadedVisible = 0x6,
	MakingInvisible = 0x7
};

enum class ELevelStreamingTargetState:unsigned char
{
	Unloaded = 0x0,
	UnloadedAndRemoved = 0x1,
	LoadedNotVisible = 0x2,
	LoadedVisible = 0x3
};

enum class EImageCompressionQuality:unsigned char
{
	Default = 0x0,
	Uncompressed = 0x1
};

namespace ENavAreaEvent
{
	enum Type:int
	{
		Registered = 0x0,
		Unregistered = 0x1
	};
}

enum class EMoviePipelineEncodeQuality:unsigned char
{
	Low = 0x0,
	Medium = 0x1,
	High = 0x2,
	Epic = 0x3
};

enum class EAESGCMNetResult:unsigned char
{
	Unknown = 0x0,
	Success = 0x1,
	AESMissingIV = 0x2,
	AESMissingAuthTag = 0x3,
	AESMissingPayload = 0x4,
	AESDecryptionFailed = 0x5,
	AESZeroLastByte = 0x6
};

enum class EOodleNetworkEnableMode:unsigned char
{
	AlwaysEnabled = 0x0,
	WhenCompressedPacketReceived = 0x1
};

enum class EPlatformCryptoResult:int
{
	Success = 0x0,
	Failure = 0x1
};

enum class EOodleNetResult:unsigned char
{
	Unknown = 0x0,
	Success = 0x1,
	OodleDecodeFailed = 0x2,
	OodleSerializePayloadFail = 0x3,
	OodleBadDecompressedLength = 0x4,
	OodleNoDictionary = 0x5
};

enum class EOpenColorIOViewTransformDirection:unsigned char
{
	Forward = 0x0,
	Inverse = 0x1
};

enum class ESubmixEffectDynamicsKeySource:unsigned char
{
	Default = 0x0,
	AudioBus = 0x1,
	Submix = 0x2,
	Count = 0x3
};

enum class ESubmixEffectDynamicsProcessorType:unsigned char
{
	Compressor = 0x0,
	Limiter = 0x1,
	Expander = 0x2,
	Gate = 0x3,
	UpwardsCompressor = 0x4,
	Count = 0x5
};

enum class ESubmixEffectDynamicsPeakMode:unsigned char
{
	MeanSquared = 0x0,
	RootMeanSquared = 0x1,
	Peak = 0x2,
	Count = 0x3
};

enum class ESubmixEffectDynamicsChannelLinkMode:unsigned char
{
	Disabled = 0x0,
	Average = 0x1,
	Peak = 0x2,
	Count = 0x3
};

enum class EOpenColorIOTransformAlpha:unsigned int
{
	None = 0x0,
	Unpremultiply = 0x1,
	InvertUnpremultiply = 0x2
};

enum class EObjectStateTypeEnum:unsigned char
{
	Chaos_NONE = 0x0,
	Chaos_Object_Sleeping = 0x1,
	Chaos_Object_Kinematic = 0x2,
	Chaos_Object_Static = 0x3,
	Chaos_Object_Dynamic = 0x4,
	Chaos_Object_UserDefined = 0x64,
	Chaos_Max = 0x65
};

enum class EResolveClass:unsigned char
{
	No = 0x0,
	Yes = 0x1
};

enum class EFractureEngineClusterSizeMethod:unsigned char
{
	ByNumber = 0x0,
	ByFractionOfInput = 0x1,
	BySize = 0x2
};

enum class EAudioMixerChannelType:unsigned char
{
	FrontLeft = 0x0,
	FrontRight = 0x1,
	FrontCenter = 0x2,
	LowFrequency = 0x3,
	BackLeft = 0x4,
	BackRight = 0x5,
	FrontLeftOfCenter = 0x6,
	FrontRightOfCenter = 0x7,
	BackCenter = 0x8,
	SideLeft = 0x9,
	SideRight = 0xA,
	TopCenter = 0xB,
	TopFrontLeft = 0xC,
	TopFrontCenter = 0xD,
	TopFrontRight = 0xE,
	TopBackLeft = 0xF,
	TopBackCenter = 0x10,
	TopBackRight = 0x11,
	Unknown = 0x12,
	ChannelTypeCount = 0x13,
	DefaultChannel = 0x0
};

enum class EAudioMixerStreamDataFormatType:unsigned char
{
	Unknown = 0x0,
	Float = 0x1,
	Int16 = 0x2,
	Unsupported = 0x3
};

namespace ETcpMessagingVersion
{
	enum Type:int
	{
		Initial = 0x0,
		ChangedMessageLengthToInt32 = 0x1,
		ChangedMessageContext = 0x2,
		VersionPlusOne = 0x3,
		LatestVersion = 0x2,
		OldestSupportedVersion = 0x1
	};
}

enum class ESwapAudioOutputDeviceResultState:unsigned char
{
	Failure = 0x0,
	Success = 0x1,
	None = 0x2
};

enum class EMusicalNoteName:unsigned char
{
	C = 0x0,
	Db = 0x1,
	D = 0x2,
	Eb = 0x3,
	E = 0x4,
	F = 0x5,
	Gb = 0x6,
	G = 0x7,
	Ab = 0x8,
	A = 0x9,
	Bb = 0xA,
	B = 0xB
};

enum class EAudioRecordingExportType:unsigned char
{
	SoundWave = 0x0,
	WavFile = 0x1
};

enum class EFFTSize:unsigned char
{
	DefaultSize = 0x0,
	Min = 0x1,
	Small = 0x2,
	Medium = 0x3,
	Large = 0x4,
	VeryLarge = 0x5,
	Max = 0x6
};

enum class EFFTPeakInterpolationMethod:unsigned char
{
	NearestNeighbor = 0x0,
	Linear = 0x1,
	Quadratic = 0x2,
	ConstantQ = 0x3
};

enum class EFFTWindowType:unsigned char
{
	None = 0x0,
	Hamming = 0x1,
	Hann = 0x2,
	Blackman = 0x3
};

enum class EAudioSpectrumType:unsigned char
{
	MagnitudeSpectrum = 0x0,
	PowerSpectrum = 0x1,
	Decibel = 0x2
};

enum class EFontLayoutMethod:unsigned char
{
	Metrics = 0x0,
	BoundingBox = 0x1
};

enum class EStructDeserializerBackendTokens:int
{
	ArrayEnd = 0x0,
	ArrayStart = 0x1,
	Comment = 0x2,
	Error = 0x3,
	None = 0x4,
	Property = 0x5,
	StructureEnd = 0x6,
	StructureStart = 0x7
};

enum class EStructDeserializerErrorPolicies:int
{
	Error = 0x0,
	Ignore = 0x1,
	Warning = 0x2
};

enum class EStructDeserializerMapPolicies:int
{
	KeyValuePair = 0x0,
	Array = 0x1
};

enum class EStructSerializerBackendFlags:int
{
	None = 0x0,
	WriteTextAsComplexString = 0x1,
	WriteByteArrayAsByteStream = 0x2,
	WriteCborStandardEndianness = 0x4,
	WriteLWCTypesAsFloats = 0x8,
	Legacy = 0x0,
	LegacyUE4 = 0xB,
	Default = 0x3
};

enum class EStructSerializerStateFlags:int
{
	None = 0x0,
	WritingContainerElement = 0x1
};

enum class EStructSerializerNullValuePolicies:int
{
	Ignore = 0x0,
	Serialize = 0x1
};

enum class EStructSerializerReferenceLoopPolicies:int
{
	Error = 0x0,
	Ignore = 0x1,
	Serialize = 0x2
};

enum class EStructSerializerMapPolicies:int
{
	KeyValuePair = 0x0,
	Array = 0x1
};

enum class EConstructDynamicType:unsigned char
{
	OnlyAllocateClassObject = 0x0,
	CallZConstructor = 0x1
};

enum class ELightMapPaddingType:int
{
	LMPT_NormalPadding = 0x0,
	LMPT_PrePadding = 0x1,
	LMPT_NoPadding = 0x2
};

enum class EPostProcessMaterialInput:unsigned int
{
	SceneColor = 0x0,
	SeparateTranslucency = 0x1,
	CombinedBloom = 0x2,
	PreTonemapHDRColor = 0x2,
	PostTonemapHDRColor = 0x3,
	Velocity = 0x4
};

enum class EQuartzTimeSignatureQuantization:unsigned char
{
	HalfNote = 0x0,
	QuarterNote = 0x1,
	EighthNote = 0x2,
	SixteenthNote = 0x3,
	ThirtySecondNote = 0x4,
	Count = 0x5
};

enum class EStaticMeshAsyncProperties:unsigned int
{
	None = 0x0,
	RenderData = 0x1,
	SourceModels = 0x4,
	SectionInfoMap = 0x8,
	OriginalSectionInfoMap = 0x10,
	NavCollision = 0x20,
	LightmapUVVersion = 0x40,
	BodySetup = 0x80,
	LightingGuid = 0x100,
	ExtendedBounds = 0x200,
	NegativeBoundsExtension = 0x400,
	PositiveBoundsExtension = 0x800,
	StaticMaterials = 0x1000,
	LightmapUVDensity = 0x2000,
	IsBuiltAtRuntime = 0x4000,
	MinLOD = 0xFFFF8000,
	LightMapCoordinateIndex = 0x10000,
	LightMapResolution = 0x20000,
	HiResSourceModel = 0x40000,
	All = 0xFFFFFFFF
};

enum class ESoundDistanceCalc:int
{
	SOUNDDISTANCE_Normal = 0x0,
	SOUNDDISTANCE_InfiniteXYPlane = 0x1,
	SOUNDDISTANCE_InfiniteXZPlane = 0x2,
	SOUNDDISTANCE_InfiniteYZPlane = 0x3,
	SOUNDDISTANCE_MAX = 0x4
};

enum class ECsgOper:int
{
	CSG_Active = 0x0,
	CSG_Add = 0x1,
	CSG_Subtract = 0x2,
	CSG_Intersect = 0x3,
	CSG_Deintersect = 0x4,
	CSG_None = 0x5,
	CSG_MAX = 0x6
};

enum class ELumenRayLightingMode:unsigned char
{
	SurfaceCache = 0x0,
	HitLighting = 0x2
};

namespace EMobileShadingPath
{
	enum Type:int
	{
		Forward = 0x0,
		Deferred = 0x1
	};
}

namespace EMobileAntiAliasingMethod
{
	enum Type:int
	{
		None = 0x0,
		FXAA = 0x1,
		TemporalAA = 0x2,
		MSAA = 0x3
	};
}

namespace EMobileFloatPrecisionMode
{
	enum Type:int
	{
		Half = 0x0,
		Full_MaterialExpressionOnly = 0x1,
		Full = 0x2
	};
}

namespace EShaderCompressionFormat
{
	enum Type:int
	{
		None = 0x0,
		LZ4 = 0x1,
		Oodle = 0x2,
		Zlib = 0x3
	};
}

namespace EWorkingColorSpace
{
	enum Type:int
	{
		sRGB = 0x1,
		Rec2020 = 0x2,
		ACESAP0 = 0x3,
		ACESAP1 = 0x4,
		P3DCI = 0x5,
		P3D65 = 0x6,
		Custom = 0x7
	};
}

namespace ELumenSoftwareTracingMode
{
	enum Type:int
	{
		DetailTracing = 0x1,
		GlobalTracing = 0x0
	};
}

namespace EShadowMapMethod
{
	enum Type:int
	{
		ShadowMaps = 0x0,
		VirtualShadowMaps = 0x1
	};
}

namespace EFixedFoveationLevels
{
	enum Type:int
	{
		Disabled = 0x0,
		Low = 0x1,
		Medium = 0x2,
		High = 0x3,
		HighTop = 0x4
	};
}

namespace ECustomDepthStencil
{
	enum Type:int
	{
		Disabled = 0x0,
		Enabled = 0x1,
		EnabledOnDemand = 0x2,
		EnabledWithStencil = 0x3
	};
}

namespace ECompositingSampleCount
{
	enum Type:int
	{
		One = 0x1,
		Two = 0x2,
		Four = 0x4,
		Eight = 0x8
	};
}

namespace EDefaultBackBufferPixelFormat
{
	enum Type:int
	{
		DBBPF_B8G8R8A8 = 0x0,
		DBBPF_A16B16G16R16_DEPRECATED = 0x1,
		DBBPF_FloatRGB_DEPRECATED = 0x2,
		DBBPF_FloatRGBA = 0x3,
		DBBPF_A2B10G10R10 = 0x4,
		DBBPF_MAX = 0x5
	};
}

namespace EEarlyZPass
{
	enum Type:int
	{
		None = 0x0,
		OpaqueOnly = 0x1,
		OpaqueAndMasked = 0x2,
		Auto = 0x3
	};
}

namespace EClearSceneOptions
{
	enum Type:int
	{
		NoClear = 0x0,
		HardwareClear = 0x1,
		QuadAtMaxZ = 0x2
	};
}

namespace EVelocityOutputPass
{
	enum Type:int
	{
		DepthPass = 0x0,
		BasePass = 0x1,
		AfterBasePass = 0x2
	};
}

namespace EVertexDeformationOutputsVelocity
{
	enum Type:int
	{
		Off = 0x0,
		On = 0x1,
		Auto = 0x2
	};
}

enum class EScreenPassDrawFlags:unsigned char
{
	None = 0x0,
	AllowHMDHiddenAreaMask = 0x2
};

enum class ESafeZoneType:int
{
	eSZ_TOP = 0x0,
	eSZ_BOTTOM = 0x1,
	eSZ_LEFT = 0x2,
	eSZ_RIGHT = 0x3,
	eSZ_MAX = 0x4
};

enum class EKeyboardType:int
{
	Keyboard_Default = 0x0,
	Keyboard_Number = 0x1,
	Keyboard_Web = 0x2,
	Keyboard_Email = 0x3,
	Keyboard_Password = 0x4,
	Keyboard_AlphaNumeric = 0x5
};

namespace FFortniteMainBranchObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		WorldCompositionTile3DOffset = 0x1,
		MaterialInstanceSerializeOptimization_ShaderFName = 0x2,
		CullDistanceRefactor_RemovedDefaultDistance = 0x3,
		CullDistanceRefactor_NeverCullHLODsByDefault = 0x4,
		CullDistanceRefactor_NeverCullALODActorsByDefault = 0x5,
		SaveGeneratedMorphTargetByEngine = 0x6,
		ConvertReductionSettingOptions = 0x7,
		StaticParameterTerrainLayerWeightBlendType = 0x8,
		FixUpNoneNameAnimationCurves = 0x9,
		EnsureActiveBoneIndicesToContainParents = 0xA,
		SerializeInstancedStaticMeshRenderData = 0xB,
		CachedMaterialQualityNodeUsage = 0xC,
		FontOutlineDropShadowFixup = 0xD,
		NewSkeletalMeshImporterWorkflow = 0xE,
		NewLandscapeMaterialPerLOD = 0xF,
		RemoveUnnecessaryTracksFromPose = 0x10,
		FoliageLazyObjPtrToSoftObjPtr = 0x11,
		REVERTED_StoreTimelineNamesInTemplate = 0x12,
		AddBakePoseOverrideForSkeletalMeshReductionSetting = 0x13,
		StoreTimelineNamesInTemplate = 0x14,
		WidgetStopDuplicatingAnimations = 0x15,
		AllowSkeletalMeshToReduceTheBaseLOD = 0x16,
		ShrinkCurveTableSize = 0x17,
		WidgetAnimationDefaultToSelfFail = 0x18,
		FortHUDElementNowRequiresTag = 0x19,
		FortMappedCookedAnimation = 0x1A,
		SupportVirtualBoneInRetargeting = 0x1B,
		FixUpWaterMetadata = 0x1C,
		MoveWaterMetadataToActor = 0x1D,
		ReplaceLakeCollision = 0x1E,
		AnimLayerGuidConformation = 0x1F,
		MakeOceanCollisionTransient = 0x20,
		FFieldPathOwnerSerialization = 0x21,
		FixUpUnderwaterPostProcessMaterial = 0x22,
		SupportMultipleWaterBodiesPerExclusionVolume = 0x23,
		RigVMByteCodeDeterminism = 0x24,
		LandscapePhysicalMaterialRenderData = 0x25,
		FixupRuntimeVirtualTextureVolume = 0x26,
		FixUpRiverCollisionComponents = 0x27,
		FixDuplicateRiverSplineMeshCollisionComponents = 0x28,
		ContainsStableActorGUIDs = 0x29,
		LevelsetSerializationSupportForBodySetup = 0x2A,
		ChaosSolverPropertiesMoved = 0x2B,
		GameFeatureData_MovedComponentListAndCheats = 0x2C,
		ChaosClothAddfictitiousforces = 0x2D,
		ChaosConvexVariableStructureDataAndVerticesArray = 0x2E,
		RemoveLandscapeWaterInfo = 0x2F,
		ChaosClothAddWeightedValue = 0x30,
		ChaosClothAddTetherStiffnessWeightMap = 0x31,
		ChaosClothFixLODTransitionMaps = 0x32,
		ChaosClothAddTetherScaleAndDragLiftWeightMaps = 0x33,
		ChaosClothAddMaterialWeightMaps = 0x34,
		SerializeFloatChannelShowCurve = 0x35,
		LandscapeGrassSingleArray = 0x36,
		AddedSubSequenceEntryWarpCounter = 0x37,
		WaterBodyComponentRefactor = 0x38,
		BPGCCookedEditorTags = 0x39,
		TerrainLayerWeightsAreNotParameters = 0x3A,
		GravityOverrideDefinedInWorldSpace = 0x3B,
		AnimDynamicsEditableChainParameters = 0x3C,
		WaterZonesRefactor = 0x3D,
		ChaosClothFasterDamping = 0x3E,
		MigratedFunctionHandlersToDefaults = 0x3F,
		ChaosInertiaConvertedToVec3 = 0x40,
		MigratedEventDefinitionToDefaults = 0x41,
		LevelInstanceActorGuidSerialize = 0x42,
		SingleFrameAndKeyAnimModel = 0x43,
		RemappedEvaluateWorldPositionOffsetInRayTracing = 0x44,
		WaterBodyComponentCollisionSettingsRefactor = 0x45,
		WidgetInheritedNamedSlots = 0x46,
		WaterHLODSupportAdded = 0x47,
		PoseWatchMigrateSkeletonDrawParametersToPoseElement = 0x48,
		WaterExclusionVolumeExcludeAllDefault = 0x49,
		WaterNontessellatedLODSupportAdded = 0x4A,
		HierarchicalSimplificationMethodEnumAdded = 0x4B,
		WorldPartitionStreamingCellsNamingShortened = 0x4C,
		WorldPartitionActorDescSerializeContentBundleGuid = 0x4D,
		WorldPartitionActorDescSerializeActorIsRuntimeOnly = 0x4E,
		NaniteMaterialOverride = 0x4F,
		WorldPartitionHLODActorDescSerializeStats = 0x50,
		WorldPartitionStreamingSourceComponentTargetDeprecation = 0x51,
		FixedLocalizationGatherForExternalActorPackage = 0x52,
		WorldPartitionHLODActorUseSourceCellGuid = 0x53,
		VersionPlusOne = 0x54,
		LatestVersion = 0x53
	};
}

enum class FCPXMLExportDataSource:unsigned char
{
	OutputMetadata = 0x0,
	SequenceData = 0x1
};

enum class EMoviePipelineTextureStreamingMethod:unsigned char
{
	None = 0x0,
	Disabled = 0x1,
	FullyLoad = 0x2
};

enum class EHotReloadedClassFlags:int
{
	None = 0x0,
	Changed = 0x1
};

enum class EBusSendType:unsigned char
{
	PreEffect = 0x0,
	PostEffect = 0x1,
	Count = 0x2
};

enum class EUsdInitialLoadSet:unsigned char
{
	LoadAll = 0x0,
	LoadNone = 0x1
};

enum class EUsdInterpolationType:unsigned char
{
	Held = 0x0,
	Linear = 0x1
};

enum class EVRSImageDataType:unsigned char
{
	VRSImage_NotSupported = 0x0,
	VRSImage_Palette = 0x1,
	VRSImage_Fractional = 0x2
};

namespace FPCGCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		SplitProjectionNodeInputs = 0x1,
		MoveSelfPruningParamsOffFirstPin = 0x2,
		MoveParamsOffFirstPinDensityNodes = 0x3,
		SplitSamplerNodesInputs = 0x4,
		MovePointFilterParamsOffFirstPin = 0x5,
		AddParamPinToOverridableNodes = 0x6,
		SplitVolumeSamplerNodeInputs = 0x7,
		SplineSamplerUpdatedNodeInputs = 0x8,
		VersionPlusOne = 0x9,
		LatestVersion = 0x8
	};
}

enum class EGroomBindingMeshType:unsigned char
{
	SkeletalMesh = 0x0,
	GeometryCache = 0x1
};

enum class ERHITransientResourceType:unsigned char
{
	Texture = 0x0,
	Buffer = 0x1
};

enum class EPCGComponentInput:unsigned char
{
	Actor = 0x0,
	Landscape = 0x1,
	Other = 0x2,
	EPCGComponentInput_MAX = 0x3
};

enum class EPCGComponentGenerationTrigger:unsigned char
{
	GenerateOnLoad = 0x0,
	GenerateOnDemand = 0x1
};

enum class EActiveReloadType:int
{
	None = 0x0,
	Reinstancing = 0x1
};

enum class EPCGComponentDirtyFlag:unsigned char
{
	None = 0x0,
	Actor = 0x1,
	Landscape = 0x2,
	Input = 0x4,
	Data = 0x8,
	All = 0xF
};

enum class EPCGGraphParameterEvent:int
{
	GraphChanged = 0x0,
	GraphPostLoad = 0x1,
	Added = 0x2,
	Removed = 0x3,
	PropertyModified = 0x4,
	ValueModifiedLocally = 0x5,
	ValueModifiedByParent = 0x6
};

enum class EScrollDirection:int
{
	Scroll_Down = 0x0,
	Scroll_Up = 0x1
};

enum class EPCGWorldQueryFilterByTag:int
{
	NoTagFilter = 0x0,
	IncludeTagged = 0x1,
	ExcludeTagged = 0x2
};

enum class EHairInterpolationType:int
{
	NoneSkinning = 0x0,
	RigidSkinning = 0x1,
	OffsetSkinning = 0x2,
	SmoothSkinning = 0x3
};

enum class EPCGMedadataBitwiseOperation:unsigned short
{
	And = 0x0,
	Not = 0x1,
	Or = 0x2,
	Xor = 0x3
};

enum class EHairLODSelectionType:int
{
	Immediate = 0x0,
	Predicted = 0x1,
	Forced = 0x2
};

enum class EPCGMedadataBooleanOperation:unsigned short
{
	And = 0x0,
	Not = 0x1,
	Or = 0x2,
	Xor = 0x3
};

enum class ESlateDebuggingStateChangeEvent:unsigned char
{
	MouseCaptureGained = 0x0,
	MouseCaptureLost = 0x1
};

enum class EInputDeviceTriggerMask:unsigned char
{
	None = 0x0,
	Left = 0x1,
	Right = 0x2,
	All = 0x3
};

enum class EPCGMedadataCompareOperation:unsigned short
{
	Equal = 0x0,
	NotEqual = 0x1,
	Greater = 0x2,
	GreaterOrEqual = 0x3,
	Less = 0x4,
	LessOrEqual = 0x5
};

enum class ETransactionObjectEventType:unsigned char
{
	UndoRedo = 0x0,
	Finalized = 0x1,
	Snapshot = 0x2
};

enum class ETransactionObjectChangeCreatedBy:unsigned char
{
	TransactionRecord = 0x0,
	TransactionAnnotation = 0x1
};

enum class ESetParamResult:unsigned char
{
	Succeeded = 0x0,
	Failed = 0x1
};

enum class EControlRigFKRigExecuteMode:unsigned char
{
	Replace = 0x0,
	Additive = 0x1,
	Direct = 0x2,
	Max = 0x3
};

enum class EStatFlags:unsigned char
{
	None = 0x0,
	ClearEveryFrame = 0x1,
	CycleStat = 0x2,
	Verbose = 0x4
};

enum class EPCGMetadataMakeVector3:unsigned char
{
	ThreeValues = 0x0,
	Vector2AndValue = 0x1
};

enum class EPCGMetadataMakeVector4:unsigned char
{
	FourValues = 0x0,
	Vector2AndTwoValues = 0x1,
	TwoVector2 = 0x2,
	Vector3AndValue = 0x3
};

enum class EPCGMedadataMathsOperation:unsigned short
{
	UnaryOp = 0x400,
	Sign = 0x401,
	Frac = 0x402,
	Truncate = 0x403,
	Round = 0x404,
	Sqrt = 0x405,
	Abs = 0x406,
	Floor = 0x407,
	Ceil = 0x408,
	BinaryOp = 0x800,
	Add = 0x801,
	Subtract = 0x802,
	Multiply = 0x803,
	Divide = 0x804,
	Max = 0x805,
	Min = 0x806,
	Pow = 0x807,
	ClampMin = 0x808,
	ClampMax = 0x809,
	Modulo = 0x80A,
	TernaryOp = 0x1000,
	Clamp = 0x1001,
	Lerp = 0x1002
};

enum class EPCGMetadataSettingsBaseMode:int
{
	Inferred = 0x0,
	NoBroadcast = 0x1,
	Broadcast = 0x2
};

enum class EPCGMetadataSettingsBaseTypes:int
{
	AutoUpcastTypes = 0x0,
	StrictTypes = 0x1
};

enum class EMetasoundFrontendVertexAccessType:int
{
	Reference = 0x0,
	Value = 0x1,
	Unset = 0x2
};

enum class EMetasoundFrontendClassType:unsigned char
{
	External = 0x0,
	Graph = 0x1,
	Input = 0x2,
	Output = 0x3,
	Literal = 0x4,
	Variable = 0x5,
	VariableDeferredAccessor = 0x6,
	VariableAccessor = 0x7,
	VariableMutator = 0x8,
	Template = 0x9,
	Invalid = 0xA
};

enum class EPCGMedadataRotatorOperation:unsigned short
{
	RotatorOp = 0x0,
	Combine = 0x1,
	Invert = 0x2,
	Lerp = 0x3,
	TransformOp = 0x64,
	TransformRotation = 0x65,
	InverseTransformRotation = 0x66
};

enum class EPCGMedadataTransformOperation:unsigned short
{
	Compose = 0x0,
	Invert = 0x1,
	Lerp = 0x2
};

enum class EPCGTransformLerpMode:unsigned short
{
	QuatInterp = 0x0,
	EulerInterp = 0x1,
	DualQuatInterp = 0x2
};

enum class EPCGMedadataTrigOperation:unsigned short
{
	Acos = 0x0,
	Asin = 0x1,
	Atan = 0x2,
	Atan2 = 0x3,
	Cos = 0x4,
	Sin = 0x5,
	Tan = 0x6,
	DegToRad = 0x7,
	RadToDeg = 0x8
};

enum class EPCGMedadataVectorOperation:unsigned short
{
	VectorOp = 0x0,
	Cross = 0x1,
	Dot = 0x2,
	Distance = 0x3,
	Normalize = 0x4,
	Length = 0x5,
	RotateAroundAxis = 0x6,
	TransformOp = 0x64,
	TransformDirection = 0x65,
	TransformLocation = 0x66,
	InverseTransformDirection = 0x67,
	InverseTransformLocation = 0x68
};

enum class ETransactionStateEventType:unsigned char
{
	TransactionStarted = 0x0,
	TransactionCanceled = 0x1,
	PreTransactionFinalized = 0x2,
	TransactionFinalized = 0x3,
	PostTransactionFinalized = 0x4,
	UndoRedoStarted = 0x5,
	UndoRedoFinalized = 0x6
};

enum class EPCGActorSelection:unsigned char
{
	ByTag = 0x0,
	ByName = 0x1,
	ByClass = 0x2
};

enum class EPCGActorFilter:unsigned char
{
	Self = 0x0,
	Parent = 0x1,
	Root = 0x2,
	AllWorldActors = 0x3,
	Original = 0x4
};

enum class EPCGAttributeFilterOperation:int
{
	KeepSelectedAttributes = 0x0,
	DeleteSelectedAttributes = 0x1
};

enum class EPCGAttributeReduceOperation:int
{
	Average = 0x0,
	Max = 0x1,
	Min = 0x2
};

enum class EPCGAttributeSelectOperation:int
{
	Min = 0x0,
	Max = 0x1,
	Median = 0x2
};

enum class EPCGAttributeSelectAxis:int
{
	X = 0x0,
	Y = 0x1,
	Z = 0x2,
	W = 0x3,
	CustomAxis = 0x4
};

enum class EPCGBoundsModifierMode:unsigned char
{
	Set = 0x0,
	Intersect = 0x1,
	Include = 0x2,
	Translate = 0x3,
	Scale = 0x4
};

enum class EPCGCopyPointsInheritanceMode:unsigned char
{
	Relative = 0x0,
	Source = 0x1,
	Target = 0x2
};

enum class EPCGCopyPointsMetadataInheritanceMode:unsigned char
{
	SourceFirst = 0x0,
	TargetFirst = 0x1,
	SourceOnly = 0x2,
	TargetOnly = 0x3,
	None = 0x4
};

enum class EPCGCreateSplineMode:unsigned char
{
	CreateDataOnly = 0x0,
	CreateComponent = 0x1,
	CreateNewActor = 0x2
};

enum class EPCGGetDataFromActorMode:unsigned char
{
	ParseActorComponents = 0x0,
	GetSinglePoint = 0x1,
	GetDataFromProperty = 0x2,
	GetDataFromPCGComponent = 0x3,
	GetDataFromPCGComponentOrParseComponents = 0x4
};

enum class EPerQualityLevels:unsigned char
{
	Low = 0x0,
	Medium = 0x1,
	High = 0x2,
	Epic = 0x3,
	Cinematic = 0x4,
	Num = 0x5
};

enum class EAccessibleType:unsigned char
{
	Main = 0x0,
	Summary = 0x1
};

enum class EPCGDensityNoiseMode:unsigned char
{
	Set = 0x0,
	Minimum = 0x1,
	Maximum = 0x2,
	Add = 0x3,
	Multiply = 0x4
};

enum class ECompiledPartialDerivativeVariation:int
{
	CompiledPDV_FiniteDifferences = 0x0,
	CompiledPDV_Analytic = 0x1,
	CompiledPDV_MAX = 0x2
};

enum class EPCGSettingsType:unsigned char
{
	InputOutput = 0x0,
	Spatial = 0x1,
	Density = 0x2,
	Blueprint = 0x3,
	Metadata = 0x4,
	Filter = 0x5,
	Sampler = 0x6,
	Spawner = 0x7,
	Subgraph = 0x8,
	Debug = 0x9,
	Generic = 0xA,
	Param = 0xB
};

enum class EOutputDeviceRedirectorFlushOptions:unsigned int
{
	None = 0x0,
	Async = 0x1
};

enum class EPCGFilterByTagOperation:int
{
	KeepTagged = 0x0,
	RemoveTagged = 0x1
};

enum class EPCGPointExtentsModifierMode:unsigned char
{
	Set = 0x0,
	Minimum = 0x1,
	Maximum = 0x2,
	Add = 0x3,
	Multiply = 0x4
};

enum class EPCGPointFilterOperator:unsigned char
{
	Greater = 0x0,
	GreaterOrEqual = 0x1,
	Lesser = 0x2,
	LesserOrEqual = 0x3,
	Equal = 0x4,
	NotEqual = 0x5
};

enum class EPCGPointTargetFilterType:unsigned char
{
	Property = 0x0,
	Metadata = 0x1
};

enum class EPCGPointThresholdType:unsigned char
{
	Property = 0x0,
	Metadata = 0x1,
	Constant = 0x2
};

enum class EPCGPointFilterConstantType:unsigned char
{
	Integer64 = 0x0,
	Float = 0x1,
	Vector = 0x2,
	Vector4 = 0x3,
	String = 0x4,
	Unknown = 0x5
};

enum class EDebugSerializationFlags:int
{
	DSF_None = 0x0,
	DSF_IgnoreDiff = 0x1,
	DSF_EnableCookerWarnings = 0x2
};

enum class EManagedArrayType:unsigned char
{
	FNoneType = 0x0,
	FVectorType = 0x1,
	FIntVectorType = 0x2,
	FVector2DType = 0x3,
	FLinearColorType = 0x4,
	FInt32Type = 0x5,
	FBoolType = 0x6,
	FTransformType = 0x7,
	FStringType = 0x8,
	FFloatType = 0x9,
	FQuatType = 0xA,
	FBoneNodeType = 0xB,
	FMeshSectionType = 0xC,
	FBoxType = 0xD,
	FIntArrayType = 0xE,
	FGuidType = 0xF,
	FUInt8Type = 0x10,
	FVectorArrayPointerType = 0x11,
	FVectorArrayUniquePointerType = 0x12,
	FFImplicitObject3PointerType = 0x13,
	FFImplicitObject3UniquePointerType = 0x14,
	FFImplicitObject3SerializablePtrType = 0x15,
	FFBVHParticlesFloat3PointerType = 0x16,
	FFBVHParticlesFloat3UniquePointerType = 0x17,
	FTPBDRigidParticleHandle3fPtrType = 0x18,
	FTPBDGeometryCollectionParticleHandle3fPtrType = 0x19,
	FTGeometryParticle3fUniquePtrType = 0x1A,
	FFImplicitObject3ThreadSafeSharedPointerType = 0x1B,
	FFImplicitObject3SharedPointerType = 0x1C,
	FTPBDRigidClusteredParticleHandle3fPtrType = 0x1D,
	FFConvexUniquePtrType = 0x1E,
	FVector2DArrayType = 0x1F,
	FDoubleType = 0x20,
	FIntVector4Type = 0x21,
	FVector3dType = 0x22,
	FIntVector2Type = 0x23,
	FIntVector2ArrayType = 0x24,
	FInt32ArrayType = 0x25,
	FFloatArrayType = 0x26,
	FVector4fType = 0x27,
	FFVectorArrayType = 0x28,
	FTPBDRigidParticle3fUniquePtrType = 0x29
};

namespace ETransitionBlendMode
{
	enum Type:int
	{
		TBM_Linear = 0x0,
		TBM_Cubic = 0x1
	};
}

enum class EPCGSelfPruningType:unsigned char
{
	LargeToSmall = 0x0,
	SmallToLarge = 0x1,
	AllEqual = 0x2,
	None = 0x3,
	RemoveDuplicates = 0x4
};

enum class EPropertyBagContainerType:unsigned char
{
	None = 0x0,
	Array = 0x1
};

enum class EPropertyBagPropertyType:unsigned char
{
	None = 0x0,
	Bool = 0x1,
	Byte = 0x2,
	Int32 = 0x3,
	Int64 = 0x4,
	Float = 0x5,
	Double = 0x6,
	Name = 0x7,
	String = 0x8,
	Text = 0x9,
	Enum = 0xA,
	Struct = 0xB,
	Object = 0xC,
	SoftObject = 0xD,
	Class = 0xE,
	SoftClass = 0xF
};

enum class EPropertyBagResult:unsigned char
{
	Success = 0x0,
	TypeMismatch = 0x1,
	OutOfBounds = 0x2,
	PropertyNotFound = 0x3
};

enum class EPCGSpawnActorOption:unsigned char
{
	CollapseActors = 0x0,
	MergePCGOnly = 0x1,
	NoMerging = 0x2
};

enum class EPCGSpawnActorGenerationTrigger:unsigned char
{
	Default = 0x0,
	ForceGenerate = 0x1,
	DoNotGenerateInEditor = 0x2,
	DoNotGenerate = 0x3
};

enum class EPowerSavingEligibility:unsigned char
{
	Unknown = 0x0,
	Eligible = 0x1,
	NotEligible = 0x2
};

enum class EMetasoundFrontendNodeStyleDisplayVisibility:unsigned char
{
	Visible = 0x0,
	Hidden = 0x1
};

enum class ESlateTraceApplicationFlags:unsigned char
{
	None = 0x0,
	GlobalInvalidation = 0x1,
	FastWidgetPath = 0x2
};

enum class EConstraintInterpType:unsigned char
{
	Average = 0x0,
	Shortest = 0x1,
	Max = 0x2
};

namespace EParticleCollisionMode
{
	enum Type:int
	{
		SceneDepth = 0x0,
		DistanceField = 0x1
	};
}

enum class EHLODBatchingPolicy:unsigned char
{
	None = 0x0,
	MeshSection = 0x1,
	Instancing = 0x2
};

enum class EControlRigModifyBoneMode:unsigned char
{
	OverrideLocal = 0x0,
	OverrideGlobal = 0x1,
	AdditiveLocal = 0x2,
	AdditiveGlobal = 0x3,
	Max = 0x4
};

enum class ELocalFrameMode:int
{
	FromObject = 0x0,
	FromGeometry = 0x1
};

enum class EInputDevices:int
{
	None = 0x0,
	Keyboard = 0x1,
	Mouse = 0x2,
	Gamepad = 0x4,
	OculusTouch = 0x8,
	HTCViveWands = 0x10,
	AnySpatialDevice = 0x18,
	TabletFingers = 0x400
};

enum class EInputCaptureRequestType:int
{
	Begin = 0x1,
	Ignore = 0x2
};

enum class EInputCaptureState:int
{
	Begin = 0x1,
	Continue = 0x2,
	End = 0x3,
	Ignore = 0x4
};

enum class ERigVMSimPointIntegrateType:unsigned char
{
	Verlet = 0x0,
	SemiExplicitEuler = 0x1
};

enum class ETypedElementChildInclusionMethod:unsigned char
{
	None = 0x0,
	Immediate = 0x1,
	Recursive = 0x2
};

enum class ETypedElementSelectionMethod:unsigned char
{
	Primary = 0x0,
	Secondary = 0x1
};

enum class EToolContextTransformGizmoMode:unsigned char
{
	NoGizmo = 0x0,
	Translation = 0x1,
	Rotation = 0x2,
	Scale = 0x3,
	Combined = 0x8
};

enum class EToolMessageLevel:int
{
	Internal = 0x0,
	UserMessage = 0x1,
	UserNotification = 0x2,
	UserWarning = 0x3,
	UserError = 0x4
};

enum class EToolChangeTrackingMode:int
{
	NoChangeTracking = 0x1,
	UndoToExit = 0x2,
	FullUndoRedo = 0x3
};

enum class ESetMeshMaterialMode:unsigned char
{
	Original = 0x0,
	Checkerboard = 0x1,
	Override = 0x2
};

enum class EMeshEditingMaterialModes:int
{
	ExistingMaterial = 0x0,
	Diffuse = 0x1,
	Grey = 0x2,
	Soft = 0x3,
	Transparent = 0x4,
	TangentNormal = 0x5,
	VertexColor = 0x6,
	CustomImage = 0x7,
	Custom = 0x8
};

enum class ECreateModelingObjectResult:unsigned char
{
	Ok = 0x0,
	Cancelled = 0x1,
	Failed_Unknown = 0x2,
	Failed_NoAPIFound = 0x3,
	Failed_InvalidWorld = 0x4,
	Failed_InvalidMesh = 0x5,
	Failed_InvalidTexture = 0x6,
	Failed_AssetCreationFailed = 0x7,
	Failed_ActorCreationFailed = 0x8
};

enum class ECreateMeshObjectSourceMeshType:unsigned char
{
	MeshDescription = 0x0,
	DynamicMesh = 0x1
};

enum class EUnitType:int
{
	Distance = 0x0,
	Angle = 0x1,
	Speed = 0x2,
	Temperature = 0x3,
	Mass = 0x4,
	Force = 0x5,
	Frequency = 0x6,
	DataSize = 0x7,
	LuminousFlux = 0x8,
	LuminousIntensity = 0x9,
	Illuminance = 0xA,
	Luminance = 0xB,
	Time = 0xC,
	PixelDensity = 0xD,
	Multipliers = 0xE,
	NumberOf = 0xF
};

enum class EUnit:unsigned char
{
	Micrometers = 0x0,
	Millimeters = 0x1,
	Centimeters = 0x2,
	Meters = 0x3,
	Kilometers = 0x4,
	Inches = 0x5,
	Feet = 0x6,
	Yards = 0x7,
	Miles = 0x8,
	Lightyears = 0x9,
	Degrees = 0xA,
	Radians = 0xB,
	CentimetersPerSecond = 0xC,
	MetersPerSecond = 0xD,
	KilometersPerHour = 0xE,
	MilesPerHour = 0xF,
	Celsius = 0x10,
	Farenheit = 0x11,
	Kelvin = 0x12,
	Micrograms = 0x13,
	Milligrams = 0x14,
	Grams = 0x15,
	Kilograms = 0x16,
	MetricTons = 0x17,
	Ounces = 0x18,
	Pounds = 0x19,
	Stones = 0x1A,
	Newtons = 0x1B,
	PoundsForce = 0x1C,
	KilogramsForce = 0x1D,
	Hertz = 0x1E,
	Kilohertz = 0x1F,
	Megahertz = 0x20,
	Gigahertz = 0x21,
	RevolutionsPerMinute = 0x22,
	Bytes = 0x23,
	Kilobytes = 0x24,
	Megabytes = 0x25,
	Gigabytes = 0x26,
	Terabytes = 0x27,
	Lumens = 0x28,
	Candela = 0x29,
	Lux = 0x2A,
	CandelaPerMeter2 = 0x2B,
	Nanoseconds = 0x2C,
	Microseconds = 0x2D,
	Milliseconds = 0x2E,
	Seconds = 0x2F,
	Minutes = 0x30,
	Hours = 0x31,
	Days = 0x32,
	Months = 0x33,
	Years = 0x34,
	PixelsPerInch = 0x35,
	Percentage = 0x36,
	Multiplier = 0x37,
	Unspecified = 0x38
};

enum class EMakeMeshPolygroupMode:unsigned char
{
	PerShape = 0x0,
	PerFace = 0x1,
	PerQuad = 0x2
};

enum class EMakeMeshPlacementType:unsigned char
{
	GroundPlane = 0x0,
	OnScene = 0x1
};

enum class EMakeMeshPivotLocation:unsigned char
{
	Base = 0x0,
	Centered = 0x1,
	Top = 0x2
};

enum class EProceduralRectType:int
{
	Rectangle = 0x0,
	RoundedRectangle = 0x1
};

enum class EProceduralDiscType:int
{
	Disc = 0x0,
	PuncturedDisc = 0x1
};

enum class EProceduralSphereType:int
{
	LatLong = 0x0,
	Box = 0x1
};

enum class EProceduralStairsType:int
{
	Linear = 0x0,
	Floating = 0x1,
	Curved = 0x2,
	Spiral = 0x3
};

enum class ESQLitePreparedStatementFlags:unsigned char
{
	None = 0x0,
	Persistent = 0x1
};

enum class ESQLiteDatabaseOpenMode:unsigned char
{
	ReadOnly = 0x0,
	ReadWrite = 0x1,
	ReadWriteCreate = 0x2
};

enum class ESQLitePreparedStatementStepResult:unsigned char
{
	Error = 0x0,
	Busy = 0x1,
	Row = 0x2,
	Done = 0x3
};

enum class ESQLiteColumnType:unsigned char
{
	Integer = 0x0,
	Float = 0x1,
	String = 0x2,
	Blob = 0x3,
	Null = 0x4
};

enum class ESQLitePreparedStatementExecuteRowResult:unsigned char
{
	Continue = 0x0,
	Stop = 0x1,
	Error = 0x2
};

enum class ESceneSnapQueryType:unsigned char
{
	Position = 0x1,
	Rotation = 0x2
};

enum class EShouldCookBlueprintPropertyGuids:int
{
	No = 0x0,
	Yes = 0x1,
	Inherit = 0x2
};

namespace ENavigationQueryResult
{
	enum Type:int
	{
		Invalid = 0x0,
		Error = 0x1,
		Fail = 0x2,
		Success = 0x3
	};
}

enum class EBakeTextureBitDepth:int
{
	ChannelBits8 = 0x0,
	ChannelBits16 = 0x1
};

enum class EWindowTitleBarMode:unsigned char
{
	Overlay = 0x0,
	VerticalBox = 0x1
};

enum class EHandleSourcesMethod:unsigned char
{
	DeleteSources = 0x0,
	HideSources = 0x1,
	KeepSources = 0x2,
	KeepFirstSource = 0x3,
	KeepLastSource = 0x4
};

enum class EBaseCreateFromSelectedTargetType:int
{
	NewObject = 0x0,
	FirstInputObject = 0x1,
	LastInputObject = 0x2
};

enum class EMeshSelectionElementType:int
{
	Vertex = 0x0,
	Face = 0x1,
	Edge = 0x2,
	Group = 0x3
};

enum class ECSGOperation:unsigned char
{
	DifferenceAB = 0x0,
	DifferenceBA = 0x1,
	Intersect = 0x2,
	Union = 0x3
};

enum class ETrimOperation:unsigned char
{
	TrimA = 0x0,
	TrimB = 0x1
};

enum class ETrimSide:unsigned char
{
	RemoveInside = 0x0,
	RemoveOutside = 0x1
};

enum class ERevolvePropertiesPolygroupMode:unsigned char
{
	PerShape = 0x0,
	PerFace = 0x1,
	PerRevolveStep = 0x2,
	PerPathSegment = 0x3
};

enum class ERevolvePropertiesQuadSplit:unsigned char
{
	Uniform = 0x0,
	Compact = 0x1
};

enum class ERevolvePropertiesCapFillMode:unsigned char
{
	None = 0x0,
	CenterFan = 0x1,
	Delaunay = 0x2,
	EarClipping = 0x3
};

enum class EUVLayoutPreviewSide:int
{
	Left = 0x0,
	Right = 0x1
};

enum class ECollectSurfacePathDoneMode:int
{
	SnapCloseLoop = 0x0,
	SnapDoubleClick = 0x1,
	SnapDoubleClickOrCloseLoop = 0x2,
	ExternalLambda = 0x3,
	FixedNumPoints = 0x4
};

enum class EModelingComponentsPlaneVisualizationMode:unsigned char
{
	SimpleGrid = 0x0,
	HierarchicalGrid = 0x1,
	FixedScreenAreaGrid = 0x2
};

enum class EStandardToolActions:int
{
	IncreaseBrushSize = 0x64,
	DecreaseBrushSize = 0x65,
	ToggleWireframe = 0x66,
	BaseClientDefinedActionID = 0x2710
};

enum class EDrawPolygonDrawMode:unsigned char
{
	Freehand = 0x0,
	Circle = 0x1,
	Square = 0x2,
	Rectangle = 0x3,
	RoundedRectangle = 0x4,
	Ring = 0x5
};

enum class EDrawPolygonExtrudeMode:unsigned char
{
	Flat = 0x0,
	Fixed = 0x1,
	Interactive = 0x2
};

enum class EToolActivityStartResult:int
{
	Running = 0x0,
	FailedStart = 0x1
};

enum class EToolActivityEndResult:int
{
	Completed = 0x0,
	Cancelled = 0x1,
	ErrorDuringEnd = 0x2
};

enum class EEditMeshPolygonsToolActions:int
{
	NoAction = 0x0,
	AcceptCurrent = 0x1,
	CancelCurrent = 0x2,
	Extrude = 0x3,
	PushPull = 0x4,
	Offset = 0x5,
	Inset = 0x6,
	Outset = 0x7,
	BevelFaces = 0x8,
	InsertEdge = 0x9,
	InsertEdgeLoop = 0xA,
	Complete = 0xB,
	PlaneCut = 0xC,
	Merge = 0xD,
	Delete = 0xE,
	CutFaces = 0xF,
	RecalculateNormals = 0x10,
	FlipNormals = 0x11,
	Retriangulate = 0x12,
	Decompose = 0x13,
	Disconnect = 0x14,
	Duplicate = 0x15,
	CollapseEdge = 0x16,
	WeldEdges = 0x17,
	StraightenEdge = 0x18,
	FillHole = 0x19,
	BridgeEdges = 0x1A,
	BevelEdges = 0x1B,
	PlanarProjectionUV = 0x1C,
	SimplifyByGroups = 0x1D,
	RegenerateExtraCorners = 0x1E,
	PokeSingleFace = 0x1F,
	SplitSingleEdge = 0x20,
	FlipSingleEdge = 0x21,
	CollapseSingleEdge = 0x22,
	BevelAuto = 0x23
};

enum class EEditMeshPolygonsToolSelectionMode:int
{
	Faces = 0x0,
	Edges = 0x1,
	Vertices = 0x2,
	Loops = 0x3,
	Rings = 0x4,
	FacesEdgesVertices = 0x5
};

enum class EPCGMeshSelectorMaterialOverrideMode:unsigned char
{
	NoOverride = 0x0,
	StaticOverride = 0x1,
	ByAttributeOverride = 0x2
};

enum class EPolyEditOffsetModeOptions:int
{
	VertexNormals = 0x2,
	SelectedTriangleNormals = 0x0,
	SelectedTriangleNormalsEven = 0x1
};

enum class EPolyEditExtrudeDistanceMode:int
{
	ClickInViewport = 0x0,
	Fixed = 0x1
};

enum class EPolyEditExtrudeDirection:int
{
	SelectionNormal = 0x0,
	WorldX = 0x1,
	WorldY = 0x2,
	WorldZ = 0x3,
	LocalX = 0x4,
	LocalY = 0x5,
	LocalZ = 0x6
};

enum class EPolyEditExtrudeModeOptions:int
{
	SingleDirection = 0x3,
	SelectedTriangleNormals = 0x0,
	SelectedTriangleNormalsEven = 0x1
};

enum class EPolyEditPushPullModeOptions:int
{
	SelectedTriangleNormals = 0x0,
	SelectedTriangleNormalsEven = 0x1,
	SingleDirection = 0x3,
	VertexNormals = 0x2
};

enum class EGroupEdgeInsertionMode:int
{
	Retriangulate = 0x0,
	PlaneCut = 0x1
};

enum class EEdgeLoopPositioningMode:int
{
	Even = 0x0,
	ProportionOffset = 0x1,
	DistanceOffset = 0x2
};

enum class EEdgeLoopInsertionMode:int
{
	Retriangulate = 0x0,
	PlaneCut = 0x1
};

enum class EHoudiniGeoType:unsigned char
{
	Invalid = 0x0,
	Default = 0x1,
	Intermediate = 0x2,
	Input = 0x3,
	Curve = 0x4
};

enum class EHoudiniPartType:unsigned char
{
	Invalid = 0x0,
	Mesh = 0x1,
	Instancer = 0x2,
	Curve = 0x3,
	Volume = 0x4,
	DataTable = 0x5
};

enum class EHoudiniInstancerType:unsigned char
{
	Invalid = 0x0,
	ObjectInstancer = 0x1,
	PackedPrimitive = 0x2,
	AttributeInstancer = 0x3,
	OldSchoolAttributeInstancer = 0x4,
	GeometryCollection = 0x5
};

enum class EPolyEditCutPlaneOrientation:int
{
	FaceNormals = 0x0,
	ViewDirection = 0x1
};

enum class EHoudiniHandleType:unsigned char
{
	Xform = 0x0,
	Bounder = 0x1,
	Unsupported = 0x2
};

enum class EXformParameter:unsigned char
{
	TX = 0x0,
	TY = 0x1,
	TZ = 0x2,
	RX = 0x3,
	RY = 0x4,
	RZ = 0x5,
	SX = 0x6,
	SY = 0x7,
	SZ = 0x8,
	COUNT = 0x9
};

enum class EHoudiniLandscapeExportType:unsigned char
{
	Heightfield = 0x0,
	Mesh = 0x1,
	Points = 0x2
};

enum class EUnrealObjectInputNodeType:unsigned char
{
	Invalid = 0x0,
	Container = 0x1,
	Reference = 0x2,
	Leaf = 0x3
};

enum class EHoudiniInputObjectType:unsigned char
{
	Invalid = 0x0,
	Object = 0x1,
	StaticMesh = 0x2,
	SkeletalMesh = 0x3,
	SceneComponent = 0x4,
	StaticMeshComponent = 0x5,
	InstancedStaticMeshComponent = 0x6,
	SplineComponent = 0x7,
	HoudiniSplineComponent = 0x8,
	HoudiniAssetComponent = 0x9,
	Actor = 0xA,
	Landscape = 0xB,
	Brush = 0xC,
	CameraComponent = 0xD,
	DataTable = 0xE,
	HoudiniAssetActor = 0xF,
	FoliageType_InstancedStaticMesh = 0x10,
	GeometryCollection = 0x11,
	GeometryCollectionComponent = 0x12,
	GeometryCollectionActor_Deprecated = 0x13,
	SkeletalMeshComponent = 0x14,
	Blueprint = 0x15
};

enum class EHoudiniXformType:unsigned char
{
	None = 0x0,
	IntoThisObject = 0x1,
	Auto = 0x2
};

namespace EUMGSequencePlayMode
{
	enum Type:int
	{
		Forward = 0x0,
		Reverse = 0x1,
		PingPong = 0x2
	};
}

namespace EVirtualKeyboardType
{
	enum Type:int
	{
		Default = 0x0,
		Number = 0x1,
		Web = 0x2,
		Email = 0x3,
		Password = 0x4,
		AlphaNumeric = 0x5
	};
}

namespace ESlateSizeRule
{
	enum Type:int
	{
		Automatic = 0x0,
		Fill = 0x1
	};
}

enum class EOS_UI_EKeyCombination:unsigned __int64
{
	EOS_UIK_ModifierShift = 0x10,
	EOS_UIK_KeyTypeMask = 0xFFFFFFFF,
	EOS_UIK_ModifierMask = 0xFFFF0000,
	EOS_UIK_Shift = 0x10000,
	EOS_UIK_Control = 0x20000,
	EOS_UIK_Alt = 0x40000,
	EOS_UIK_Meta = 0x80000,
	EOS_UIK_ValidModifierMask = 0xF0000,
	EOS_UIK_None = 0x0,
	EOS_UIK_Space = 0x1,
	EOS_UIK_Backspace = 0x2,
	EOS_UIK_Tab = 0x3,
	EOS_UIK_Escape = 0x4,
	EOS_UIK_PageUp = 0x5,
	EOS_UIK_PageDown = 0x6,
	EOS_UIK_End = 0x7,
	EOS_UIK_Home = 0x8,
	EOS_UIK_Insert = 0x9,
	EOS_UIK_Delete = 0xA,
	EOS_UIK_Left = 0xB,
	EOS_UIK_Up = 0xC,
	EOS_UIK_Right = 0xD,
	EOS_UIK_Down = 0xE,
	EOS_UIK_Key0 = 0xF,
	EOS_UIK_Key1 = 0x10,
	EOS_UIK_Key2 = 0x11,
	EOS_UIK_Key3 = 0x12,
	EOS_UIK_Key4 = 0x13,
	EOS_UIK_Key5 = 0x14,
	EOS_UIK_Key6 = 0x15,
	EOS_UIK_Key7 = 0x16,
	EOS_UIK_Key8 = 0x17,
	EOS_UIK_Key9 = 0x18,
	EOS_UIK_KeyA = 0x19,
	EOS_UIK_KeyB = 0x1A,
	EOS_UIK_KeyC = 0x1B,
	EOS_UIK_KeyD = 0x1C,
	EOS_UIK_KeyE = 0x1D,
	EOS_UIK_KeyF = 0x1E,
	EOS_UIK_KeyG = 0x1F,
	EOS_UIK_KeyH = 0x20,
	EOS_UIK_KeyI = 0x21,
	EOS_UIK_KeyJ = 0x22,
	EOS_UIK_KeyK = 0x23,
	EOS_UIK_KeyL = 0x24,
	EOS_UIK_KeyM = 0x25,
	EOS_UIK_KeyN = 0x26,
	EOS_UIK_KeyO = 0x27,
	EOS_UIK_KeyP = 0x28,
	EOS_UIK_KeyQ = 0x29,
	EOS_UIK_KeyR = 0x2A,
	EOS_UIK_KeyS = 0x2B,
	EOS_UIK_KeyT = 0x2C,
	EOS_UIK_KeyU = 0x2D,
	EOS_UIK_KeyV = 0x2E,
	EOS_UIK_KeyW = 0x2F,
	EOS_UIK_KeyX = 0x30,
	EOS_UIK_KeyY = 0x31,
	EOS_UIK_KeyZ = 0x32,
	EOS_UIK_Numpad0 = 0x33,
	EOS_UIK_Numpad1 = 0x34,
	EOS_UIK_Numpad2 = 0x35,
	EOS_UIK_Numpad3 = 0x36,
	EOS_UIK_Numpad4 = 0x37,
	EOS_UIK_Numpad5 = 0x38,
	EOS_UIK_Numpad6 = 0x39,
	EOS_UIK_Numpad7 = 0x3A,
	EOS_UIK_Numpad8 = 0x3B,
	EOS_UIK_Numpad9 = 0x3C,
	EOS_UIK_NumpadAsterisk = 0x3D,
	EOS_UIK_NumpadPlus = 0x3E,
	EOS_UIK_NumpadMinus = 0x3F,
	EOS_UIK_NumpadPeriod = 0x40,
	EOS_UIK_NumpadDivide = 0x41,
	EOS_UIK_F1 = 0x42,
	EOS_UIK_F2 = 0x43,
	EOS_UIK_F3 = 0x44,
	EOS_UIK_F4 = 0x45,
	EOS_UIK_F5 = 0x46,
	EOS_UIK_F6 = 0x47,
	EOS_UIK_F7 = 0x48,
	EOS_UIK_F8 = 0x49,
	EOS_UIK_F9 = 0x4A,
	EOS_UIK_F10 = 0x4B,
	EOS_UIK_F11 = 0x4C,
	EOS_UIK_F12 = 0x4D,
	EOS_UIK_F13 = 0x4E,
	EOS_UIK_F14 = 0x4F,
	EOS_UIK_F15 = 0x50,
	EOS_UIK_F16 = 0x51,
	EOS_UIK_F17 = 0x52,
	EOS_UIK_F18 = 0x53,
	EOS_UIK_F19 = 0x54,
	EOS_UIK_F20 = 0x55,
	EOS_UIK_F21 = 0x56,
	EOS_UIK_F22 = 0x57,
	EOS_UIK_F23 = 0x58,
	EOS_UIK_F24 = 0x59,
	EOS_UIK_OemPlus = 0x5A,
	EOS_UIK_OemComma = 0x5B,
	EOS_UIK_OemMinus = 0x5C,
	EOS_UIK_OemPeriod = 0x5D,
	EOS_UIK_Oem1 = 0x5E,
	EOS_UIK_Oem2 = 0x5F,
	EOS_UIK_Oem3 = 0x60,
	EOS_UIK_Oem4 = 0x61,
	EOS_UIK_Oem5 = 0x62,
	EOS_UIK_Oem6 = 0x63,
	EOS_UIK_Oem7 = 0x64,
	EOS_UIK_Oem8 = 0x65,
	EOS_UIK_MaxKeyType = 0x66
};

enum class EOS_EAntiCheatClientMode:int
{
	EOS_ACCM_Invalid = 0x0,
	EOS_ACCM_ClientServer = 0x1,
	EOS_ACCM_PeerToPeer = 0x2
};

enum class EOS_EAntiCheatCommonClientType:int
{
	EOS_ACCCT_ProtectedClient = 0x0,
	EOS_ACCCT_UnprotectedClient = 0x1,
	EOS_ACCCT_AIBot = 0x2
};

enum class EOS_EAntiCheatCommonClientPlatform:int
{
	EOS_ACCCP_Unknown = 0x0,
	EOS_ACCCP_Windows = 0x1,
	EOS_ACCCP_Mac = 0x2,
	EOS_ACCCP_Linux = 0x3,
	EOS_ACCCP_Xbox = 0x4,
	EOS_ACCCP_PlayStation = 0x5,
	EOS_ACCCP_Nintendo = 0x6,
	EOS_ACCCP_iOS = 0x7,
	EOS_ACCCP_Android = 0x8
};

enum class EEOSApiVersion:unsigned char
{
	v2022_10_28 = 0x0,
	v2022_05_20 = 0x1,
	v2022_02_11 = 0x2
};

enum class EPresenceAdvertisementType:unsigned char
{
	None = 0x0,
	Party = 0x1,
	Session = 0x2
};

enum class EPartyJoinabilityConstraint:unsigned char
{
	AllowPlayersInMultipleParties = 0x0,
	IgnoreInvitesIfAlreadyInParty = 0x1
};

enum class EDedicatedServersDistributionMode:unsigned char
{
	DevelopersOnly = 0x0,
	DevelopersAndPlayers = 0x1,
	PlayersOnly = 0x2
};

enum class ENetworkAuthenticationMode:unsigned char
{
	Default = 0x0,
	IDToken = 0x1,
	Off = 0x2
};

namespace EPinHidingMode
{
	enum Type:int
	{
		NeverAsPin = 0x0,
		PinHiddenByDefault = 0x1,
		PinShownByDefault = 0x2,
		AlwaysAsPin = 0x3
	};
}

enum class ESlateAccessibleBehavior:unsigned char
{
	NotAccessible = 0x0,
	Auto = 0x1,
	Summary = 0x2,
	Custom = 0x3,
	ToolTip = 0x4
};

enum class ESlateVisibility:unsigned char
{
	Visible = 0x0,
	Collapsed = 0x1,
	Hidden = 0x2,
	HitTestInvisible = 0x3,
	SelfHitTestInvisible = 0x4
};

namespace EAlignHorizontalUI
{
	enum Type:int
	{
		Left = 0x0,
		Center = 0x1,
		Right = 0x2
	};
}

namespace EAlignVerticalUI
{
	enum Type:int
	{
		Top = 0x0,
		Center = 0x1,
		Bottom = 0x2
	};
}

enum class EWidgetAnimationEvent:unsigned char
{
	Started = 0x0,
	Finished = 0x1
};

enum class EWidgetTickFrequency:unsigned char
{
	Never = 0x0,
	Auto = 0x1
};

enum class EReplayResult:unsigned int
{
	Success = 0x0,
	ReplayNotFound = 0x1,
	Corrupt = 0x2,
	UnsupportedCheckpoint = 0x3,
	GameSpecific = 0x4,
	InitConnect = 0x5,
	LoadMap = 0x6,
	Serialization = 0x7,
	StreamerError = 0x8,
	ConnectionClosed = 0x9,
	MissingArchive = 0xA,
	Unknown = 0xB
};

enum class EEOSUserInterface_SignInOrCreateAccount_Choice:unsigned char
{
	SignIn = 0x0,
	CreateAccount = 0x1
};

enum class EUVProjectionMethod:unsigned char
{
	Box = 0x0,
	Cylinder = 0x1,
	Plane = 0x2,
	ExpMap = 0x3
};

enum class EUVProjectionToolActions:int
{
	NoAction = 0x0,
	AutoFit = 0x1,
	AutoFitAlign = 0x2,
	Reset = 0x3
};

enum class EEOSUserInterface_SwitchToCrossPlatformAccount_Choice:unsigned char
{
	SwitchToThisAccount = 0x0,
	LinkADifferentAccount = 0x1,
	CancelLinking = 0x2
};

enum class EUVProjectionToolInitializationMode:int
{
	Default = 0x0,
	UsePrevious = 0x1,
	AutoFit = 0x2,
	AutoFitAlign = 0x3
};

enum class EOS_EExternalCredentialType:int
{
	EOS_ECT_EPIC = 0x0,
	EOS_ECT_STEAM_APP_TICKET = 0x1,
	EOS_ECT_PSN_ID_TOKEN = 0x2,
	EOS_ECT_XBL_XSTS_TOKEN = 0x3,
	EOS_ECT_DISCORD_ACCESS_TOKEN = 0x4,
	EOS_ECT_GOG_SESSION_TICKET = 0x5,
	EOS_ECT_NINTENDO_ID_TOKEN = 0x6,
	EOS_ECT_NINTENDO_NSA_ID_TOKEN = 0x7,
	EOS_ECT_UPLAY_ACCESS_TOKEN = 0x8,
	EOS_ECT_OPENID_ACCESS_TOKEN = 0x9,
	EOS_ECT_DEVICEID_ACCESS_TOKEN = 0xA,
	EOS_ECT_APPLE_ID_TOKEN = 0xB,
	EOS_ECT_GOOGLE_ID_TOKEN = 0xC,
	EOS_ECT_OCULUS_USERID_NONCE = 0xD,
	EOS_ECT_ITCHIO_JWT = 0xE,
	EOS_ECT_ITCHIO_KEY = 0xF,
	EOS_ECT_EPIC_ID_TOKEN = 0x10,
	EOS_ECT_AMAZON_ACCESS_TOKEN = 0x11,
	EOS_ECT_STEAM_SESSION_TICKET = 0x12
};

enum class EBakeNormalSpace:int
{
	Tangent = 0x0,
	Object = 0x1
};

enum class EBakeCurvatureTypeMode:int
{
	MeanAverage = 0x0,
	Max = 0x1,
	Min = 0x2,
	Gaussian = 0x3
};

enum class EBakeCurvatureColorMode:int
{
	Grayscale = 0x0,
	RedBlue = 0x1,
	RedGreenBlue = 0x2
};

enum class EBakeCurvatureClampMode:int
{
	None = 0x0,
	OnlyPositive = 0x1,
	OnlyNegative = 0x2
};

enum class EExtrudeMeshSelectionInteractionMode:unsigned char
{
	Interactive = 0x0,
	Fixed = 0x1
};

enum class EExtrudeMeshSelectionRegionModifierMode:unsigned char
{
	OriginalShape = 0x0,
	FlattenToPlane = 0x1,
	RaycastToPlane = 0x2
};

enum class ESculptBrushOpTargetType:unsigned char
{
	SculptMesh = 0x0,
	TargetMesh = 0x1,
	ActivePlane = 0x2
};

enum class EBrushToolSizeType:unsigned char
{
	Adaptive = 0x0,
	World = 0x1
};

enum class EMeshSculptFalloffType:unsigned char
{
	Smooth = 0x0,
	Linear = 0x1,
	Inverse = 0x2,
	Round = 0x3,
	BoxSmooth = 0x4,
	BoxLinear = 0x5,
	BoxInverse = 0x6,
	BoxRound = 0x7,
	LastValue = 0x8
};

enum class EPatternToolShape:unsigned char
{
	Line = 0x0,
	Grid = 0x1,
	Circle = 0x2
};

enum class EPatternToolSingleAxis:unsigned char
{
	XAxis = 0x0,
	YAxis = 0x1,
	ZAxis = 0x2
};

enum class EPatternToolSinglePlane:unsigned char
{
	XYPlane = 0x0,
	XZPlane = 0x1,
	YZPlane = 0x2
};

enum class EPatternToolAxisSpacingMode:unsigned char
{
	ByCount = 0x0,
	StepSize = 0x1,
	Packed = 0x2
};

enum class EMeshBoundaryConstraint:unsigned char
{
	Fixed = 0x7,
	Refine = 0x5,
	Free = 0x1
};

enum class EGroupBoundaryConstraint:unsigned char
{
	Fixed = 0x7,
	Refine = 0x5,
	Free = 0x1,
	Ignore = 0x0
};

enum class EMaterialBoundaryConstraint:unsigned char
{
	Fixed = 0x7,
	Refine = 0x5,
	Free = 0x1,
	Ignore = 0x0
};

enum class EKelvinletBrushMode:int
{
	ScaleKelvinlet = 0x0,
	PinchKelvinlet = 0x1,
	TwistKelvinlet = 0x2,
	PullKelvinlet = 0x3,
	LaplacianPullKelvinlet = 0x4,
	BiLaplacianPullKelvinlet = 0x5,
	BiLaplacianTwistPullKelvinlet = 0x6,
	LaplacianTwistPullKelvinlet = 0x7,
	SharpPullKelvinlet = 0x8
};

enum class EAlignObjectsAlignTypes:int
{
	Pivots = 0x0,
	BoundingBoxes = 0x1
};

enum class EAlignObjectsAlignToOptions:int
{
	FirstSelected = 0x0,
	LastSelected = 0x1,
	Combined = 0x2
};

enum class EAlignObjectsBoxPoint:int
{
	Center = 0x0,
	Bottom = 0x1,
	Top = 0x2,
	Left = 0x3,
	Right = 0x4,
	Front = 0x5,
	Back = 0x6,
	Min = 0x7,
	Max = 0x8
};

enum class EPlaneBrushSideMode:unsigned char
{
	BothSides = 0x0,
	PushDown = 0x1,
	PullTowards = 0x2
};

enum class EBakeMapType:int
{
	None = 0x0,
	TangentSpaceNormal = 0x1,
	ObjectSpaceNormal = 0x2,
	FaceNormal = 0x4,
	BentNormal = 0x8,
	Position = 0x10,
	Curvature = 0x20,
	AmbientOcclusion = 0x40,
	Texture = 0x80,
	MultiTexture = 0x100,
	VertexColor = 0x200,
	MaterialID = 0x400,
	All = 0x7FF
};

enum class EBakeOpState:int
{
	Clean = 0x0,
	Evaluate = 0x1,
	EvaluateDetailMesh = 0x2,
	Invalid = 0x4
};

enum class EUsdActiveAllocator:int
{
	Unreal = 0x0,
	System = 0x1
};

enum class EUsdSaveDialogBehavior:unsigned char
{
	NeverSave = 0x0,
	AlwaysSave = 0x1,
	ShowPrompt = 0x2
};

enum class ECameraFocusMethod:unsigned char
{
	DoNotOverride = 0x0,
	Manual = 0x1,
	Tracking = 0x2,
	Disable = 0x3,
	MAX = 0x4
};

enum class EBakeVertexOutput:int
{
	RGBA = 0x0,
	PerChannel = 0x1
};

enum class EBakeVertexChannel:int
{
	R = 0x0,
	G = 0x1,
	B = 0x2,
	A = 0x3,
	RGBA = 0x4
};

enum class EPinInsertPosition:int
{
	Before = 0x0,
	After = 0x1
};

namespace EPathObservationResult
{
	enum Type:int
	{
		NoLongerObserving = 0x0,
		NoChange = 0x1,
		RequestRepath = 0x2
	};
}

enum class EOffsetMeshSelectionDirectionMode:unsigned char
{
	VertexNormals = 0x0,
	FaceNormals = 0x1,
	ConstantWidth = 0x2
};

enum class EOffsetMeshSelectionInteractionMode:unsigned char
{
	Fixed = 0x0
};

enum class EMobileHDRMode:int
{
	Unset = 0x0,
	Disabled = 0x1,
	EnabledFloat16 = 0x2
};

enum class ESoundWaveFFTSize:unsigned char
{
	VerySmall_64 = 0x0,
	Small_256 = 0x1,
	Medium_512 = 0x2,
	Large_1024 = 0x3,
	VeryLarge_2048 = 0x4
};

enum class UDLSSMode:unsigned char
{
	Off = 0x0,
	Auto = 0x1,
	DLAA = 0x2,
	UltraQuality = 0x3,
	Quality = 0x4,
	Balanced = 0x5,
	Performance = 0x6,
	UltraPerformance = 0x7
};

enum class UDLSSSupport:unsigned char
{
	Supported = 0x0,
	NotSupported = 0x1,
	NotSupportedIncompatibleHardware = 0x2,
	NotSupportedDriverOutOfDate = 0x3,
	NotSupportedOperatingSystemOutOfDate = 0x4,
	NotSupportedByPlatformAtBuildTime = 0x5,
	NotSupportedIncompatibleAPICaptureToolActive = 0x6
};

enum class EUpscaleMethod:unsigned char
{
	Nearest = 0x0,
	Bilinear = 0x1,
	Directional = 0x2,
	CatmullRom = 0x3,
	Lanczos = 0x4,
	Gaussian = 0x5,
	SmoothStep = 0x6,
	MAX = 0x7
};

enum class EUpscaleStage:int
{
	PrimaryToSecondary = 0x0,
	PrimaryToOutput = 0x1,
	SecondaryToOutput = 0x2,
	MAX = 0x3
};

enum class EDebugCameraStyle:unsigned char
{
	None = 0x0,
	Fixed = 0x1,
	ThirdPerson = 0x2,
	FreeCam = 0x3,
	FreeCam_Default = 0x4,
	FirstPerson = 0x5
};

enum class ECameraAutoFollowMode:unsigned char
{
	None = 0x0,
	LazyFollow = 0x1,
	FullFollow = 0x2
};

namespace FIKRigObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		RetargetPoseQuatPostMultiplied = 0x1,
		ChainSettingsConvertedToStruct = 0x2,
		VersionPlusOne = 0x3,
		LatestVersion = 0x2
	};
}

enum class ESteelShieldEnvironment:unsigned char
{
	Production = 0x0,
	Development = 0x1
};

enum class EBasicAxis:int
{
	X = 0x0,
	Y = 0x1,
	Z = 0x2,
	NegX = 0x3,
	NegY = 0x4,
	NegZ = 0x5
};

enum class EWarpingDirectionSource:int
{
	Goals = 0x0,
	Chain = 0x1
};

enum class EJWTCertificateType:unsigned char
{
	HS256 = 0x0,
	HS384 = 0x1,
	HS512 = 0x2,
	RS256 = 0x3,
	RS384 = 0x4,
	RS512 = 0x5
};

enum class EIKRigGoalSpace:unsigned char
{
	Component = 0x0,
	Additive = 0x1,
	World = 0x2
};

enum class EIKRigGoalTransformSource:unsigned char
{
	Manual = 0x0,
	Bone = 0x1,
	ActorComponent = 0x2
};

enum class ERetargetRotationMode:unsigned char
{
	Interpolated = 0x0,
	OneToOne = 0x1,
	OneToOneReversed = 0x2,
	None = 0x3
};

enum class ERetargetTranslationMode:unsigned char
{
	None = 0x0,
	GloballyScaled = 0x1,
	Absolute = 0x2
};

enum class ERetargetSourceOrTarget:unsigned char
{
	Source = 0x0,
	Target = 0x1
};

namespace EComponentType
{
	enum Type:int
	{
		None = 0x0,
		TranslationX = 0x1,
		TranslationY = 0x2,
		TranslationZ = 0x3,
		RotationX = 0x4,
		RotationY = 0x5,
		RotationZ = 0x6,
		Scale = 0x7,
		ScaleX = 0x8,
		ScaleY = 0x9,
		ScaleZ = 0xA
	};
}

enum class ELiveLinkSourceMode:unsigned char
{
	Latest = 0x0,
	EngineTime = 0x1,
	Timecode = 0x2
};

enum class EPBIKRootBehavior:unsigned char
{
	PrePull = 0x0,
	PinToInput = 0x1,
	Free = 0x2
};

enum class ETimedDataInputEvaluationType:unsigned char
{
	None = 0x0,
	Timecode = 0x1,
	PlatformTime = 0x2
};

enum class ETimedDataInputState:unsigned char
{
	Connected = 0x0,
	Unresponsive = 0x1,
	Disconnected = 0x2
};

enum class EPBIKLimitType:unsigned char
{
	Free = 0x0,
	Limited = 0x1,
	Locked = 0x2
};

enum class EDeferredParamStrictness:int
{
	ELoose = 0x0,
	EStrict = 0x1
};

enum class EDatasmithImportLightmapMin:unsigned char
{
	LIGHTMAP_16 = 0x0,
	LIGHTMAP_32 = 0x1,
	LIGHTMAP_64 = 0x2,
	LIGHTMAP_128 = 0x3,
	LIGHTMAP_256 = 0x4,
	LIGHTMAP_512 = 0x5
};

enum class EDatasmithImportLightmapMax:unsigned char
{
	LIGHTMAP_64 = 0x0,
	LIGHTMAP_128 = 0x1,
	LIGHTMAP_256 = 0x2,
	LIGHTMAP_512 = 0x3,
	LIGHTMAP_1024 = 0x4,
	LIGHTMAP_2048 = 0x5,
	LIGHTMAP_4096 = 0x6
};

enum class EDatasmithImportScene:unsigned char
{
	NewLevel = 0x0,
	CurrentLevel = 0x1,
	AssetsOnly = 0x2
};

enum class EDatasmithCADStitchingTechnique:unsigned char
{
	StitchingNone = 0x0,
	StitchingHeal = 0x1,
	StitchingSew = 0x2
};

enum class EDatasmithCADRetessellationRule:unsigned char
{
	All = 0x0,
	SkipDeletedSurfaces = 0x1
};

enum class EDatasmithImportSearchPackagePolicy:unsigned char
{
	Current = 0x0,
	All = 0x1
};

enum class EDatasmithImportAssetConflictPolicy:unsigned char
{
	Replace = 0x0,
	Update = 0x1,
	Use = 0x2,
	Ignore = 0x3
};

enum class EDatasmithImportActorPolicy:unsigned char
{
	Update = 0x0,
	Full = 0x1,
	Ignore = 0x2
};

enum class EDatasmithImportMaterialQuality:unsigned char
{
	UseNoFresnelCurves = 0x0,
	UseSimplifierFresnelCurves = 0x1,
	UseRealFresnelCurves = 0x2
};

enum class ETraceFrameType:int
{
	TraceFrameType_Game = 0x0,
	TraceFrameType_Rendering = 0x1,
	TraceFrameType_Count = 0x2
};

enum class EDatasmithAreaLightActorType:unsigned char
{
	Point = 0x0,
	Spot = 0x1,
	Rect = 0x2
};

enum class EDatasmithAreaLightActorShape:unsigned char
{
	Rectangle = 0x0,
	Disc = 0x1,
	Sphere = 0x2,
	Cylinder = 0x3,
	None = 0x4
};

enum class EColorBlockAlphaDisplayMode:unsigned char
{
	Combined = 0x0,
	Separate = 0x1,
	Ignore = 0x2
};

enum class EHoudiniLandscapeOutputBakeType:unsigned char
{
	Detachment = 0x0,
	BakeToImage = 0x1,
	BakeToWorld = 0x2,
	InValid = 0x3
};

enum class EHoudiniCurveOutputType:unsigned char
{
	UnrealSpline = 0x0,
	HoudiniSpline = 0x1
};

namespace EDrawDebugTrace
{
	enum Type:int
	{
		None = 0x0,
		ForOneFrame = 0x1,
		ForDuration = 0x2,
		Persistent = 0x3
	};
}

namespace ESuggestProjVelocityTraceOption
{
	enum Type:int
	{
		DoNotTrace = 0x0,
		TraceFullPath = 0x1,
		OnlyTraceWhileAscending = 0x2
	};
}

namespace ESoundMixState
{
	enum Type:int
	{
		Inactive = 0x0,
		FadingIn = 0x1,
		Active = 0x2,
		FadingOut = 0x3,
		AwaitingRemoval = 0x4
	};
}

namespace EAssetRegistryDependencyType
{
	enum Type:int
	{
		Soft = 0x1,
		Hard = 0x2,
		SearchableName = 0x4,
		SoftManage = 0x8,
		HardManage = 0x10
	};
}

enum class ECommonFrameRate:unsigned char
{
	FPS_12 = 0x0,
	FPS_15 = 0x1,
	FPS_24 = 0x2,
	FPS_25 = 0x3,
	FPS_30 = 0x4,
	FPS_48 = 0x5,
	FPS_50 = 0x6,
	FPS_60 = 0x7,
	FPS_100 = 0x8,
	FPS_120 = 0x9,
	FPS_240 = 0xA,
	NTSC_24 = 0xB,
	NTSC_30 = 0xC,
	NTSC_60 = 0xD,
	Private_Num = 0xE
};

enum class ECrashContextType:int
{
	Crash = 0x0,
	Assert = 0x1,
	Ensure = 0x2,
	Stall = 0x3,
	GPUCrash = 0x4,
	Hang = 0x5,
	OutOfMemory = 0x6,
	AbnormalShutdown = 0x7,
	Max = 0x8
};

enum class EHoudiniProxyRefineResult:unsigned char
{
	Invalid = 0x0,
	Failed = 0x1,
	Success = 0x2,
	Skipped = 0x3
};

enum class EHoudiniProxyRefineRequestResult:unsigned char
{
	Invalid = 0x0,
	None = 0x1,
	PendingCooks = 0x2,
	Refined = 0x3
};

enum class ECrashTrigger:int
{
	Debug = 0xFF,
	Normal = 0x0
};

enum class ETimecodeProviderSynchronizationState:int
{
	Closed = 0x0,
	Error = 0x1,
	Synchronized = 0x2,
	Synchronizing = 0x3
};

enum class ELiveLinkTimecodeProviderEvaluationType:int
{
	Lerp = 0x0,
	Nearest = 0x1,
	Latest = 0x2
};

enum class ELiveLinkAxis:unsigned char
{
	X = 0x0,
	Y = 0x1,
	Z = 0x2,
	XNeg = 0x3,
	YNeg = 0x4,
	ZNeg = 0x5
};

namespace EWindowsDragDropOperationType
{
	enum Type:int
	{
		DragEnter = 0x0,
		DragOver = 0x1,
		DragLeave = 0x2,
		Drop = 0x3
	};
}

namespace EAssetAvailability
{
	enum Type:int
	{
		DoesNotExist = 0x0,
		NotAvailable = 0x1,
		LocalSlow = 0x2,
		LocalFast = 0x3
	};
}

namespace EAssetAvailabilityProgressReportingType
{
	enum Type:int
	{
		ETA = 0x0,
		PercentageComplete = 0x1
	};
}

namespace EAssetSetManagerResult
{
	enum Type:int
	{
		DoNotSet = 0x0,
		SetButDoNotRecurse = 0x1,
		SetAndRecurse = 0x2
	};
}

namespace EAssetSetManagerFlags
{
	enum Type:int
	{
		IsDirectSet = 0x1,
		TargetHasExistingManager = 0x2,
		TargetHasDirectManager = 0x4
	};
}

enum class EConvexOverlapRemoval:int
{
	None = 0x0,
	All = 0x1,
	OnlyClusters = 0x2,
	OnlyClustersVsClusters = 0x3
};

enum class ELightmapUVVersion:int
{
	BitByBit = 0x0,
	Segments = 0x1,
	SmallChartPacking = 0x2,
	ScaleChartsOrderingFix = 0x3,
	ChartJoiningLFix = 0x4,
	Allocator2DFlipFix = 0x5,
	ConsiderLightmapPadding = 0x6,
	ForceLightmapPadding = 0x7,
	Segments2D = 0x8,
	OptimalSurfaceArea = 0x9,
	ScaleByEdgesLength = 0xA,
	Latest = 0xA
};

enum class EProximityMethod:int
{
	Precise = 0x0,
	ConvexHull = 0x1
};

enum class EProximityContactMethod:unsigned char
{
	MinOverlapInProjectionToMajorAxes = 0x0
};

enum class EDataflowFieldFalloffType:unsigned char
{
	Dataflow_FieldFalloffType_None = 0x0,
	Dataflow_FieldFalloffType_Linear = 0x1,
	Dataflow_FieldFalloffType_Inverse = 0x2,
	Dataflow_FieldFalloffType_Squared = 0x3,
	Dataflow_FieldFalloffType_Logarithmic = 0x4,
	Dataflow_Max = 0x5
};

enum class EOS_EAttributeType:int
{
	EOS_AT_BOOLEAN = 0x0,
	EOS_AT_INT64 = 0x1,
	EOS_AT_DOUBLE = 0x2,
	EOS_AT_STRING = 0x3
};

enum class EOS_EComparisonOp:int
{
	EOS_CO_EQUAL = 0x0,
	EOS_CO_NOTEQUAL = 0x1,
	EOS_CO_GREATERTHAN = 0x2,
	EOS_CO_GREATERTHANOREQUAL = 0x3,
	EOS_CO_LESSTHAN = 0x4,
	EOS_CO_LESSTHANOREQUAL = 0x5,
	EOS_CO_DISTANCE = 0x6,
	EOS_CO_ANYOF = 0x7,
	EOS_CO_NOTANYOF = 0x8,
	EOS_CO_ONEOF = 0x9,
	EOS_CO_NOTONEOF = 0xA,
	EOS_CO_CONTAINS = 0xB
};

enum class EOS_ELogLevel:int
{
	EOS_LOG_Off = 0x0,
	EOS_LOG_Fatal = 0x64,
	EOS_LOG_Error = 0xC8,
	EOS_LOG_Warning = 0x12C,
	EOS_LOG_Info = 0x190,
	EOS_LOG_Verbose = 0x1F4,
	EOS_LOG_VeryVerbose = 0x258
};

enum class EDataflowSetMaskConditionType:unsigned char
{
	Dataflow_SetMaskConditionType_Always = 0x0,
	Dataflow_SetMaskConditionType_IFF_NOT_Interior = 0x1,
	Dataflow_SetMaskConditionType_IFF_NOT_Exterior = 0x2,
	Dataflow_Max = 0x3
};

enum class EOS_EOnlineSessionPermissionLevel:int
{
	EOS_OSPF_PublicAdvertised = 0x0,
	EOS_OSPF_JoinViaPresence = 0x1,
	EOS_OSPF_InviteOnly = 0x2
};

enum class EOS_ESessionAttributeAdvertisementType:int
{
	EOS_SAAT_DontAdvertise = 0x0,
	EOS_SAAT_Advertise = 0x1
};

enum class EDataflowWaveFunctionType:unsigned char
{
	Dataflow_WaveFunctionType_Cosine = 0x0,
	Dataflow_WaveFunctionType_Gaussian = 0x1,
	Dataflow_WaveFunctionType_Falloff = 0x2,
	Dataflow_WaveFunctionType_Decay = 0x3,
	Dataflow_Max = 0x4
};

enum class EDataflowFloatFieldOperationType:unsigned char
{
	Dataflow_FloatFieldOperationType_Multiply = 0x0,
	Dataflow_FloatFieldFalloffType_Divide = 0x1,
	Dataflow_FloatFieldFalloffType_Add = 0x2,
	Dataflow_FloatFieldFalloffType_Substract = 0x3,
	Dataflow_FloatFieldFalloffType_Min = 0x4,
	Dataflow_FloatFieldFalloffType_Max = 0x5,
	Dataflow_Max = 0x6
};

enum class EDataflowVectorFieldOperationType:unsigned char
{
	Dataflow_VectorFieldOperationType_Multiply = 0x0,
	Dataflow_VectorFieldFalloffType_Divide = 0x1,
	Dataflow_VectorFieldFalloffType_Add = 0x2,
	Dataflow_VectorFieldFalloffType_Substract = 0x3,
	Dataflow_VectorFieldFalloffType_CrossProduct = 0x4,
	Dataflow_Max = 0x5
};

enum class ESetMaterialOperationTypeEnum:unsigned char
{
	Dataflow_SetMaterialOperationType_Add = 0x0,
	Dataflow_SetMaterialOperationType_Insert = 0x1,
	Dataflow_Max = 0x2
};

enum class EStreamlineSettingOverride:unsigned char
{
	Enabled = 0x0,
	Disabled = 0x1,
	UseProjectSettings = 0x2
};

enum class EClusterSizeMethodEnum:unsigned char
{
	Dataflow_ClusterSizeMethod_ByNumber = 0x0,
	Dataflow_ClusterSizeMethod_ByFractionOfInput = 0x1,
	Dataflow_ClusterSizeMethod_BySize = 0x2,
	Dataflow_Max = 0x3
};

enum class EVisibiltyOptionsEnum:unsigned char
{
	Dataflow_VisibilityOptions_Visible = 0x0,
	Dataflow_VisibilityOptions_Invisible = 0x1,
	Dataflow_Max = 0x2
};

enum class EModulationDestination:unsigned char
{
	Volume = 0x0,
	Pitch = 0x1,
	Lowpass = 0x2,
	Highpass = 0x3,
	Count = 0x4
};

enum class EAudioBusChannels:unsigned char
{
	Mono = 0x0,
	Stereo = 0x1,
	Quad = 0x3,
	FivePointOne = 0x5,
	SevenPointOne = 0x7
};

enum class ESourceBusChannels:unsigned char
{
	Mono = 0x0,
	Stereo = 0x1
};

enum class EMeshBooleanOperationEnum:unsigned char
{
	Dataflow_MeshBoolean_Union = 0x0,
	Dataflow_MeshBoolean_Intersect = 0x1,
	Dataflow_MeshBoolean_Difference = 0x2,
	Dataflow_Max = 0x3
};

enum class EMakeBoxDataTypeEnum:unsigned char
{
	Dataflow_MakeBox_DataType_MinMax = 0x0,
	Dataflow_MakeBox_DataType_CenterSize = 0x1,
	Dataflow_Max = 0x2
};

namespace ESortedActiveWaveGetType
{
	enum Type:int
	{
		FullUpdate = 0x0,
		PausedUpdate = 0x1,
		QueryOnly = 0x2
	};
}

enum class EDebugState:int
{
	DEBUGSTATE_None = 0x0,
	DEBUGSTATE_IsolateDryAudio = 0x1,
	DEBUGSTATE_IsolateReverb = 0x2,
	DEBUGSTATE_TestLPF = 0x3,
	DEBUGSTATE_TestHPF = 0x4,
	DEBUGSTATE_TestLFEBleed = 0x5,
	DEBUGSTATE_DisableLPF = 0x6,
	DEBUGSTATE_DisableHPF = 0x7,
	DEBUGSTATE_DisableRadio = 0x8,
	DEBUGSTATE_MAX = 0x9
};

enum class EOS_ELogCategory:int
{
	EOS_LC_Core = 0x0,
	EOS_LC_Auth = 0x1,
	EOS_LC_Friends = 0x2,
	EOS_LC_Presence = 0x3,
	EOS_LC_UserInfo = 0x4,
	EOS_LC_HttpSerialization = 0x5,
	EOS_LC_Ecom = 0x6,
	EOS_LC_P2P = 0x7,
	EOS_LC_Sessions = 0x8,
	EOS_LC_RateLimiter = 0x9,
	EOS_LC_PlayerDataStorage = 0xA,
	EOS_LC_Analytics = 0xB,
	EOS_LC_Messaging = 0xC,
	EOS_LC_Connect = 0xD,
	EOS_LC_Overlay = 0xE,
	EOS_LC_Achievements = 0xF,
	EOS_LC_Stats = 0x10,
	EOS_LC_UI = 0x11,
	EOS_LC_Lobby = 0x12,
	EOS_LC_Leaderboards = 0x13,
	EOS_LC_Keychain = 0x14,
	EOS_LC_IntegratedPlatform = 0x15,
	EOS_LC_TitleStorage = 0x16,
	EOS_LC_Mods = 0x17,
	EOS_LC_AntiCheat = 0x18,
	EOS_LC_Reports = 0x19,
	EOS_LC_Sanctions = 0x1A,
	EOS_LC_ProgressionSnapshots = 0x1B,
	EOS_LC_KWS = 0x1C,
	EOS_LC_RTC = 0x1D,
	EOS_LC_RTCAdmin = 0x1E,
	EOS_LC_CustomInvites = 0x1F,
	EOS_LC_ALL_CATEGORIES = 0x7FFFFFFF
};

enum class EFloatToIntFunctionEnum:unsigned char
{
	Dataflow_FloatToInt_Function_Floor = 0x0,
	Dataflow_FloatToInt_Function_Ceil = 0x1,
	Dataflow_FloatToInt_Function_Round = 0x2,
	Dataflow_FloatToInt_Function_Truncate = 0x3,
	Dataflow_Max = 0x4
};

enum class EFloatArrayToIntArrayFunctionEnum:unsigned char
{
	Dataflow_FloatToInt_Function_Floor = 0x0,
	Dataflow_FloatToInt_Function_Ceil = 0x1,
	Dataflow_FloatToInt_Function_Round = 0x2,
	Dataflow_FloatToInt_Function_Truncate = 0x3,
	Dataflow_FloatToInt_NonZeroToIndex = 0x4,
	Dataflow_FloatToInt_ZeroToIndex = 0x5,
	Dataflow_Max = 0x6
};

enum class EMathConstantsEnum:unsigned char
{
	Dataflow_MathConstants_Pi = 0x0,
	Dataflow_MathConstants_HalfPi = 0x1,
	Dataflow_MathConstants_TwoPi = 0x2,
	Dataflow_MathConstants_FourPi = 0x3,
	Dataflow_MathConstants_InvPi = 0x4,
	Dataflow_MathConstants_InvTwoPi = 0x5,
	Dataflow_MathConstants_Sqrt2 = 0x6,
	Dataflow_MathConstants_InvSqrt2 = 0x7,
	Dataflow_MathConstants_Sqrt3 = 0x8,
	Dataflow_MathConstants_InvSqrt3 = 0x9,
	Dataflow_FloatToInt_Function_E = 0xA,
	Dataflow_FloatToInt_Function_Gamma = 0xB,
	Dataflow_FloatToInt_Function_GoldenRatio = 0xC,
	Dataflow_FloatToInt_Function_ZeroTolerance = 0xD,
	Dataflow_Max = 0xE
};

enum class ERotationOrderEnum:unsigned char
{
	Dataflow_RotationOrder_XYZ = 0x0,
	Dataflow_RotationOrder_YZX = 0x1,
	Dataflow_RotationOrder_ZXY = 0x2,
	Dataflow_RotationOrder_XZY = 0x3,
	Dataflow_RotationOrder_YXZ = 0x4,
	Dataflow_RotationOrder_ZYX = 0x5,
	Dataflow_Max = 0x6
};

enum class ECompareOperationEnum:unsigned char
{
	Dataflow_Compare_Equal = 0x0,
	Dataflow_Compare_Smaller = 0x1,
	Dataflow_Compare_SmallerOrEqual = 0x2,
	Dataflow_Compare_Greater = 0x3,
	Dataflow_Compare_GreaterOrEqual = 0x4,
	Dataflow_Max = 0x5
};

namespace ETaskbarProgressState
{
	enum Type:int
	{
		NoProgress = 0x0,
		Indeterminate = 0x1,
		Normal = 0x2,
		Error = 0x4,
		Paused = 0x8
	};
}

enum class THUMBBUTTONMASK:int
{
	THB_BITMAP = 0x1,
	THB_ICON = 0x2,
	THB_TOOLTIP = 0x4,
	THB_FLAGS = 0x8
};

enum class THUMBBUTTONFLAGS:int
{
	THBF_ENABLED = 0x0,
	THBF_DISABLED = 0x1,
	THBF_DISMISSONCLICK = 0x2,
	THBF_NOBACKGROUND = 0x4,
	THBF_HIDDEN = 0x8,
	THBF_NONINTERACTIVE = 0x10
};

enum class TBPFLAG:int
{
	TBPF_NOPROGRESS = 0x0,
	TBPF_INDETERMINATE = 0x1,
	TBPF_NORMAL = 0x2,
	TBPF_ERROR = 0x4,
	TBPF_PAUSED = 0x8
};

enum class EAnchorStateEnum:unsigned char
{
	Dataflow_AnchorState_Anchored = 0x0,
	Dataflow_AnchorState_NotAnchored = 0x1,
	Dataflow_Max = 0x2
};

enum class EStandardGroupNameEnum:unsigned char
{
	Dataflow_EStandardGroupNameEnum_Transform = 0x0,
	Dataflow_EStandardGroupNameEnum_Geometry = 0x1,
	Dataflow_EStandardGroupNameEnum_Faces = 0x2,
	Dataflow_EStandardGroupNameEnum_Vertices = 0x3,
	Dataflow_EStandardGroupNameEnum_Material = 0x4,
	Dataflow_EStandardGroupNameEnum_Breaking = 0x5,
	Dataflow_EStandardGroupNameEnum_Custom = 0x6,
	Dataflow_Max = 0x7
};

enum class ECustomAttributeTypeEnum:unsigned char
{
	Dataflow_CustomAttributeType_UInt8 = 0x0,
	Dataflow_CustomAttributeType_Int32 = 0x1,
	Dataflow_CustomAttributeType_Float = 0x2,
	Dataflow_CustomAttributeType_Double = 0x3,
	Dataflow_CustomAttributeType_Bool = 0x4,
	Dataflow_CustomAttributeType_String = 0x5,
	Dataflow_CustomAttributeType_Vector2f = 0x6,
	Dataflow_CustomAttributeType_Vector3f = 0x7,
	Dataflow_CustomAttributeType_Vector3d = 0x8,
	Dataflow_CustomAttributeType_Vector4f = 0x9,
	Dataflow_CustomAttributeType_LinearColor = 0xA,
	Dataflow_CustomAttributeType_Transform = 0xB,
	Dataflow_CustomAttributeType_Quat4f = 0xC,
	Dataflow_CustomAttributeType_Box = 0xD,
	Dataflow_CustomAttributeType_Guid = 0xE,
	Dataflow_CustomAttributeType_Int32Set = 0xF,
	Dataflow_CustomAttributeType_Int32Array = 0x10,
	Dataflow_CustomAttributeType_IntVector = 0x11,
	Dataflow_CustomAttributeType_IntVector2 = 0x12,
	Dataflow_CustomAttributeType_IntVector4 = 0x13,
	Dataflow_CustomAttributeType_IntVector2Array = 0x14,
	Dataflow_CustomAttributeType_FloatArray = 0x15,
	Dataflow_CustomAttributeType_Vector2fArray = 0x16,
	Dataflow_CustomAttributeType_FVector3fArray = 0x17,
	Dataflow_Max = 0x18
};

enum class EStreamlineSupport:unsigned char
{
	Supported = 0x0,
	NotSupported = 0x1,
	NotSupportedIncompatibleRHI = 0x2,
	NumValues = 0x3
};

enum class EStreamlineFeatureSupport:int
{
	Supported = 0x0,
	NotSupported = 0x1,
	NotSupportedIncompatibleHardware = 0x2,
	NotSupportedHardwareSchedulingDisabled = 0x3,
	NotSupportedOperatingSystemOutOfDate = 0x4,
	NotSupportedDriverOutOfDate = 0x5,
	NotSupportedIncompatibleRHI = 0x6,
	NumValues = 0x7
};

enum class ENISHalfPrecisionPermutation:int
{
	Float32 = 0x0,
	Min16Float = 0x1,
	Min16FloatDXC = 0x2,
	Float16DXC = 0x3,
	MAX = 0x4
};

enum class NISGPUArchitecture:unsigned int
{
	NVIDIA_Generic = 0x0,
	AMD_Generic = 0x1,
	Intel_Generic = 0x2,
	NVIDIA_Generic_fp16 = 0x3
};

enum class NISHDRMode:unsigned int
{
	None = 0x0,
	Linear = 0x1,
	PQ = 0x2
};

enum class ESetOperationEnum:unsigned char
{
	Dataflow_SetOperation_AND = 0x0,
	Dataflow_SetOperation_OR = 0x1,
	Dataflow_SetOperation_XOR = 0x2,
	Dataflow_Max = 0x3
};

enum class ERangeSettingEnum:unsigned char
{
	Dataflow_RangeSetting_InsideRange = 0x0,
	Dataflow_RangeSetting_OutsideRange = 0x1,
	Dataflow_Max = 0x2
};

enum class ESelectSubjectTypeEnum:unsigned char
{
	Dataflow_SelectSubjectType_Vertices = 0x0,
	Dataflow_SelectSubjectType_BoundingBox = 0x1,
	Dataflow_SelectSubjectType_Centroid = 0x2,
	Dataflow_Max = 0x3
};

enum class ENDIExport_GPUAllocationMode:unsigned char
{
	FixedSize = 0x0,
	PerParticle = 0x1
};

enum class EHairInstanceCount:unsigned char
{
	HairInstanceCount_StrandsPrimaryView = 0x0,
	HairInstanceCount_StrandsShadowView = 0x1,
	HairInstanceCount_CardsOrMeshesPrimaryView = 0x2,
	HairInstanceCount_CardsOrMeshesShadowView = 0x3
};

enum class EHairViewRayTracingMask:int
{
	RayTracing = 0x1,
	PathTracing = 0x2
};

namespace EMirrorRowType
{
	enum Type:int
	{
		Bone = 0x0,
		AnimationNotify = 0x1,
		Curve = 0x2,
		SyncMarker = 0x3,
		Custom = 0x4
	};
}

namespace EMirrorFindReplaceMethod
{
	enum Type:int
	{
		Prefix = 0x0,
		Suffix = 0x1,
		RegularExpression = 0x2
	};
}

enum class EInputActionValueType:unsigned char
{
	Boolean = 0x0,
	Axis1D = 0x1,
	Axis2D = 0x2,
	Axis3D = 0x3
};

enum class EMappingQueryIssue:unsigned char
{
	NoIssue = 0x0,
	ReservedByAction = 0x1,
	HidesExistingMapping = 0x2,
	HiddenByExistingMapping = 0x4,
	CollisionWithMappingInSameContext = 0x8,
	ForcesTypePromotion = 0x10,
	ForcesTypeDemotion = 0x20
};

enum class EAnalyticsBuildType:unsigned char
{
	Development = 0x0,
	Test = 0x1,
	Debug = 0x2,
	Release = 0x3
};

enum class EMappingQueryResult:unsigned char
{
	Error_EnhancedInputNotEnabled = 0x0,
	Error_InputContextNotInActiveContexts = 0x1,
	Error_InvalidAction = 0x2,
	NotMappable = 0x3,
	MappingAvailable = 0x4
};

enum class ETriggerState:unsigned char
{
	None = 0x0,
	Ongoing = 0x1,
	Triggered = 0x2
};

enum class ETriggerEvent:unsigned char
{
	None = 0x0,
	Triggered = 0x1,
	Started = 0x2,
	Ongoing = 0x4,
	Canceled = 0x8,
	Completed = 0x10
};

enum class EDeadZoneType:unsigned char
{
	Axial = 0x0,
	Radial = 0x1
};

enum class EFOVScalingType:unsigned char
{
	Standard = 0x0,
	UE4_BackCompat = 0x1
};

enum class EInputAxisSwizzle:unsigned char
{
	YXZ = 0x0,
	ZYX = 0x1,
	XZY = 0x2,
	YZX = 0x3,
	ZXY = 0x4
};

enum class ETriggerType:unsigned char
{
	Explicit = 0x0,
	Implicit = 0x1,
	Blocker = 0x2
};

enum class EPlayerMappableKeySettingBehaviors:unsigned char
{
	InheritSettingsFromAction = 0x0,
	OverrideSettings = 0x1,
	IgnoreSettings = 0x2
};

enum class EGroomBasisType:unsigned char
{
	NoBasis = 0x0,
	BezierBasis = 0x1,
	BsplineBasis = 0x2,
	CatmullromBasis = 0x3,
	HermiteBasis = 0x4,
	PowerBasis = 0x5
};

enum class EGroomCurveType:unsigned char
{
	Cubic = 0x0,
	Linear = 0x1,
	VariableOrder = 0x2
};

enum class EInputBindingClone:unsigned char
{
	ForceClone = 0x0
};

enum class EOptimusGroomExecDomain:unsigned char
{
	None = 0x0,
	ControlPoint = 0x1,
	Curve = 0x2
};

enum class EGroomCacheImportType:unsigned char
{
	None = 0x0,
	Strands = 0x1,
	Guides = 0x2,
	All = 0x3
};

enum class EOptimusDataDomainType:int
{
	Dimensional = 0x0,
	Expression = 0x1
};

enum class EHairStrandsShaderType:int
{
	Strands = 0x0,
	Cards = 0x1,
	Meshes = 0x2,
	Tool = 0x3,
	All = 0x4
};

enum class EHairMaterialCompatibility:unsigned char
{
	Valid = 0x0,
	Invalid_UsedWithHairStrands = 0x1,
	Invalid_ShadingModel = 0x2,
	Invalid_BlendMode = 0x3,
	Invalid_IsNull = 0x4
};

enum class EHairMeshBatchType:int
{
	Raster = 0x0,
	Raytracing = 0x1
};

enum class EInputMappingRebuildType:unsigned char
{
	None = 0x0,
	Rebuild = 0x1,
	RebuildWithFlush = 0x2
};

enum class EFollicleMaskChannel:unsigned char
{
	R = 0x0,
	G = 0x1,
	B = 0x2,
	A = 0x3
};

enum class EStrandsTexturesTraceType:unsigned char
{
	TraceInside = 0x0,
	TraceOuside = 0x1,
	TraceBidirectional = 0x2
};

enum class EStrandsTexturesMeshType:unsigned char
{
	Static = 0x0,
	Skeletal = 0x1
};

enum class EHairStrandsProjectionMeshType:int
{
	RestMesh = 0x0,
	DeformedMesh = 0x1,
	SourceMesh = 0x2,
	TargetMesh = 0x3
};

enum class EDebugProjectionHairType:int
{
	HairFrame = 0x0,
	HairTriangle = 0x1,
	HairSamples = 0x2
};

enum class HairStrandsTriangleType:int
{
	RestPose = 0x0,
	DeformedPose = 0x1
};

enum class EHairStrandsInterpolationType:int
{
	RenderStrands = 0x0,
	SimulationStrands = 0x1
};

enum class EOptimusDefaultDeformerMode:unsigned char
{
	Never = 0x0,
	SkinCacheOnly = 0x1,
	Always = 0x2
};

namespace FOptimusObjectVersion
{
	enum Type:int
	{
		InitialVersion = 0x0,
		SwitchToMeshDeformerBase = 0x1,
		ReparentResourcesAndVariables = 0x2,
		SwitchToParameterBindingArrayStruct = 0x3,
		AddBindingsToGraph = 0x4,
		ComponentProviderSupport = 0x5,
		SetPrimaryBindingName = 0x6,
		DataDomainExpansion = 0x7,
		VersionPlusOne = 0x8,
		LatestVersion = 0x7
	};
}

enum class EKeyEvent:unsigned char
{
	None = 0x0,
	Actuated = 0x1,
	Held = 0x2
};

enum class EDataLayerType:unsigned char
{
	Runtime = 0x0,
	Editor = 0x1,
	Unknown = 0x2,
	Size = 0x3
};

enum class EOptimusNodePinDirection:unsigned char
{
	Unknown = 0x0,
	Input = 0x1,
	Output = 0x2
};

enum class EOptimusGraphNotifyType:int
{
	NodeAdded = 0x0,
	NodeRemoved = 0x1,
	NodeDisplayNameChanged = 0x2,
	NodePositionChanged = 0x3,
	NodeDiagnosticLevelChanged = 0x4,
	LinkAdded = 0x5,
	LinkRemoved = 0x6,
	PinAdded = 0x7,
	PinRemoved = 0x8,
	PinMoved = 0x9,
	PinValueChanged = 0xA,
	PinRenamed = 0xB,
	PinTypeChanged = 0xC,
	PinDataDomainChanged = 0xD,
	PinExpansionChanged = 0xE
};

enum class EOptimusNodePinStorageType:unsigned char
{
	Value = 0x0,
	Resource = 0x1
};

enum class EOptimusDataTypeUsageFlags:unsigned char
{
	None = 0x0,
	Resource = 0x1,
	Variable = 0x2,
	AnimAttributes = 0x4
};

enum class EOptimusDataTypeFlags:unsigned char
{
	None = 0x0,
	IsStructType = 0x1,
	ShowElements = 0x2
};

enum class EOptimusGlobalNotifyType:int
{
	GraphAdded = 0x0,
	GraphRemoved = 0x1,
	GraphIndexChanged = 0x2,
	GraphRenamed = 0x3,
	ComponentBindingAdded = 0x4,
	ComponentBindingRemoved = 0x5,
	ComponentBindingIndexChanged = 0x6,
	ComponentBindingRenamed = 0x7,
	ComponentBindingSourceChanged = 0x8,
	ResourceAdded = 0x9,
	ResourceRemoved = 0xA,
	ResourceIndexChanged = 0xB,
	ResourceRenamed = 0xC,
	ResourceTypeChanged = 0xD,
	ResourceDomainChanged = 0xE,
	VariableAdded = 0xF,
	VariableRemoved = 0x10,
	VariableIndexChanged = 0x11,
	VariableRenamed = 0x12,
	VariableTypeChanged = 0x13,
	ConstantValueChanged = 0x14,
	NodeTypeAdded = 0x15,
	NodeTypeRemoved = 0x16,
	DataTypeChanged = 0x17
};

enum class EOptimusDiagnosticLevel:unsigned char
{
	None = 0x0,
	Info = 0x1,
	Warning = 0x2,
	Error = 0x3
};

enum class EOptimusNodeGraphType:int
{
	Setup = 0x0,
	Update = 0x1,
	ExternalTrigger = 0x2,
	Function = 0x3,
	SubGraph = 0x4,
	Transient = 0x5
};

enum class EEXRCompressionFormat:unsigned char
{
	None = 0x0,
	PIZ = 0x1,
	ZIP = 0x2,
	DWAA = 0x3,
	DWAB = 0x4
};

enum class EFieldVectorType:int
{
	Vector_LinearForce = 0x0,
	Vector_LinearVelocity = 0x1,
	Vector_AngularVelocity = 0x2,
	Vector_AngularTorque = 0x3,
	Vector_PositionTarget = 0x4,
	Vector_InitialLinearVelocity = 0x5,
	Vector_InitialAngularVelocity = 0x6,
	Vector_LinearImpulse = 0x7,
	Vector_TargetMax = 0x8
};

enum class EFieldIntegerType:int
{
	Integer_DynamicState = 0x0,
	Integer_ActivateDisabled = 0x1,
	Integer_CollisionGroup = 0x2,
	Integer_PositionAnimated = 0x3,
	Integer_PositionStatic = 0x4,
	Integer_TargetMax = 0x5
};

enum class EFieldScalarType:int
{
	Scalar_ExternalClusterStrain = 0x0,
	Scalar_Kill = 0x1,
	Scalar_DisableThreshold = 0x2,
	Scalar_SleepingThreshold = 0x3,
	Scalar_InternalClusterStrain = 0x4,
	Scalar_DynamicConstraint = 0x5,
	Scalar_TargetMax = 0x6
};

enum class EDataSourceTypeEnum:unsigned char
{
	ChaosNiagara_DataSourceType_Collision = 0x0,
	ChaosNiagara_DataSourceType_Breaking = 0x1,
	ChaosNiagara_DataSourceType_Trailing = 0x2,
	ChaosNiagara_Max = 0x3
};

enum class ELocationFilteringModeEnum:unsigned char
{
	ChaosNiagara_LocationFilteringMode_Inclusive = 0x0,
	ChaosNiagara_LocationFilteringMode_Exclusive = 0x1,
	ChaosNiagara_Max = 0x2
};

enum class ELocationXToSpawnEnum:unsigned char
{
	ChaosNiagara_LocationXToSpawn_None = 0x0,
	ChaosNiagara_LocationXToSpawn_Min = 0x1,
	ChaosNiagara_LocationXToSpawn_Max = 0x2,
	ChaosNiagara_LocationXToSpawn_MinMax = 0x3,
	ChaosNiagara_Max = 0x4
};

enum class ELocationYToSpawnEnum:unsigned char
{
	ChaosNiagara_LocationYToSpawn_None = 0x0,
	ChaosNiagara_LocationYToSpawn_Min = 0x1,
	ChaosNiagara_LocationYToSpawn_Max = 0x2,
	ChaosNiagara_LocationYToSpawn_MinMax = 0x3,
	ChaosNiagara_Max = 0x4
};

enum class ELocationZToSpawnEnum:unsigned char
{
	ChaosNiagara_LocationZToSpawn_None = 0x0,
	ChaosNiagara_LocationZToSpawn_Min = 0x1,
	ChaosNiagara_LocationZToSpawn_Max = 0x2,
	ChaosNiagara_LocationZToSpawn_MinMax = 0x3,
	ChaosNiagara_Max = 0x4
};

enum class EDataSortTypeEnum:unsigned char
{
	ChaosNiagara_DataSortType_NoSorting = 0x0,
	ChaosNiagara_DataSortType_RandomShuffle = 0x1,
	ChaosNiagara_DataSortType_SortByMassMaxToMin = 0x2,
	ChaosNiagara_DataSortType_SortByMassMinToMax = 0x3,
	ChaosNiagara_Max = 0x4
};

enum class ERandomVelocityGenerationTypeEnum:unsigned char
{
	ChaosNiagara_RandomVelocityGenerationType_RandomDistribution = 0x0,
	ChaosNiagara_RandomVelocityGenerationType_RandomDistributionWithStreamers = 0x1,
	ChaosNiagara_RandomVelocityGenerationType_CollisionNormalBased = 0x2,
	ChaosNiagara_Max = 0x3
};

enum class EDebugTypeEnum:unsigned char
{
	ChaosNiagara_DebugType_NoDebug = 0x0,
	ChaosNiagara_DebugType_ColorBySolver = 0x1,
	ChaosNiagara_DebugType_ColorByParticleIndex = 0x2,
	ChaosNiagara_Max = 0x3
};

enum class ECollisionTypeEnum:unsigned char
{
	Chaos_Volumetric = 0x0,
	Chaos_Surface_Volumetric = 0x1,
	Chaos_Max = 0x2
};

enum class EImplicitTypeEnum:unsigned char
{
	Chaos_Implicit_Box = 0x0,
	Chaos_Implicit_Sphere = 0x1,
	Chaos_Implicit_Capsule = 0x2,
	Chaos_Implicit_LevelSet = 0x3,
	Chaos_Implicit_None = 0x4,
	Chaos_Implicit_Convex = 0x5,
	Chaos_Max = 0x6
};

enum class EInitialVelocityTypeEnum:unsigned char
{
	Chaos_Initial_Velocity_User_Defined = 0x0,
	Chaos_Initial_Velocity_None = 0x1,
	Chaos_Max = 0x2
};

namespace ESequenceEvalReinit
{
	enum Type:int
	{
		NoReset = 0x0,
		StartPosition = 0x1,
		ExplicitTime = 0x2
	};
}

enum class EAnimNodeReferenceConversionResult:unsigned char
{
	Succeeded = 0x1,
	Failed = 0x0
};

enum class EFBIKBoneLimitType:unsigned char
{
	Free = 0x0,
	Limit = 0x1,
	Locked = 0x2
};

enum class EPoleVectorOption:unsigned char
{
	Direction = 0x0,
	Location = 0x1
};

enum class EUnusedAttributeBehaviour:unsigned char
{
	Copy = 0x0,
	Zero = 0x1,
	None = 0x2,
	MarkInvalid = 0x3,
	PassThrough = 0x4
};

enum class EDeterminismLevel:unsigned char
{
	None = 0x0,
	NoDeterminism = 0x0,
	Basic = 0x1,
	OrderOrthogonal = 0x2,
	OrderConsistent = 0x3,
	OrderIndependent = 0x4,
	Deterministic = 0x4
};

enum class EPCGUnitTestDummyEnum:__int64
{
	One = 0x0,
	Two = 0x1,
	Three = 0x2
};

enum class EFieldCommandBuffer:unsigned char
{
	GPUFieldBuffer = 0x0,
	CPUReadBuffer = 0x1,
	CPUWriteBuffer = 0x2,
	GPUDebugBuffer = 0x3,
	NumFieldBuffers = 0x4
};

enum class EOptimusBufferWriteType:unsigned char
{
	Write = 0x0,
	WriteAtomicAdd = 0x1,
	WriteAtomicMin = 0x2,
	WriteAtomicMax = 0x3,
	Count = 0x4
};

enum class EMediaFeature:int
{
	AudioSamples = 0x0,
	AudioTracks = 0x1,
	CaptionTracks = 0x2,
	MetadataTracks = 0x3,
	OverlaySamples = 0x4,
	SubtitleTracks = 0x5,
	TextTracks = 0x6,
	Video360 = 0x7,
	VideoSamples = 0x8,
	VideoStereo = 0x9,
	VideoTracks = 0xA
};

enum class EOptimusSkinnedMeshExecDomain:unsigned char
{
	None = 0x0,
	Vertex = 0x1,
	Triangle = 0x2
};

enum class EUdpMessageFormat:unsigned char
{
	None = 0x0,
	Json = 0x1,
	TaggedProperty = 0x2,
	CborPlatformEndianness = 0x3,
	CborStandardEndianness = 0x4
};

enum class EUdpSerializedMessageState:int
{
	Complete = 0x0,
	Incomplete = 0x1,
	Invalid = 0x2
};

enum class ECborCode:unsigned char
{
	None = 0x0,
	Uint = 0x0,
	Int = 0x20,
	ByteString = 0x40,
	TextString = 0x60,
	Array = 0x80,
	Map = 0xA0,
	Tag = 0xC0,
	Prim = 0xE0,
	Value_1Byte = 0x18,
	Value_2Bytes = 0x19,
	Value_4Bytes = 0x1A,
	Value_8Bytes = 0x1B,
	Unused_28 = 0x1C,
	Unused_29 = 0x1D,
	Unused_30 = 0x1E,
	Indefinite = 0x1F,
	False = 0x14,
	True = 0x15,
	Null = 0x16,
	Undefined = 0x17,
	Break = 0xFF,
	Dummy = 0x1C,
	StreamEnd = 0x3C,
	ErrorReservedItem = 0x1D,
	ErrorStreamFailure = 0x1E,
	ErrorBreak = 0x3D,
	ErrorMapContainer = 0x3E,
	ErrorNoHalfFloat = 0x5D,
	ErrorContext = 0x5E,
	ErrorStringNesting = 0x7D
};

enum class ECborEndianness:int
{
	Platform = 0x0,
	BigEndian = 0x1,
	LittleEndian = 0x2,
	StandardCompliant = 0x1
};

enum class EUdpMessageSegments:unsigned char
{
	None = 0x0,
	Abort = 0x1,
	Acknowledge = 0x2,
	Bye = 0x3,
	Data = 0x4,
	Hello = 0x5,
	Retransmit = 0x6,
	Timeout = 0x7,
	AcknowledgeSegments = 0x8,
	Ping = 0x9,
	Pong = 0xA
};

enum class EHoleFillToolActions:int
{
	NoAction = 0x0,
	SelectAll = 0x1,
	ClearSelection = 0x2
};

enum class ELatticeDeformerToolAction:unsigned char
{
	NoAction = 0x0,
	Constrain = 0x1,
	ClearConstraints = 0x2
};

enum class ELatticeInterpolationType:unsigned char
{
	Linear = 0x0,
	Cubic = 0x1
};

enum class EBrushFalloffMode:unsigned char
{
	Angle = 0x0,
	Width = 0x1
};

enum class EBrushBlendType:unsigned char
{
	AlphaBlend = 0x0,
	Min = 0x1,
	Max = 0x2,
	Additive = 0x3
};

enum class EOptimusTerminalType:int
{
	Unknown = 0x0,
	Entry = 0x1,
	Return = 0x2
};

enum class EBrushActionMode:int
{
	Paint = 0x0,
	FloodFill = 0x1
};

enum class EMeshAttributePaintToolActions:int
{
	NoAction = 0x0
};

enum class EMeshGroupPaintBrushType:unsigned char
{
	Paint = 0x0,
	Erase = 0x1,
	LastValue = 0x2
};

enum class EMeshGroupPaintInteractionType:unsigned char
{
	Brush = 0x0,
	Fill = 0x1,
	GroupFill = 0x2,
	PolyLasso = 0x3,
	LastValue = 0x4
};

enum class EMeshGroupPaintBrushAreaType:unsigned char
{
	Connected = 0x0,
	Volumetric = 0x1
};

enum class EMeshGroupPaintVisibilityType:unsigned char
{
	None = 0x0,
	FrontFacing = 0x1,
	Unoccluded = 0x2
};

enum class EMeshGroupPaintToolActions:int
{
	NoAction = 0x0,
	ClearFrozen = 0x1,
	FreezeCurrent = 0x2,
	FreezeOthers = 0x3,
	GrowCurrent = 0x4,
	ShrinkCurrent = 0x5,
	ClearCurrent = 0x6,
	FloodFillCurrent = 0x7,
	ClearAll = 0x8
};

enum class EMeshInspectorToolDrawIndexMode:unsigned char
{
	None = 0x0,
	VertexID = 0x1,
	TriangleID = 0x2,
	GroupID = 0x3,
	EdgeID = 0x4
};

enum class ESteelShieldDataFlags:int
{
	SteelShieldDataFlags_IsRollover = 0x2,
	SteelShieldDataFlags_IsRolloverAck = 0x4,
	SteelShieldDataFlags_HasWrap = 0x8,
	SteelShieldDataFlags_IsInitialPacket = 0x10
};

enum class EMeshInspectorMaterialMode:unsigned char
{
	Original = 0x0,
	FlatShaded = 0x1,
	Grey = 0x2,
	Transparent = 0x3,
	TangentNormal = 0x4,
	VertexColor = 0x5,
	GroupColor = 0x6,
	Checkerboard = 0x7,
	Override = 0x8
};

namespace ESpectatorReservationResult
{
	enum Type:int
	{
		NoResult = 0x0,
		RequestPending = 0x1,
		GeneralError = 0x2,
		SpectatorLimitReached = 0x3,
		IncorrectPlayerCount = 0x4,
		RequestTimedOut = 0x5,
		ReservationDuplicate = 0x6,
		ReservationNotFound = 0x7,
		ReservationAccepted = 0x8,
		ReservationDenied = 0x9,
		ReservationDenied_CrossPlayRestriction = 0xA,
		ReservationDenied_Banned = 0xB,
		ReservationRequestCanceled = 0xC,
		ReservationInvalid = 0xD,
		BadSessionId = 0xE,
		ReservationDenied_ContainsExistingPlayers = 0xF
	};
}

enum class EMeshSelectionToolActions:int
{
	NoAction = 0x0,
	SelectAll = 0x1,
	SelectAllByMaterial = 0x2,
	ClearSelection = 0x3,
	InvertSelection = 0x4,
	GrowSelection = 0x5,
	ShrinkSelection = 0x6,
	ExpandToConnected = 0x7,
	SelectLargestComponentByTriCount = 0x8,
	SelectLargestComponentByArea = 0x9,
	OptimizeSelection = 0xA,
	DeleteSelected = 0xB,
	DisconnectSelected = 0xC,
	SeparateSelected = 0xD,
	DuplicateSelected = 0xE,
	FlipSelected = 0xF,
	CreateGroup = 0x10,
	SmoothBoundary = 0x11,
	CycleSelectionMode = 0x12,
	CycleViewMode = 0x13
};

enum class EMeshSelectionToolPrimaryMode:int
{
	Brush = 0x0,
	VolumetricBrush = 0x1,
	AngleFiltered = 0x2,
	Visible = 0x3,
	AllConnected = 0x4,
	AllInGroup = 0x5,
	ByMaterial = 0x6,
	ByMaterialAll = 0x7,
	ByUVIsland = 0x8,
	AllWithinAngle = 0x9
};

enum class EMeshFacesColorMode:int
{
	None = 0x0,
	ByGroup = 0x1,
	ByMaterialID = 0x2,
	ByUVIsland = 0x3
};

enum class ESpectatorClientRequestType:unsigned char
{
	NonePending = 0x0,
	ExistingSessionReservation = 0x1,
	ReservationUpdate = 0x2,
	EmptyServerReservation = 0x3,
	Reconnect = 0x4,
	Abandon = 0x5
};

enum class ENonlinearOperationType:signed char
{
	Bend = 0x0,
	Flare = 0x1,
	Twist = 0x2
};

enum class EFlareProfileType:signed char
{
	SinMode = 0x0,
	SinSquaredMode = 0x1,
	TriangleMode = 0x2
};

enum class EMeshSpaceDeformerToolAction:int
{
	NoAction = 0x0,
	ShiftToCenter = 0x1
};

enum class EMeshVertexSculptBrushType:unsigned char
{
	Move = 0x0,
	PullKelvin = 0x1,
	PullSharpKelvin = 0x2,
	Smooth = 0x3,
	SmoothFill = 0x4,
	Offset = 0x5,
	SculptView = 0x6,
	SculptMax = 0x7,
	Inflate = 0x8,
	ScaleKelvin = 0x9,
	Pinch = 0xA,
	TwistKelvin = 0xB,
	Flatten = 0xC,
	Plane = 0xD,
	PlaneViewAligned = 0xE,
	FixedPlane = 0xF,
	LastValue = 0x10
};

enum class EMeshVertexSculptBrushFilterType:unsigned char
{
	None = 0x0,
	Component = 0x1,
	PolyGroup = 0x2
};

enum class EVoipStreamDataFormat:unsigned char
{
	Float = 0x0,
	Int16 = 0x1,
	Unknown = 0x2
};

enum class EMirrorOperationMode:unsigned char
{
	MirrorAndAppend = 0x0,
	MirrorExisting = 0x1
};

enum class EMirrorCtrlClickBehavior:unsigned char
{
	Reposition = 0x0,
	RepositionAndReorient = 0x1
};

enum class EMirrorSaveMode:unsigned char
{
	UpdateAssets = 0x0,
	CreateNewAssets = 0x1
};

enum class EMirrorToolAction:int
{
	NoAction = 0x0,
	ShiftToCenter = 0x1,
	Left = 0x2,
	Right = 0x3,
	Up = 0x4,
	Down = 0x5,
	Forward = 0x6,
	Backward = 0x7
};

enum class EOffsetMeshToolOffsetType:unsigned char
{
	Iterative = 0x0,
	Implicit = 0x1
};

enum class ECollisionGeometryMode:int
{
	Default = 0x0,
	SimpleAndComplex = 0x1,
	UseSimpleAsComplex = 0x2,
	UseComplexAsSimple = 0x3
};

enum class EExtractCollisionOutputType:unsigned char
{
	Simple = 0x0,
	Complex = 0x1
};

namespace EReporterLineStyle
{
	enum Type:int
	{
		Line = 0x0,
		Dash = 0x1
	};
}

namespace EGraphAxisStyle
{
	enum Type:int
	{
		Lines = 0x0,
		Notches = 0x1,
		Grid = 0x2
	};
}

namespace EGraphDataStyle
{
	enum Type:int
	{
		Lines = 0x0,
		Filled = 0x1
	};
}

namespace ELegendPosition
{
	enum Type:int
	{
		Outside = 0x0,
		Inside = 0x1
	};
}

namespace FPropertyBagCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		ContainerTypes = 0x1,
		VersionPlusOne = 0x2,
		LatestVersion = 0x1
	};
}

enum class EPropertyLocalizationGathererTextFlags:unsigned char
{
	None = 0x0,
	ForceHasScript = 0x1,
	ForceEditorOnlyProperties = 0x2,
	ForceEditorOnlyScriptData = 0x4,
	ForceEditorOnly = 0x6,
	ForceIsDefaultValue = 0x8,
	SkipSubObjects = 0x10
};

enum class EPropertyLocalizationGathererResultFlags:unsigned char
{
	Empty = 0x0,
	HasText = 0x1,
	HasScript = 0x2,
	HasTextWithInvalidPackageLocalizationID = 0x4
};

enum class EMatrixSolverType:int
{
	LU = 0x0,
	QR = 0x1,
	BICGSTAB = 0x2,
	PCG = 0x3,
	FastestPSD = 0x4
};

enum class EMoviePipelineDLSSQuality:unsigned char
{
	EMoviePipelineDLSSQuality_DLAA = 0x0,
	EMoviePipelineDLSSQuality_UltraQuality = 0x1,
	EMoviePipelineDLSSQuality_Quality = 0x2,
	EMoviePipelineDLSSQuality_Balanced = 0x3,
	EMoviePipelineDLSSQuality_Performance = 0x4,
	EMoviePipelineDLSSQuality_UltraPerformance = 0x5
};

enum class EPropertyBagMissingEnum:unsigned char
{
	Missing = 0x0
};

enum class EStructUtilsResult:unsigned char
{
	Valid = 0x0,
	NotValid = 0x1
};

enum class TrustLevel:int
{
	BaseTrust = 0x0,
	PartialTrust = 0x1,
	FullTrust = 0x2
};

enum class RO_INIT_TYPE:int
{
	RO_INIT_SINGLETHREADED = 0x0,
	RO_INIT_MULTITHREADED = 0x1
};

enum class ECollisionGeometryType:int
{
	KeepExisting = 0x0,
	AlignedBoxes = 0x1,
	OrientedBoxes = 0x2,
	MinimalSpheres = 0x3,
	Capsules = 0x4,
	ConvexHulls = 0x5,
	SweptHulls = 0x6,
	LevelSets = 0x7,
	MinVolume = 0xA,
	None = 0xB
};

enum class ESetCollisionGeometryInputMode:int
{
	CombineAll = 0x0,
	PerInputObject = 0x1,
	PerMeshComponent = 0x2,
	PerMeshGroup = 0x3
};

enum class EProjectedHullAxis:int
{
	X = 0x0,
	Y = 0x1,
	Z = 0x2,
	SmallestBoxDimension = 0x3,
	SmallestVolume = 0x4
};

enum class EProcMeshSliceCapOption:unsigned char
{
	NoCap = 0x0,
	CreateNewSectionForCap = 0x1,
	UseLastSectionForCap = 0x2
};

enum class EPlaneCutToolActions:int
{
	NoAction = 0x0,
	Cut = 0x1,
	FlipPlane = 0x2
};

enum class EOcclusionCalculationUIMode:unsigned char
{
	GeneralizedWindingNumber = 0x0,
	RaycastOcclusionSamples = 0x1
};

enum class EOcclusionTriangleSamplingUIMode:unsigned char
{
	Vertices = 0x0,
	VerticesAndCentroids = 0x1
};

enum class EOccludedAction:unsigned char
{
	Remove = 0x0,
	SetNewGroup = 0x1
};

enum class EArkProcMeshSliceCapOption:unsigned char
{
	NoCap = 0x0,
	CreateNewSectionForCap = 0x1,
	UseLastSectionForCap = 0x2
};

enum class exr_error_code_t:int
{
	EXR_ERR_SUCCESS = 0x0,
	EXR_ERR_OUT_OF_MEMORY = 0x1,
	EXR_ERR_MISSING_CONTEXT_ARG = 0x2,
	EXR_ERR_INVALID_ARGUMENT = 0x3,
	EXR_ERR_ARGUMENT_OUT_OF_RANGE = 0x4,
	EXR_ERR_FILE_ACCESS = 0x5,
	EXR_ERR_FILE_BAD_HEADER = 0x6,
	EXR_ERR_NOT_OPEN_READ = 0x7,
	EXR_ERR_NOT_OPEN_WRITE = 0x8,
	EXR_ERR_HEADER_NOT_WRITTEN = 0x9,
	EXR_ERR_READ_IO = 0xA,
	EXR_ERR_WRITE_IO = 0xB,
	EXR_ERR_NAME_TOO_LONG = 0xC,
	EXR_ERR_MISSING_REQ_ATTR = 0xD,
	EXR_ERR_INVALID_ATTR = 0xE,
	EXR_ERR_NO_ATTR_BY_NAME = 0xF,
	EXR_ERR_ATTR_TYPE_MISMATCH = 0x10,
	EXR_ERR_ATTR_SIZE_MISMATCH = 0x11,
	EXR_ERR_SCAN_TILE_MIXEDAPI = 0x12,
	EXR_ERR_TILE_SCAN_MIXEDAPI = 0x13,
	EXR_ERR_MODIFY_SIZE_CHANGE = 0x14,
	EXR_ERR_ALREADY_WROTE_ATTRS = 0x15,
	EXR_ERR_BAD_CHUNK_LEADER = 0x16,
	EXR_ERR_CORRUPT_CHUNK = 0x17,
	EXR_ERR_INCORRECT_PART = 0x18,
	EXR_ERR_INCORRECT_CHUNK = 0x19,
	EXR_ERR_USE_SCAN_DEEP_WRITE = 0x1A,
	EXR_ERR_USE_TILE_DEEP_WRITE = 0x1B,
	EXR_ERR_USE_SCAN_NONDEEP_WRITE = 0x1C,
	EXR_ERR_USE_TILE_NONDEEP_WRITE = 0x1D,
	EXR_ERR_INVALID_SAMPLE_DATA = 0x1E,
	EXR_ERR_FEATURE_NOT_IMPLEMENTED = 0x1F,
	EXR_ERR_UNKNOWN = 0x20
};

enum class exr_tile_round_mode_t:int
{
	EXR_TILE_ROUND_DOWN = 0x0,
	EXR_TILE_ROUND_UP = 0x1,
	EXR_TILE_ROUND_LAST_TYPE = 0x2
};

enum class exr_tile_level_mode_t:int
{
	EXR_TILE_ONE_LEVEL = 0x0,
	EXR_TILE_MIPMAP_LEVELS = 0x1,
	EXR_TILE_RIPMAP_LEVELS = 0x2,
	EXR_TILE_LAST_TYPE = 0x3
};

enum class exr_pixel_type_t:int
{
	EXR_PIXEL_UINT = 0x0,
	EXR_PIXEL_HALF = 0x1,
	EXR_PIXEL_FLOAT = 0x2,
	EXR_PIXEL_LAST_TYPE = 0x3
};

enum class exr_attribute_type_t:int
{
	EXR_ATTR_UNKNOWN = 0x0,
	EXR_ATTR_BOX2I = 0x1,
	EXR_ATTR_BOX2F = 0x2,
	EXR_ATTR_CHLIST = 0x3,
	EXR_ATTR_CHROMATICITIES = 0x4,
	EXR_ATTR_COMPRESSION = 0x5,
	EXR_ATTR_DOUBLE = 0x6,
	EXR_ATTR_ENVMAP = 0x7,
	EXR_ATTR_FLOAT = 0x8,
	EXR_ATTR_FLOAT_VECTOR = 0x9,
	EXR_ATTR_INT = 0xA,
	EXR_ATTR_KEYCODE = 0xB,
	EXR_ATTR_LINEORDER = 0xC,
	EXR_ATTR_M33F = 0xD,
	EXR_ATTR_M33D = 0xE,
	EXR_ATTR_M44F = 0xF,
	EXR_ATTR_M44D = 0x10,
	EXR_ATTR_PREVIEW = 0x11,
	EXR_ATTR_RATIONAL = 0x12,
	EXR_ATTR_STRING = 0x13,
	EXR_ATTR_STRING_VECTOR = 0x14,
	EXR_ATTR_TILEDESC = 0x15,
	EXR_ATTR_TIMECODE = 0x16,
	EXR_ATTR_V2I = 0x17,
	EXR_ATTR_V2F = 0x18,
	EXR_ATTR_V2D = 0x19,
	EXR_ATTR_V3I = 0x1A,
	EXR_ATTR_V3F = 0x1B,
	EXR_ATTR_V3D = 0x1C,
	EXR_ATTR_OPAQUE = 0x1D,
	EXR_ATTR_LAST_KNOWN_TYPE = 0x1E
};

enum class EChaosPerfUnits:int
{
	S = 0x0,
	Ms = 0x1,
	Us = 0x2,
	Num = 0x3
};

enum class EActorSequenceObjectReferenceType:unsigned char
{
	ContextActor = 0x0,
	ExternalActor = 0x1,
	Component = 0x2
};

enum class ESkinWeightsBindType:unsigned char
{
	DirectDistance = 0x0,
	GeodesicVoxel = 0x1
};

enum class ESmoothMeshToolSmoothType:unsigned char
{
	Iterative = 0x0,
	Implicit = 0x1,
	Diffusion = 0x2
};

enum class ETransformMeshesTransformMode:unsigned char
{
	SharedGizmo = 0x0,
	SharedGizmoLocal = 0x1,
	PerObjectGizmo = 0x2,
	LastValue = 0x3
};

enum class ETransformMeshesSnapDragSource:unsigned char
{
	ClickPoint = 0x0,
	Pivot = 0x1,
	LastValue = 0x2
};

enum class ETransformMeshesSnapDragRotationMode:unsigned char
{
	Ignore = 0x0,
	Align = 0x1,
	AlignFlipped = 0x2,
	LastValue = 0x3
};

enum class EVoxelBlendOperation:unsigned char
{
	Union = 0x0,
	Subtract = 0x1
};

enum class EWaveTableCurve:unsigned char
{
	Linear = 0x0,
	Linear_Inv = 0x1,
	Exp = 0x2,
	Exp_Inverse = 0x3,
	Log = 0x4,
	Sin = 0x5,
	Sin_Full = 0x6,
	SCurve = 0x7,
	Shared = 0x8,
	Custom = 0x9,
	File = 0xA,
	Count = 0xB
};

enum class VkPerformanceCounterScopeKHR:int
{
	VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR = 0x0,
	VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR = 0x1,
	VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR = 0x2,
	VK_QUERY_SCOPE_COMMAND_BUFFER_KHR = 0x0,
	VK_QUERY_SCOPE_RENDER_PASS_KHR = 0x1,
	VK_QUERY_SCOPE_COMMAND_KHR = 0x2,
	VK_PERFORMANCE_COUNTER_SCOPE_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class EWaveTableResolution:unsigned char
{
	None = 0x0,
	Res_8 = 0x3,
	Res_16 = 0x4,
	Res_32 = 0x5,
	Res_64 = 0x6,
	Res_128 = 0x7,
	Res_256 = 0x8,
	Res_512 = 0x9,
	Res_1024 = 0xA,
	Res_2048 = 0xB,
	Res_4096 = 0xC,
	Res_Max = 0xC,
	Maximum = 0xD
};

enum class VkBuildAccelerationStructureFlagBitsKHR:int
{
	VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR = 0x1,
	VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR = 0x2,
	VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR = 0x4,
	VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR = 0x8,
	VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR = 0x10,
	VK_BUILD_ACCELERATION_STRUCTURE_MOTION_BIT_NV = 0x20,
	VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_OPACITY_MICROMAP_UPDATE_EXT = 0x40,
	VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_DISABLE_OPACITY_MICROMAPS_EXT = 0x80,
	VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_OPACITY_MICROMAP_DATA_UPDATE_EXT = 0x100,
	VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV = 0x1,
	VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV = 0x2,
	VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV = 0x4,
	VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV = 0x8,
	VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV = 0x10,
	VK_BUILD_ACCELERATION_STRUCTURE_FLAG_BITS_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkAccelerationStructureTypeKHR:int
{
	VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR = 0x0,
	VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR = 0x1,
	VK_ACCELERATION_STRUCTURE_TYPE_GENERIC_KHR = 0x2,
	VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV = 0x0,
	VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV = 0x1,
	VK_ACCELERATION_STRUCTURE_TYPE_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkCopyAccelerationStructureModeKHR:int
{
	VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR = 0x0,
	VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR = 0x1,
	VK_COPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHR = 0x2,
	VK_COPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR = 0x3,
	VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV = 0x0,
	VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV = 0x1,
	VK_COPY_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkGeometryTypeKHR:int
{
	VK_GEOMETRY_TYPE_TRIANGLES_KHR = 0x0,
	VK_GEOMETRY_TYPE_AABBS_KHR = 0x1,
	VK_GEOMETRY_TYPE_INSTANCES_KHR = 0x2,
	VK_GEOMETRY_TYPE_TRIANGLES_NV = 0x0,
	VK_GEOMETRY_TYPE_AABBS_NV = 0x1,
	VK_GEOMETRY_TYPE_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkGeometryFlagBitsKHR:int
{
	VK_GEOMETRY_OPAQUE_BIT_KHR = 0x1,
	VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR = 0x2,
	VK_GEOMETRY_OPAQUE_BIT_NV = 0x1,
	VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV = 0x2,
	VK_GEOMETRY_FLAG_BITS_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkGeometryInstanceFlagBitsKHR:int
{
	VK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR = 0x1,
	VK_GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR = 0x2,
	VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR = 0x4,
	VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR = 0x8,
	VK_GEOMETRY_INSTANCE_FORCE_OPACITY_MICROMAP_2_STATE_EXT = 0x10,
	VK_GEOMETRY_INSTANCE_DISABLE_OPACITY_MICROMAPS_EXT = 0x20,
	VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR = 0x2,
	VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV = 0x1,
	VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV = 0x2,
	VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV = 0x4,
	VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV = 0x8,
	VK_GEOMETRY_INSTANCE_FLAG_BITS_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkPerformanceCounterDescriptionFlagBitsKHR:int
{
	VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHR = 0x1,
	VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR = 0x2,
	VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_KHR = 0x1,
	VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_KHR = 0x2,
	VK_PERFORMANCE_COUNTER_DESCRIPTION_FLAG_BITS_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkQueueGlobalPriorityKHR:int
{
	VK_QUEUE_GLOBAL_PRIORITY_LOW_KHR = 0x80,
	VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR = 0x100,
	VK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR = 0x200,
	VK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR = 0x400,
	VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT = 0x80,
	VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT = 0x100,
	VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT = 0x200,
	VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT = 0x400,
	VK_QUEUE_GLOBAL_PRIORITY_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkSurfaceCounterFlagBitsEXT:int
{
	VK_SURFACE_COUNTER_VBLANK_BIT_EXT = 0x1,
	VK_SURFACE_COUNTER_VBLANK_EXT = 0x1,
	VK_SURFACE_COUNTER_FLAG_BITS_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class VkRayTracingShaderGroupTypeKHR:int
{
	VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR = 0x0,
	VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR = 0x1,
	VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR = 0x2,
	VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV = 0x0,
	VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV = 0x1,
	VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV = 0x2,
	VK_RAY_TRACING_SHADER_GROUP_TYPE_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkSubmitFlagBits:int
{
	VK_SUBMIT_PROTECTED_BIT = 0x1,
	VK_SUBMIT_PROTECTED_BIT_KHR = 0x1,
	VK_SUBMIT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkRenderingFlagBits:int
{
	VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT = 0x1,
	VK_RENDERING_SUSPENDING_BIT = 0x2,
	VK_RENDERING_RESUMING_BIT = 0x4,
	VK_RENDERING_ENABLE_LEGACY_DITHERING_BIT_EXT = 0x8,
	VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR = 0x1,
	VK_RENDERING_SUSPENDING_BIT_KHR = 0x2,
	VK_RENDERING_RESUMING_BIT_KHR = 0x4,
	VK_RENDERING_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkDescriptorPoolCreateFlagBits:int
{
	VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT = 0x1,
	VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT = 0x2,
	VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_EXT = 0x4,
	VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT = 0x2,
	VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE = 0x4,
	VK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkPipelineDepthStencilStateCreateFlagBits:int
{
	VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT = 0x1,
	VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT = 0x2,
	VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM = 0x1,
	VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM = 0x2,
	VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkPipelineColorBlendStateCreateFlagBits:int
{
	VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_EXT = 0x1,
	VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM = 0x1,
	VK_PIPELINE_COLOR_BLEND_STATE_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkDescriptorSetLayoutCreateFlagBits:int
{
	VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT = 0x2,
	VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR = 0x1,
	VK_DESCRIPTOR_SET_LAYOUT_CREATE_DESCRIPTOR_BUFFER_BIT_EXT = 0x10,
	VK_DESCRIPTOR_SET_LAYOUT_CREATE_EMBEDDED_IMMUTABLE_SAMPLERS_BIT_EXT = 0x20,
	VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_EXT = 0x4,
	VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT = 0x2,
	VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE = 0x4,
	VK_DESCRIPTOR_SET_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkSubpassDescriptionFlagBits:int
{
	VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX = 0x1,
	VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX = 0x2,
	VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM = 0x4,
	VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM = 0x8,
	VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_EXT = 0x10,
	VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT = 0x20,
	VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT = 0x40,
	VK_SUBPASS_DESCRIPTION_ENABLE_LEGACY_DITHERING_BIT_EXT = 0x80,
	VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM = 0x10,
	VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM = 0x20,
	VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM = 0x40,
	VK_SUBPASS_DESCRIPTION_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkFramebufferCreateFlagBits:int
{
	VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT = 0x1,
	VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR = 0x1,
	VK_FRAMEBUFFER_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkPipelineShaderStageCreateFlagBits:int
{
	VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT = 0x1,
	VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT = 0x2,
	VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT = 0x1,
	VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT = 0x2,
	VK_PIPELINE_SHADER_STAGE_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkShaderStageFlagBits:int
{
	VK_SHADER_STAGE_VERTEX_BIT = 0x1,
	VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT = 0x2,
	VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT = 0x4,
	VK_SHADER_STAGE_GEOMETRY_BIT = 0x8,
	VK_SHADER_STAGE_FRAGMENT_BIT = 0x10,
	VK_SHADER_STAGE_COMPUTE_BIT = 0x20,
	VK_SHADER_STAGE_ALL_GRAPHICS = 0x1F,
	VK_SHADER_STAGE_ALL = 0x7FFFFFFF,
	VK_SHADER_STAGE_RAYGEN_BIT_KHR = 0x100,
	VK_SHADER_STAGE_ANY_HIT_BIT_KHR = 0x200,
	VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR = 0x400,
	VK_SHADER_STAGE_MISS_BIT_KHR = 0x800,
	VK_SHADER_STAGE_INTERSECTION_BIT_KHR = 0x1000,
	VK_SHADER_STAGE_CALLABLE_BIT_KHR = 0x2000,
	VK_SHADER_STAGE_TASK_BIT_EXT = 0x40,
	VK_SHADER_STAGE_MESH_BIT_EXT = 0x80,
	VK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI = 0x4000,
	VK_SHADER_STAGE_RAYGEN_BIT_NV = 0x100,
	VK_SHADER_STAGE_ANY_HIT_BIT_NV = 0x200,
	VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV = 0x400,
	VK_SHADER_STAGE_MISS_BIT_NV = 0x800,
	VK_SHADER_STAGE_INTERSECTION_BIT_NV = 0x1000,
	VK_SHADER_STAGE_CALLABLE_BIT_NV = 0x2000,
	VK_SHADER_STAGE_TASK_BIT_NV = 0x40,
	VK_SHADER_STAGE_MESH_BIT_NV = 0x80,
	VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkToolPurposeFlagBits:int
{
	VK_TOOL_PURPOSE_VALIDATION_BIT = 0x1,
	VK_TOOL_PURPOSE_PROFILING_BIT = 0x2,
	VK_TOOL_PURPOSE_TRACING_BIT = 0x4,
	VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT = 0x8,
	VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT = 0x10,
	VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT = 0x20,
	VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT = 0x40,
	VK_TOOL_PURPOSE_VALIDATION_BIT_EXT = 0x1,
	VK_TOOL_PURPOSE_PROFILING_BIT_EXT = 0x2,
	VK_TOOL_PURPOSE_TRACING_BIT_EXT = 0x4,
	VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT = 0x8,
	VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT = 0x10,
	VK_TOOL_PURPOSE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkResolveModeFlagBits:int
{
	VK_RESOLVE_MODE_NONE = 0x0,
	VK_RESOLVE_MODE_SAMPLE_ZERO_BIT = 0x1,
	VK_RESOLVE_MODE_AVERAGE_BIT = 0x2,
	VK_RESOLVE_MODE_MIN_BIT = 0x4,
	VK_RESOLVE_MODE_MAX_BIT = 0x8,
	VK_RESOLVE_MODE_NONE_KHR = 0x0,
	VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR = 0x1,
	VK_RESOLVE_MODE_AVERAGE_BIT_KHR = 0x2,
	VK_RESOLVE_MODE_MIN_BIT_KHR = 0x4,
	VK_RESOLVE_MODE_MAX_BIT_KHR = 0x8,
	VK_RESOLVE_MODE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkDescriptorBindingFlagBits:int
{
	VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT = 0x1,
	VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT = 0x2,
	VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT = 0x4,
	VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT = 0x8,
	VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT = 0x1,
	VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT = 0x2,
	VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT = 0x4,
	VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT = 0x8,
	VK_DESCRIPTOR_BINDING_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkPipelineCreationFeedbackFlagBits:int
{
	VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT = 0x1,
	VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT = 0x2,
	VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT = 0x4,
	VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT = 0x1,
	VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT = 0x2,
	VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT = 0x4,
	VK_PIPELINE_CREATION_FEEDBACK_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkSemaphoreWaitFlagBits:int
{
	VK_SEMAPHORE_WAIT_ANY_BIT = 0x1,
	VK_SEMAPHORE_WAIT_ANY_BIT_KHR = 0x1,
	VK_SEMAPHORE_WAIT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkDriverId:int
{
	VK_DRIVER_ID_AMD_PROPRIETARY = 0x1,
	VK_DRIVER_ID_AMD_OPEN_SOURCE = 0x2,
	VK_DRIVER_ID_MESA_RADV = 0x3,
	VK_DRIVER_ID_NVIDIA_PROPRIETARY = 0x4,
	VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS = 0x5,
	VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA = 0x6,
	VK_DRIVER_ID_IMAGINATION_PROPRIETARY = 0x7,
	VK_DRIVER_ID_QUALCOMM_PROPRIETARY = 0x8,
	VK_DRIVER_ID_ARM_PROPRIETARY = 0x9,
	VK_DRIVER_ID_GOOGLE_SWIFTSHADER = 0xA,
	VK_DRIVER_ID_GGP_PROPRIETARY = 0xB,
	VK_DRIVER_ID_BROADCOM_PROPRIETARY = 0xC,
	VK_DRIVER_ID_MESA_LLVMPIPE = 0xD,
	VK_DRIVER_ID_MOLTENVK = 0xE,
	VK_DRIVER_ID_COREAVI_PROPRIETARY = 0xF,
	VK_DRIVER_ID_JUICE_PROPRIETARY = 0x10,
	VK_DRIVER_ID_VERISILICON_PROPRIETARY = 0x11,
	VK_DRIVER_ID_MESA_TURNIP = 0x12,
	VK_DRIVER_ID_MESA_V3DV = 0x13,
	VK_DRIVER_ID_MESA_PANVK = 0x14,
	VK_DRIVER_ID_SAMSUNG_PROPRIETARY = 0x15,
	VK_DRIVER_ID_MESA_VENUS = 0x16,
	VK_DRIVER_ID_MESA_DOZEN = 0x17,
	VK_DRIVER_ID_MESA_NVK = 0x18,
	VK_DRIVER_ID_AMD_PROPRIETARY_KHR = 0x1,
	VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR = 0x2,
	VK_DRIVER_ID_MESA_RADV_KHR = 0x3,
	VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR = 0x4,
	VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR = 0x5,
	VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR = 0x6,
	VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR = 0x7,
	VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR = 0x8,
	VK_DRIVER_ID_ARM_PROPRIETARY_KHR = 0x9,
	VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR = 0xA,
	VK_DRIVER_ID_GGP_PROPRIETARY_KHR = 0xB,
	VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR = 0xC,
	VK_DRIVER_ID_MAX_ENUM = 0x7FFFFFFF
};

enum class VkShaderFloatControlsIndependence:int
{
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY = 0x0,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL = 0x1,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE = 0x2,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR = 0x0,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR = 0x1,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR = 0x2,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkSamplerReductionMode:int
{
	VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE = 0x0,
	VK_SAMPLER_REDUCTION_MODE_MIN = 0x1,
	VK_SAMPLER_REDUCTION_MODE_MAX = 0x2,
	VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT = 0x0,
	VK_SAMPLER_REDUCTION_MODE_MIN_EXT = 0x1,
	VK_SAMPLER_REDUCTION_MODE_MAX_EXT = 0x2,
	VK_SAMPLER_REDUCTION_MODE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkSemaphoreType:int
{
	VK_SEMAPHORE_TYPE_BINARY = 0x0,
	VK_SEMAPHORE_TYPE_TIMELINE = 0x1,
	VK_SEMAPHORE_TYPE_BINARY_KHR = 0x0,
	VK_SEMAPHORE_TYPE_TIMELINE_KHR = 0x1,
	VK_SEMAPHORE_TYPE_MAX_ENUM = 0x7FFFFFFF
};

enum class VkPipelineStageFlagBits:unsigned __int64
{
	VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT = 0x1,
	VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT = 0x2,
	VK_PIPELINE_STAGE_VERTEX_INPUT_BIT = 0x4,
	VK_PIPELINE_STAGE_VERTEX_SHADER_BIT = 0x8,
	VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT = 0x10,
	VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT = 0x20,
	VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT = 0x40,
	VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT = 0x80,
	VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT = 0x100,
	VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT = 0x200,
	VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT = 0x400,
	VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT = 0x800,
	VK_PIPELINE_STAGE_TRANSFER_BIT = 0x1000,
	VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT = 0x2000,
	VK_PIPELINE_STAGE_HOST_BIT = 0x4000,
	VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT = 0xFFFF8000,
	VK_PIPELINE_STAGE_ALL_COMMANDS_BIT = 0x10000,
	VK_PIPELINE_STAGE_NONE = 0x0,
	VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT = 0x1000000,
	VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT = 0x40000,
	VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR = 0x2000000,
	VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR = 0x200000,
	VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT = 0x800000,
	VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 0x400000,
	VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV = 0x20000,
	VK_PIPELINE_STAGE_TASK_SHADER_BIT_EXT = 0x80000,
	VK_PIPELINE_STAGE_MESH_SHADER_BIT_EXT = 0x100000,
	VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV = 0x400000,
	VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV = 0x200000,
	VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV = 0x2000000,
	VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV = 0x80000,
	VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV = 0x100000,
	VK_PIPELINE_STAGE_NONE_KHR = 0x0,
	VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkImageUsageFlagBits:int
{
	VK_IMAGE_USAGE_TRANSFER_SRC_BIT = 0x1,
	VK_IMAGE_USAGE_TRANSFER_DST_BIT = 0x2,
	VK_IMAGE_USAGE_SAMPLED_BIT = 0x4,
	VK_IMAGE_USAGE_STORAGE_BIT = 0x8,
	VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT = 0x10,
	VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT = 0x20,
	VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT = 0x40,
	VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT = 0x80,
	VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT = 0x200,
	VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 0x100,
	VK_IMAGE_USAGE_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT = 0x80000,
	VK_IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI = 0x40000,
	VK_IMAGE_USAGE_SAMPLE_WEIGHT_BIT_QCOM = 0x100000,
	VK_IMAGE_USAGE_SAMPLE_BLOCK_MATCH_BIT_QCOM = 0x200000,
	VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV = 0x100,
	VK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkBufferCreateFlagBits:int
{
	VK_BUFFER_CREATE_SPARSE_BINDING_BIT = 0x1,
	VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT = 0x2,
	VK_BUFFER_CREATE_SPARSE_ALIASED_BIT = 0x4,
	VK_BUFFER_CREATE_PROTECTED_BIT = 0x8,
	VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT = 0x10,
	VK_BUFFER_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT = 0x20,
	VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT = 0x10,
	VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR = 0x10,
	VK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkBufferUsageFlagBits:int
{
	VK_BUFFER_USAGE_TRANSFER_SRC_BIT = 0x1,
	VK_BUFFER_USAGE_TRANSFER_DST_BIT = 0x2,
	VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT = 0x4,
	VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT = 0x8,
	VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT = 0x10,
	VK_BUFFER_USAGE_STORAGE_BUFFER_BIT = 0x20,
	VK_BUFFER_USAGE_INDEX_BUFFER_BIT = 0x40,
	VK_BUFFER_USAGE_VERTEX_BUFFER_BIT = 0x80,
	VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT = 0x100,
	VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT = 0x20000,
	VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT = 0x800,
	VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT = 0x1000,
	VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT = 0x200,
	VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR = 0x80000,
	VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR = 0x100000,
	VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR = 0x400,
	VK_BUFFER_USAGE_SAMPLER_DESCRIPTOR_BUFFER_BIT_EXT = 0x200000,
	VK_BUFFER_USAGE_RESOURCE_DESCRIPTOR_BUFFER_BIT_EXT = 0x400000,
	VK_BUFFER_USAGE_PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_BIT_EXT = 0x4000000,
	VK_BUFFER_USAGE_MICROMAP_BUILD_INPUT_READ_ONLY_BIT_EXT = 0x800000,
	VK_BUFFER_USAGE_MICROMAP_STORAGE_BIT_EXT = 0x1000000,
	VK_BUFFER_USAGE_RAY_TRACING_BIT_NV = 0x400,
	VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT = 0x20000,
	VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_KHR = 0x20000,
	VK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkEventCreateFlagBits:int
{
	VK_EVENT_CREATE_DEVICE_ONLY_BIT = 0x1,
	VK_EVENT_CREATE_DEVICE_ONLY_BIT_KHR = 0x1,
	VK_EVENT_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkPipelineCacheCreateFlagBits:int
{
	VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT = 0x1,
	VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT = 0x1,
	VK_PIPELINE_CACHE_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkAccessFlagBits:unsigned __int64
{
	VK_ACCESS_INDIRECT_COMMAND_READ_BIT = 0x1,
	VK_ACCESS_INDEX_READ_BIT = 0x2,
	VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT = 0x4,
	VK_ACCESS_UNIFORM_READ_BIT = 0x8,
	VK_ACCESS_INPUT_ATTACHMENT_READ_BIT = 0x10,
	VK_ACCESS_SHADER_READ_BIT = 0x20,
	VK_ACCESS_SHADER_WRITE_BIT = 0x40,
	VK_ACCESS_COLOR_ATTACHMENT_READ_BIT = 0x80,
	VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT = 0x100,
	VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT = 0x200,
	VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = 0x400,
	VK_ACCESS_TRANSFER_READ_BIT = 0x800,
	VK_ACCESS_TRANSFER_WRITE_BIT = 0x1000,
	VK_ACCESS_HOST_READ_BIT = 0x2000,
	VK_ACCESS_HOST_WRITE_BIT = 0x4000,
	VK_ACCESS_MEMORY_READ_BIT = 0xFFFF8000,
	VK_ACCESS_MEMORY_WRITE_BIT = 0x10000,
	VK_ACCESS_NONE = 0x0,
	VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT = 0x2000000,
	VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT = 0x4000000,
	VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT = 0x8000000,
	VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT = 0x100000,
	VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT = 0x80000,
	VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR = 0x200000,
	VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR = 0x400000,
	VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT = 0x1000000,
	VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR = 0x800000,
	VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV = 0x20000,
	VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV = 0x40000,
	VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV = 0x800000,
	VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV = 0x200000,
	VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV = 0x400000,
	VK_ACCESS_NONE_KHR = 0x0,
	VK_ACCESS_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

namespace EProgressBarFillStyle
{
	enum Type:int
	{
		Mask = 0x0,
		Scale = 0x1
	};
}

namespace EProgressBarFillType
{
	enum Type:int
	{
		LeftToRight = 0x0,
		RightToLeft = 0x1,
		FillFromCenter = 0x2,
		FillFromCenterHorizontal = 0x3,
		FillFromCenterVertical = 0x4,
		TopToBottom = 0x5,
		BottomToTop = 0x6
	};
}

enum class ETimelineLengthMode:int
{
	TL_TimelineLength = 0x0,
	TL_LastKeyFrame = 0x1
};

enum class EModuleType:int
{
	EPMT_General = 0x0,
	EPMT_TypeData = 0x1,
	EPMT_Beam = 0x2,
	EPMT_Trail = 0x3,
	EPMT_Spawn = 0x4,
	EPMT_Required = 0x5,
	EPMT_Event = 0x6,
	EPMT_Light = 0x7,
	EPMT_SubUV = 0x8,
	EPMT_MAX = 0x9
};

enum class EEdGraphActionType:int
{
	GRAPHACTION_Default = 0x0,
	GRAPHACTION_AddNode = 0x1,
	GRAPHACTION_SelectNode = 0x2,
	GRAPHACTION_RemoveNode = 0x4
};

enum class ERawDistributionOperation:int
{
	RDO_Uninitialized = 0x0,
	RDO_None = 0x1,
	RDO_Random = 0x2,
	RDO_Extreme = 0x3
};

namespace EStretchDirection
{
	enum Type:int
	{
		Both = 0x0,
		DownOnly = 0x1,
		UpOnly = 0x2
	};
}

namespace EStretch
{
	enum Type:int
	{
		None = 0x0,
		Fill = 0x1,
		ScaleToFit = 0x2,
		ScaleToFitX = 0x3,
		ScaleToFitY = 0x4,
		ScaleToFill = 0x5,
		ScaleBySafeZone = 0x6,
		UserSpecified = 0x7,
		UserSpecifiedWithClipping = 0x8
	};
}

enum class EBindingKind:unsigned char
{
	Function = 0x0,
	Property = 0x1
};

namespace ESettingsLockedAxis
{
	enum Type:int
	{
		None = 0x0,
		X = 0x1,
		Y = 0x2,
		Z = 0x3,
		Invalid = 0x4
	};
}

namespace ESettingsDOF
{
	enum Type:int
	{
		Full3D = 0x0,
		YZPlane = 0x1,
		XZPlane = 0x2,
		XYPlane = 0x3
	};
}

enum class EDragPivot:unsigned char
{
	MouseDown = 0x0,
	TopLeft = 0x1,
	TopCenter = 0x2,
	TopRight = 0x3,
	CenterLeft = 0x4,
	CenterCenter = 0x5,
	CenterRight = 0x6,
	BottomLeft = 0x7,
	BottomCenter = 0x8,
	BottomRight = 0x9
};

enum class EViewState:unsigned char
{
	Store = 0x0,
	ModPage = 0x1,
	ScreenShot = 0x2,
	Dropdown = 0x3,
	ServerMods = 0x4,
	Popup = 0x5
};

namespace ETeamPingType
{
	enum Type:int
	{
		SmartPing = 0x0,
		GoHere = 0x1,
		Tame = 0x2,
		Follow = 0x3,
		FollowMe = 0x4,
		Attack = 0x5,
		Danger = 0x6,
		LootIt = 0x7,
		Track = 0x8,
		Rallypoint = 0x9
	};
}

namespace EChatType
{
	enum Type:int
	{
		GlobalChat = 0x0,
		ProximityChat = 0x1,
		RadioChat = 0x2,
		GlobalTribeChat = 0x3,
		AllianceChat = 0x4,
		MAX = 0x5
	};
}

namespace ESpawnPattern
{
	enum Type:int
	{
		Circle = 0x0,
		Grid = 0x1,
		Random = 0x2
	};
}

namespace ELevelExperienceRampType
{
	enum Type:int
	{
		Player = 0x0,
		DinoEasy = 0x1,
		DinoMedium = 0x2,
		DinoHard = 0x3,
		MAX = 0x4
	};
}

namespace EWorldBuffDifficultyType
{
	enum Type:int
	{
		GAMMA = 0x0,
		BETA = 0x1,
		ALPHA = 0x2,
		OTHER = 0x3
	};
}

namespace ETargetingTeamBehavior
{
	enum Type:int
	{
		ExactMatch = 0x0,
		FriendlyWith = 0x1,
		PrioritizeButIncludeAny = 0x2
	};
}

namespace EWorldBuffPropertyLocation
{
	enum Type:int
	{
		GameMode = 0x0,
		GameState = 0x1
	};
}

namespace EHUDElementVerticalAlignment
{
	enum Type:int
	{
		Center = 0x0,
		Top = 0x1,
		Bottom = 0x2
	};
}

namespace EEditorMessageLogLevel
{
	enum Type:int
	{
		Error = 0x0,
		Warning = 0x1,
		Info = 0x2,
		Success = 0x3
	};
}

enum class EFieldCullingOperationType:int
{
	Field_Culling_Inside = 0x0,
	Field_Culling_Outside = 0x1,
	Field_Culling_Operation_Max = 0x2
};

namespace EPrimalStatsValueTypes
{
	enum Type:int
	{
		TotalShots = 0x0,
		Misses = 0x1,
		HitsStructure = 0x2,
		HitsDinoBody = 0x3,
		HitsDinoCritical = 0x4,
		HitsPlayerBody = 0x5,
		HitsPlayerCritical = 0x6,
		MAX = 0x7
	};
}

namespace EPhaseRequirementWidgetVisualState
{
	enum Type:int
	{
		Neutral = 0x0,
		Positive = 0x1,
		Negative = 0x2,
		Custom = 0x3
	};
}

namespace EPrimalCharacterStatusState
{
	enum Type:int
	{
		Dead = 0x0,
		Winded = 0x1,
		Starvation = 0x2,
		Dehydration = 0x3,
		Suffocation = 0x4,
		Encumbered = 0x5,
		Hypothermia = 0x6,
		Hyperthermia = 0x7,
		Injured = 0x8,
		KnockedOut = 0x9,
		Sleeping = 0xA,
		Cold = 0xB,
		Hot = 0xC,
		Crafting = 0xD,
		MAX = 0xE
	};
}

namespace EPathFindingMode
{
	enum Type:int
	{
		Regular = 0x0,
		Hierarchical = 0x1
	};
}

namespace EXPType
{
	enum Type:int
	{
		XP_GENERIC = 0x0,
		XP_KILL = 0x1,
		XP_HARVEST = 0x2,
		XP_CRAFT = 0x3,
		XP_SPECIAL = 0x4,
		XP_ALPHAKILL = 0x5,
		XP_CAVEKILL = 0x6,
		XP_WILDKILL = 0x7,
		XP_BOSSKILL = 0x8,
		XP_TAMEDKILL = 0x9,
		XP_UNCLAIMEDKILL = 0xA,
		XP_EXPLORERNOTE = 0xB,
		MAX = 0xC
	};
}

namespace EHUDElementType
{
	enum Type:int
	{
		Text = 0x0,
		ProgressBar = 0x1,
		Image = 0x2
	};
}

namespace EPrimalCharacterStatusValue
{
	enum Type:int
	{
		Health = 0x0,
		Stamina = 0x1,
		Torpidity = 0x2,
		Oxygen = 0x3,
		Food = 0x4,
		Water = 0x5,
		Temperature = 0x6,
		Weight = 0x7,
		MeleeDamageMultiplier = 0x8,
		SpeedMultiplier = 0x9,
		TemperatureFortitude = 0xA,
		CraftingSpeedMultiplier = 0xB,
		MAX = 0xC
	};
}

namespace EHUDElementAnchorMode
{
	enum Type:int
	{
		Specified = 0x0,
		QuickbarLeft = 0x1,
		QuickbarRight = 0x2,
		QuickbarTop = 0x3
	};
}

namespace EDinoTamedOrder
{
	enum Type:int
	{
		SetAggressionPassive = 0x0,
		SetAggressionNeutral = 0x1,
		SetAggressionAggressive = 0x2,
		SetAggressionAttackTarget = 0x3,
		ToggleFollowMe = 0x4,
		FollowMe = 0x5,
		StopFollowing = 0x6,
		CycleFollowDistance = 0x7,
		SetAggressionPassiveFlee = 0x8,
		LandingToMe = 0x9,
		MAX = 0xA
	};
}

namespace ENativeMissionMetaTag
{
	enum Type:int
	{
		INVALID = 0x0,
		GENESIS_VR_BOSS_UNLOCK = 0x1,
		ARCTIC_MISSION = 0x2,
		BOG_MISSION = 0x3,
		LUNAR_MISSION = 0x4,
		OCEAN_MISSION = 0x5,
		VOLCANIC_MISSION = 0x6,
		NORMAL_DIFFICULTY = 0x7,
		ALPHA_DIFFICULTY = 0x8,
		BETA_DIFFICULTY = 0x9,
		GAMMA_DIFFICULTY = 0xA,
		MAX = 0xB
	};
}

namespace EHUDElementHorizontalAlignment
{
	enum Type:int
	{
		Center = 0x0,
		Left = 0x1,
		Right = 0x2
	};
}

namespace ESimpleCurve
{
	enum Type:int
	{
		Linear = 0x0,
		Pow0_5 = 0x1,
		Pow1_0 = 0x2,
		Pow1_5 = 0x3,
		Pow2_0 = 0x4,
		Pow2_5 = 0x5,
		Pow3_0 = 0x6,
		Pow3_5 = 0x7,
		PowCos0_5 = 0x8,
		PowCos1_0 = 0x9,
		PowCos1_5 = 0xA,
		PowCos2_0 = 0xB,
		PowCos2_5 = 0xC,
		PowCos3_0 = 0xD,
		PowCos3_5 = 0xE,
		PowSin0_5 = 0xF,
		PowSin1_0 = 0x10,
		PowSin1_5 = 0x11,
		PowSin2_0 = 0x12,
		PowSin2_5 = 0x13,
		PowSin3_0 = 0x14,
		PowSin3_5 = 0x15,
		PowMinCos0_5 = 0x16,
		PowMinCos1_0 = 0x17,
		PowMinCos1_5 = 0x18,
		PowMinCos2_0 = 0x19,
		PowMinCos2_5 = 0x1A,
		PowMinCos3_0 = 0x1B,
		PowMinCos3_5 = 0x1C,
		PowMax0_5 = 0x1D,
		PowMax1_0 = 0x1E,
		PowMax1_5 = 0x1F,
		PowMax2_0 = 0x20,
		PowMax2_5 = 0x21,
		PowMax3_0 = 0x22,
		PowMax3_5 = 0x23
	};
}

namespace EPrimalItemStat
{
	enum Type:int
	{
		GenericQuality = 0x0,
		Armor = 0x1,
		MaxDurability = 0x2,
		WeaponDamagePercent = 0x3,
		WeaponClipAmmo = 0x4,
		HypothermalInsulation = 0x5,
		Weight = 0x6,
		HyperthermalInsulation = 0x7,
		MAX = 0x8
	};
}

namespace EChatSendMode
{
	enum Type:int
	{
		GlobalChat = 0x0,
		GlobalTribeChat = 0x1,
		LocalChat = 0x2,
		AllianceChat = 0x3,
		MAX = 0x4
	};
}

enum class EPlayMovieVolumeType:int
{
	Default = 0x0,
	Music = 0x1,
	Character = 0x2,
	Voice = 0x3
};

namespace EBoneModifierType
{
	enum Type:int
	{
		HEAD = 0x0,
		NECK = 0x1,
		NECKLENGTH = 0x2,
		CHEST = 0x3,
		SHOULDERS = 0x4,
		ARMLENGTH = 0x5,
		UPPERARM = 0x6,
		LOWERARM = 0x7,
		HAND = 0x8,
		LEGLENGTH = 0x9,
		UPPERLEG = 0xA,
		LOWERLEG = 0xB,
		FOOT = 0xC,
		HIP = 0xD,
		TORSO = 0xE,
		UPPERFACESIZE = 0xF,
		LOWERFACESIZE = 0x10,
		TORSODEPTH = 0x11,
		HEADHEIGHT = 0x12,
		HEADWIDTH = 0x13,
		HEADDEPTH = 0x14,
		TORSOHEIGHT = 0x15,
		TORSOSIZE = 0x16,
		OVERALLHEIGHT = 0x17,
		EYESIZE = 0x18,
		EYEWIDTH = 0x19,
		MAX = 0x1A
	};
}

namespace EPlayerConfigDynamicMaterialVectorTypes
{
	enum Type:int
	{
		BODYFAT_FATDEPOSITS = 0x0,
		BODYMUSCLE_CHEST = 0x1,
		BODYMUSCLE_BACK = 0x2,
		BODYMUSCLE_ARMS_1 = 0x3,
		BODYMUSCLE_ARMS_2 = 0x4,
		BODYMUSCLE_LEGS_1 = 0x5,
		BODYMUSCLE_LEGS_2 = 0x6,
		MAX = 0x7
	};
}

namespace ETrackedActorCategory
{
	enum Type:int
	{
		NoCategory = 0x0,
		Creatures = 0x1,
		Allies = 0x2,
		Teammates = 0x3,
		MAX = 0x4
	};
}

namespace EPrimalARKTributeDataType
{
	enum Type:int
	{
		Items = 0x0,
		TamedDinos = 0x1,
		CharacterData = 0x2,
		MAX = 0x3
	};
}

namespace EShooterPhysMaterialType
{
	enum Type:int
	{
		Unknown = 0x0,
		Concrete = 0x1,
		Dirt = 0x2,
		Water = 0x3,
		Metal = 0x4,
		Wood = 0x5,
		Grass = 0x6,
		Glass = 0x7,
		Flesh = 0x8,
		Leaves = 0x9,
		Rock = 0xA,
		Sand = 0xB,
		Snow = 0xC,
		Corruption = 0xD,
		Lava = 0xE,
		Acid = 0xF,
		MAX = 0x10
	};
}

namespace ELootItemType
{
	enum Type:int
	{
		None = 0x0,
		Element = 0x1,
		Hexagons = 0x2,
		ResourceCommon = 0x3,
		ResourceUncommon = 0x4,
		ResourceRare = 0x5,
		ArmorTier1 = 0x6,
		ArmorTier2 = 0x7,
		ArmorTier3 = 0x8,
		ArmorTek = 0x9,
		WeaponTier1 = 0xA,
		WeaponTier2 = 0xB,
		WeaponTier3 = 0xC,
		WeaponTek = 0xD,
		AmmoTier1 = 0xE,
		AmmoTier2 = 0xF,
		AmmoTier3 = 0x10,
		Saddle = 0x11
	};
}

namespace EMissionRelatedPropertyType
{
	enum Type:int
	{
		Name_PropertyType = 0x0,
		String_PropertyType = 0x1,
		Boolean_PropertyType = 0x2,
		Integer_PropertyType = 0x3,
		Float_PropertyType = 0x4,
		Double_PropertyType = 0x5
	};
}

namespace EPrimalItemType
{
	enum Type:int
	{
		MiscConsumable = 0x0,
		Equipment = 0x1,
		Weapon = 0x2,
		Ammo = 0x3,
		Structure = 0x4,
		Resource = 0x5,
		Skin = 0x6,
		WeaponAttachment = 0x7,
		Artifact = 0x8,
		MAX = 0x9
	};
}

namespace EInventoryDataListType
{
	enum Type:unsigned __int64
	{
		LocalEquipment = 0x1,
		LocalQuickSlots = 0x4,
		LocalItems = 0x8,
		LocalCraftables = 0x10,
		RemoteItems = 0x100,
		RemoteCraftables = 0x200,
		RemoteEquipment = 0x400,
		ArkInventory = 0x10000,
		Droppable = 0x20000,
		DroppableMinusEquipped = 0x40000,
		Colors = 0x80000,
		Brushes = 0x100000,
		Dyes = 0x200000,
		Ingredients = 0x400000,
		Skins = 0x800000,
		Mask_Local = 0xFF,
		Mask_Remote = 0xFFFFFF00,
		Mask_LocalInventory = 0x18,
		Mask_RemoteInventory = 0x300,
		Mask_LocalDataList = 0x19,
		Mask_RemoteDataList = 0x700,
		Mask_Inventories = 0x10318,
		Mask_Items = 0x108,
		Mask_Craftables = 0x210,
		Mask_Equipment = 0x401
	};
}

enum class EInstallStatus:unsigned char
{
	EInstallStatus_Default = 0x0,
	EInstallStatus_Installing = 0x1,
	EInstallStatus_Installed = 0x2,
	EInstallStatus_InstalledButNeedsUpdate = 0x3,
	EInstallStatus_Updating = 0x4,
	EInstallStatus_Uninstalling = 0x5,
	EInstallStatus_InstalledButNeedsUpdateMyMods = 0x6
};

enum class EGameModsEvent:unsigned char
{
	EGameModsEvent_ViewRegister = 0x0,
	EGameModsEvent_FinishInstalling = 0x1,
	EGameModsEvent_Uninstalling = 0x2,
	EGameModsEvent_InstallingProgress = 0x3,
	EGameModsEvent_InitInstalling = 0x4,
	EGameModsEvent_InitUninstalling = 0x5,
	EGameModsEvent_AlreadyInstalled = 0x6,
	EGameModsEvent_FinishUpdating = 0x7,
	EGameModsEvent_SearchMods = 0x8,
	EGameModsEvent_MyMods = 0x9,
	EGameModsEvent_CancelInstalling = 0xA
};

enum class EAnalogStick:unsigned char
{
	Left = 0x0,
	Right = 0x1,
	Max = 0x2
};

namespace AnalogCursorMode
{
	enum Type:int
	{
		Accelerated = 0x0,
		Direct = 0x1
	};
}

namespace EMissionTimerMode
{
	enum Type:int
	{
		HideTimer = 0x0,
		ShowTimeRemaining = 0x1,
		ShowTimeElapsed = 0x2,
		UseBPGetMissionTimerText = 0x3
	};
}

enum class EHoverDroneDebug:int
{
	Off = 0x0,
	Position = 0x1,
	Velocity = 0x4,
	RotationalVelocity = 0x8,
	Altitude = 0x10,
	ForceFacing = 0x20,
	FOV = 0x40,
	All = 0x7D
};

enum class ERenderFocusRule:unsigned char
{
	Always = 0x0,
	NonPointer = 0x1,
	NavigationOnly = 0x2,
	Never = 0x3
};

enum class EUIScalingRule:unsigned char
{
	ShortestSide = 0x0,
	LongestSide = 0x1,
	Horizontal = 0x2,
	Vertical = 0x3,
	ScaleToFit = 0x4,
	Custom = 0x5
};

enum class ECursorMoveGranularity:int
{
	Character = 0x0,
	Word = 0x1
};

enum class ERootMotionSourceID:unsigned short
{
	Invalid = 0x0
};

enum class ECookOptimizationFlags:int
{
	None = 0x0,
	RemoveTrack = 0x1,
	RemoveObject = 0x2,
	RemoveSection = 0x4
};

enum class EReferenceChainSearchMode:int
{
	Default = 0x0,
	ExternalOnly = 0x1,
	Shortest = 0x2,
	Longest = 0x4,
	Direct = 0x8,
	FullChain = 0x10,
	ShortestToGarbage = 0x20,
	Minimal = 0x40,
	GCOnly = 0x80,
	PrintResults = 0x10000,
	PrintAllResults = 0x20000
};

enum class EInitialOscillatorOffset:int
{
	EOO_OffsetRandom = 0x0,
	EOO_OffsetZero = 0x1,
	EOO_MAX = 0x2
};

enum class EOscillatorWaveform:unsigned char
{
	SineWave = 0x0,
	PerlinNoise = 0x1
};

enum class ECameraAnimationEasingType:unsigned char
{
	Linear = 0x0,
	Sinusoidal = 0x1,
	Quadratic = 0x2,
	Cubic = 0x3,
	Quartic = 0x4,
	Quintic = 0x5,
	Exponential = 0x6,
	Circular = 0x7
};

enum class ECameraAnimationPlaySpace:unsigned char
{
	CameraLocal = 0x0,
	World = 0x1,
	UserDefined = 0x2
};

enum class ETriggerEffectType:unsigned char
{
	None = 0x0,
	Feedback = 0x1,
	Weapon = 0x2,
	Slope = 0x3,
	Vibration = 0x4,
	VibrationSlope = 0x5
};

enum class EArchiveReferenceMarkerFlags:unsigned int
{
	None = 0x0,
	SkipCompilingAssets = 0x1
};

enum class EInitialWaveOscillatorOffsetType:unsigned char
{
	Random = 0x0,
	Zero = 0x1
};

enum class EFourPlayerSplitScreenType:unsigned char
{
	Grid = 0x0,
	Vertical = 0x1,
	Horizontal = 0x2
};

namespace ETwoPlayerSplitScreenType
{
	enum Type:int
	{
		Horizontal = 0x0,
		Vertical = 0x1
	};
}

namespace EThreePlayerSplitScreenType
{
	enum Type:int
	{
		FavorTop = 0x0,
		FavorBottom = 0x1,
		Vertical = 0x2,
		Horizontal = 0x3
	};
}

enum class EEmissionPatternTypeEnum:unsigned char
{
	Chaos_Emission_Pattern_First_Frame = 0x0,
	Chaos_Emission_Pattern_On_Demand = 0x1,
	Chaos_Max = 0x2
};

namespace EWeaponState
{
	enum Type:int
	{
		Idle = 0x0,
		Firing = 0x1,
		Reloading = 0x2,
		Equipping = 0x3,
		UnEquipping = 0x4
	};
}

enum class EMetasoundSourceAudioFormat:unsigned char
{
	Mono = 0x0,
	Stereo = 0x1,
	Quad = 0x2,
	FiveDotOne = 0x3,
	SevenDotOne = 0x4,
	COUNT = 0x5
};

enum class EMetaSoundMessageLevel:unsigned char
{
	Error = 0x0,
	Warning = 0x1,
	Info = 0x2
};

enum class EParticleSignificanceLevel:unsigned char
{
	Low = 0x0,
	Medium = 0x1,
	High = 0x2,
	Critical = 0x3,
	Num = 0x4
};

enum class EParticleAxisLock:int
{
	EPAL_NONE = 0x0,
	EPAL_X = 0x1,
	EPAL_Y = 0x2,
	EPAL_Z = 0x3,
	EPAL_NEGATIVE_X = 0x4,
	EPAL_NEGATIVE_Y = 0x5,
	EPAL_NEGATIVE_Z = 0x6,
	EPAL_ROTATE_X = 0x7,
	EPAL_ROTATE_Y = 0x8,
	EPAL_ROTATE_Z = 0x9,
	EPAL_MAX = 0xA
};

enum class EGLTFMaterialPropertyGroup:unsigned char
{
	None = 0x0,
	BaseColorOpacity = 0x1,
	MetallicRoughness = 0x2,
	EmissiveColor = 0x3,
	Normal = 0x4,
	AmbientOcclusion = 0x5,
	ClearCoatRoughness = 0x6,
	ClearCoatBottomNormal = 0x7
};

enum class EGLTFMaterialBakeSizePOT:unsigned char
{
	POT_1 = 0x0,
	POT_2 = 0x1,
	POT_4 = 0x2,
	POT_8 = 0x3,
	POT_16 = 0x4,
	POT_32 = 0x5,
	POT_64 = 0x6,
	POT_128 = 0x7,
	POT_256 = 0x8,
	POT_512 = 0x9,
	POT_1024 = 0xA,
	POT_2048 = 0xB,
	POT_4096 = 0xC,
	POT_8192 = 0xD
};

enum class ESolverFlags:unsigned char
{
	None = 0x0,
	Standalone = 0x1
};

enum class EGLTFMaterialBakeMode:unsigned char
{
	Disabled = 0x0,
	Simple = 0x1,
	UseMeshData = 0x2
};

enum class EGLTFTextureImageFormat:unsigned char
{
	None = 0x0,
	PNG = 0x1,
	JPEG = 0x2
};

enum class EGLTFMaterialVariantMode:unsigned char
{
	None = 0x0,
	Simple = 0x1,
	UseMeshData = 0x2
};

enum class EEmitterRenderMode:int
{
	ERM_Normal = 0x0,
	ERM_Point = 0x1,
	ERM_Cross = 0x2,
	ERM_LightsOnly = 0x3,
	ERM_None = 0x4,
	ERM_MAX = 0x5
};

enum class EGLTFJsonExtension:int
{
	KHR_LightsPunctual = 0x0,
	KHR_MaterialsClearCoat = 0x1,
	KHR_MaterialsUnlit = 0x2,
	KHR_MaterialsVariants = 0x3,
	KHR_MeshQuantization = 0x4,
	KHR_TextureTransform = 0x5
};

enum class EMusicState:unsigned char
{
	EMS_LOADING = 0x0,
	EMS_PLAYING = 0x1,
	EMS_FINISHED = 0x2
};

namespace ELeaderboardGroupByMode
{
	enum Type:int
	{
		None = 0x0,
		First = 0x1,
		Min = 0x2,
		Max = 0x3,
		Sum = 0x4,
		Count = 0x5,
		Average = 0x6
	};
}

enum class EGLTFJsonShadingModel:int
{
	None = 0xFF,
	Default = 0x0,
	Unlit = 0x1,
	ClearCoat = 0x2,
	NumShadingModels = 0x3
};

enum class EGLTFJsonTargetPath:int
{
	None = 0xFF,
	Translation = 0x0,
	Rotation = 0x1,
	Scale = 0x2,
	Weights = 0x3
};

enum class EGLTFJsonInterpolation:int
{
	None = 0xFF,
	Linear = 0x0,
	Step = 0x1,
	CubicSpline = 0x2
};

enum class EGLTFJsonLightType:int
{
	None = 0xFF,
	Directional = 0x0,
	Point = 0x1,
	Spot = 0x2
};

enum class EGLTFJsonCameraType:int
{
	None = 0xFF,
	Orthographic = 0x0,
	Perspective = 0x1
};

enum class EGLTFJsonAccessorType:int
{
	None = 0xFF,
	Scalar = 0x0,
	Vec2 = 0x1,
	Vec3 = 0x2,
	Vec4 = 0x3,
	Mat2 = 0x4,
	Mat3 = 0x5,
	Mat4 = 0x6
};

enum class EGLTFJsonMimeType:int
{
	None = 0xFF,
	PNG = 0x0,
	JPEG = 0x1
};

enum class EGLTFJsonAlphaMode:int
{
	None = 0xFF,
	Opaque = 0x0,
	Mask = 0x1,
	Blend = 0x2
};

enum class EGLTFJsonComponentType:int
{
	None = 0xFF,
	Int8 = 0x1400,
	UInt8 = 0x1401,
	Int16 = 0x1402,
	UInt16 = 0x1403,
	Int32 = 0x1404,
	UInt32 = 0x1405,
	Float = 0x1406
};

enum class EGLTFJsonBufferTarget:unsigned __int64
{
	None = 0xFF,
	ArrayBuffer = 0xFFFF8892,
	ElementArrayBuffer = 0xFFFF8893
};

enum class EStreamingVolumeUsage:int
{
	SVB_Loading = 0x0,
	SVB_LoadingAndVisibility = 0x1,
	SVB_VisibilityBlockingOnLoad = 0x2,
	SVB_BlockingOnLoad = 0x3,
	SVB_LoadingNotVisible = 0x4,
	SVB_MAX = 0x5
};

enum class EGLTFJsonPrimitiveMode:int
{
	Points = 0x0,
	Lines = 0x1,
	LineLoop = 0x2,
	LineStrip = 0x3,
	Triangles = 0x4,
	TriangleStrip = 0x5,
	TriangleFan = 0x6
};

namespace EPostProcessVolumeType
{
	enum Type:int
	{
		Generic = 0x0,
		Cave = 0x1,
		Water = 0x2
	};
}

enum class EGLTFJsonTextureFilter:int
{
	None = 0xFF,
	Nearest = 0x2600,
	Linear = 0x2601,
	NearestMipmapNearest = 0x2700,
	LinearMipmapNearest = 0x2701,
	NearestMipmapLinear = 0x2702,
	LinearMipmapLinear = 0x2703
};

enum class EGLTFJsonTextureWrap:unsigned __int64
{
	None = 0xFF,
	Repeat = 0x2901,
	MirroredRepeat = 0xFFFF8370,
	ClampToEdge = 0xFFFF812F
};

namespace ECameraStyle
{
	enum Type:int
	{
		Default = 0x0,
		FirstPerson = 0x1,
		ThirdPerson = 0x2,
		FreeCam = 0x3,
		Orbit = 0x4,
		Spectator = 0x5
	};
}

namespace EPrimalCharacterInputType
{
	enum Type:int
	{
		PrimaryFire = 0x0,
		Targeting = 0x1,
		AltFire = 0x2,
		SwitchWeapon = 0x3,
		Reload = 0x4,
		Crouch = 0x5,
		Prone = 0x6,
		CrouchProneToggle = 0x7,
		SwitchMap = 0x8,
		DinoAttack = 0x9
	};
}

namespace EMassTeleportState
{
	enum Type:int
	{
		INITIATED = 0x0,
		TRIGGERED_SUCCESS = 0x1,
		TRIGGERED_FAILED = 0x2,
		COMPLETED = 0x3,
		CANCELLED = 0x4
	};
}

enum class EWirelessTransmissionType:unsigned char
{
	Custom = 0x0,
	Power = 0x1,
	Water = 0x2,
	Fuel = 0x3,
	Ammo = 0x4,
	Crafting = 0x5,
	ItemTransfer = 0x6
};

enum class EReflectionSourceType:unsigned char
{
	CapturedScene = 0x0,
	SpecifiedCubemap = 0x1
};

namespace EReflectionDFAOOption
{
	enum Type:int
	{
		Default = 0x0,
		UsedWithDFAO = 0x1,
		NotUsedWithDFAO = 0x2
	};
}

enum class ESceneCapturePrimitiveRenderMode:unsigned char
{
	PRM_LegacySceneCapture = 0x0,
	PRM_RenderScenePrimitives = 0x1,
	PRM_UseShowOnlyList = 0x2
};

enum class EGLTFTaskPriority:unsigned char
{
	Animation = 0x0,
	Mesh = 0x1,
	Material = 0x2,
	Texture = 0x3,
	MAX = 0x4
};

enum class EPropertyAccessChangeNotifyMode:unsigned char
{
	Default = 0x0,
	Never = 0x1,
	Always = 0x2
};

enum class ESequencerKeyMode:int
{
	AutoKey = 0x0,
	ManualKey = 0x1,
	ManualKeyForced = 0x2
};

namespace EAimAssistType
{
	enum Type:int
	{
		Off = 0x0,
		TargetingOn = 0x1,
		RangeWeaponAlwaysOn = 0x2
	};
}

enum class EPropertyAccessResultFlags:unsigned char
{
	Success = 0x0,
	PermissionDenied = 0x1,
	ConversionFailed = 0x2,
	AccessProtected = 0x10,
	CannotEditTemplate = 0x20,
	CannotEditInstance = 0x40,
	ReadOnly = 0x80
};

namespace ECompanionState
{
	enum Type:int
	{
		IDLE = 0x0,
		FOCUSED = 0x1,
		EVENT = 0x2,
		MONOLOGUE = 0x3,
		ASLEEP = 0x4,
		CUSTOM = 0x5
	};
}

enum class ECurveTableMode:unsigned char
{
	Empty = 0x0,
	SimpleCurves = 0x1,
	RichCurves = 0x2
};

enum class ERuntimeGenerationType:unsigned char
{
	Static = 0x0,
	DynamicModifiersOnly = 0x1,
	Dynamic = 0x2,
	LegacyGeneration = 0x3
};

namespace EServerOctreeGroup
{
	enum Type:int
	{
		STASISCOMPONENTS = 0x0,
		PLAYERPAWNS = 0x1,
		DINOPAWNS = 0x2,
		PAWNS = 0x3,
		STRUCTURES = 0x4,
		TARGETABLEACTORS = 0x5,
		PLAYERS_CONNECTED = 0x6,
		SPATIALNETWORKEDACTORS = 0x7,
		SPATIALNETWORKEDACTORS_DORMANT = 0x8,
		ALL_SPATIAL = 0x9,
		THERMALSTRUCTURES = 0xA,
		STRUCTURES_CORE = 0xB,
		DINOPAWNS_TAMED = 0xC,
		PLAYERS_AND_TAMED_DINOS = 0xD,
		PLAYERS_CONNECTED_AND_TAMED_DINOS = 0xE,
		DINOFOODCONTAINER = 0xF,
		GRENADES = 0x10,
		TREESAPTAPS = 0x11,
		LARGEUNSTASISRANGE = 0x12,
		TRAPS = 0x13,
		MAX = 0x14
	};
}

namespace EMissionDispatchMode
{
	enum Type:int
	{
		StartAnywhere = 0x0,
		RequireNearbyMissionDispatcher = 0x1,
		RequireInsideMissionDispatcher = 0x2,
		UseBPStaticCanStartMission = 0x3,
		RequireInsideDispatcherNoCheck = 0x4
	};
}

namespace EGrammaticalGender
{
	enum Type:int
	{
		Neuter = 0x0,
		Masculine = 0x1,
		Feminine = 0x2,
		Mixed = 0x3
	};
}

namespace EGrammaticalNumber
{
	enum Type:int
	{
		Singular = 0x0,
		Plural = 0x1
	};
}

enum class DistributionParamMode:int
{
	DPM_Normal = 0x0,
	DPM_Abs = 0x1,
	DPM_Direct = 0x2,
	DPM_MAX = 0x3
};

enum class EDistributionVectorLockFlags:int
{
	EDVLF_None = 0x0,
	EDVLF_XY = 0x1,
	EDVLF_XZ = 0x2,
	EDVLF_YZ = 0x3,
	EDVLF_XYZ = 0x4,
	EDVLF_MAX = 0x5
};

enum class EDistributionVectorMirrorFlags:int
{
	EDVMF_Same = 0x0,
	EDVMF_Different = 0x1,
	EDVMF_Mirror = 0x2,
	EDVMF_MAX = 0x3
};

namespace ETooltipMode
{
	enum Type:int
	{
		DEFAULT = 0x0,
		ONLY_ACTION = 0x1,
		OFF = 0x2
	};
}

enum class EVirtualKeyboardTrigger:unsigned char
{
	OnFocusByPointer = 0x0,
	OnAllFocusEvents = 0x1
};

enum class EVirtualKeyboardDismissAction:unsigned char
{
	TextChangeOnDismiss = 0x0,
	TextCommitOnAccept = 0x1,
	TextCommitOnDismiss = 0x2
};

enum class EPlatformInterfaceDataType:int
{
	PIDT_None = 0x0,
	PIDT_Int = 0x1,
	PIDT_Float = 0x2,
	PIDT_String = 0x3,
	PIDT_Object = 0x4,
	PIDT_Custom = 0x5,
	PIDT_MAX = 0x6
};

enum class ETwitterRequestMethod:int
{
	TRM_Get = 0x0,
	TRM_Post = 0x1,
	TRM_Delete = 0x2,
	TRM_MAX = 0x3
};

namespace EOnDeserializationType
{
	enum Type:int
	{
		SaveGame = 0x0,
		MAX = 0x1
	};
}

namespace EStencilAlliance
{
	enum Type:int
	{
		None = 0x0,
		Friendly = 0x1,
		NPC = 0x2,
		NPCFleeing = 0x3,
		Hostile = 0x4,
		Ally = 0x5,
		Element = 0x6
	};
}

enum class ELightMapFlags:int
{
	LMF_None = 0x0,
	LMF_Streamed = 0x1
};

namespace EGamePhase
{
	enum Type:int
	{
		None = 0x0,
		Lobby_SOTF = 0x1,
		Match_SOTF = 0x2
	};
}

namespace EFieldActivationType_New
{
	enum Type:int
	{
		Delay = 0x0,
		OnTick = 0x1,
		OnTickWithDelay = 0x2,
		Trigger = 0x3,
		MAX = 0x4
	};
}

namespace EServerChatMessageType
{
	enum Type:int
	{
		Chat = 0x0,
		ChatDirect = 0x1,
		HudNotification = 0x2,
		HudNotificationSingle = 0x3,
		Tutorial = 0x4
	};
}

enum class EClusterUnionMethod:unsigned char
{
	PointImplicit = 0x0,
	DelaunayTriangulation = 0x1,
	MinimalSpanningSubsetDelaunayTriangulation = 0x2,
	PointImplicitAugmentedWithMinimalDelaunay = 0x3,
	BoundsOverlapFilteredDelaunayTriangulation = 0x4,
	None = 0x5
};

namespace EShooterHudPosition
{
	enum Type:int
	{
		Left = 0x0,
		FrontLeft = 0x1,
		Front = 0x2,
		FrontRight = 0x3,
		Right = 0x4,
		BackRight = 0x5,
		Back = 0x6,
		BackLeft = 0x7
	};
}

namespace ENetworkModeResult
{
	enum Type:int
	{
		Yes = 0x0,
		No = 0x1
	};
}

namespace EShooterCrosshairDirection
{
	enum Type:int
	{
		Left = 0x0,
		Right = 0x1,
		Top = 0x2,
		Bottom = 0x3,
		Center = 0x4
	};
}

enum class ESynth1OscType:unsigned char
{
	Sine = 0x0,
	Saw = 0x1,
	Triangle = 0x2,
	Square = 0x3,
	Noise = 0x4,
	Count = 0x5
};

enum class ESynthLFOType:unsigned char
{
	Sine = 0x0,
	UpSaw = 0x1,
	DownSaw = 0x2,
	Square = 0x3,
	Triangle = 0x4,
	Exponential = 0x5,
	RandomSampleHold = 0x6,
	Count = 0x7
};

enum class ESynthLFOMode:unsigned char
{
	Sync = 0x0,
	OneShot = 0x1,
	Free = 0x2,
	Count = 0x3
};

enum class ESynthLFOPatchType:unsigned char
{
	PatchToNone = 0x0,
	PatchToGain = 0x1,
	PatchToOscFreq = 0x2,
	PatchToFilterFreq = 0x3,
	PatchToFilterQ = 0x4,
	PatchToOscPulseWidth = 0x5,
	PatchToOscPan = 0x6,
	PatchLFO1ToLFO2Frequency = 0x7,
	PatchLFO1ToLFO2Gain = 0x8,
	Count = 0x9
};

enum class ESynthModEnvPatch:unsigned char
{
	PatchToNone = 0x0,
	PatchToOscFreq = 0x1,
	PatchToFilterFreq = 0x2,
	PatchToFilterQ = 0x3,
	PatchToLFO1Gain = 0x4,
	PatchToLFO2Gain = 0x5,
	PatchToLFO1Freq = 0x6,
	PatchToLFO2Freq = 0x7,
	Count = 0x8
};

enum class ESynthModEnvBiasPatch:unsigned char
{
	PatchToNone = 0x0,
	PatchToOscFreq = 0x1,
	PatchToFilterFreq = 0x2,
	PatchToFilterQ = 0x3,
	PatchToLFO1Gain = 0x4,
	PatchToLFO2Gain = 0x5,
	PatchToLFO1Freq = 0x6,
	PatchToLFO2Freq = 0x7,
	Count = 0x8
};

enum class ESynthFilterType:unsigned char
{
	LowPass = 0x0,
	HighPass = 0x1,
	BandPass = 0x2,
	BandStop = 0x3,
	Count = 0x4
};

enum class ESynthFilterAlgorithm:unsigned char
{
	OnePole = 0x0,
	StateVariable = 0x1,
	Ladder = 0x2,
	Count = 0x3
};

enum class ESynthStereoDelayMode:unsigned char
{
	Normal = 0x0,
	Cross = 0x1,
	PingPong = 0x2,
	Count = 0x3
};

enum class ESynth1PatchSource:unsigned char
{
	LFO1 = 0x0,
	LFO2 = 0x1,
	Envelope = 0x2,
	BiasEnvelope = 0x3,
	Count = 0x4
};

enum class ESynth1PatchDestination:unsigned char
{
	Osc1Gain = 0x0,
	Osc1Frequency = 0x1,
	Osc1Pulsewidth = 0x2,
	Osc2Gain = 0x3,
	Osc2Frequency = 0x4,
	Osc2Pulsewidth = 0x5,
	FilterFrequency = 0x6,
	FilterQ = 0x7,
	Gain = 0x8,
	Pan = 0x9,
	LFO1Frequency = 0xA,
	LFO1Gain = 0xB,
	LFO2Frequency = 0xC,
	LFO2Gain = 0xD,
	Count = 0xE
};

enum class ETextLocation:int
{
	BeginningOfDocument = 0x0,
	EndOfDocument = 0x1,
	BeginningOfLine = 0x2,
	EndOfLine = 0x3,
	PreviousPage = 0x4,
	NextPage = 0x5
};

enum class ESubmixEffectConvolutionReverbBlockSize:unsigned char
{
	BlockSize256 = 0x0,
	BlockSize512 = 0x1,
	BlockSize1024 = 0x2
};

enum EPrimalCameraState:unsigned char
{
	OLD_CAMERA = 0x0,
	ASA_CAMERA = 0x1,
	NORMAL_INTERP_TO_OLD_CAMERA = 0x2,
	NORMAL_INTERP_TO_ASA_CAMERA = 0x3,
	WAITING_TO_SWITCH_TO_OLD_CAMERA_SLOW = 0x4,
	SLOW_INTERP_TO_OLD_CAMERA = 0x5
};

enum class EDescendantScrollDestination:unsigned char
{
	IntoView = 0x0,
	TopOrLeft = 0x1,
	Center = 0x2,
	BottomOrRight = 0x3
};

enum class EScrollWhenFocusChanges:unsigned char
{
	NoScroll = 0x0,
	InstantScroll = 0x1,
	AnimatedScroll = 0x2
};

namespace ESaveType
{
	enum Type:int
	{
		Map = 0x0,
		Profile = 0x1,
		Tribe = 0x2,
		CharacterSetting = 0x3
	};
}

enum class CompressTaskState:unsigned int
{
	BusyCompressing = 0x0,
	WaitForAsyncGetSavedFiles = 0x1,
	WaitForAsyncDeletesToFinish = 0x2,
	SaveDataFiles = 0x3
};

enum class ESourceEffectDynamicsProcessorType:unsigned char
{
	Compressor = 0x0,
	Limiter = 0x1,
	Expander = 0x2,
	Gate = 0x3,
	UpwardsCompressor = 0x4,
	Count = 0x5
};

enum class ESourceEffectDynamicsPeakMode:unsigned char
{
	MeanSquared = 0x0,
	RootMeanSquared = 0x1,
	Peak = 0x2,
	Count = 0x3
};

enum class EGeometryCollectionPhysicsTypeEnum:unsigned char
{
	Chaos_AngularVelocity = 0x0,
	Chaos_DynamicState = 0x1,
	Chaos_LinearVelocity = 0x2,
	Chaos_InitialAngularVelocity = 0x3,
	Chaos_InitialLinearVelocity = 0x4,
	Chaos_CollisionGroup = 0x5,
	Chaos_LinearForce = 0x6,
	Chaos_AngularTorque = 0x7,
	Chaos_DisableThreshold = 0x8,
	Chaos_SleepingThreshold = 0x9,
	Chaos_ExternalClusterStrain = 0xA,
	Chaos_InternalClusterStrain = 0xB,
	Chaos_LinearImpulse = 0xC,
	Chaos_Max = 0xD
};

enum class EEnvelopeFollowerPeakMode:unsigned char
{
	MeanSquared = 0x0,
	RootMeanSquared = 0x1,
	Peak = 0x2,
	Count = 0x3
};

namespace EMoveComponentAction
{
	enum Type:int
	{
		Move = 0x0,
		Stop = 0x1,
		Return = 0x2
	};
}

enum class ESourceEffectFilterCircuit:unsigned char
{
	OnePole = 0x0,
	StateVariable = 0x1,
	Ladder = 0x2,
	Count = 0x3
};

enum class ESourceEffectFilterType:unsigned char
{
	LowPass = 0x0,
	HighPass = 0x1,
	BandPass = 0x2,
	BandStop = 0x3,
	Count = 0x4
};

enum class ESourceEffectFilterParam:unsigned char
{
	FilterFrequency = 0x0,
	FilterResonance = 0x1,
	Count = 0x2
};

enum class EStereoChannelMode:unsigned char
{
	MidSide = 0x0,
	LeftRight = 0x1,
	count = 0x2
};

enum class ESourceEffectMotionFilterCircuit:unsigned char
{
	OnePole = 0x0,
	StateVariable = 0x1,
	Ladder = 0x2,
	Count = 0x3
};

enum class ESourceEffectMotionFilterType:unsigned char
{
	LowPass = 0x0,
	HighPass = 0x1,
	BandPass = 0x2,
	BandStop = 0x3,
	Count = 0x4
};

enum class ESourceEffectMotionFilterModSource:unsigned char
{
	DistanceFromListener = 0x0,
	SpeedRelativeToListener = 0x1,
	SpeedOfSourceEmitter = 0x2,
	SpeedOfListener = 0x3,
	SpeedOfAngleDelta = 0x4,
	Count = 0x5
};

enum class ESourceEffectMotionFilterModDestination:unsigned char
{
	FilterACutoffFrequency = 0x0,
	FilterAResonance = 0x1,
	FilterAOutputVolumeDB = 0x2,
	FilterBCutoffFrequency = 0x3,
	FilterBResonance = 0x4,
	FilterBOutputVolumeDB = 0x5,
	FilterMix = 0x6,
	Count = 0x7
};

enum class EWeaponAmmoReloadState:unsigned char
{
	Playing_Anim = 0x0,
	Waiting_For_Ammo = 0x1,
	Ready = 0x2
};

enum class ESourceEffectMotionFilterTopology:unsigned char
{
	SerialMode = 0x0,
	ParallelMode = 0x1,
	Count = 0x2
};

namespace ESTOFNotificationType
{
	enum Type:int
	{
		Death = 0x0,
		TribeEliminated = 0x1,
		MatchVictory = 0x2,
		MatchDraw = 0x3,
		MAX = 0x4
	};
}

namespace SavingObjectState
{
	enum Type:int
	{
		SOS_Unknown = 0x0,
		SOS_New = 0x1,
		SOS_Changed = 0x2,
		SOS_Unchanged = 0x3
	};
}

enum class HAPI_UNREAL_NodeFlags:int
{
	HAPI_UNREAL_NODEFLAGS_ANY = 0xFF,
	HAPI_UNREAL_NODEFLAGS_NONE = 0x0
};

enum class HAPI_UNREAL_NodeType:int
{
	HAPI_UNREAL_NODETYPE_ANY = 0xFF,
	HAPU_UNREAL_NODETYPE_NONE = 0x0
};

namespace EPrimalGDKStat
{
	enum Type:int
	{
		CreatureTamed = 0x0,
		KilledSurvivor = 0x1,
		PlayerDied = 0x2,
		PunchedTrees = 0x3
	};
}

enum class ECameraSetting_BoolCondition:unsigned char
{
	Dont_Care = 0x0,
	Yes = 0x1,
	No = 0x2
};

namespace EAIOptionFlag
{
	enum Type:int
	{
		Default = 0x0,
		Enable = 0x1,
		Disable = 0x2,
		MAX = 0x3
	};
}

enum class EPhaserLFOType:unsigned char
{
	Sine = 0x0,
	UpSaw = 0x1,
	DownSaw = 0x2,
	Square = 0x3,
	Triangle = 0x4,
	Exponential = 0x5,
	RandomSampleHold = 0x6,
	Count = 0x7
};

enum class ERingModulatorTypeSourceEffect:unsigned char
{
	Sine = 0x0,
	Saw = 0x1,
	Triangle = 0x2,
	Square = 0x3,
	Count = 0x4
};

namespace ENavigationLockReason
{
	enum Type:int
	{
		Unknown = 0x1,
		AllowUnregister = 0x2,
		MaterialUpdate = 0x4,
		LightingUpdate = 0x8,
		ContinuousEditorMove = 0x10,
		SpawnOnDragEnter = 0x20
	};
}

namespace EAIRequestPriority
{
	enum Type:int
	{
		SoftScript = 0x0,
		Logic = 0x1,
		HardScript = 0x2,
		Reaction = 0x3,
		Ultimate = 0x4,
		MAX = 0x5
	};
}

enum class EStereoDelaySourceEffect:unsigned char
{
	Normal = 0x0,
	Cross = 0x1,
	PingPong = 0x2,
	Count = 0x3
};

enum class EStereoDelayFiltertype:unsigned char
{
	Lowpass = 0x0,
	Highpass = 0x1,
	Bandpass = 0x2,
	Notch = 0x3,
	Count = 0x4
};

enum class FNavigationSystemRunMode:unsigned char
{
	InvalidMode = 0x0,
	GameMode = 0x1,
	EditorMode = 0x2,
	SimulationMode = 0x3,
	PIEMode = 0x4,
	InferFromWorldMode = 0x5,
	EditorWorldPartitionBuildMode = 0x6
};

enum class EClusterConnectionTypeEnum:unsigned char
{
	Chaos_PointImplicit = 0x0,
	Chaos_DelaunayTriangulation = 0x1,
	Chaos_MinimalSpanningSubsetDelaunayTriangulation = 0x2,
	Chaos_PointImplicitAugmentedWithMinimalDelaunay = 0x3,
	Chaos_BoundsOverlapFilteredDelaunayTriangulation = 0x4,
	Chaos_None = 0x5,
	Chaos_EClsuterCreationParameters_Max = 0x6
};

enum class ESubmixFilterType:unsigned char
{
	LowPass = 0x0,
	HighPass = 0x1,
	BandPass = 0x2,
	BandStop = 0x3,
	Count = 0x4
};

enum class ESubmixFilterAlgorithm:unsigned char
{
	OnePole = 0x0,
	StateVariable = 0x1,
	Ladder = 0x2,
	Count = 0x3
};

enum class EDataTableExportFlags:unsigned char
{
	None = 0x0,
	UseJsonObjectsForStructs = 0x1,
	UseSimpleText = 0x2,
	UsePrettyPropertyNames = 0x40,
	UsePrettyEnumNames = 0x80
};

enum class ETapLineMode:unsigned char
{
	SendToChannel = 0x0,
	Panning = 0x1,
	Disabled = 0x2
};

namespace EShooterDialogType
{
	enum Type:int
	{
		None = 0x0,
		Generic = 0x1,
		ControllerDisconnected = 0x2
	};
}

enum class EGranularSynthSeekType:unsigned char
{
	FromBeginning = 0x0,
	FromCurrentPosition = 0x1,
	Count = 0x2
};

enum class EGranularSynthEnvelopeType:unsigned char
{
	Rectangular = 0x0,
	Triangle = 0x1,
	DownwardTriangle = 0x2,
	UpwardTriangle = 0x3,
	ExponentialDecay = 0x4,
	ExponentialIncrease = 0x5,
	Gaussian = 0x6,
	Hanning = 0x7,
	Lanczos = 0x8,
	Cosine = 0x9,
	CosineSquared = 0xA,
	Welch = 0xB,
	Blackman = 0xC,
	BlackmanHarris = 0xD,
	Count = 0xE
};

enum class CurveInterpolationType:unsigned char
{
	AUTOINTERP = 0x0,
	LINEAR = 0x1,
	CONSTANT = 0x2
};

enum class EShapeBodySetupHelper:int
{
	InvalidateSharingIfStale = 0x0,
	UpdateBodySetup = 0x1
};

namespace EMissionState
{
	enum Type:int
	{
		ServerSetup = 0x0,
		Activated = 0x1,
		Suspended = 0x2,
		Deactivated = 0x3
	};
}

namespace ETribeGroupPermission
{
	enum Type:int
	{
		STRUCTUREACTIVATE = 0x0,
		INVENTORYACCESS = 0x1,
		PET_ORDER = 0x2,
		PET_RIDE = 0x3,
		GENERAL_STRUCTUREDEMOLISH = 0x4,
		GENERAL_STRUCTUREATTACHMENT = 0x5,
		GENERAL_BUILDSTRUCTUREINRANGE = 0x6,
		INVITEMEMBER = 0x7,
		PROMOTEMEMBER = 0x8,
		DEMOTEMEMBER = 0x9,
		BANISHMEMBER = 0xA,
		PET_UNCLAIM = 0xB,
		TELEPORT_MEMBERS = 0xC,
		TELEPORT_DINOS = 0xD,
		PING = 0xE,
		RALLYPOINT = 0xF,
		WIRELESSCRAFTING = 0x10
	};
}

enum class ESamplePlayerSeekType:unsigned char
{
	FromBeginning = 0x0,
	FromCurrentPosition = 0x1,
	FromEnd = 0x2,
	Count = 0x3
};

namespace EBoolExecResult
{
	enum Type:int
	{
		Success = 0x0,
		Failed = 0x1
	};
}

enum class ESynthSlateSizeType:unsigned char
{
	Small = 0x0,
	Medium = 0x1,
	Large = 0x2,
	Count = 0x3
};

enum class ESynthSlateColorStyle:unsigned char
{
	Light = 0x0,
	Dark = 0x1,
	Count = 0x2
};

enum class ESynthKnobSize:unsigned char
{
	Medium = 0x0,
	Large = 0x1,
	Count = 0x2
};

enum class EBinkMediaPlayerBinkBufferModes:int
{
	BMASM_Bink_Stream = 0x0,
	BMASM_Bink_PreloadAll = 0x1,
	BMASM_Bink_StreamUntilResident = 0x2,
	BMASM_Bink_MAX = 0x3
};

enum class EFieldPhysicsDefaultFields:int
{
	Field_RadialIntMask = 0x0,
	Field_RadialFalloff = 0x1,
	Field_UniformVector = 0x2,
	Field_RadialVector = 0x3,
	Field_RadialVectorFalloff = 0x4,
	Field_EFieldPhysicsDefaultFields_Max = 0x5
};

namespace ELeaderboardColumnName
{
	enum Type:int
	{
		MissionTag = 0x0,
		PlayerNetId = 0x1,
		TribeId = 0x2,
		TimestampUtc = 0x3,
		FloatValue = 0x4,
		IntValue = 0x5,
		NameValue = 0x6,
		StringValue = 0x7
	};
}

enum class ETemplateSectionPropertyScaleType:int
{
	FloatProperty = 0x0,
	TransformPropertyLocationOnly = 0x1,
	TransformPropertyRotationOnly = 0x2
};

namespace EControlConstraint
{
	enum Type:int
	{
		Orientation = 0x0,
		Translation = 0x1,
		MAX = 0x2
	};
}

namespace EConstraintTransform
{
	enum Type:int
	{
		Absolute = 0x0,
		Relative = 0x1
	};
}

namespace EDinoInputAction
{
	enum Type:int
	{
		Fire = 0x0,
		Target = 0x1,
		Crouch = 0x2
	};
}

enum class OIDNAccess:int
{
	OIDN_ACCESS_READ = 0x0,
	OIDN_ACCESS_WRITE = 0x1,
	OIDN_ACCESS_READ_WRITE = 0x2,
	OIDN_ACCESS_WRITE_DISCARD = 0x3
};

enum class OIDNFormat:int
{
	OIDN_FORMAT_UNDEFINED = 0x0,
	OIDN_FORMAT_FLOAT = 0x1,
	OIDN_FORMAT_FLOAT2 = 0x2,
	OIDN_FORMAT_FLOAT3 = 0x3,
	OIDN_FORMAT_FLOAT4 = 0x4
};

enum class OIDNDeviceType:int
{
	OIDN_DEVICE_TYPE_DEFAULT = 0x0,
	OIDN_DEVICE_TYPE_CPU = 0x1
};

enum class OIDNError:int
{
	OIDN_ERROR_NONE = 0x0,
	OIDN_ERROR_UNKNOWN = 0x1,
	OIDN_ERROR_INVALID_ARGUMENT = 0x2,
	OIDN_ERROR_INVALID_OPERATION = 0x3,
	OIDN_ERROR_OUT_OF_MEMORY = 0x4,
	OIDN_ERROR_UNSUPPORTED_HARDWARE = 0x5,
	OIDN_ERROR_CANCELLED = 0x6
};

enum class EDenoiseMode:int
{
	OFF = 0x0,
	DEFAULT = 0x1,
	CLEAN_AUX = 0x2,
	NO_AOVS = 0x3
};

namespace ELeaderboardOrdering
{
	enum Type:int
	{
		Ascending = 0x0,
		Descending = 0x1
	};
}

enum class EOS_ELeaderboardAggregation:int
{
	EOS_LA_Min = 0x0,
	EOS_LA_Max = 0x1,
	EOS_LA_Sum = 0x2,
	EOS_LA_Latest = 0x3
};

namespace EInventorySortType
{
	enum Type:int
	{
		Default = 0x0,
		Alphabetical_Asc = 0x1,
		Alphabetical_Dsc = 0x2,
		Weight_Asc = 0x3,
		Weight_Dsc = 0x4,
		Type_Asc = 0x5,
		Type_Dsc = 0x6,
		SpoilTimer_Asc = 0x7,
		SpoilTimer_Dsc = 0x8,
		InvSortTypeNum = 0x9
	};
}

enum class ECursorAction:int
{
	MoveCursor = 0x0,
	SelectText = 0x1
};

enum class ECursorMoveMethod:int
{
	Cardinal = 0x0,
	ScreenPosition = 0x1
};

enum class ESerializedPendingFriendRequestMode:unsigned char
{
	OutboundPendingSend = 0x0,
	OutboundPendingReceive = 0x1,
	OutboundPendingResponse = 0x2,
	InboundPendingResponse = 0x3,
	InboundPendingSendAcceptance = 0x4,
	InboundPendingSendRejection = 0x5,
	OutboundPendingSendDeletion = 0x6
};

enum class EArchiveReplaceObjectFlags:int
{
	None = 0x0,
	NullPrivateRefs = 0x1,
	IgnoreOuterRef = 0x2,
	IgnoreArchetypeRef = 0x4,
	DelayStart = 0x8,
	IncludeClassGeneratedByRef = 0x10,
	TrackReplacedReferences = 0x20
};

enum class EBinkMediaPlayerBinkSoundTrack:int
{
	BMASM_Bink_Sound_None = 0x0,
	BMASM_Bink_Sound_Simple = 0x1,
	BMASM_Bink_Sound_LanguageOverride = 0x2,
	BMASM_Bink_Sound_51 = 0x3,
	BMASM_Bink_Sound_51LanguageOverride = 0x4,
	BMASM_Bink_Sound_71 = 0x5,
	BMASM_Bink_Sound_71LanguageOverride = 0x6,
	BMASM_Bink_Sound_MAX = 0x7
};

enum class EMediaSoundChannels:int
{
	Mono = 0x0,
	Stereo = 0x1,
	Surround = 0x2
};

enum class EMediaSoundComponentFFTSize:unsigned char
{
	Min_64 = 0x0,
	Small_256 = 0x1,
	Medium_512 = 0x2,
	Large_1024 = 0x3
};

enum class EMediaEvent:int
{
	MediaBuffering = 0x0,
	MediaClosed = 0x1,
	MediaConnecting = 0x2,
	MediaOpened = 0x3,
	MediaOpenFailed = 0x4,
	PlaybackEndReached = 0x5,
	PlaybackResumed = 0x6,
	PlaybackSuspended = 0x7,
	SeekCompleted = 0x8,
	TracksChanged = 0x9,
	MetadataChanged = 0xA,
	Internal_Start = 0xB,
	Internal_PurgeVideoSamplesHint = 0xB,
	Internal_ResetForDiscontinuity = 0xC,
	Internal_RenderClockStart = 0xD,
	Internal_RenderClockStop = 0xE,
	Internal_VideoSamplesAvailable = 0xF,
	Internal_VideoSamplesUnavailable = 0x10,
	Internal_AudioSamplesAvailable = 0x11,
	Internal_AudioSamplesUnavailable = 0x12
};

enum class EHapticEffectType:int
{
	HET_MenuTick = 0x0,
	HET_MenuSelection = 0x1,
	HET_RadialTick = 0x2,
	HET_RadialSelection = 0x3,
	HET_MenuAnalogSweep = 0x4,
	HET_StatLevelUp = 0x5,
	HET_StructureFail = 0x6,
	HET_StructureSuccess = 0x7,
	HET_StructureDestroy = 0x8,
	HET_StructureFlip = 0x9,
	HET_ResourceGather = 0xA,
	HET_EnterWater = 0xB,
	HET_StartFlying = 0xC,
	HET_Explosion = 0xD,
	HET_BossTeleport = 0xE,
	HET_BigDinoWalking = 0xF,
	HET_MAX = 0x10
};

namespace EMissionRelatedPropertyUsage
{
	enum Type:int
	{
		Prefix = 0x0,
		Suffix = 0x1,
		Description = 0x2
	};
}

enum class ControlDirection:int
{
	NoDirection = 0x0,
	Up = 0x1,
	Down = 0x2,
	Left = 0x3,
	Right = 0x4
};

enum class HighlightStartingPoint:int
{
	TopLeft = 0x0,
	Center = 0x1
};

enum class EVoiceChatResult:int
{
	Success = 0x0,
	InvalidState = 0x1,
	NotInitialized = 0x2,
	NotConnected = 0x3,
	NotLoggedIn = 0x4,
	NotPermitted = 0x5,
	Throttled = 0x6,
	InvalidArgument = 0x7,
	CredentialsInvalid = 0x8,
	CredentialsExpired = 0x9,
	ClientTimeout = 0xA,
	ServerTimeout = 0xB,
	DnsFailure = 0xC,
	ConnectionFailure = 0xD,
	ImplementationError = 0xE
};

enum class EVoiceChatChannelType:int
{
	NonPositional = 0x0,
	Positional = 0x1,
	Echo = 0x2
};

enum class EVoiceChatTransmitMode:int
{
	None = 0x0,
	All = 0x1,
	Channel = 0x2
};

enum class EVoiceChatAttenuationModel:int
{
	None = 0x0,
	InverseByDistance = 0x1,
	LinearByDistance = 0x2,
	ExponentialByDistance = 0x3
};

enum class EBiomeZone:unsigned char
{
	None = 0x0,
	Beach = 0x1,
	Canyon = 0x2,
	River = 0x3,
	Grassland = 0x4,
	Swamp = 0x5,
	Jungle = 0x6,
	RedwoodForest = 0x7,
	Mountain = 0x8,
	Snow = 0x9,
	Ocean = 0xA,
	Lava = 0xB,
	Surface = 0xC,
	FertileChamber = 0xD,
	BioluminescentChamber = 0xE,
	ElementChamber = 0xF,
	Wasteland = 0x10
};

enum class EBlackboardNotificationResult:unsigned char
{
	RemoveObserver = 0x0,
	ContinueObserving = 0x1
};

enum class EWidgetDesignFlags:unsigned char
{
	None = 0x0,
	Designing = 0x1,
	ShowOutline = 0x2,
	ExecutePreConstruct = 0x4,
	Previewing = 0x8
};

namespace EBTNodeResult
{
	enum Type:int
	{
		Succeeded = 0x0,
		Failed = 0x1,
		Aborted = 0x2,
		InProgress = 0x3
	};
}

namespace EBTDescriptionVerbosity
{
	enum Type:int
	{
		Basic = 0x0,
		Detailed = 0x1
	};
}

namespace EQuitPreference
{
	enum Type:int
	{
		Quit = 0x0,
		Background = 0x1
	};
}

enum class EBinkMediaPlayerBinkDrawStyle:int
{
	BMASM_Bink_DS_RenderToTexture = 0x0,
	BMASM_Bink_DS_OverlayFillScreenWithAspectRatio = 0x1,
	BMASM_Bink_DS_OverlayOriginalMovieSize = 0x2,
	BMASM_Bink_DS_OverlayFillScreen = 0x3,
	BMASM_Bink_DS_OverlaySpecificDestinationRectangle = 0x4,
	BMASM_Bink_DS_MAX = 0x5
};

namespace EBabyCuddleType
{
	enum Type:int
	{
		PET = 0x0,
		FOOD = 0x1,
		WALK = 0x2,
		MAX = 0x3
	};
}

namespace EMissionAlertType
{
	enum Type:int
	{
		Positive = 0x0,
		Neutral = 0x1,
		Negative = 0x2
	};
}

namespace EEngramGroup
{
	enum Type:int
	{
		ARK_PRIME = 0x2,
		ARK_SCORCHEDEARTH = 0x4,
		ARK_TEK = 0x8,
		ARK_UNLEARNED = 0x10,
		ARK_ABERRATION = 0x20,
		ARK_EXTINCTION = 0x40,
		ARK_GENESIS = 0x80,
		ARK_GEN2 = 0x81,
		MAX = 0x82
	};
}

namespace ENotificationMode
{
	enum Type:int
	{
		DEFAULT = 0x0,
		MINIMAL = 0x1,
		COMBAT = 0x2,
		OFF = 0x3
	};
}

enum class ShowHarvestingElementOption:unsigned int
{
	NoMulticastShowInstance = 0x0,
	MulticastShowInstance = 0x1
};

namespace EPlayerDynamicMaterialType
{
	enum Type:int
	{
		Float = 0x0,
		Vector = 0x1,
		Color = 0x2
	};
}

namespace EPrimalItemMessage
{
	enum Type:int
	{
		Broken = 0x0,
		Repaired = 0x1,
		MAX = 0x2
	};
}

enum class EUsdDuplicateType:unsigned char
{
	FlattenComposedPrim = 0x0,
	SingleLayerSpecs = 0x1,
	AllLocalLayerSpecs = 0x2
};

enum class EUsdUpAxis:unsigned char
{
	YAxis = 0x0,
	ZAxis = 0x1
};

namespace EEasingFunc
{
	enum Type:int
	{
		Linear = 0x0,
		Step = 0x1,
		SinusoidalIn = 0x2,
		SinusoidalOut = 0x3,
		SinusoidalInOut = 0x4,
		EaseIn = 0x5,
		EaseOut = 0x6,
		EaseInOut = 0x7,
		ExpoIn = 0x8,
		ExpoOut = 0x9,
		ExpoInOut = 0xA,
		CircularIn = 0xB,
		CircularOut = 0xC,
		CircularInOut = 0xD
	};
}

enum class EParticleEventType:int
{
	EPET_Any = 0x0,
	EPET_Spawn = 0x1,
	EPET_Death = 0x2,
	EPET_Collision = 0x3,
	EPET_Burst = 0x4,
	EPET_Blueprint = 0x5,
	EPET_MAX = 0x6
};

namespace ENavigationBuildLock
{
	enum Type:int
	{
		NoUpdateInEditor = 0x2,
		NoUpdateInPIE = 0x4,
		InitialLock = 0x8,
		Custom = 0x10
	};
}

namespace FGeometryObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		CompressGeometryCache = 0x1,
		DynamicMeshVertexLayoutChange = 0x2,
		ExplicitMotionVectors = 0x3,
		VersionPlusOne = 0x4,
		LatestVersion = 0x3
	};
}

enum class ECDOArrayModificationType:unsigned char
{
	MODIFY = 0x0,
	ADD = 0x1,
	REMOVE = 0x2,
	REPLACE_TARRAY = 0x3
};

namespace EPlayerConfigPlayerDynamicMaterialSliderTypes
{
	enum Type:int
	{
		BODYFAT_CHEST = 0x0,
		BODYFAT_BELLY = 0x1,
		BODYFAT_BUTT = 0x2,
		BODYMUSCLE_CHEST_PECTORALS = 0x3,
		BODYMUSCLE_CHEST_ABS = 0x4,
		BODYMUSCLE_CHEST_OBLIQUES = 0x5,
		BODYMUSCLE_BACK_NECK = 0x6,
		BODYMUSCLE_BACK_TRAPEZIES = 0x7,
		BODYMUSCLE_BACK_BACK = 0x8,
		BODYMUSCLE_ARMS_1_DELTOID = 0x9,
		BODYMUSCLE_ARMS_1_TRICEP = 0xA,
		BODYMUSCLE_ARMS_1_BICEP = 0xB,
		BODYMUSCLE_ARMS_2_FOREARM = 0xC,
		BODYMUSCLE_LEGS_1_LATS = 0xD,
		BODYMUSCLE_LEGS_1_GLUTES = 0xE,
		BODYMUSCLE_LEGS_1_HAMSTRINGS = 0xF,
		BODYMUSCLE_LEGS_2_ADDUCTORS = 0x10,
		BODYMUSCLE_LEGS_2_QUADS = 0x11,
		BODYMUSCLE_LEGS_2_CALVES = 0x12,
		BODYMUSCLE_OVERALL = 0x13,
		BODYFATOVERALL = 0x14,
		MAX = 0x15
	};
}

enum class UCharProperty:int
{
	UCHAR_ALPHABETIC = 0x0,
	UCHAR_BINARY_START = 0x0,
	UCHAR_ASCII_HEX_DIGIT = 0x1,
	UCHAR_BIDI_CONTROL = 0x2,
	UCHAR_BIDI_MIRRORED = 0x3,
	UCHAR_DASH = 0x4,
	UCHAR_DEFAULT_IGNORABLE_CODE_POINT = 0x5,
	UCHAR_DEPRECATED = 0x6,
	UCHAR_DIACRITIC = 0x7,
	UCHAR_EXTENDER = 0x8,
	UCHAR_FULL_COMPOSITION_EXCLUSION = 0x9,
	UCHAR_GRAPHEME_BASE = 0xA,
	UCHAR_GRAPHEME_EXTEND = 0xB,
	UCHAR_GRAPHEME_LINK = 0xC,
	UCHAR_HEX_DIGIT = 0xD,
	UCHAR_HYPHEN = 0xE,
	UCHAR_ID_CONTINUE = 0xF,
	UCHAR_ID_START = 0x10,
	UCHAR_IDEOGRAPHIC = 0x11,
	UCHAR_IDS_BINARY_OPERATOR = 0x12,
	UCHAR_IDS_TRINARY_OPERATOR = 0x13,
	UCHAR_JOIN_CONTROL = 0x14,
	UCHAR_LOGICAL_ORDER_EXCEPTION = 0x15,
	UCHAR_LOWERCASE = 0x16,
	UCHAR_MATH = 0x17,
	UCHAR_NONCHARACTER_CODE_POINT = 0x18,
	UCHAR_QUOTATION_MARK = 0x19,
	UCHAR_RADICAL = 0x1A,
	UCHAR_SOFT_DOTTED = 0x1B,
	UCHAR_TERMINAL_PUNCTUATION = 0x1C,
	UCHAR_UNIFIED_IDEOGRAPH = 0x1D,
	UCHAR_UPPERCASE = 0x1E,
	UCHAR_WHITE_SPACE = 0x1F,
	UCHAR_XID_CONTINUE = 0x20,
	UCHAR_XID_START = 0x21,
	UCHAR_CASE_SENSITIVE = 0x22,
	UCHAR_S_TERM = 0x23,
	UCHAR_VARIATION_SELECTOR = 0x24,
	UCHAR_NFD_INERT = 0x25,
	UCHAR_NFKD_INERT = 0x26,
	UCHAR_NFC_INERT = 0x27,
	UCHAR_NFKC_INERT = 0x28,
	UCHAR_SEGMENT_STARTER = 0x29,
	UCHAR_PATTERN_SYNTAX = 0x2A,
	UCHAR_PATTERN_WHITE_SPACE = 0x2B,
	UCHAR_POSIX_ALNUM = 0x2C,
	UCHAR_POSIX_BLANK = 0x2D,
	UCHAR_POSIX_GRAPH = 0x2E,
	UCHAR_POSIX_PRINT = 0x2F,
	UCHAR_POSIX_XDIGIT = 0x30,
	UCHAR_CASED = 0x31,
	UCHAR_CASE_IGNORABLE = 0x32,
	UCHAR_CHANGES_WHEN_LOWERCASED = 0x33,
	UCHAR_CHANGES_WHEN_UPPERCASED = 0x34,
	UCHAR_CHANGES_WHEN_TITLECASED = 0x35,
	UCHAR_CHANGES_WHEN_CASEFOLDED = 0x36,
	UCHAR_CHANGES_WHEN_CASEMAPPED = 0x37,
	UCHAR_CHANGES_WHEN_NFKC_CASEFOLDED = 0x38,
	UCHAR_EMOJI = 0x39,
	UCHAR_EMOJI_PRESENTATION = 0x3A,
	UCHAR_EMOJI_MODIFIER = 0x3B,
	UCHAR_EMOJI_MODIFIER_BASE = 0x3C,
	UCHAR_EMOJI_COMPONENT = 0x3D,
	UCHAR_REGIONAL_INDICATOR = 0x3E,
	UCHAR_PREPENDED_CONCATENATION_MARK = 0x3F,
	UCHAR_EXTENDED_PICTOGRAPHIC = 0x40,
	UCHAR_BINARY_LIMIT = 0x41,
	UCHAR_BIDI_CLASS = 0x1000,
	UCHAR_INT_START = 0x1000,
	UCHAR_BLOCK = 0x1001,
	UCHAR_CANONICAL_COMBINING_CLASS = 0x1002,
	UCHAR_DECOMPOSITION_TYPE = 0x1003,
	UCHAR_EAST_ASIAN_WIDTH = 0x1004,
	UCHAR_GENERAL_CATEGORY = 0x1005,
	UCHAR_JOINING_GROUP = 0x1006,
	UCHAR_JOINING_TYPE = 0x1007,
	UCHAR_LINE_BREAK = 0x1008,
	UCHAR_NUMERIC_TYPE = 0x1009,
	UCHAR_SCRIPT = 0x100A,
	UCHAR_HANGUL_SYLLABLE_TYPE = 0x100B,
	UCHAR_NFD_QUICK_CHECK = 0x100C,
	UCHAR_NFKD_QUICK_CHECK = 0x100D,
	UCHAR_NFC_QUICK_CHECK = 0x100E,
	UCHAR_NFKC_QUICK_CHECK = 0x100F,
	UCHAR_LEAD_CANONICAL_COMBINING_CLASS = 0x1010,
	UCHAR_TRAIL_CANONICAL_COMBINING_CLASS = 0x1011,
	UCHAR_GRAPHEME_CLUSTER_BREAK = 0x1012,
	UCHAR_SENTENCE_BREAK = 0x1013,
	UCHAR_WORD_BREAK = 0x1014,
	UCHAR_BIDI_PAIRED_BRACKET_TYPE = 0x1015,
	UCHAR_INDIC_POSITIONAL_CATEGORY = 0x1016,
	UCHAR_INDIC_SYLLABIC_CATEGORY = 0x1017,
	UCHAR_VERTICAL_ORIENTATION = 0x1018,
	UCHAR_INT_LIMIT = 0x1019,
	UCHAR_GENERAL_CATEGORY_MASK = 0x2000,
	UCHAR_MASK_START = 0x2000,
	UCHAR_MASK_LIMIT = 0x2001,
	UCHAR_NUMERIC_VALUE = 0x3000,
	UCHAR_DOUBLE_START = 0x3000,
	UCHAR_DOUBLE_LIMIT = 0x3001,
	UCHAR_AGE = 0x4000,
	UCHAR_STRING_START = 0x4000,
	UCHAR_BIDI_MIRRORING_GLYPH = 0x4001,
	UCHAR_CASE_FOLDING = 0x4002,
	UCHAR_ISO_COMMENT = 0x4003,
	UCHAR_LOWERCASE_MAPPING = 0x4004,
	UCHAR_NAME = 0x4005,
	UCHAR_SIMPLE_CASE_FOLDING = 0x4006,
	UCHAR_SIMPLE_LOWERCASE_MAPPING = 0x4007,
	UCHAR_SIMPLE_TITLECASE_MAPPING = 0x4008,
	UCHAR_SIMPLE_UPPERCASE_MAPPING = 0x4009,
	UCHAR_TITLECASE_MAPPING = 0x400A,
	UCHAR_UNICODE_1_NAME = 0x400B,
	UCHAR_UPPERCASE_MAPPING = 0x400C,
	UCHAR_BIDI_PAIRED_BRACKET = 0x400D,
	UCHAR_STRING_LIMIT = 0x400E,
	UCHAR_SCRIPT_EXTENSIONS = 0x7000,
	UCHAR_OTHER_PROPERTY_START = 0x7000,
	UCHAR_OTHER_PROPERTY_LIMIT = 0x7001,
	UCHAR_INVALID_CODE = 0xFF
};

enum class UColAttributeValue:int
{
	UCOL_DEFAULT = 0xFF,
	UCOL_PRIMARY = 0x0,
	UCOL_SECONDARY = 0x1,
	UCOL_TERTIARY = 0x2,
	UCOL_DEFAULT_STRENGTH = 0x2,
	UCOL_CE_STRENGTH_LIMIT = 0x3,
	UCOL_QUATERNARY = 0x3,
	UCOL_IDENTICAL = 0xF,
	UCOL_STRENGTH_LIMIT = 0x10,
	UCOL_OFF = 0x10,
	UCOL_ON = 0x11,
	UCOL_SHIFTED = 0x14,
	UCOL_NON_IGNORABLE = 0x15,
	UCOL_LOWER_FIRST = 0x18,
	UCOL_UPPER_FIRST = 0x19,
	UCOL_ATTRIBUTE_VALUE_COUNT = 0x1A
};

enum class UScriptCode:int
{
	USCRIPT_INVALID_CODE = 0xFF,
	USCRIPT_COMMON = 0x0,
	USCRIPT_INHERITED = 0x1,
	USCRIPT_ARABIC = 0x2,
	USCRIPT_ARMENIAN = 0x3,
	USCRIPT_BENGALI = 0x4,
	USCRIPT_BOPOMOFO = 0x5,
	USCRIPT_CHEROKEE = 0x6,
	USCRIPT_COPTIC = 0x7,
	USCRIPT_CYRILLIC = 0x8,
	USCRIPT_DESERET = 0x9,
	USCRIPT_DEVANAGARI = 0xA,
	USCRIPT_ETHIOPIC = 0xB,
	USCRIPT_GEORGIAN = 0xC,
	USCRIPT_GOTHIC = 0xD,
	USCRIPT_GREEK = 0xE,
	USCRIPT_GUJARATI = 0xF,
	USCRIPT_GURMUKHI = 0x10,
	USCRIPT_HAN = 0x11,
	USCRIPT_HANGUL = 0x12,
	USCRIPT_HEBREW = 0x13,
	USCRIPT_HIRAGANA = 0x14,
	USCRIPT_KANNADA = 0x15,
	USCRIPT_KATAKANA = 0x16,
	USCRIPT_KHMER = 0x17,
	USCRIPT_LAO = 0x18,
	USCRIPT_LATIN = 0x19,
	USCRIPT_MALAYALAM = 0x1A,
	USCRIPT_MONGOLIAN = 0x1B,
	USCRIPT_MYANMAR = 0x1C,
	USCRIPT_OGHAM = 0x1D,
	USCRIPT_OLD_ITALIC = 0x1E,
	USCRIPT_ORIYA = 0x1F,
	USCRIPT_RUNIC = 0x20,
	USCRIPT_SINHALA = 0x21,
	USCRIPT_SYRIAC = 0x22,
	USCRIPT_TAMIL = 0x23,
	USCRIPT_TELUGU = 0x24,
	USCRIPT_THAANA = 0x25,
	USCRIPT_THAI = 0x26,
	USCRIPT_TIBETAN = 0x27,
	USCRIPT_CANADIAN_ABORIGINAL = 0x28,
	USCRIPT_UCAS = 0x28,
	USCRIPT_YI = 0x29,
	USCRIPT_TAGALOG = 0x2A,
	USCRIPT_HANUNOO = 0x2B,
	USCRIPT_BUHID = 0x2C,
	USCRIPT_TAGBANWA = 0x2D,
	USCRIPT_BRAILLE = 0x2E,
	USCRIPT_CYPRIOT = 0x2F,
	USCRIPT_LIMBU = 0x30,
	USCRIPT_LINEAR_B = 0x31,
	USCRIPT_OSMANYA = 0x32,
	USCRIPT_SHAVIAN = 0x33,
	USCRIPT_TAI_LE = 0x34,
	USCRIPT_UGARITIC = 0x35,
	USCRIPT_KATAKANA_OR_HIRAGANA = 0x36,
	USCRIPT_BUGINESE = 0x37,
	USCRIPT_GLAGOLITIC = 0x38,
	USCRIPT_KHAROSHTHI = 0x39,
	USCRIPT_SYLOTI_NAGRI = 0x3A,
	USCRIPT_NEW_TAI_LUE = 0x3B,
	USCRIPT_TIFINAGH = 0x3C,
	USCRIPT_OLD_PERSIAN = 0x3D,
	USCRIPT_BALINESE = 0x3E,
	USCRIPT_BATAK = 0x3F,
	USCRIPT_BLISSYMBOLS = 0x40,
	USCRIPT_BRAHMI = 0x41,
	USCRIPT_CHAM = 0x42,
	USCRIPT_CIRTH = 0x43,
	USCRIPT_OLD_CHURCH_SLAVONIC_CYRILLIC = 0x44,
	USCRIPT_DEMOTIC_EGYPTIAN = 0x45,
	USCRIPT_HIERATIC_EGYPTIAN = 0x46,
	USCRIPT_EGYPTIAN_HIEROGLYPHS = 0x47,
	USCRIPT_KHUTSURI = 0x48,
	USCRIPT_SIMPLIFIED_HAN = 0x49,
	USCRIPT_TRADITIONAL_HAN = 0x4A,
	USCRIPT_PAHAWH_HMONG = 0x4B,
	USCRIPT_OLD_HUNGARIAN = 0x4C,
	USCRIPT_HARAPPAN_INDUS = 0x4D,
	USCRIPT_JAVANESE = 0x4E,
	USCRIPT_KAYAH_LI = 0x4F,
	USCRIPT_LATIN_FRAKTUR = 0x50,
	USCRIPT_LATIN_GAELIC = 0x51,
	USCRIPT_LEPCHA = 0x52,
	USCRIPT_LINEAR_A = 0x53,
	USCRIPT_MANDAIC = 0x54,
	USCRIPT_MANDAEAN = 0x54,
	USCRIPT_MAYAN_HIEROGLYPHS = 0x55,
	USCRIPT_MEROITIC_HIEROGLYPHS = 0x56,
	USCRIPT_MEROITIC = 0x56,
	USCRIPT_NKO = 0x57,
	USCRIPT_ORKHON = 0x58,
	USCRIPT_OLD_PERMIC = 0x59,
	USCRIPT_PHAGS_PA = 0x5A,
	USCRIPT_PHOENICIAN = 0x5B,
	USCRIPT_MIAO = 0x5C,
	USCRIPT_PHONETIC_POLLARD = 0x5C,
	USCRIPT_RONGORONGO = 0x5D,
	USCRIPT_SARATI = 0x5E,
	USCRIPT_ESTRANGELO_SYRIAC = 0x5F,
	USCRIPT_WESTERN_SYRIAC = 0x60,
	USCRIPT_EASTERN_SYRIAC = 0x61,
	USCRIPT_TENGWAR = 0x62,
	USCRIPT_VAI = 0x63,
	USCRIPT_VISIBLE_SPEECH = 0x64,
	USCRIPT_CUNEIFORM = 0x65,
	USCRIPT_UNWRITTEN_LANGUAGES = 0x66,
	USCRIPT_UNKNOWN = 0x67,
	USCRIPT_CARIAN = 0x68,
	USCRIPT_JAPANESE = 0x69,
	USCRIPT_LANNA = 0x6A,
	USCRIPT_LYCIAN = 0x6B,
	USCRIPT_LYDIAN = 0x6C,
	USCRIPT_OL_CHIKI = 0x6D,
	USCRIPT_REJANG = 0x6E,
	USCRIPT_SAURASHTRA = 0x6F,
	USCRIPT_SIGN_WRITING = 0x70,
	USCRIPT_SUNDANESE = 0x71,
	USCRIPT_MOON = 0x72,
	USCRIPT_MEITEI_MAYEK = 0x73,
	USCRIPT_IMPERIAL_ARAMAIC = 0x74,
	USCRIPT_AVESTAN = 0x75,
	USCRIPT_CHAKMA = 0x76,
	USCRIPT_KOREAN = 0x77,
	USCRIPT_KAITHI = 0x78,
	USCRIPT_MANICHAEAN = 0x79,
	USCRIPT_INSCRIPTIONAL_PAHLAVI = 0x7A,
	USCRIPT_PSALTER_PAHLAVI = 0x7B,
	USCRIPT_BOOK_PAHLAVI = 0x7C,
	USCRIPT_INSCRIPTIONAL_PARTHIAN = 0x7D,
	USCRIPT_SAMARITAN = 0x7E,
	USCRIPT_TAI_VIET = 0x7F,
	USCRIPT_MATHEMATICAL_NOTATION = 0x80,
	USCRIPT_SYMBOLS = 0x81,
	USCRIPT_BAMUM = 0x82,
	USCRIPT_LISU = 0x83,
	USCRIPT_NAKHI_GEBA = 0x84,
	USCRIPT_OLD_SOUTH_ARABIAN = 0x85,
	USCRIPT_BASSA_VAH = 0x86,
	USCRIPT_DUPLOYAN = 0x87,
	USCRIPT_DUPLOYAN_SHORTAND = 0x87,
	USCRIPT_ELBASAN = 0x88,
	USCRIPT_GRANTHA = 0x89,
	USCRIPT_KPELLE = 0x8A,
	USCRIPT_LOMA = 0x8B,
	USCRIPT_MENDE = 0x8C,
	USCRIPT_MEROITIC_CURSIVE = 0x8D,
	USCRIPT_OLD_NORTH_ARABIAN = 0x8E,
	USCRIPT_NABATAEAN = 0x8F,
	USCRIPT_PALMYRENE = 0x90,
	USCRIPT_KHUDAWADI = 0x91,
	USCRIPT_SINDHI = 0x91,
	USCRIPT_WARANG_CITI = 0x92,
	USCRIPT_AFAKA = 0x93,
	USCRIPT_JURCHEN = 0x94,
	USCRIPT_MRO = 0x95,
	USCRIPT_NUSHU = 0x96,
	USCRIPT_SHARADA = 0x97,
	USCRIPT_SORA_SOMPENG = 0x98,
	USCRIPT_TAKRI = 0x99,
	USCRIPT_TANGUT = 0x9A,
	USCRIPT_WOLEAI = 0x9B,
	USCRIPT_ANATOLIAN_HIEROGLYPHS = 0x9C,
	USCRIPT_KHOJKI = 0x9D,
	USCRIPT_TIRHUTA = 0x9E,
	USCRIPT_CAUCASIAN_ALBANIAN = 0x9F,
	USCRIPT_MAHAJANI = 0xA0,
	USCRIPT_AHOM = 0xA1,
	USCRIPT_HATRAN = 0xA2,
	USCRIPT_MODI = 0xA3,
	USCRIPT_MULTANI = 0xA4,
	USCRIPT_PAU_CIN_HAU = 0xA5,
	USCRIPT_SIDDHAM = 0xA6,
	USCRIPT_ADLAM = 0xA7,
	USCRIPT_BHAIKSUKI = 0xA8,
	USCRIPT_MARCHEN = 0xA9,
	USCRIPT_NEWA = 0xAA,
	USCRIPT_OSAGE = 0xAB,
	USCRIPT_HAN_WITH_BOPOMOFO = 0xAC,
	USCRIPT_JAMO = 0xAD,
	USCRIPT_SYMBOLS_EMOJI = 0xAE,
	USCRIPT_MASARAM_GONDI = 0xAF,
	USCRIPT_SOYOMBO = 0xB0,
	USCRIPT_ZANABAZAR_SQUARE = 0xB1,
	USCRIPT_DOGRA = 0xB2,
	USCRIPT_GUNJALA_GONDI = 0xB3,
	USCRIPT_MAKASAR = 0xB4,
	USCRIPT_MEDEFAIDRIN = 0xB5,
	USCRIPT_HANIFI_ROHINGYA = 0xB6,
	USCRIPT_SOGDIAN = 0xB7,
	USCRIPT_OLD_SOGDIAN = 0xB8,
	USCRIPT_ELYMAIC = 0xB9,
	USCRIPT_NYIAKENG_PUACHUE_HMONG = 0xBA,
	USCRIPT_NANDINAGARI = 0xBB,
	USCRIPT_WANCHO = 0xBC,
	USCRIPT_CODE_LIMIT = 0xBD
};

enum class UCharNameChoice:int
{
	U_UNICODE_CHAR_NAME = 0x0,
	U_UNICODE_10_CHAR_NAME = 0x1,
	U_EXTENDED_CHAR_NAME = 0x2,
	U_CHAR_NAME_ALIAS = 0x3,
	U_CHAR_NAME_CHOICE_COUNT = 0x4
};

enum class UJoiningGroup:int
{
	U_JG_NO_JOINING_GROUP = 0x0,
	U_JG_AIN = 0x1,
	U_JG_ALAPH = 0x2,
	U_JG_ALEF = 0x3,
	U_JG_BEH = 0x4,
	U_JG_BETH = 0x5,
	U_JG_DAL = 0x6,
	U_JG_DALATH_RISH = 0x7,
	U_JG_E = 0x8,
	U_JG_FEH = 0x9,
	U_JG_FINAL_SEMKATH = 0xA,
	U_JG_GAF = 0xB,
	U_JG_GAMAL = 0xC,
	U_JG_HAH = 0xD,
	U_JG_TEH_MARBUTA_GOAL = 0xE,
	U_JG_HAMZA_ON_HEH_GOAL = 0xE,
	U_JG_HE = 0xF,
	U_JG_HEH = 0x10,
	U_JG_HEH_GOAL = 0x11,
	U_JG_HETH = 0x12,
	U_JG_KAF = 0x13,
	U_JG_KAPH = 0x14,
	U_JG_KNOTTED_HEH = 0x15,
	U_JG_LAM = 0x16,
	U_JG_LAMADH = 0x17,
	U_JG_MEEM = 0x18,
	U_JG_MIM = 0x19,
	U_JG_NOON = 0x1A,
	U_JG_NUN = 0x1B,
	U_JG_PE = 0x1C,
	U_JG_QAF = 0x1D,
	U_JG_QAPH = 0x1E,
	U_JG_REH = 0x1F,
	U_JG_REVERSED_PE = 0x20,
	U_JG_SAD = 0x21,
	U_JG_SADHE = 0x22,
	U_JG_SEEN = 0x23,
	U_JG_SEMKATH = 0x24,
	U_JG_SHIN = 0x25,
	U_JG_SWASH_KAF = 0x26,
	U_JG_SYRIAC_WAW = 0x27,
	U_JG_TAH = 0x28,
	U_JG_TAW = 0x29,
	U_JG_TEH_MARBUTA = 0x2A,
	U_JG_TETH = 0x2B,
	U_JG_WAW = 0x2C,
	U_JG_YEH = 0x2D,
	U_JG_YEH_BARREE = 0x2E,
	U_JG_YEH_WITH_TAIL = 0x2F,
	U_JG_YUDH = 0x30,
	U_JG_YUDH_HE = 0x31,
	U_JG_ZAIN = 0x32,
	U_JG_FE = 0x33,
	U_JG_KHAPH = 0x34,
	U_JG_ZHAIN = 0x35,
	U_JG_BURUSHASKI_YEH_BARREE = 0x36,
	U_JG_FARSI_YEH = 0x37,
	U_JG_NYA = 0x38,
	U_JG_ROHINGYA_YEH = 0x39,
	U_JG_MANICHAEAN_ALEPH = 0x3A,
	U_JG_MANICHAEAN_AYIN = 0x3B,
	U_JG_MANICHAEAN_BETH = 0x3C,
	U_JG_MANICHAEAN_DALETH = 0x3D,
	U_JG_MANICHAEAN_DHAMEDH = 0x3E,
	U_JG_MANICHAEAN_FIVE = 0x3F,
	U_JG_MANICHAEAN_GIMEL = 0x40,
	U_JG_MANICHAEAN_HETH = 0x41,
	U_JG_MANICHAEAN_HUNDRED = 0x42,
	U_JG_MANICHAEAN_KAPH = 0x43,
	U_JG_MANICHAEAN_LAMEDH = 0x44,
	U_JG_MANICHAEAN_MEM = 0x45,
	U_JG_MANICHAEAN_NUN = 0x46,
	U_JG_MANICHAEAN_ONE = 0x47,
	U_JG_MANICHAEAN_PE = 0x48,
	U_JG_MANICHAEAN_QOPH = 0x49,
	U_JG_MANICHAEAN_RESH = 0x4A,
	U_JG_MANICHAEAN_SADHE = 0x4B,
	U_JG_MANICHAEAN_SAMEKH = 0x4C,
	U_JG_MANICHAEAN_TAW = 0x4D,
	U_JG_MANICHAEAN_TEN = 0x4E,
	U_JG_MANICHAEAN_TETH = 0x4F,
	U_JG_MANICHAEAN_THAMEDH = 0x50,
	U_JG_MANICHAEAN_TWENTY = 0x51,
	U_JG_MANICHAEAN_WAW = 0x52,
	U_JG_MANICHAEAN_YODH = 0x53,
	U_JG_MANICHAEAN_ZAYIN = 0x54,
	U_JG_STRAIGHT_WAW = 0x55,
	U_JG_AFRICAN_FEH = 0x56,
	U_JG_AFRICAN_NOON = 0x57,
	U_JG_AFRICAN_QAF = 0x58,
	U_JG_MALAYALAM_BHA = 0x59,
	U_JG_MALAYALAM_JA = 0x5A,
	U_JG_MALAYALAM_LLA = 0x5B,
	U_JG_MALAYALAM_LLLA = 0x5C,
	U_JG_MALAYALAM_NGA = 0x5D,
	U_JG_MALAYALAM_NNA = 0x5E,
	U_JG_MALAYALAM_NNNA = 0x5F,
	U_JG_MALAYALAM_NYA = 0x60,
	U_JG_MALAYALAM_RA = 0x61,
	U_JG_MALAYALAM_SSA = 0x62,
	U_JG_MALAYALAM_TTA = 0x63,
	U_JG_HANIFI_ROHINGYA_KINNA_YA = 0x64,
	U_JG_HANIFI_ROHINGYA_PA = 0x65,
	U_JG_COUNT = 0x66
};

enum class UNormalizationMode:int
{
	UNORM_NONE = 0x1,
	UNORM_NFD = 0x2,
	UNORM_NFKD = 0x3,
	UNORM_NFC = 0x4,
	UNORM_DEFAULT = 0x4,
	UNORM_NFKC = 0x5,
	UNORM_FCD = 0x6,
	UNORM_MODE_COUNT = 0x7
};

enum class UColAttribute:int
{
	UCOL_FRENCH_COLLATION = 0x0,
	UCOL_ALTERNATE_HANDLING = 0x1,
	UCOL_CASE_FIRST = 0x2,
	UCOL_CASE_LEVEL = 0x3,
	UCOL_NORMALIZATION_MODE = 0x4,
	UCOL_DECOMPOSITION_MODE = 0x4,
	UCOL_STRENGTH = 0x5,
	UCOL_HIRAGANA_QUATERNARY_MODE = 0x6,
	UCOL_NUMERIC_COLLATION = 0x7,
	UCOL_ATTRIBUTE_COUNT = 0x8
};

enum class UCollationResult:int
{
	UCOL_EQUAL = 0x0,
	UCOL_GREATER = 0x1,
	UCOL_LESS = 0xFF
};

enum class UErrorCode:int
{
	U_USING_FALLBACK_WARNING = 0x80,
	U_ERROR_WARNING_START = 0x80,
	U_USING_DEFAULT_WARNING = 0x81,
	U_SAFECLONE_ALLOCATED_WARNING = 0x82,
	U_STATE_OLD_WARNING = 0x83,
	U_STRING_NOT_TERMINATED_WARNING = 0x84,
	U_SORT_KEY_TOO_SHORT_WARNING = 0x85,
	U_AMBIGUOUS_ALIAS_WARNING = 0x86,
	U_DIFFERENT_UCA_VERSION = 0x87,
	U_PLUGIN_CHANGED_LEVEL_WARNING = 0x88,
	U_ERROR_WARNING_LIMIT = 0x89,
	U_ZERO_ERROR = 0x0,
	U_ILLEGAL_ARGUMENT_ERROR = 0x1,
	U_MISSING_RESOURCE_ERROR = 0x2,
	U_INVALID_FORMAT_ERROR = 0x3,
	U_FILE_ACCESS_ERROR = 0x4,
	U_INTERNAL_PROGRAM_ERROR = 0x5,
	U_MESSAGE_PARSE_ERROR = 0x6,
	U_MEMORY_ALLOCATION_ERROR = 0x7,
	U_INDEX_OUTOFBOUNDS_ERROR = 0x8,
	U_PARSE_ERROR = 0x9,
	U_INVALID_CHAR_FOUND = 0xA,
	U_TRUNCATED_CHAR_FOUND = 0xB,
	U_ILLEGAL_CHAR_FOUND = 0xC,
	U_INVALID_TABLE_FORMAT = 0xD,
	U_INVALID_TABLE_FILE = 0xE,
	U_BUFFER_OVERFLOW_ERROR = 0xF,
	U_UNSUPPORTED_ERROR = 0x10,
	U_RESOURCE_TYPE_MISMATCH = 0x11,
	U_ILLEGAL_ESCAPE_SEQUENCE = 0x12,
	U_UNSUPPORTED_ESCAPE_SEQUENCE = 0x13,
	U_NO_SPACE_AVAILABLE = 0x14,
	U_CE_NOT_FOUND_ERROR = 0x15,
	U_PRIMARY_TOO_LONG_ERROR = 0x16,
	U_STATE_TOO_OLD_ERROR = 0x17,
	U_TOO_MANY_ALIASES_ERROR = 0x18,
	U_ENUM_OUT_OF_SYNC_ERROR = 0x19,
	U_INVARIANT_CONVERSION_ERROR = 0x1A,
	U_INVALID_STATE_ERROR = 0x1B,
	U_COLLATOR_VERSION_MISMATCH = 0x1C,
	U_USELESS_COLLATOR_ERROR = 0x1D,
	U_NO_WRITE_PERMISSION = 0x1E,
	U_STANDARD_ERROR_LIMIT = 0x1F,
	U_BAD_VARIABLE_DEFINITION = 0x10000,
	U_PARSE_ERROR_START = 0x10000,
	U_MALFORMED_RULE = 0x10001,
	U_MALFORMED_SET = 0x10002,
	U_MALFORMED_SYMBOL_REFERENCE = 0x10003,
	U_MALFORMED_UNICODE_ESCAPE = 0x10004,
	U_MALFORMED_VARIABLE_DEFINITION = 0x10005,
	U_MALFORMED_VARIABLE_REFERENCE = 0x10006,
	U_MISMATCHED_SEGMENT_DELIMITERS = 0x10007,
	U_MISPLACED_ANCHOR_START = 0x10008,
	U_MISPLACED_CURSOR_OFFSET = 0x10009,
	U_MISPLACED_QUANTIFIER = 0x1000A,
	U_MISSING_OPERATOR = 0x1000B,
	U_MISSING_SEGMENT_CLOSE = 0x1000C,
	U_MULTIPLE_ANTE_CONTEXTS = 0x1000D,
	U_MULTIPLE_CURSORS = 0x1000E,
	U_MULTIPLE_POST_CONTEXTS = 0x1000F,
	U_TRAILING_BACKSLASH = 0x10010,
	U_UNDEFINED_SEGMENT_REFERENCE = 0x10011,
	U_UNDEFINED_VARIABLE = 0x10012,
	U_UNQUOTED_SPECIAL = 0x10013,
	U_UNTERMINATED_QUOTE = 0x10014,
	U_RULE_MASK_ERROR = 0x10015,
	U_MISPLACED_COMPOUND_FILTER = 0x10016,
	U_MULTIPLE_COMPOUND_FILTERS = 0x10017,
	U_INVALID_RBT_SYNTAX = 0x10018,
	U_INVALID_PROPERTY_PATTERN = 0x10019,
	U_MALFORMED_PRAGMA = 0x1001A,
	U_UNCLOSED_SEGMENT = 0x1001B,
	U_ILLEGAL_CHAR_IN_SEGMENT = 0x1001C,
	U_VARIABLE_RANGE_EXHAUSTED = 0x1001D,
	U_VARIABLE_RANGE_OVERLAP = 0x1001E,
	U_ILLEGAL_CHARACTER = 0x1001F,
	U_INTERNAL_TRANSLITERATOR_ERROR = 0x10020,
	U_INVALID_ID = 0x10021,
	U_INVALID_FUNCTION = 0x10022,
	U_PARSE_ERROR_LIMIT = 0x10023,
	U_UNEXPECTED_TOKEN = 0x10100,
	U_FMT_PARSE_ERROR_START = 0x10100,
	U_MULTIPLE_DECIMAL_SEPARATORS = 0x10101,
	U_MULTIPLE_DECIMAL_SEPERATORS = 0x10101,
	U_MULTIPLE_EXPONENTIAL_SYMBOLS = 0x10102,
	U_MALFORMED_EXPONENTIAL_PATTERN = 0x10103,
	U_MULTIPLE_PERCENT_SYMBOLS = 0x10104,
	U_MULTIPLE_PERMILL_SYMBOLS = 0x10105,
	U_MULTIPLE_PAD_SPECIFIERS = 0x10106,
	U_PATTERN_SYNTAX_ERROR = 0x10107,
	U_ILLEGAL_PAD_POSITION = 0x10108,
	U_UNMATCHED_BRACES = 0x10109,
	U_UNSUPPORTED_PROPERTY = 0x1010A,
	U_UNSUPPORTED_ATTRIBUTE = 0x1010B,
	U_ARGUMENT_TYPE_MISMATCH = 0x1010C,
	U_DUPLICATE_KEYWORD = 0x1010D,
	U_UNDEFINED_KEYWORD = 0x1010E,
	U_DEFAULT_KEYWORD_MISSING = 0x1010F,
	U_DECIMAL_NUMBER_SYNTAX_ERROR = 0x10110,
	U_FORMAT_INEXACT_ERROR = 0x10111,
	U_NUMBER_ARG_OUTOFBOUNDS_ERROR = 0x10112,
	U_NUMBER_SKELETON_SYNTAX_ERROR = 0x10113,
	U_FMT_PARSE_ERROR_LIMIT = 0x10114,
	U_BRK_INTERNAL_ERROR = 0x10200,
	U_BRK_ERROR_START = 0x10200,
	U_BRK_HEX_DIGITS_EXPECTED = 0x10201,
	U_BRK_SEMICOLON_EXPECTED = 0x10202,
	U_BRK_RULE_SYNTAX = 0x10203,
	U_BRK_UNCLOSED_SET = 0x10204,
	U_BRK_ASSIGN_ERROR = 0x10205,
	U_BRK_VARIABLE_REDFINITION = 0x10206,
	U_BRK_MISMATCHED_PAREN = 0x10207,
	U_BRK_NEW_LINE_IN_QUOTED_STRING = 0x10208,
	U_BRK_UNDEFINED_VARIABLE = 0x10209,
	U_BRK_INIT_ERROR = 0x1020A,
	U_BRK_RULE_EMPTY_SET = 0x1020B,
	U_BRK_UNRECOGNIZED_OPTION = 0x1020C,
	U_BRK_MALFORMED_RULE_TAG = 0x1020D,
	U_BRK_ERROR_LIMIT = 0x1020E,
	U_REGEX_INTERNAL_ERROR = 0x10300,
	U_REGEX_ERROR_START = 0x10300,
	U_REGEX_RULE_SYNTAX = 0x10301,
	U_REGEX_INVALID_STATE = 0x10302,
	U_REGEX_BAD_ESCAPE_SEQUENCE = 0x10303,
	U_REGEX_PROPERTY_SYNTAX = 0x10304,
	U_REGEX_UNIMPLEMENTED = 0x10305,
	U_REGEX_MISMATCHED_PAREN = 0x10306,
	U_REGEX_NUMBER_TOO_BIG = 0x10307,
	U_REGEX_BAD_INTERVAL = 0x10308,
	U_REGEX_MAX_LT_MIN = 0x10309,
	U_REGEX_INVALID_BACK_REF = 0x1030A,
	U_REGEX_INVALID_FLAG = 0x1030B,
	U_REGEX_LOOK_BEHIND_LIMIT = 0x1030C,
	U_REGEX_SET_CONTAINS_STRING = 0x1030D,
	U_REGEX_OCTAL_TOO_BIG = 0x1030E,
	U_REGEX_MISSING_CLOSE_BRACKET = 0x1030F,
	U_REGEX_INVALID_RANGE = 0x10310,
	U_REGEX_STACK_OVERFLOW = 0x10311,
	U_REGEX_TIME_OUT = 0x10312,
	U_REGEX_STOPPED_BY_CALLER = 0x10313,
	U_REGEX_PATTERN_TOO_BIG = 0x10314,
	U_REGEX_INVALID_CAPTURE_GROUP_NAME = 0x10315,
	U_REGEX_ERROR_LIMIT = 0x10316,
	U_IDNA_PROHIBITED_ERROR = 0x10400,
	U_IDNA_ERROR_START = 0x10400,
	U_IDNA_UNASSIGNED_ERROR = 0x10401,
	U_IDNA_CHECK_BIDI_ERROR = 0x10402,
	U_IDNA_STD3_ASCII_RULES_ERROR = 0x10403,
	U_IDNA_ACE_PREFIX_ERROR = 0x10404,
	U_IDNA_VERIFICATION_ERROR = 0x10405,
	U_IDNA_LABEL_TOO_LONG_ERROR = 0x10406,
	U_IDNA_ZERO_LENGTH_LABEL_ERROR = 0x10407,
	U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR = 0x10408,
	U_IDNA_ERROR_LIMIT = 0x10409,
	U_STRINGPREP_PROHIBITED_ERROR = 0x10400,
	U_STRINGPREP_UNASSIGNED_ERROR = 0x10401,
	U_STRINGPREP_CHECK_BIDI_ERROR = 0x10402,
	U_PLUGIN_ERROR_START = 0x10500,
	U_PLUGIN_TOO_HIGH = 0x10500,
	U_PLUGIN_DIDNT_SET_LEVEL = 0x10501,
	U_PLUGIN_ERROR_LIMIT = 0x10502,
	U_ERROR_LIMIT = 0x10502
};

enum class ULineBreak:int
{
	U_LB_UNKNOWN = 0x0,
	U_LB_AMBIGUOUS = 0x1,
	U_LB_ALPHABETIC = 0x2,
	U_LB_BREAK_BOTH = 0x3,
	U_LB_BREAK_AFTER = 0x4,
	U_LB_BREAK_BEFORE = 0x5,
	U_LB_MANDATORY_BREAK = 0x6,
	U_LB_CONTINGENT_BREAK = 0x7,
	U_LB_CLOSE_PUNCTUATION = 0x8,
	U_LB_COMBINING_MARK = 0x9,
	U_LB_CARRIAGE_RETURN = 0xA,
	U_LB_EXCLAMATION = 0xB,
	U_LB_GLUE = 0xC,
	U_LB_HYPHEN = 0xD,
	U_LB_IDEOGRAPHIC = 0xE,
	U_LB_INSEPARABLE = 0xF,
	U_LB_INSEPERABLE = 0xF,
	U_LB_INFIX_NUMERIC = 0x10,
	U_LB_LINE_FEED = 0x11,
	U_LB_NONSTARTER = 0x12,
	U_LB_NUMERIC = 0x13,
	U_LB_OPEN_PUNCTUATION = 0x14,
	U_LB_POSTFIX_NUMERIC = 0x15,
	U_LB_PREFIX_NUMERIC = 0x16,
	U_LB_QUOTATION = 0x17,
	U_LB_COMPLEX_CONTEXT = 0x18,
	U_LB_SURROGATE = 0x19,
	U_LB_SPACE = 0x1A,
	U_LB_BREAK_SYMBOLS = 0x1B,
	U_LB_ZWSPACE = 0x1C,
	U_LB_NEXT_LINE = 0x1D,
	U_LB_WORD_JOINER = 0x1E,
	U_LB_H2 = 0x1F,
	U_LB_H3 = 0x20,
	U_LB_JL = 0x21,
	U_LB_JT = 0x22,
	U_LB_JV = 0x23,
	U_LB_CLOSE_PARENTHESIS = 0x24,
	U_LB_CONDITIONAL_JAPANESE_STARTER = 0x25,
	U_LB_HEBREW_LETTER = 0x26,
	U_LB_REGIONAL_INDICATOR = 0x27,
	U_LB_E_BASE = 0x28,
	U_LB_E_MODIFIER = 0x29,
	U_LB_ZWJ = 0x2A,
	U_LB_COUNT = 0x2B
};

enum class UBlockCode:int
{
	UBLOCK_NO_BLOCK = 0x0,
	UBLOCK_BASIC_LATIN = 0x1,
	UBLOCK_LATIN_1_SUPPLEMENT = 0x2,
	UBLOCK_LATIN_EXTENDED_A = 0x3,
	UBLOCK_LATIN_EXTENDED_B = 0x4,
	UBLOCK_IPA_EXTENSIONS = 0x5,
	UBLOCK_SPACING_MODIFIER_LETTERS = 0x6,
	UBLOCK_COMBINING_DIACRITICAL_MARKS = 0x7,
	UBLOCK_GREEK = 0x8,
	UBLOCK_CYRILLIC = 0x9,
	UBLOCK_ARMENIAN = 0xA,
	UBLOCK_HEBREW = 0xB,
	UBLOCK_ARABIC = 0xC,
	UBLOCK_SYRIAC = 0xD,
	UBLOCK_THAANA = 0xE,
	UBLOCK_DEVANAGARI = 0xF,
	UBLOCK_BENGALI = 0x10,
	UBLOCK_GURMUKHI = 0x11,
	UBLOCK_GUJARATI = 0x12,
	UBLOCK_ORIYA = 0x13,
	UBLOCK_TAMIL = 0x14,
	UBLOCK_TELUGU = 0x15,
	UBLOCK_KANNADA = 0x16,
	UBLOCK_MALAYALAM = 0x17,
	UBLOCK_SINHALA = 0x18,
	UBLOCK_THAI = 0x19,
	UBLOCK_LAO = 0x1A,
	UBLOCK_TIBETAN = 0x1B,
	UBLOCK_MYANMAR = 0x1C,
	UBLOCK_GEORGIAN = 0x1D,
	UBLOCK_HANGUL_JAMO = 0x1E,
	UBLOCK_ETHIOPIC = 0x1F,
	UBLOCK_CHEROKEE = 0x20,
	UBLOCK_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS = 0x21,
	UBLOCK_OGHAM = 0x22,
	UBLOCK_RUNIC = 0x23,
	UBLOCK_KHMER = 0x24,
	UBLOCK_MONGOLIAN = 0x25,
	UBLOCK_LATIN_EXTENDED_ADDITIONAL = 0x26,
	UBLOCK_GREEK_EXTENDED = 0x27,
	UBLOCK_GENERAL_PUNCTUATION = 0x28,
	UBLOCK_SUPERSCRIPTS_AND_SUBSCRIPTS = 0x29,
	UBLOCK_CURRENCY_SYMBOLS = 0x2A,
	UBLOCK_COMBINING_MARKS_FOR_SYMBOLS = 0x2B,
	UBLOCK_LETTERLIKE_SYMBOLS = 0x2C,
	UBLOCK_NUMBER_FORMS = 0x2D,
	UBLOCK_ARROWS = 0x2E,
	UBLOCK_MATHEMATICAL_OPERATORS = 0x2F,
	UBLOCK_MISCELLANEOUS_TECHNICAL = 0x30,
	UBLOCK_CONTROL_PICTURES = 0x31,
	UBLOCK_OPTICAL_CHARACTER_RECOGNITION = 0x32,
	UBLOCK_ENCLOSED_ALPHANUMERICS = 0x33,
	UBLOCK_BOX_DRAWING = 0x34,
	UBLOCK_BLOCK_ELEMENTS = 0x35,
	UBLOCK_GEOMETRIC_SHAPES = 0x36,
	UBLOCK_MISCELLANEOUS_SYMBOLS = 0x37,
	UBLOCK_DINGBATS = 0x38,
	UBLOCK_BRAILLE_PATTERNS = 0x39,
	UBLOCK_CJK_RADICALS_SUPPLEMENT = 0x3A,
	UBLOCK_KANGXI_RADICALS = 0x3B,
	UBLOCK_IDEOGRAPHIC_DESCRIPTION_CHARACTERS = 0x3C,
	UBLOCK_CJK_SYMBOLS_AND_PUNCTUATION = 0x3D,
	UBLOCK_HIRAGANA = 0x3E,
	UBLOCK_KATAKANA = 0x3F,
	UBLOCK_BOPOMOFO = 0x40,
	UBLOCK_HANGUL_COMPATIBILITY_JAMO = 0x41,
	UBLOCK_KANBUN = 0x42,
	UBLOCK_BOPOMOFO_EXTENDED = 0x43,
	UBLOCK_ENCLOSED_CJK_LETTERS_AND_MONTHS = 0x44,
	UBLOCK_CJK_COMPATIBILITY = 0x45,
	UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A = 0x46,
	UBLOCK_CJK_UNIFIED_IDEOGRAPHS = 0x47,
	UBLOCK_YI_SYLLABLES = 0x48,
	UBLOCK_YI_RADICALS = 0x49,
	UBLOCK_HANGUL_SYLLABLES = 0x4A,
	UBLOCK_HIGH_SURROGATES = 0x4B,
	UBLOCK_HIGH_PRIVATE_USE_SURROGATES = 0x4C,
	UBLOCK_LOW_SURROGATES = 0x4D,
	UBLOCK_PRIVATE_USE_AREA = 0x4E,
	UBLOCK_PRIVATE_USE = 0x4E,
	UBLOCK_CJK_COMPATIBILITY_IDEOGRAPHS = 0x4F,
	UBLOCK_ALPHABETIC_PRESENTATION_FORMS = 0x50,
	UBLOCK_ARABIC_PRESENTATION_FORMS_A = 0x51,
	UBLOCK_COMBINING_HALF_MARKS = 0x52,
	UBLOCK_CJK_COMPATIBILITY_FORMS = 0x53,
	UBLOCK_SMALL_FORM_VARIANTS = 0x54,
	UBLOCK_ARABIC_PRESENTATION_FORMS_B = 0x55,
	UBLOCK_SPECIALS = 0x56,
	UBLOCK_HALFWIDTH_AND_FULLWIDTH_FORMS = 0x57,
	UBLOCK_OLD_ITALIC = 0x58,
	UBLOCK_GOTHIC = 0x59,
	UBLOCK_DESERET = 0x5A,
	UBLOCK_BYZANTINE_MUSICAL_SYMBOLS = 0x5B,
	UBLOCK_MUSICAL_SYMBOLS = 0x5C,
	UBLOCK_MATHEMATICAL_ALPHANUMERIC_SYMBOLS = 0x5D,
	UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B = 0x5E,
	UBLOCK_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT = 0x5F,
	UBLOCK_TAGS = 0x60,
	UBLOCK_CYRILLIC_SUPPLEMENT = 0x61,
	UBLOCK_CYRILLIC_SUPPLEMENTARY = 0x61,
	UBLOCK_TAGALOG = 0x62,
	UBLOCK_HANUNOO = 0x63,
	UBLOCK_BUHID = 0x64,
	UBLOCK_TAGBANWA = 0x65,
	UBLOCK_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A = 0x66,
	UBLOCK_SUPPLEMENTAL_ARROWS_A = 0x67,
	UBLOCK_SUPPLEMENTAL_ARROWS_B = 0x68,
	UBLOCK_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B = 0x69,
	UBLOCK_SUPPLEMENTAL_MATHEMATICAL_OPERATORS = 0x6A,
	UBLOCK_KATAKANA_PHONETIC_EXTENSIONS = 0x6B,
	UBLOCK_VARIATION_SELECTORS = 0x6C,
	UBLOCK_SUPPLEMENTARY_PRIVATE_USE_AREA_A = 0x6D,
	UBLOCK_SUPPLEMENTARY_PRIVATE_USE_AREA_B = 0x6E,
	UBLOCK_LIMBU = 0x6F,
	UBLOCK_TAI_LE = 0x70,
	UBLOCK_KHMER_SYMBOLS = 0x71,
	UBLOCK_PHONETIC_EXTENSIONS = 0x72,
	UBLOCK_MISCELLANEOUS_SYMBOLS_AND_ARROWS = 0x73,
	UBLOCK_YIJING_HEXAGRAM_SYMBOLS = 0x74,
	UBLOCK_LINEAR_B_SYLLABARY = 0x75,
	UBLOCK_LINEAR_B_IDEOGRAMS = 0x76,
	UBLOCK_AEGEAN_NUMBERS = 0x77,
	UBLOCK_UGARITIC = 0x78,
	UBLOCK_SHAVIAN = 0x79,
	UBLOCK_OSMANYA = 0x7A,
	UBLOCK_CYPRIOT_SYLLABARY = 0x7B,
	UBLOCK_TAI_XUAN_JING_SYMBOLS = 0x7C,
	UBLOCK_VARIATION_SELECTORS_SUPPLEMENT = 0x7D,
	UBLOCK_ANCIENT_GREEK_MUSICAL_NOTATION = 0x7E,
	UBLOCK_ANCIENT_GREEK_NUMBERS = 0x7F,
	UBLOCK_ARABIC_SUPPLEMENT = 0x80,
	UBLOCK_BUGINESE = 0x81,
	UBLOCK_CJK_STROKES = 0x82,
	UBLOCK_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT = 0x83,
	UBLOCK_COPTIC = 0x84,
	UBLOCK_ETHIOPIC_EXTENDED = 0x85,
	UBLOCK_ETHIOPIC_SUPPLEMENT = 0x86,
	UBLOCK_GEORGIAN_SUPPLEMENT = 0x87,
	UBLOCK_GLAGOLITIC = 0x88,
	UBLOCK_KHAROSHTHI = 0x89,
	UBLOCK_MODIFIER_TONE_LETTERS = 0x8A,
	UBLOCK_NEW_TAI_LUE = 0x8B,
	UBLOCK_OLD_PERSIAN = 0x8C,
	UBLOCK_PHONETIC_EXTENSIONS_SUPPLEMENT = 0x8D,
	UBLOCK_SUPPLEMENTAL_PUNCTUATION = 0x8E,
	UBLOCK_SYLOTI_NAGRI = 0x8F,
	UBLOCK_TIFINAGH = 0x90,
	UBLOCK_VERTICAL_FORMS = 0x91,
	UBLOCK_NKO = 0x92,
	UBLOCK_BALINESE = 0x93,
	UBLOCK_LATIN_EXTENDED_C = 0x94,
	UBLOCK_LATIN_EXTENDED_D = 0x95,
	UBLOCK_PHAGS_PA = 0x96,
	UBLOCK_PHOENICIAN = 0x97,
	UBLOCK_CUNEIFORM = 0x98,
	UBLOCK_CUNEIFORM_NUMBERS_AND_PUNCTUATION = 0x99,
	UBLOCK_COUNTING_ROD_NUMERALS = 0x9A,
	UBLOCK_SUNDANESE = 0x9B,
	UBLOCK_LEPCHA = 0x9C,
	UBLOCK_OL_CHIKI = 0x9D,
	UBLOCK_CYRILLIC_EXTENDED_A = 0x9E,
	UBLOCK_VAI = 0x9F,
	UBLOCK_CYRILLIC_EXTENDED_B = 0xA0,
	UBLOCK_SAURASHTRA = 0xA1,
	UBLOCK_KAYAH_LI = 0xA2,
	UBLOCK_REJANG = 0xA3,
	UBLOCK_CHAM = 0xA4,
	UBLOCK_ANCIENT_SYMBOLS = 0xA5,
	UBLOCK_PHAISTOS_DISC = 0xA6,
	UBLOCK_LYCIAN = 0xA7,
	UBLOCK_CARIAN = 0xA8,
	UBLOCK_LYDIAN = 0xA9,
	UBLOCK_MAHJONG_TILES = 0xAA,
	UBLOCK_DOMINO_TILES = 0xAB,
	UBLOCK_SAMARITAN = 0xAC,
	UBLOCK_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED = 0xAD,
	UBLOCK_TAI_THAM = 0xAE,
	UBLOCK_VEDIC_EXTENSIONS = 0xAF,
	UBLOCK_LISU = 0xB0,
	UBLOCK_BAMUM = 0xB1,
	UBLOCK_COMMON_INDIC_NUMBER_FORMS = 0xB2,
	UBLOCK_DEVANAGARI_EXTENDED = 0xB3,
	UBLOCK_HANGUL_JAMO_EXTENDED_A = 0xB4,
	UBLOCK_JAVANESE = 0xB5,
	UBLOCK_MYANMAR_EXTENDED_A = 0xB6,
	UBLOCK_TAI_VIET = 0xB7,
	UBLOCK_MEETEI_MAYEK = 0xB8,
	UBLOCK_HANGUL_JAMO_EXTENDED_B = 0xB9,
	UBLOCK_IMPERIAL_ARAMAIC = 0xBA,
	UBLOCK_OLD_SOUTH_ARABIAN = 0xBB,
	UBLOCK_AVESTAN = 0xBC,
	UBLOCK_INSCRIPTIONAL_PARTHIAN = 0xBD,
	UBLOCK_INSCRIPTIONAL_PAHLAVI = 0xBE,
	UBLOCK_OLD_TURKIC = 0xBF,
	UBLOCK_RUMI_NUMERAL_SYMBOLS = 0xC0,
	UBLOCK_KAITHI = 0xC1,
	UBLOCK_EGYPTIAN_HIEROGLYPHS = 0xC2,
	UBLOCK_ENCLOSED_ALPHANUMERIC_SUPPLEMENT = 0xC3,
	UBLOCK_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT = 0xC4,
	UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C = 0xC5,
	UBLOCK_MANDAIC = 0xC6,
	UBLOCK_BATAK = 0xC7,
	UBLOCK_ETHIOPIC_EXTENDED_A = 0xC8,
	UBLOCK_BRAHMI = 0xC9,
	UBLOCK_BAMUM_SUPPLEMENT = 0xCA,
	UBLOCK_KANA_SUPPLEMENT = 0xCB,
	UBLOCK_PLAYING_CARDS = 0xCC,
	UBLOCK_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS = 0xCD,
	UBLOCK_EMOTICONS = 0xCE,
	UBLOCK_TRANSPORT_AND_MAP_SYMBOLS = 0xCF,
	UBLOCK_ALCHEMICAL_SYMBOLS = 0xD0,
	UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D = 0xD1,
	UBLOCK_ARABIC_EXTENDED_A = 0xD2,
	UBLOCK_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS = 0xD3,
	UBLOCK_CHAKMA = 0xD4,
	UBLOCK_MEETEI_MAYEK_EXTENSIONS = 0xD5,
	UBLOCK_MEROITIC_CURSIVE = 0xD6,
	UBLOCK_MEROITIC_HIEROGLYPHS = 0xD7,
	UBLOCK_MIAO = 0xD8,
	UBLOCK_SHARADA = 0xD9,
	UBLOCK_SORA_SOMPENG = 0xDA,
	UBLOCK_SUNDANESE_SUPPLEMENT = 0xDB,
	UBLOCK_TAKRI = 0xDC,
	UBLOCK_BASSA_VAH = 0xDD,
	UBLOCK_CAUCASIAN_ALBANIAN = 0xDE,
	UBLOCK_COPTIC_EPACT_NUMBERS = 0xDF,
	UBLOCK_COMBINING_DIACRITICAL_MARKS_EXTENDED = 0xE0,
	UBLOCK_DUPLOYAN = 0xE1,
	UBLOCK_ELBASAN = 0xE2,
	UBLOCK_GEOMETRIC_SHAPES_EXTENDED = 0xE3,
	UBLOCK_GRANTHA = 0xE4,
	UBLOCK_KHOJKI = 0xE5,
	UBLOCK_KHUDAWADI = 0xE6,
	UBLOCK_LATIN_EXTENDED_E = 0xE7,
	UBLOCK_LINEAR_A = 0xE8,
	UBLOCK_MAHAJANI = 0xE9,
	UBLOCK_MANICHAEAN = 0xEA,
	UBLOCK_MENDE_KIKAKUI = 0xEB,
	UBLOCK_MODI = 0xEC,
	UBLOCK_MRO = 0xED,
	UBLOCK_MYANMAR_EXTENDED_B = 0xEE,
	UBLOCK_NABATAEAN = 0xEF,
	UBLOCK_OLD_NORTH_ARABIAN = 0xF0,
	UBLOCK_OLD_PERMIC = 0xF1,
	UBLOCK_ORNAMENTAL_DINGBATS = 0xF2,
	UBLOCK_PAHAWH_HMONG = 0xF3,
	UBLOCK_PALMYRENE = 0xF4,
	UBLOCK_PAU_CIN_HAU = 0xF5,
	UBLOCK_PSALTER_PAHLAVI = 0xF6,
	UBLOCK_SHORTHAND_FORMAT_CONTROLS = 0xF7,
	UBLOCK_SIDDHAM = 0xF8,
	UBLOCK_SINHALA_ARCHAIC_NUMBERS = 0xF9,
	UBLOCK_SUPPLEMENTAL_ARROWS_C = 0xFA,
	UBLOCK_TIRHUTA = 0xFB,
	UBLOCK_WARANG_CITI = 0xFC,
	UBLOCK_AHOM = 0xFD,
	UBLOCK_ANATOLIAN_HIEROGLYPHS = 0xFE,
	UBLOCK_CHEROKEE_SUPPLEMENT = 0xFF,
	UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E = 0x100,
	UBLOCK_EARLY_DYNASTIC_CUNEIFORM = 0x101,
	UBLOCK_HATRAN = 0x102,
	UBLOCK_MULTANI = 0x103,
	UBLOCK_OLD_HUNGARIAN = 0x104,
	UBLOCK_SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS = 0x105,
	UBLOCK_SUTTON_SIGNWRITING = 0x106,
	UBLOCK_ADLAM = 0x107,
	UBLOCK_BHAIKSUKI = 0x108,
	UBLOCK_CYRILLIC_EXTENDED_C = 0x109,
	UBLOCK_GLAGOLITIC_SUPPLEMENT = 0x10A,
	UBLOCK_IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION = 0x10B,
	UBLOCK_MARCHEN = 0x10C,
	UBLOCK_MONGOLIAN_SUPPLEMENT = 0x10D,
	UBLOCK_NEWA = 0x10E,
	UBLOCK_OSAGE = 0x10F,
	UBLOCK_TANGUT = 0x110,
	UBLOCK_TANGUT_COMPONENTS = 0x111,
	UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F = 0x112,
	UBLOCK_KANA_EXTENDED_A = 0x113,
	UBLOCK_MASARAM_GONDI = 0x114,
	UBLOCK_NUSHU = 0x115,
	UBLOCK_SOYOMBO = 0x116,
	UBLOCK_SYRIAC_SUPPLEMENT = 0x117,
	UBLOCK_ZANABAZAR_SQUARE = 0x118,
	UBLOCK_CHESS_SYMBOLS = 0x119,
	UBLOCK_DOGRA = 0x11A,
	UBLOCK_GEORGIAN_EXTENDED = 0x11B,
	UBLOCK_GUNJALA_GONDI = 0x11C,
	UBLOCK_HANIFI_ROHINGYA = 0x11D,
	UBLOCK_INDIC_SIYAQ_NUMBERS = 0x11E,
	UBLOCK_MAKASAR = 0x11F,
	UBLOCK_MAYAN_NUMERALS = 0x120,
	UBLOCK_MEDEFAIDRIN = 0x121,
	UBLOCK_OLD_SOGDIAN = 0x122,
	UBLOCK_SOGDIAN = 0x123,
	UBLOCK_EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS = 0x124,
	UBLOCK_ELYMAIC = 0x125,
	UBLOCK_NANDINAGARI = 0x126,
	UBLOCK_NYIAKENG_PUACHUE_HMONG = 0x127,
	UBLOCK_OTTOMAN_SIYAQ_NUMBERS = 0x128,
	UBLOCK_SMALL_KANA_EXTENSION = 0x129,
	UBLOCK_SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A = 0x12A,
	UBLOCK_TAMIL_SUPPLEMENT = 0x12B,
	UBLOCK_WANCHO = 0x12C,
	UBLOCK_COUNT = 0x12D,
	UBLOCK_INVALID_CODE = 0xFF
};

enum class UColReorderCode:int
{
	UCOL_REORDER_CODE_DEFAULT = 0xFF,
	UCOL_REORDER_CODE_NONE = 0x67,
	UCOL_REORDER_CODE_OTHERS = 0x67,
	UCOL_REORDER_CODE_SPACE = 0x1000,
	UCOL_REORDER_CODE_FIRST = 0x1000,
	UCOL_REORDER_CODE_PUNCTUATION = 0x1001,
	UCOL_REORDER_CODE_SYMBOL = 0x1002,
	UCOL_REORDER_CODE_CURRENCY = 0x1003,
	UCOL_REORDER_CODE_DIGIT = 0x1004,
	UCOL_REORDER_CODE_LIMIT = 0x1005
};

enum class UBreakIteratorType:int
{
	UBRK_CHARACTER = 0x0,
	UBRK_WORD = 0x1,
	UBRK_LINE = 0x2,
	UBRK_SENTENCE = 0x3,
	UBRK_TITLE = 0x4,
	UBRK_COUNT = 0x5
};

namespace EMissionDispatcherTriggerMode
{
	enum Type:int
	{
		AutoStartMission = 0x0,
		Ignore = 0x1,
		ActivateViaMultiUse = 0x2
	};
}

namespace EThreadAsyncExecTag
{
	enum Type: char
	{
		DoExecution = 0x1,
		WithoutCompletion = 0x2
	};
}

enum class EHandshakeInstallState:int
{
	EHIS_None = 0x0,
	EHIS_Initializing = 0x1,
	EHIS_Installing = 0x2,
	EHIS_Done = 0x3,
	EHIS_Failure = 0x4
};

namespace EPrimalConsumableType
{
	enum Type:int
	{
		Food = 0x0,
		Water = 0x1,
		Medicine = 0x2,
		Other = 0x3,
		MAX = 0x4
	};
}

namespace EChatMessageType
{
	enum Type:int
	{
		MyMessage = 0x0,
		SameTeamMessage = 0x1,
		DifferentTeamMessage = 0x2,
		SystemWideMessage = 0x3,
		SameAllianceMessage = 0x4,
		AdminMessage = 0x5,
		MAX = 0x6
	};
}

enum class EPCGDebugVisScaleMethod:unsigned char
{
	Relative = 0x0,
	Absolute = 0x1,
	Extents = 0x2
};

enum class EPCGSettingsExecutionMode:unsigned char
{
	Enabled = 0x0,
	Debug = 0x1,
	Isolated = 0x2,
	Disabled = 0x3
};

enum class EMediaTextureSampleFormat:int
{
	Undefined = 0x0,
	CharAYUV = 0x1,
	CharBGRA = 0x2,
	CharBGR10A2 = 0x3,
	CharBMP = 0x4,
	CharNV12 = 0x5,
	CharNV21 = 0x6,
	CharUYVY = 0x7,
	CharYUY2 = 0x8,
	CharYVYU = 0x9,
	FloatRGB = 0xA,
	FloatRGBA = 0xB,
	YUVv210 = 0xC,
	Y416 = 0xD,
	P010 = 0xE,
	DXT1 = 0xF,
	DXT5 = 0x10,
	YCoCg_DXT5 = 0x11,
	YCoCg_DXT5_Alpha_BC4 = 0x12,
	P010_RGB1010102 = 0x13
};

enum class EMediaOrientation:int
{
	Original = 0x0,
	CW90 = 0x1,
	CW180 = 0x2,
	CW270 = 0x3
};

enum class EBakeScaleMethod:unsigned char
{
	BakeFullScale = 0x0,
	BakeNonuniformScale = 0x1,
	DoNotBakeScale = 0x2
};

namespace EClimbingType
{
	enum Type:int
	{
		None = 0x0,
		ClimbLook = 0x1,
		ClimbInput = 0x2,
		Slide = 0x3,
		MAX = 0x4
	};
}

namespace EClimbingAnimationType
{
	enum Type:int
	{
		Up = 0x0,
		Down = 0x1,
		Right = 0x2,
		Left = 0x3,
		MeleeUp = 0x4,
		MeleeRight = 0x5,
		MeleeLeft = 0x6,
		FinishUp = 0x7,
		FinishDown = 0x8,
		HangingFwd = 0x9,
		HangingMelee = 0xA,
		HangingFinishUp = 0xB,
		HangingFinishDown = 0xC,
		JumpUp = 0xD,
		JumpUpRight = 0xE,
		JumpUpLeft = 0xF,
		SlideDown = 0x10,
		AttachUp = 0x11,
		AttachDown = 0x12,
		AttachHangingUp = 0x13,
		AttachHangingDown = 0x14,
		FlipLeft = 0x15,
		FlipRight = 0x16,
		FlipUp = 0x17,
		FlipDown = 0x18,
		TurnUp = 0x19,
		TurnDown = 0x1A,
		TurnRight = 0x1B,
		TurnLeft = 0x1C,
		OpenInventory = 0x1D,
		OpenInventoryHanging = 0x1E,
		QuakeFall = 0x1F,
		MAX = 0x20
	};
}

enum class EConvertToPolygonsMode:int
{
	FaceNormalDeviation = 0x0,
	FindPolygons = 0x1,
	FromUVIslands = 0x2,
	FromNormalSeams = 0x3,
	FromConnectedTris = 0x4,
	FromFurthestPointSampling = 0x5,
	CopyFromLayer = 0x6
};

enum class MediaTextureOrientation:int
{
	MTORI_Original = 0x0,
	MTORI_CW90 = 0x1,
	MTORI_CW180 = 0x2,
	MTORI_CW270 = 0x3
};

enum class ECubeGridToolFaceSelectionMode:int
{
	OutsideBasedOnNormal = 0x0,
	InsideBasedOnNormal = 0x1,
	OutsideBasedOnViewRay = 0x2,
	InsideBasedOnViewRay = 0x3
};

enum class EMediaTextureVisibleMipsTiles:unsigned char
{
	None = 0x0,
	Plane = 0x1,
	Sphere = 0x2
};

enum class ECubeGridToolAction:int
{
	NoAction = 0x0,
	Push = 0x1,
	Pull = 0x2,
	Flip = 0x3,
	SlideForward = 0x4,
	SlideBack = 0x5,
	DecreaseGridPower = 0x6,
	IncreaseGridPower = 0x7,
	CornerMode = 0x8,
	ResetFromActor = 0x9,
	Done = 0xA,
	Cancel = 0xB
};

enum class EGroupTopologyDeformationStrategy:unsigned char
{
	Linear = 0x0,
	Laplacian = 0x1
};

enum class EQuickTransformerMode:unsigned char
{
	AxisTranslation = 0x0,
	AxisRotation = 0x1
};

enum class EWeightScheme:int
{
	Uniform = 0x0,
	Umbrella = 0x1,
	Valence = 0x2,
	MeanValue = 0x3,
	Cotangent = 0x4,
	ClampedCotangent = 0x5,
	IDTCotangent = 0x6
};

enum class EBuildPatchInstallError:int
{
	NoError = 0x0,
	DownloadError = 0x1,
	FileConstructionFail = 0x2,
	MoveFileToInstall = 0x3,
	BuildVerifyFail = 0x4,
	ApplicationClosing = 0x5,
	ApplicationError = 0x6,
	UserCanceled = 0x7,
	PrerequisiteError = 0x8,
	InitializationError = 0x9,
	PathLengthExceeded = 0xA,
	OutOfDiskSpace = 0xB,
	NumInstallErrors = 0xC
};

enum class EDisplaceMeshToolDisplaceType:unsigned char
{
	Constant = 0x0,
	DisplacementMap = 0x1,
	RandomNoise = 0x2,
	PerlinNoise = 0x3,
	SineWave = 0x4
};

enum class EDisplaceMeshToolSubdivisionType:unsigned char
{
	Flat = 0x0,
	PNTriangles = 0x1
};

enum class EDisplaceMeshToolTriangleSelectionType:unsigned char
{
	None = 0x0,
	Material = 0x1
};

enum class EDisplaceMeshToolChannelType:unsigned char
{
	Red = 0x0,
	Green = 0x1,
	Blue = 0x2,
	Alpha = 0x3
};

enum class EBuildPatchDownloadHealth:int
{
	Disconnected = 0x0,
	Poor = 0x1,
	OK = 0x2,
	Good = 0x3,
	Excellent = 0x4,
	NUM_Values = 0x5
};

enum class EDrawPolyPathWidthMode:int
{
	Fixed = 0x0,
	Interactive = 0x1
};

enum class EDrawPolyPathRadiusMode:int
{
	Fixed = 0x0,
	Interactive = 0x1
};

enum class EDrawPolyPathExtrudeMode:int
{
	Flat = 0x0,
	Fixed = 0x1,
	Interactive = 0x2,
	RampFixed = 0x3,
	RampInteractive = 0x4
};

enum class EDrawPolyPathExtrudeDirection:int
{
	SelectionNormal = 0x0,
	WorldX = 0x1,
	WorldY = 0x2,
	WorldZ = 0x3,
	LocalX = 0x4,
	LocalY = 0x5,
	LocalZ = 0x6
};

enum class EDynamicMeshSculptBrushType:unsigned char
{
	Move = 0x0,
	PullKelvin = 0x1,
	PullSharpKelvin = 0x2,
	Smooth = 0x3,
	Offset = 0x4,
	SculptView = 0x5,
	SculptMax = 0x6,
	Inflate = 0x7,
	ScaleKelvin = 0x8,
	Pinch = 0x9,
	TwistKelvin = 0xA,
	Flatten = 0xB,
	Plane = 0xC,
	PlaneViewAligned = 0xD,
	FixedPlane = 0xE,
	Resample = 0xF,
	LastValue = 0x10
};

namespace EDataDisplay
{
	enum Type:int
	{
		MISSION_INFO = 0x0,
		LEADERBOARDS = 0x1
	};
}

namespace EBiomeFilter
{
	enum Type:int
	{
		ARCTIC = 0x1,
		BOG = 0x4,
		LUNAR = 0x8,
		OCEAN = 0x10,
		VOLCANIC = 0x20,
		ALL_MISSIONS = 0x3D
	};
}

namespace EListDisplay
{
	enum Type:int
	{
		MISSIONS = 0x0,
		EFFECTS = 0x1
	};
}

enum class ETrackSupport:int
{
	NotSupported = 0x0,
	Supported = 0x1,
	Default = 0x2
};

enum class TextEntryInstigator:int
{
	RENAME_TRIBE = 0x0,
	RENAME_GROUP_RANK = 0x1,
	RENAME_ALLIANCE = 0x2,
	NEW_ALLIANCE = 0x3,
	NEW_GROUP_RANK = 0x4,
	NONE = 0x5
};

enum class EEditPivotSnapDragRotationMode:unsigned char
{
	Ignore = 0x0,
	Align = 0x1,
	AlignFlipped = 0x2,
	LastValue = 0x3
};

enum class EEditPivotToolActions:int
{
	NoAction = 0x0,
	Center = 0x1,
	Bottom = 0x2,
	Top = 0x3,
	Left = 0x4,
	Right = 0x5,
	Front = 0x6,
	Back = 0x7,
	WorldOrigin = 0x8
};

enum class ERequestContentError:int
{
	NoError = 0x0,
	InvalidInstallationDirectory = 0x1,
	InvalidCloudURL = 0x2,
	InvalidManifestURL = 0x3,
	FailedToDownloadManifestNoResponse = 0x4,
	FailedToDownloadManifest = 0x5,
	FailedToReadManifest = 0x6
};

namespace EGrappleState
{
	enum Type:int
	{
		GRAPPLE_Idle = 0x0,
		GRAPPLE_Pulling = 0x1,
		GRAPPLE_Releasing = 0x2,
		GRAPPLE_Custom = 0x3,
		GRAPPLE_Max = 0x4
	};
}

enum class EMediaCacheState:int
{
	Cached = 0x0,
	Loaded = 0x1,
	Loading = 0x2,
	Pending = 0x3
};

enum class EMediaControl:int
{
	BlockOnFetch = 0x0,
	Pause = 0x1,
	Resume = 0x2,
	Scrub = 0x3,
	Seek = 0x4
};

enum class EMediaState:int
{
	Closed = 0x0,
	Error = 0x1,
	Paused = 0x2,
	Playing = 0x3,
	Preparing = 0x4,
	Stopped = 0x5
};

enum class EMediaStatus:int
{
	None = 0x0,
	Buffering = 0x1,
	Connecting = 0x2
};

enum class EMediaRateThinning:int
{
	Thinned = 0x0,
	Unthinned = 0x1
};

enum class EMediaSeekDirection:int
{
	Backward = 0x0,
	Beginning = 0x1,
	End = 0x2,
	Forward = 0x3
};

enum class EMediaTrackType:int
{
	Audio = 0x0,
	Caption = 0x1,
	Metadata = 0x2,
	Script = 0x3,
	Subtitle = 0x4,
	Text = 0x5,
	Video = 0x6
};

enum class EMediaPlayerOptionBooleanOverride:unsigned char
{
	UseMediaPlayerSetting = 0x0,
	Enabled = 0x1,
	Disabled = 0x2
};

namespace EEngramCategory
{
	enum Type:int
	{
		TOOLS = 0x0,
		CLOTHING = 0x1,
		WEAPONS = 0x2,
		SADDLES = 0x3,
		STRUCTURES = 0x4,
		CRAFTING = 0x5,
		MISC = 0x6,
		MODSPECIFIC = 0x7,
		MAX = 0x8
	};
}

enum class EMediaPlayerTrack:unsigned char
{
	Audio = 0x0,
	Caption = 0x1,
	Metadata = 0x2,
	Script = 0x3,
	Subtitle = 0x4,
	Text = 0x5,
	Video = 0x6
};

enum class MediaTextureOutputFormat:int
{
	MTOF_Default = 0x0,
	MTOF_SRGB_LINOUT = 0x1,
	MTOF_MAX = 0x2
};

namespace UContextMenuItemSwitchMode
{
	enum Type:int
	{
		None = 0x0,
		Radio = 0x1,
		Checkbox = 0x2
	};
}

namespace EBoidType
{
	enum Type:int
	{
		Follower = 0x0,
		Leader = 0x1,
		FreeAgent = 0x2
	};
}

enum class EPortType:unsigned char
{
	game = 0x0,
	query = 0x1,
	rcon = 0x2
};

enum class EPlatform:unsigned char
{
	Unknown = 0x0,
	PC = 0x1,
	MAC = 0x2,
	XBOX = 0x3,
	PLAYSTATION = 0x4,
	SWITCH = 0x5,
	ANDROID = 0x6,
	IOS = 0x7
};

enum class EMediaPlateEventState:unsigned char
{
	Play = 0x0,
	Open = 0x1,
	Close = 0x2,
	Pause = 0x3,
	Reverse = 0x4,
	Forward = 0x5,
	Rewind = 0x6,
	MAX = 0x7
};

enum class EHttpServerResponseCodes:unsigned short
{
	Unknown = 0x0,
	Continue = 0x64,
	SwitchProtocol = 0x65,
	Ok = 0xC8,
	Created = 0xC9,
	Accepted = 0xCA,
	Partial = 0xCB,
	NoContent = 0xCC,
	ResetContent = 0xCD,
	PartialContent = 0xCE,
	Ambiguous = 0x12C,
	Moved = 0x12D,
	Redirect = 0x12E,
	RedirectMethod = 0x12F,
	NotModified = 0x130,
	UseProxy = 0x131,
	RedirectKeepVerb = 0x133,
	BadRequest = 0x190,
	Denied = 0x191,
	PaymentReq = 0x192,
	Forbidden = 0x193,
	NotFound = 0x194,
	BadMethod = 0x195,
	NoneAcceptable = 0x196,
	ProxyAuthReq = 0x197,
	RequestTimeout = 0x198,
	Conflict = 0x199,
	Gone = 0x19A,
	LengthRequired = 0x19B,
	PrecondFailed = 0x19C,
	RequestTooLarge = 0x19D,
	UriTooLong = 0x19E,
	UnsupportedMedia = 0x19F,
	TooManyRequests = 0x1AD,
	RetryWith = 0x1C1,
	ServerError = 0x1F4,
	NotSupported = 0x1F5,
	BadGateway = 0x1F6,
	ServiceUnavail = 0x1F7,
	GatewayTimeout = 0x1F8,
	VersionNotSup = 0x1F9
};

enum class EHttpServerRequestVerbs:unsigned short
{
	VERB_NONE = 0x0,
	VERB_GET = 0x1,
	VERB_POST = 0x2,
	VERB_PUT = 0x4,
	VERB_PATCH = 0x8,
	VERB_DELETE = 0x10,
	VERB_OPTIONS = 0x20
};

enum class ECollectionScriptingShareType:unsigned char
{
	Local = 0x0,
	Private = 0x1,
	Shared = 0x2
};

namespace EHostSessionPanel
{
	enum Type:int
	{
		GENERAL = 0x0,
		ADVANCED = 0x1,
		ENGRAMS = 0x2,
		MAX = 0x3
	};
}

enum class UStreamlineFeature:unsigned char
{
	DLSSG = 0x0,
	Reflex = 0x1,
	Count = 0x2
};

enum class UStreamlineDLSSGMode:unsigned char
{
	Off = 0x0,
	On = 0x1,
	Auto = 0x2
};

enum class UStreamlineReflexMode:unsigned char
{
	Disabled = 0x0,
	Enabled = 0x1,
	EnabledPlusBoost = 0x3
};

enum class UNISMode:unsigned char
{
	Off = 0x0,
	UltraQuality = 0x1,
	Quality = 0x2,
	Balanced = 0x3,
	Performance = 0x4,
	Custom = 0x5
};

enum class UNISSupport:unsigned char
{
	Supported = 0x0,
	NotSupported = 0x1
};

namespace FVariantManagerObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		CorrectSerializationOfFNameBytes = 0x1,
		CategoryFlagsAndManualDisplayText = 0x2,
		CorrectSerializationOfFStringBytes = 0x3,
		SerializePropertiesAsNames = 0x4,
		StoreDisplayOrder = 0x5,
		VersionPlusOne = 0x6,
		LatestVersion = 0x5
	};
}

enum class EPropertyValueCategory:unsigned char
{
	Undefined = 0x0,
	Generic = 0x1,
	RelativeLocation = 0x2,
	RelativeRotation = 0x4,
	RelativeScale3D = 0x8,
	Visibility = 0x10,
	Material = 0x20,
	Color = 0x40,
	Option = 0x80
};

namespace EBlackboardCompare
{
	enum Type:int
	{
		Less = 0xFF,
		Equal = 0x0,
		Greater = 0x1,
		NotEqual = 0x1
	};
}

namespace EBasicKeyOperation
{
	enum Type:int
	{
		Set = 0x0,
		NotSet = 0x1
	};
}

namespace EPathFollowingStatus
{
	enum Type:int
	{
		Idle = 0x0,
		Waiting = 0x1,
		Paused = 0x2,
		Moving = 0x3
	};
}

enum class EWindSourceMode:unsigned char
{
	AtmosphericWind = 0x0,
	FoliageInteraction = 0x1
};

enum class EEffectScope:unsigned char
{
	FirstPersonOnly = 0x0,
	ThirdPersonOnly = 0x1,
	AllCameraModes = 0x2
};

namespace ESkyResources
{
	enum Type:int
	{
		Sky = 0x0,
		FogScatter = 0x1,
		FogLoss = 0x2,
		MAX = 0x3
	};
}

namespace EDomeState
{
	enum Type:int
	{
		NotADome = 0x0,
		Inside = 0x1,
		Outside = 0x2
	};
}

namespace EListSessionStatus
{
	enum Type:int
	{
		SearchingOfficial = 0x0,
		SearchingUnofficial = 0x1,
		SearchingListenServers = 0x2,
		SearchingFavorites = 0x3,
		SearchingHistory = 0x4,
		SearchingLAN = 0x5,
		SearchingFriends = 0x6,
		SearchingUnOfficialPCServer = 0x7,
		SearchingOfficialLegacy = 0x8,
		MAX = 0x9
	};
}

namespace EListSessionDLCType
{
	enum Type:int
	{
		SearchingAll = 0x0,
		SearchingArkPrime = 0x1,
		SearchingCenter = 0x2,
		SearchingRagnarok = 0x3,
		SearchingLostIsland = 0x4,
		SearchingFjordur = 0x5,
		SearchingCrystalIsles = 0x6,
		SearchingValguero = 0x7,
		SearchingScorchedEarth = 0x8,
		SearchingAberration = 0x9,
		SearchingExtinction = 0xA,
		SearchingGenesis = 0xB,
		SearchingGen2 = 0xC,
		SearchingPGARK = 0xD,
		SearchingSOTF = 0xE
	};
}

namespace EHubSubMenu
{
	enum Type:int
	{
		Inventory = 0x0,
		Engrams = 0x1,
		TribeManager = 0x2,
		TrackedDinoList = 0x3,
		SurvivalProfile = 0x4,
		MissionList = 0x5,
		Minimap = 0x6,
		MAX = 0x7
	};
}

enum class EPrimalStructurePlacerState:unsigned char
{
	Default = 0x0,
	FadeAway = 0x1,
	PlacingStructure = 0x2
};

enum class rcBuildContoursFlags:int
{
	RC_CONTOUR_TESS_WALL_EDGES = 0x1,
	RC_CONTOUR_TESS_AREA_EDGES = 0x2
};

enum class dtAllocHint:int
{
	DT_ALLOC_TEMP = 0x0,
	DT_ALLOC_PERM_AVOIDANCE = 0x1,
	DT_ALLOC_PERM_CROWD = 0x2,
	DT_ALLOC_PERM_LOOKUP = 0x3,
	DT_ALLOC_PERM_NAVMESH = 0x4,
	DT_ALLOC_PERM_NAVQUERY = 0x5,
	DT_ALLOC_PERM_NODE_POOL = 0x6,
	DT_ALLOC_PERM_PATH_CORRIDOR = 0x7,
	DT_ALLOC_PERM_PATH_QUEUE = 0x8,
	DT_ALLOC_PERM_PROXIMITY_GRID = 0x9,
	DT_ALLOC_PERM_TILE_CACHE_LAYER = 0xA,
	DT_ALLOC_PERM_TILE_DATA = 0xB,
	DT_ALLOC_PERM_TILE_DYNLINK_OFFMESH = 0xC,
	DT_ALLOC_PERM_TILE_DYNLINK_CLUSTER = 0xD,
	DT_ALLOC_PERM_TILES = 0xE
};

namespace ERecastDebugPathfindingFlags
{
	enum Type: char
	{
		Basic = 0x0,
		BestNode = 0x1,
		Vertices = 0x2,
		PathLength = 0x4
	};
}

namespace ERecastNamedFilter
{
	enum Type:int
	{
		FilterOutNavLinks = 0x0,
		FilterOutAreas = 0x1,
		FilterOutNavLinksAndAreas = 0x2,
		NamedFiltersCount = 0x3
	};
}

enum class EHeightFieldRenderMode:unsigned char
{
	Solid = 0x0,
	Walkable = 0x1
};

namespace ERecastPartitioning
{
	enum Type:int
	{
		Monotone = 0x0,
		Watershed = 0x1,
		ChunkyMonotone = 0x2
	};
}

enum class ETimeSliceWorkResult:unsigned char
{
	Failed = 0x0,
	Succeeded = 0x1,
	CallAgainNextTimeSlice = 0x2
};

enum class rcLogCategory:int
{
	RC_LOG_PROGRESS = 0x1,
	RC_LOG_WARNING = 0x2,
	RC_LOG_ERROR = 0x3
};

enum class rcTimerLabel:int
{
	RC_TIMER_TOTAL = 0x0,
	RC_TIMER_TEMP = 0x1,
	RC_TIMER_RASTERIZE_TRIANGLES = 0x2,
	RC_TIMER_BUILD_COMPACTHEIGHTFIELD = 0x3,
	RC_TIMER_BUILD_CONTOURS = 0x4,
	RC_TIMER_BUILD_CONTOURS_TRACE = 0x5,
	RC_TIMER_BUILD_CONTOURS_SIMPLIFY = 0x6,
	RC_TIMER_BUILD_CLUSTERS = 0x7,
	RC_TIMER_FILTER_BORDER = 0x8,
	RC_TIMER_FILTER_WALKABLE = 0x9,
	RC_TIMER_MEDIAN_AREA = 0xA,
	RC_TIMER_FILTER_LOW_OBSTACLES = 0xB,
	RC_TIMER_BUILD_POLYMESH = 0xC,
	RC_TIMER_MERGE_POLYMESH = 0xD,
	RC_TIMER_ERODE_AREA = 0xE,
	RC_TIMER_MARK_BOX_AREA = 0xF,
	RC_TIMER_MARK_CYLINDER_AREA = 0x10,
	RC_TIMER_MARK_CONVEXPOLY_AREA = 0x11,
	RC_TIMER_BUILD_DISTANCEFIELD = 0x12,
	RC_TIMER_BUILD_DISTANCEFIELD_DIST = 0x13,
	RC_TIMER_BUILD_DISTANCEFIELD_BLUR = 0x14,
	RC_TIMER_BUILD_REGIONS = 0x15,
	RC_TIMER_BUILD_REGIONS_WATERSHED = 0x16,
	RC_TIMER_BUILD_REGIONS_EXPAND = 0x17,
	RC_TIMER_BUILD_REGIONS_FLOOD = 0x18,
	RC_TIMER_BUILD_REGIONS_FILTER = 0x19,
	RC_TIMER_BUILD_LAYERS = 0x1A,
	RC_TIMER_BUILD_POLYMESHDETAIL = 0x1B,
	RC_TIMER_MERGE_POLYMESHDETAIL = 0x1C,
	RC_MAX_TIMERS = 0x1D
};

enum class rcRasterizationFlags:int
{
	RC_PROJECT_TO_BOTTOM = 0x1
};

enum class ERasterizeGeomRecastTimeSlicedState:unsigned char
{
	MarkWalkableTriangles = 0x0,
	RasterizeTriangles = 0x1
};

enum class ERasterizeGeomTimeSlicedState:unsigned char
{
	RasterizeGeometryTransformCoords = 0x0,
	RasterizeGeometryRecast = 0x1
};

enum class EGenerateRecastFilterTimeSlicedState:unsigned char
{
	FilterLowHangingWalkableObstacles = 0x0,
	FilterLedgeSpans = 0x1,
	FilterWalkableLowHeightSpans = 0x2
};

enum class EDoWorkTimeSlicedState:unsigned char
{
	Invalid = 0x0,
	GatherGeometryFromSources = 0x1,
	GenerateTile = 0x2
};

enum class EGenerateTileTimeSlicedState:unsigned char
{
	Invalid = 0x0,
	GenerateCompressedLayers = 0x1,
	GenerateNavigationData = 0x2
};

enum class EGenerateNavDataTimeSlicedState:unsigned char
{
	Invalid = 0x0,
	Init = 0x1,
	GenerateLayers = 0x2
};

enum class EGenerateCompressedLayersTimeSliced:unsigned char
{
	Invalid = 0x0,
	Init = 0x1,
	CreateHeightField = 0x2,
	RasterizeTriangles = 0x3,
	EmptyLayers = 0x4,
	VoxelFilter = 0x5,
	RecastFilter = 0x6,
	CompactHeightField = 0x7,
	ErodeWalkable = 0x8,
	BuildLayers = 0x9,
	BuildTileCache = 0xA
};

enum class EProcessTileTasksSyncTimeSlicedState:unsigned char
{
	Init = 0x0,
	DoWork = 0x1,
	AddGeneratedTiles = 0x2,
	StoreCompessedTileCacheLayers = 0x3,
	AppendUpdateTiles = 0x4,
	Finish = 0x5
};

enum class EAddGeneratedTilesTimeSlicedState:unsigned char
{
	Init = 0x0,
	AddTiles = 0x1
};

enum class FAmazonS3GetObjectStatus:int
{
	GetObject_NotStarted = 0x0,
	GetObject_Downloading = 0x1,
	GetObject_Done = 0x2,
	GetObject_Errored = 0x3
};

enum class EAmazonS3MultipartUploadStatus:int
{
	NotStarted = 0x0,
	Uploading = 0x1,
	Done = 0x2,
	Errored = 0x3
};

enum class ECrateMovementMode:unsigned char
{
	None = 0x0,
	Regular = 0x1,
	Throttled = 0x2
};

enum class PageType:int
{
	PT_DefaultOptions = 0x0,
	PT_ChatOptions = 0x1,
	PT_DinoGroup = 0x2
};

namespace EListSessionPVE
{
	enum Type:int
	{
		SearchingPVEandPVP = 0x0,
		SearchingPVP = 0x1,
		SearchingPVE = 0x2
	};
}

namespace EListSessionSort
{
	enum Type:int
	{
		Name = 0x0,
		Players = 0x1,
		Ping = 0x2,
		Day = 0x3
	};
}

enum class ServerSortingTypeType:int
{
	Official_Asc = 0x0,
	Official_Dsc = 0x1,
	Ping_Asc = 0x2,
	Ping_Dsc = 0x3,
	Players_Asc = 0x4,
	Players_Dsc = 0x5
};

enum class EConfigManifestVersion:int
{
	Initial = 0x0,
	RenameEditorAgnosticSettings = 0x1,
	MigrateProjectSpecificInisToAgnostic = 0x2,
	NumOfVersions = 0x3
};

namespace EOptionsSubMenu
{
	enum Type:int
	{
		Options = 0x0,
		AdvancedSettings = 0x1,
		KeyBindings = 0x2,
		Gamepad = 0x3,
		RTSKeyBinds = 0x4,
		MAX = 0x5
	};
}

enum class EEventLoadNode2:unsigned char
{
	Package_ProcessSummary = 0x0,
	Package_SetupDependencies = 0x1,
	Package_ExportsSerialized = 0x2,
	Package_NumPhases = 0x3,
	ExportBundle_Process = 0x0,
	ExportBundle_PostLoad = 0x1,
	ExportBundle_DeferredPostLoad = 0x2,
	ExportBundle_NumPhases = 0x3
};

enum class EZenPackageVersion:unsigned int
{
	Initial = 0x0,
	DataResourceTable = 0x1,
	LatestPlusOne = 0x2,
	Latest = 0x1
};

enum class ESortState:int
{
	Empty_Arrow = 0x0,
	Up_Arrow = 0x1,
	Down_Arrow = 0x2
};

enum class EExportFilterFlags:unsigned char
{
	None = 0x0,
	NotForClient = 0x1,
	NotForServer = 0x2
};

enum class EEventLoadNodeExecutionResult:unsigned char
{
	Timeout = 0x0,
	Complete = 0x1
};

namespace EBTDecoratorLogic
{
	enum Type:int
	{
		Invalid = 0x0,
		Test = 0x1,
		And = 0x2,
		Or = 0x3,
		Not = 0x4
	};
}

enum class EBTChildIndex:unsigned char
{
	FirstNode = 0x0,
	TaskNode = 0x1
};

enum class BattleyePlayerStatus:int
{
	BE_NewPlayerPendingAdd = 0x0,
	BE_Connected = 0x1,
	BE_PendingRemoval = 0x2
};

enum class EAsyncPackageLoadingState2:unsigned char
{
	NewPackage = 0x0,
	WaitingForIo = 0x1,
	ProcessPackageSummary = 0x2,
	SetupDependencies = 0x3,
	ProcessExportBundles = 0x4,
	WaitingForExternalReads = 0x5,
	ExportsDone = 0x6,
	PostLoad = 0x7,
	DeferredPostLoad = 0x8,
	DeferredPostLoadDone = 0x9,
	Finalize = 0xA,
	PostLoadInstances = 0xB,
	CreateClusters = 0xC,
	Complete = 0xD,
	DeferredDelete = 0xE
};

enum class EPathFollowingReachMode:unsigned char
{
	ExactLocation = 0x0,
	OverlapAgent = 0x1,
	OverlapGoal = 0x2,
	OverlapAgentAndGoal = 0x3
};

enum class EWorldPartitionInitState:int
{
	Uninitialized = 0x0,
	Initializing = 0x1,
	Initialized = 0x2,
	Uninitializing = 0x3
};

enum class EGCOptions:unsigned int
{
	None = 0x0,
	Parallel = 0x1,
	AutogenerateTokenStream = 0x2,
	WithClusters = 0x4,
	ProcessWeakReferences = 0x8,
	WithPendingKill = 0x10
};

namespace FAudioSynesthesiaCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		VersionPlusOne = 0x1,
		LatestVersion = 0x0
	};
}

enum class EOnlineActivityOutcome:int
{
	Completed = 0x0,
	Failed = 0x1,
	Cancelled = 0x2
};

enum class EDataLayerRuntimeState:unsigned char
{
	Unloaded = 0x0,
	Loaded = 0x1,
	Activated = 0x2
};

enum class EWorldPartitionRuntimeCellState:unsigned char
{
	Unloaded = 0x0,
	Loaded = 0x1,
	Activated = 0x2
};

enum class EWorldPartitionRuntimeCellVisualizeMode:int
{
	StreamingPriority = 0x0,
	StreamingStatus = 0x1
};

enum class EWorldPartitionStreamingPerformance:unsigned char
{
	Good = 0x0,
	Slow = 0x1,
	Critical = 0x2
};

enum class EDataLayerState:unsigned char
{
	Unloaded = 0x0,
	Loaded = 0x1,
	Activated = 0x2
};

enum class ESaveRealm:unsigned int
{
	Game = 0x0,
	Optional = 0x1,
	Editor = 0x2,
	RealmCount = 0x3,
	None = 0x3
};

enum class EIllegalRefReason:unsigned char
{
	None = 0x0,
	ReferenceToOptional = 0x1,
	ReferenceFromOptionalToMissingGameExport = 0x2,
	UnsaveableClass = 0x3,
	UnsaveableOuter = 0x4
};

enum class ProfilerState:int
{
	PS_Off = 0x0,
	PS_InitForStructures = 0x1,
	PS_InitForDinos = 0x2,
	PS_InitForLocations = 0x3,
	PS_EmptyScene = 0x4,
	PS_Create = 0x5,
	PS_Wait = 0x6,
	PS_Measure = 0x7,
	PS_GC = 0x8,
	PS_OutputStats = 0x9,
	PS_Num = 0xA
};

enum class EAsyncWriteOptions:int
{
	None = 0x0
};

enum class EMIDCreationFlags:unsigned char
{
	None = 0x0,
	Transient = 0x1
};

namespace EHelpPage
{
	enum Type:int
	{
		HELP = 0x0,
		UI = 0x1,
		CRAFTING = 0x2,
		CREATURES = 0x3,
		EXPLORATION = 0x4,
		MAX = 0x5
	};
}

enum class EStrataMaterialExportContext:unsigned char
{
	SMEC_Opaque = 0x0,
	SMEC_Translucent = 0x1
};

enum class EStrataMaterialExport:unsigned char
{
	SME_None = 0x0,
	SME_Diffuse = 0x1,
	SME_Normal = 0x2,
	SME_Emissive = 0x3,
	SME_Transmittance = 0x4,
	SME_MaterialPreview = 0x5
};

enum class ESpeedTreeGeometryType:int
{
	STG_Branch = 0x0,
	STG_Frond = 0x1,
	STG_Leaf = 0x2,
	STG_FacingLeaf = 0x3,
	STG_Billboard = 0x4
};

enum class ESpeedTreeWindType:int
{
	STW_None = 0x0,
	STW_Fastest = 0x1,
	STW_Fast = 0x2,
	STW_Better = 0x3,
	STW_Best = 0x4,
	STW_Palm = 0x5,
	STW_BestPlus = 0x6
};

enum class ESpeedTreeLODType:int
{
	STLOD_Pop = 0x0,
	STLOD_Smooth = 0x1
};

enum class EWorldPositionIncludedOffsets:int
{
	WPT_Default = 0x0,
	WPT_ExcludeAllShaderOffsets = 0x1,
	WPT_CameraRelative = 0x2,
	WPT_CameraRelativeNoOffsets = 0x3,
	WPT_MAX = 0x4
};

enum class EMaterialExposedTextureProperty:int
{
	TMTM_TextureSize = 0x0,
	TMTM_TexelSize = 0x1,
	TMTM_MAX = 0x2
};

enum class EMaterialExposedViewProperty:int
{
	MEVP_BufferSize = 0x0,
	MEVP_FieldOfView = 0x1,
	MEVP_TanHalfFieldOfView = 0x2,
	MEVP_ViewSize = 0x3,
	MEVP_WorldSpaceViewPosition = 0x4,
	MEVP_WorldSpaceCameraPosition = 0x5,
	MEVP_ViewportOffset = 0x6,
	MEVP_TemporalSampleCount = 0x7,
	MEVP_TemporalSampleIndex = 0x8,
	MEVP_TemporalSampleOffset = 0x9,
	MEVP_RuntimeVirtualTextureOutputLevel = 0xA,
	MEVP_RuntimeVirtualTextureOutputDerivative = 0xB,
	MEVP_PreExposure = 0xC,
	MEVP_RuntimeVirtualTextureMaxLevel = 0xD,
	MEVP_ResolutionFraction = 0xE,
	MEVP_MAX = 0xF
};

enum class EMaterialCompilerType:int
{
	Standard = 0x0,
	Lightmass = 0x1,
	MaterialProxy = 0x2
};

enum class EVirtualTextureUnpackType:int
{
	None = 0x0,
	BaseColorYCoCg = 0x1,
	NormalBC3 = 0x2,
	NormalBC5 = 0x3,
	NormalBC3BC3 = 0x4,
	NormalBC5BC1 = 0x5,
	HeightR16 = 0x6,
	NormalBGR565 = 0x7,
	BaseColorSRGB = 0x8,
	NormalPackedSwitch = 0x9
};

enum class DWMNCRENDERINGPOLICY:int
{
	DWMNCRP_USEWINDOWSTYLE = 0x0,
	DWMNCRP_DISABLED = 0x1,
	DWMNCRP_ENABLED = 0x2,
	DWMNCRP_LAST = 0x3
};

enum class DWMWINDOWATTRIBUTE:int
{
	DWMWA_NCRENDERING_ENABLED = 0x1,
	DWMWA_NCRENDERING_POLICY = 0x2,
	DWMWA_TRANSITIONS_FORCEDISABLED = 0x3,
	DWMWA_ALLOW_NCPAINT = 0x4,
	DWMWA_CAPTION_BUTTON_BOUNDS = 0x5,
	DWMWA_NONCLIENT_RTL_LAYOUT = 0x6,
	DWMWA_FORCE_ICONIC_REPRESENTATION = 0x7,
	DWMWA_FLIP3D_POLICY = 0x8,
	DWMWA_EXTENDED_FRAME_BOUNDS = 0x9,
	DWMWA_HAS_ICONIC_BITMAP = 0xA,
	DWMWA_DISALLOW_PEEK = 0xB,
	DWMWA_EXCLUDED_FROM_PEEK = 0xC,
	DWMWA_CLOAK = 0xD,
	DWMWA_CLOAKED = 0xE,
	DWMWA_FREEZE_REPRESENTATION = 0xF,
	DWMWA_LAST = 0x10
};

enum class FILETYPEATTRIBUTEFLAGS:unsigned __int64
{
	FTA_None = 0x0,
	FTA_Exclude = 0x1,
	FTA_Show = 0x2,
	FTA_HasExtension = 0x4,
	FTA_NoEdit = 0x8,
	FTA_NoRemove = 0x10,
	FTA_NoNewVerb = 0x20,
	FTA_NoEditVerb = 0x40,
	FTA_NoRemoveVerb = 0x80,
	FTA_NoEditDesc = 0x100,
	FTA_NoEditIcon = 0x200,
	FTA_NoEditDflt = 0x400,
	FTA_NoEditVerbCmd = 0x800,
	FTA_NoEditVerbExe = 0x1000,
	FTA_NoDDE = 0x2000,
	FTA_NoEditMIME = 0xFFFF8000,
	FTA_OpenIsSafe = 0x10000,
	FTA_AlwaysUnsafe = 0x20000,
	FTA_NoRecentDocs = 0x100000,
	FTA_SafeForElevation = 0x200000,
	FTA_AlwaysUseDirectInvoke = 0x400000
};

enum class EAntiDupeTransactionLog:int
{
	Item_Upload = 0x0,
	Dino_Upload = 0x1,
	Player_Upload = 0x2,
	MAX_ENTRY = 0x3
};

namespace EBTStopMode
{
	enum Type:int
	{
		Safe = 0x0,
		Forced = 0x1
	};
}

namespace EBTNodeUpdateMode
{
	enum Type:int
	{
		Unknown = 0x0,
		Add = 0x1,
		Remove = 0x2
	};
}

namespace EBTExecutionMode
{
	enum Type:int
	{
		SingleRun = 0x0,
		Looped = 0x1
	};
}

namespace EBTTaskStatus
{
	enum Type:int
	{
		Active = 0x0,
		Aborting = 0x1,
		Inactive = 0x2
	};
}

namespace EBTMemoryInit
{
	enum Type:int
	{
		Initialize = 0x0,
		RestoreSubtree = 0x1
	};
}

namespace EBTMemoryClear
{
	enum Type:int
	{
		Destroy = 0x0,
		StoreSubtree = 0x1
	};
}

enum class EConstantQFFTSizeEnum:unsigned char
{
	Min = 0x0,
	XXSmall = 0x1,
	XSmall = 0x2,
	Small = 0x3,
	Medium = 0x4,
	Large = 0x5,
	XLarge = 0x6,
	XXLarge = 0x7,
	Max = 0x8
};

enum class EConstantQNormalizationEnum:unsigned char
{
	EqualEuclideanNorm = 0x0,
	EqualEnergy = 0x1,
	EqualAmplitude = 0x2
};

namespace EBTActiveNode
{
	enum Type:int
	{
		Composite = 0x0,
		ActiveTask = 0x1,
		AbortingTask = 0x2,
		InactiveTask = 0x3
	};
}

namespace EAILogicResuming
{
	enum Type:int
	{
		Continue = 0x0,
		RestartedInstead = 0x1
	};
}

enum class EBTBranchAction:unsigned short
{
	None = 0x0,
	DecoratorEvaluate = 0x1,
	DecoratorActivate_IfNotExecuting = 0x2,
	DecoratorActivate_EvenIfExecuting = 0x4,
	DecoratorActivate = 0x6,
	DecoratorDeactivate = 0x8,
	UnregisterAuxNodes = 0x10,
	StopTree_Safe = 0x20,
	StopTree_Forced = 0x40,
	ActiveNodeEvaluate = 0x80,
	SubTreeEvaluate = 0x100,
	ProcessPendingInitialize = 0x200,
	Cleanup = 0x400,
	UninitializeComponent = 0x800,
	StopTree = 0x60,
	Changing_Topology_Actions = 0xE70,
	All = 0xFFF
};

namespace EBTExecutionSnap
{
	enum Type:int
	{
		Regular = 0x0,
		OutOfNodes = 0x1
	};
}

enum class EBTNodeRelativePriority:unsigned char
{
	Lower = 0x0,
	Same = 0x1,
	Higher = 0x2
};

namespace EBTFlowAbortMode
{
	enum Type:int
	{
		None = 0x0,
		LowerPriority = 0x1,
		Self = 0x2,
		Both = 0x3
	};
}

enum class ETabActivationCause:unsigned char
{
	UserClickedOnTab = 0x0,
	SetDirectly = 0x1
};

enum class ELoudnessCurveTypeEnum:unsigned char
{
	A = 0x0,
	B = 0x1,
	C = 0x2,
	D = 0x3,
	None = 0x4
};

enum class ELoudnessNRTCurveTypeEnum:unsigned char
{
	A = 0x0,
	B = 0x1,
	C = 0x2,
	D = 0x3,
	None = 0x4
};

enum class ERequestedCultureOverrideLevel:unsigned char
{
	CommandLine = 0x0,
	EditorSettings = 0x1,
	GameUserSettings = 0x2,
	GameSettings = 0x3,
	EngineSettings = 0x4,
	Defaults = 0x5
};

enum class ETabRole:unsigned char
{
	MajorTab = 0x0,
	PanelTab = 0x1,
	NomadTab = 0x2,
	DocumentTab = 0x3,
	NumRoles = 0x4
};

enum class OodleLZ_CompressionLevel:int
{
	OodleLZ_CompressionLevel_None = 0x0,
	OodleLZ_CompressionLevel_SuperFast = 0x1,
	OodleLZ_CompressionLevel_VeryFast = 0x2,
	OodleLZ_CompressionLevel_Fast = 0x3,
	OodleLZ_CompressionLevel_Normal = 0x4,
	OodleLZ_CompressionLevel_Optimal1 = 0x5,
	OodleLZ_CompressionLevel_Optimal2 = 0x6,
	OodleLZ_CompressionLevel_Optimal3 = 0x7,
	OodleLZ_CompressionLevel_Optimal4 = 0x8,
	OodleLZ_CompressionLevel_Optimal5 = 0x9,
	OodleLZ_CompressionLevel_HyperFast1 = 0xFF,
	OodleLZ_CompressionLevel_HyperFast2 = 0xFE,
	OodleLZ_CompressionLevel_HyperFast3 = 0xFD,
	OodleLZ_CompressionLevel_HyperFast4 = 0xFC,
	OodleLZ_CompressionLevel_HyperFast = 0xFF,
	OodleLZ_CompressionLevel_Optimal = 0x6,
	OodleLZ_CompressionLevel_Max = 0x9,
	OodleLZ_CompressionLevel_Min = 0xFC,
	OodleLZ_CompressionLevel_Force32 = 0x40000000,
	OodleLZ_CompressionLevel_Invalid = 0x40000000
};

enum class OodleLZ_CheckCRC:int
{
	OodleLZ_CheckCRC_No = 0x0,
	OodleLZ_CheckCRC_Yes = 0x1,
	OodleLZ_CheckCRC_Force32 = 0x40000000
};

enum class OodleLZ_Compressor:int
{
	OodleLZ_Compressor_Invalid = 0xFF,
	OodleLZ_Compressor_None = 0x3,
	OodleLZ_Compressor_Kraken = 0x8,
	OodleLZ_Compressor_Leviathan = 0xD,
	OodleLZ_Compressor_Mermaid = 0x9,
	OodleLZ_Compressor_Selkie = 0xB,
	OodleLZ_Compressor_Hydra = 0xC,
	OodleLZ_Compressor_Count = 0xE,
	OodleLZ_Compressor_Force32 = 0x40000000
};

enum class OodleLZ_Decode_ThreadPhase:int
{
	OodleLZ_Decode_ThreadPhase1 = 0x1,
	OodleLZ_Decode_ThreadPhase2 = 0x2,
	OodleLZ_Decode_ThreadPhaseAll = 0x3,
	OodleLZ_Decode_Unthreaded = 0x3
};

enum class OodleLZ_FuzzSafe:int
{
	OodleLZ_FuzzSafe_No = 0x0,
	OodleLZ_FuzzSafe_Yes = 0x1
};

enum class OodleLZ_Verbosity:int
{
	OodleLZ_Verbosity_None = 0x0,
	OodleLZ_Verbosity_Minimal = 0x1,
	OodleLZ_Verbosity_Some = 0x2,
	OodleLZ_Verbosity_Lots = 0x3,
	OodleLZ_Verbosity_Force32 = 0x40000000
};

enum class dictCtx_directive:int
{
	noDictCtx = 0x0,
	usingDictCtxHc = 0x1
};

enum class repeat_state_e:int
{
	rep_untested = 0x0,
	rep_not = 0x1,
	rep_confirmed = 0x2
};

enum class HCfavor_e:int
{
	favorCompressionRatio = 0x0,
	favorDecompressionSpeed = 0x1
};

enum class endCondition_directive:int
{
	endOnOutputSize = 0x0,
	endOnInputSize = 0x1
};

enum class variable_length_error:int
{
	loop_error = 0xFE,
	initial_error = 0xFF,
	lz4ok = 0x0
};

enum class earlyEnd_directive:int
{
	decode_full_block = 0x0,
	partial_decode = 0x1
};

enum class dict_directive:int
{
	noDict = 0x0,
	withPrefix64k = 0x1,
	usingExtDict = 0x2,
	usingDictCtx = 0x3
};

enum class limitedOutput_directive:int
{
	notLimited = 0x0,
	limitedOutput = 0x1,
	fillOutput = 0x2
};

enum class dictIssue_directive:int
{
	noDictIssue = 0x0,
	dictSmall = 0x1
};

enum class tableType_t:int
{
	clearedTable = 0x0,
	byPtr = 0x1,
	byU32 = 0x2,
	byU16 = 0x3
};

enum class EIoContainerHeaderVersion:unsigned int
{
	Initial = 0x0,
	LocalizedPackages = 0x1,
	OptionalSegmentPackages = 0x2,
	LatestPlusOne = 0x3,
	Latest = 0x2
};

enum class ECoroTimeoutFlags:unsigned char
{
	Suspend_Named = 0x2,
	Suspend_Worker = 0x4,
	Suspend_All = 0x6
};

enum class EIoStoreTocVersion:unsigned char
{
	Invalid = 0x0,
	Initial = 0x1,
	DirectoryIndex = 0x2,
	PartitionSize = 0x3,
	PerfectHash = 0x4,
	PerfectHashWithOverflow = 0x5,
	LatestPlusOne = 0x6,
	Latest = 0x5
};

enum class EIoStoreTocReadOptions:int
{
	Default = 0x0,
	ReadDirectoryIndex = 0x1,
	ReadTocMeta = 0x2,
	ReadAll = 0x3
};

namespace EMaterialSceneAttributeInputMode
{
	enum Type:int
	{
		Coordinates = 0x0,
		OffsetFraction = 0x1
	};
}

enum class OodleDecompressCallbackRet:int
{
	OodleDecompressCallbackRet_Continue = 0x0,
	OodleDecompressCallbackRet_Cancel = 0x1,
	OodleDecompressCallbackRet_Invalid = 0x2,
	OodleDecompressCallbackRet_Force32 = 0x40000000
};

enum class OodleLZ_Profile:int
{
	OodleLZ_Profile_Main = 0x0,
	OodleLZ_Profile_Reduced = 0x1,
	OodleLZ_Profile_Force32 = 0x40000000
};

enum class OodleLZ_Jobify:int
{
	OodleLZ_Jobify_Default = 0x0,
	OodleLZ_Jobify_Disable = 0x1,
	OodleLZ_Jobify_Normal = 0x2,
	OodleLZ_Jobify_Aggressive = 0x3,
	OodleLZ_Jobify_Count = 0x4,
	OodleLZ_Jobify_Force32 = 0x40000000
};

enum class FIoStoreTocEntryMetaFlags:unsigned char
{
	None = 0x0,
	Compressed = 0x1,
	MemoryMapped = 0x2
};

enum class EOldShaderPlatform:int
{
	OSP_PCD3D_SM5 = 0x0,
	OSP_OPENGL_SM4 = 0x1,
	OSP_PS4 = 0x2,
	OSP_OPENGL_PCES2 = 0x3,
	OSP_XBOXONE = 0x4,
	OSP_PCD3D_SM4 = 0x5,
	OSP_OPENGL_SM5 = 0x6,
	OSP_PCD3D_ES2 = 0x7,
	OSP_OPENGL_ES2_ANDROID = 0x8,
	OSP_OPENGL_ES2_WEBGL = 0x9,
	OSP_OPENGL_ES2_IOS = 0xA,
	OSP_METAL = 0xB,
	OSP_OPENGL_SM4_MAC = 0xC,
	OSP_METAL_MRT = 0xD,
	OSP_OPENGL_ES31_EXT = 0xE,
	OSP_PCD3D_ES3_1 = 0xF,
	OSP_OPENGL_PCES3_1 = 0x10,
	OSP_METAL_SM5 = 0x11,
	OSP_VULKAN_PCES3_1 = 0x12,
	OSP_METAL_SM4 = 0x13,
	OSP_VULKAN_SM4 = 0x14,
	OSP_VULKAN_SM5 = 0x15,
	OSP_VULKAN_ES3_1_ANDROID = 0x16,
	OSP_METAL_MACES3_1 = 0x17,
	OSP_METAL_MACES2 = 0x18,
	OSP_OPENGL_ES3_1_ANDROID = 0x19,
	OSP_SWITCH = 0x1A,
	OSP_SWITCH_FORWARD = 0x1B,
	OSP_NumPlatforms = 0x1C
};

/*enum class MULTICAST_MODE_TYPE :int
{
	MCAST_INCLUDE = 0x0,
	MCAST_EXCLUDE = 0x1
};*/

enum class ESocketBSDReturn:unsigned char
{
	Yes = 0x0,
	No = 0x1,
	EncounteredError = 0x2
};

enum class ESocketBSDParam:unsigned char
{
	CanRead = 0x0,
	CanWrite = 0x1,
	HasError = 0x2
};

enum class EPackageStoreEntryFlags:unsigned int
{
	None = 0x0,
	Redirected = 0x1,
	AutoOptional = 0x2
};

enum class EPackageStoreEntryStatus:int
{
	None = 0x0,
	Missing = 0x1,
	Pending = 0x2,
	Ok = 0x3
};

enum class EHostProtocol:int
{
	CookOnTheFly = 0x0
};

namespace EClimbingMode
{
	enum Type:int
	{
		None = 0x0,
		Attached = 0x1,
		Finalizing = 0x2,
		MAX = 0x3
	};
}

enum class EDesiredImageFormat:unsigned char
{
	PNG = 0x0,
	JPG = 0x1,
	BMP = 0x2,
	EXR = 0x3
};

enum class EPrimalStructureElevatorState:int
{
	PSLS_Down = 0x0,
	PSLS_Up = 0x1
};

enum class EAudioRadialSliderLayout:int
{
	Layout_LabelTop = 0x0,
	Layout_LabelCenter = 0x1,
	Layout_LabelBottom = 0x2
};

namespace ECheatActorType
{
	enum Type:int
	{
		Pawns = 0x0,
		Dino = 0x1,
		Player = 0x2,
		Tame = 0x3,
		Wild = 0x4,
		Structure = 0x5,
		MAX = 0x6
	};
}

enum class EMeterPeakType:unsigned char
{
	MeanSquared = 0x0,
	RootMeanSquared = 0x1,
	Peak = 0x2,
	Count = 0x3
};

enum class mi_collect_e:int
{
	MI_NORMAL = 0x0,
	MI_FORCE = 0x1,
	MI_ABANDON = 0x2
};

enum class mi_init_e:int
{
	UNINIT = 0x0,
	DEFAULTED = 0x1,
	INITIALIZED = 0x2
};

enum class mi_segment_kind_e:int
{
	MI_SEGMENT_NORMAL = 0x0,
	MI_SEGMENT_HUGE = 0x1
};

enum class mi_option_e:int
{
	mi_option_show_errors = 0x0,
	mi_option_show_stats = 0x1,
	mi_option_verbose = 0x2,
	mi_option_eager_commit = 0x3,
	mi_option_eager_region_commit = 0x4,
	mi_option_reset_decommits = 0x5,
	mi_option_large_os_pages = 0x6,
	mi_option_reserve_huge_os_pages = 0x7,
	mi_option_reserve_os_memory = 0x8,
	mi_option_segment_cache = 0x9,
	mi_option_page_reset = 0xA,
	mi_option_abandoned_page_reset = 0xB,
	mi_option_segment_reset = 0xC,
	mi_option_eager_commit_delay = 0xD,
	mi_option_allow_decommit = 0xE,
	mi_option_reset_delay = 0xF,
	mi_option_segment_decommit_delay = 0x10,
	mi_option_use_numa_nodes = 0x11,
	mi_option_limit_os_alloc = 0x12,
	mi_option_os_tag = 0x13,
	mi_option_max_errors = 0x14,
	mi_option_max_warnings = 0x15,
	_mi_option_last = 0x16
};

enum class mi_memory_order_e:int
{
	mi_memory_order_relaxed = 0x0,
	mi_memory_order_consume = 0x1,
	mi_memory_order_acquire = 0x2,
	mi_memory_order_release = 0x3,
	mi_memory_order_acq_rel = 0x4,
	mi_memory_order_seq_cst = 0x5
};

enum class mi_delayed_e:int
{
	MI_USE_DELAYED_FREE = 0x0,
	MI_DELAYED_FREEING = 0x1,
	MI_NO_DELAYED_FREE = 0x2,
	MI_NEVER_DELAYED_FREE = 0x3
};

enum class mi_page_kind_e:int
{
	MI_PAGE_SMALL = 0x0,
	MI_PAGE_MEDIUM = 0x1,
	MI_PAGE_LARGE = 0x2,
	MI_PAGE_HUGE = 0x3
};

enum class EStyleColor:unsigned char
{
	Black = 0x0,
	Background = 0x1,
	Title = 0x2,
	WindowBorder = 0x3,
	Foldout = 0x4,
	Input = 0x5,
	InputOutline = 0x6,
	Recessed = 0x7,
	Panel = 0x8,
	Header = 0x9,
	Dropdown = 0xA,
	DropdownOutline = 0xB,
	Hover = 0xC,
	Hover2 = 0xD,
	White = 0xE,
	White25 = 0xF,
	Highlight = 0x10,
	Primary = 0x11,
	PrimaryHover = 0x12,
	PrimaryPress = 0x13,
	Secondary = 0x14,
	Foreground = 0x15,
	ForegroundHover = 0x16,
	ForegroundInverted = 0x17,
	ForegroundHeader = 0x18,
	Select = 0x19,
	SelectInactive = 0x1A,
	SelectParent = 0x1B,
	SelectHover = 0x1C,
	Notifications = 0x1D,
	AccentBlue = 0x1E,
	AccentPurple = 0x1F,
	AccentPink = 0x20,
	AccentRed = 0x21,
	AccentOrange = 0x22,
	AccentYellow = 0x23,
	AccentGreen = 0x24,
	AccentBrown = 0x25,
	AccentBlack = 0x26,
	AccentGray = 0x27,
	AccentWhite = 0x28,
	AccentFolder = 0x29,
	Warning = 0x2A,
	Error = 0x2B,
	Success = 0x2C,
	User1 = 0x2D,
	User2 = 0x2E,
	User3 = 0x2F,
	User4 = 0x30,
	User5 = 0x31,
	User6 = 0x32,
	User7 = 0x33,
	User8 = 0x34,
	User9 = 0x35,
	User10 = 0x36,
	User11 = 0x37,
	User12 = 0x38,
	User13 = 0x39,
	User14 = 0x3A,
	User15 = 0x3B,
	User16 = 0x3C,
	MAX = 0x3D
};

enum class EEventLoadNode:int
{
	Package_LoadSummary = 0x0,
	Package_SetupImports = 0x1,
	Package_ExportsSerialized = 0x2,
	Package_NumPhases = 0x3,
	ImportOrExport_Create = 0x0,
	ImportOrExport_Serialize = 0x1,
	Import_NumPhases = 0x2,
	Export_StartIO = 0x2,
	Export_NumPhases = 0x3,
	MAX_NumPhases = 0x3,
	Invalid_Value = 0xFF
};

enum class EAsyncPackageLoadingState:unsigned char
{
	NewPackage = 0x0,
	WaitingForSummary = 0x1,
	StartImportPackages = 0x2,
	WaitingForImportPackages = 0x3,
	SetupImports = 0x4,
	SetupExports = 0x5,
	ProcessNewImportsAndExports = 0x6,
	WaitingForPostLoad = 0x7,
	ReadyForPostLoad = 0x8,
	PostLoad_Etc = 0x9,
	PackageComplete = 0xA
};

enum class pffft_direction_t:int
{
	PFFFT_FORWARD = 0x0,
	PFFFT_BACKWARD = 0x1
};

enum class pffft_transform_t:int
{
	PFFFT_REAL = 0x0,
	PFFFT_COMPLEX = 0x1
};

enum class ERaQualityMode:unsigned char
{
	STEREO_PANNING = 0x0,
	BINAURAL_LOW = 0x1,
	BINAURAL_MEDIUM = 0x2,
	BINAURAL_HIGH = 0x3
};

enum class ERaSpatializationMethod:unsigned char
{
	STEREO_PANNING = 0x0,
	HRTF = 0x1
};

enum class ERaDistanceRolloffModel:unsigned char
{
	LOGARITHMIC = 0x0,
	LINEAR = 0x1,
	NONE = 0x2
};

enum class EResonanceRenderMode:unsigned char
{
	StereoPanning = 0x0,
	BinauralLowQuality = 0x1,
	BinauralMediumQuality = 0x2,
	BinauralHighQuality = 0x3,
	RoomEffectsOnly = 0x4
};

enum class EEntryCategory:unsigned char
{
	LearnedNotes = 0x0,
	TheIsland = 0x1,
	ScorchedEarth = 0x2,
	Aberration = 0x3,
	Extinction = 0x4,
	Genesis1 = 0x5,
	Genesis2 = 0x6,
	MAX_COUNT = 0x7
};

enum class EntryType:int
{
	TYPE_HELENA = 0x0,
	TYPE_ROCKWELL = 0x1,
	TYPE_MEIYIN = 0x2,
	TYPE_NERVA = 0x3,
	TYPE_BOSSES = 0x4,
	TYPE_DOSSIER = 0x5,
	TYPE_RAIA = 0x6,
	TYPE_DAHKEYA = 0x7,
	TYPE_GRADUATE = 0x8,
	TYPE_DIANA = 0x9,
	TYPE_SHEWHOWAITS = 0xA,
	TYPE_SANTIAGO = 0xB,
	TYPE_HLNABOT = 0xC,
	TYPE_NIDA = 0xD,
	TYPE_GABRIEL = 0xE,
	MAX_COUNT = 0xF,
	TYPE_NONE = 0xFF
};

namespace EBlackboardDescription
{
	enum Type:int
	{
		OnlyValue = 0x0,
		KeyWithValue = 0x1,
		DetailedKeyWithValue = 0x2,
		Full = 0x3
	};
}

namespace EArithmeticKeyOperation
{
	enum Type:int
	{
		Equal = 0x0,
		NotEqual = 0x1,
		Less = 0x2,
		LessOrEqual = 0x3,
		Greater = 0x4,
		GreaterOrEqual = 0x5
	};
}

namespace ETextKeyOperation
{
	enum Type:int
	{
		Equal = 0x0,
		NotEqual = 0x1,
		Contain = 0x2,
		NotContain = 0x3
	};
}

namespace EBlackboardKeyOperation
{
	enum Type:int
	{
		Basic = 0x0,
		Arithmetic = 0x1,
		Text = 0x2
	};
}

namespace EVisualLoggerVersion
{
	enum Type:int
	{
		Initial = 0x0,
		HistogramGraphsSerialization = 0x1,
		AddedOwnerClassName = 0x2,
		StatusCategoryWithChildren = 0x3,
		TransformationForShapes = 0x4,
		LargeWorldCoordinatesAndLocationValidityFlag = 0x5,
		VersionPlusOne = 0x6,
		LatestVersion = 0x5
	};
}

enum class ETrackedSlateWidgetOperations:unsigned char
{
	AddedTrackedWidget = 0x0,
	RemovedTrackedWidget = 0x1
};

enum class EBlendListTransitionType:unsigned char
{
	StandardBlend = 0x0,
	Inertialization = 0x1
};

namespace EPathFollowingRequestResult
{
	enum Type:int
	{
		Failed = 0x0,
		AlreadyAtGoal = 0x1,
		RequestSuccessful = 0x2
	};
}

namespace EPathFollowingResult
{
	enum Type:int
	{
		Success = 0x0,
		Blocked = 0x1,
		OffPath = 0x2,
		Aborted = 0x3,
		Skipped_DEPRECATED = 0x4,
		Invalid = 0x5
	};
}

namespace ETeamAttitude
{
	enum Type:int
	{
		Friendly = 0x0,
		Neutral = 0x1,
		Hostile = 0x2
	};
}

enum class EGameplayTaskState:unsigned char
{
	Uninitialized = 0x0,
	AwaitingActivation = 0x1,
	Paused = 0x2,
	Active = 0x3,
	Finished = 0x4
};

enum class ETaskResourceOverlapPolicy:unsigned char
{
	StartOnTop = 0x0,
	StartAtEnd = 0x1,
	RequestCancelAndStartOnTop = 0x2,
	RequestCancelAndStartAtEnd = 0x3
};

enum class EPathFollowingVelocityMode:unsigned char
{
	Reset = 0x0,
	Keep = 0x1
};

namespace EPathFollowingAction
{
	enum Type:int
	{
		Error = 0x0,
		NoMove = 0x1,
		DirectMove = 0x2,
		PartialPath = 0x3,
		PathToGoal = 0x4
	};
}

namespace EExtensionType
{
	enum Type:int
	{
		MenuBar = 0x0,
		Menu = 0x1,
		ToolBar = 0x2
	};
}

enum class EGameplayTaskRunResult:unsigned char
{
	Error = 0x0,
	Failed = 0x1,
	Success_Paused = 0x2,
	Success_Active = 0x3,
	Success_Finished = 0x4
};

enum class EGameplayTaskEvent:unsigned char
{
	Add = 0x0,
	Remove = 0x1
};

enum class EStandbyType:int
{
	STDBY_Rx = 0x0,
	STDBY_Tx = 0x1,
	STDBY_BadPing = 0x2,
	STDBY_MAX = 0x3
};

enum class EInteractionType:int
{
	InteractionType_Foliage = 0x0,
	InteractionType_Fluid = 0x1,
	InteractionType_Both = 0x2
};

namespace SDockingNode
{
	enum Type:int
	{
		DockTabStack = 0x0,
		DockSplitter = 0x1,
		DockArea = 0x2,
		PlaceholderNode = 0x3
	};
}

enum class ECustomDepthPassLocation:unsigned int
{
	BeforeBasePass = 0x0,
	AfterBasePass = 0x1
};

namespace EDropItemIconAction
{
	enum Type:int
	{
		DA_NoAction = 0x0,
		DA_Equip = 0x1,
		DA_UnEquip = 0x2,
		DA_AddToSlot = 0x3,
		DA_RemoveFromSlot = 0x4,
		DA_ToRemoteInv = 0x5,
		DA_FromRemoteInv = 0x6,
		DA_RemoteEquip = 0x7,
		DA_MergeItemStack = 0x8,
		DA_SplitItemStack = 0x9,
		DA_SwapItems = 0xA,
		DA_UseWithItem = 0xB,
		DA_UnEquipTransferToLocal = 0xC,
		DA_RemoveItemSkin = 0xD,
		DA_SplitItemStackOne = 0xE,
		DA_RemoveWeaponAmmo = 0xF,
		DA_FromRemoteInvToSlot = 0x10,
		DA_ToRemoteInvFromSlot = 0x11,
		DA_EquipLocalFromRemote = 0x12,
		DA_EquipRemoteFromLocal = 0x13,
		DA_UnequipRemote = 0x14,
		DA_UnequipTransferToRemote = 0x15,
		DA_ToArkInv = 0x16,
		DA_FromArkInv = 0x17,
		MAX = 0x18
	};
}

namespace FolderWidgetType
{
	enum Type:int
	{
		FWT_Back = 0x0,
		FWT_Folder = 0x1,
		FWT_CustomFolder = 0x2
	};
}

enum class ELayoutExtensionPosition:int
{
	Before = 0x0,
	After = 0x1,
	Above = 0x2,
	Below = 0x3
};

enum class EDecalRasterizerState:unsigned char
{
	Undefined = 0x0,
	CCW = 0x1,
	CW = 0x2
};

enum class UConverterType:int
{
	UCNV_UNSUPPORTED_CONVERTER = 0xFF,
	UCNV_SBCS = 0x0,
	UCNV_DBCS = 0x1,
	UCNV_MBCS = 0x2,
	UCNV_LATIN_1 = 0x3,
	UCNV_UTF8 = 0x4,
	UCNV_UTF16_BigEndian = 0x5,
	UCNV_UTF16_LittleEndian = 0x6,
	UCNV_UTF32_BigEndian = 0x7,
	UCNV_UTF32_LittleEndian = 0x8,
	UCNV_EBCDIC_STATEFUL = 0x9,
	UCNV_ISO_2022 = 0xA,
	UCNV_LMBCS_1 = 0xB,
	UCNV_LMBCS_2 = 0xC,
	UCNV_LMBCS_3 = 0xD,
	UCNV_LMBCS_4 = 0xE,
	UCNV_LMBCS_5 = 0xF,
	UCNV_LMBCS_6 = 0x10,
	UCNV_LMBCS_8 = 0x11,
	UCNV_LMBCS_11 = 0x12,
	UCNV_LMBCS_16 = 0x13,
	UCNV_LMBCS_17 = 0x14,
	UCNV_LMBCS_18 = 0x15,
	UCNV_LMBCS_19 = 0x16,
	UCNV_LMBCS_LAST = 0x16,
	UCNV_HZ = 0x17,
	UCNV_SCSU = 0x18,
	UCNV_ISCII = 0x19,
	UCNV_US_ASCII = 0x1A,
	UCNV_UTF7 = 0x1B,
	UCNV_BOCU1 = 0x1C,
	UCNV_UTF16 = 0x1D,
	UCNV_UTF32 = 0x1E,
	UCNV_CESU8 = 0x1F,
	UCNV_IMAP_MAILBOX = 0x20,
	UCNV_COMPOUND_TEXT = 0x21,
	UCNV_NUMBER_OF_SUPPORTED_CONVERTER_TYPES = 0x22
};

enum class UDataFileAccess:int
{
	UDATA_FILES_FIRST = 0x0,
	UDATA_DEFAULT_ACCESS = 0x0,
	UDATA_ONLY_PACKAGES = 0x1,
	UDATA_PACKAGES_FIRST = 0x2,
	UDATA_NO_FILES = 0x3,
	UDATA_FILE_ACCESS_COUNT = 0x4
};

enum class UBiDiDirection:int
{
	UBIDI_LTR = 0x0,
	UBIDI_RTL = 0x1,
	UBIDI_MIXED = 0x2,
	UBIDI_NEUTRAL = 0x3
};

enum class URegexpFlag:int
{
	UREGEX_CANON_EQ = 0x80,
	UREGEX_CASE_INSENSITIVE = 0x2,
	UREGEX_COMMENTS = 0x4,
	UREGEX_DOTALL = 0x20,
	UREGEX_LITERAL = 0x10,
	UREGEX_MULTILINE = 0x8,
	UREGEX_UNIX_LINES = 0x1,
	UREGEX_UWORD = 0x100,
	UREGEX_ERROR_ON_UNKNOWN_ESCAPES = 0x200
};

enum class UPluralType:int
{
	UPLURAL_TYPE_CARDINAL = 0x0,
	UPLURAL_TYPE_ORDINAL = 0x1,
	UPLURAL_TYPE_COUNT = 0x2
};

enum class UDateFormatField:int
{
	UDAT_ERA_FIELD = 0x0,
	UDAT_YEAR_FIELD = 0x1,
	UDAT_MONTH_FIELD = 0x2,
	UDAT_DATE_FIELD = 0x3,
	UDAT_HOUR_OF_DAY1_FIELD = 0x4,
	UDAT_HOUR_OF_DAY0_FIELD = 0x5,
	UDAT_MINUTE_FIELD = 0x6,
	UDAT_SECOND_FIELD = 0x7,
	UDAT_FRACTIONAL_SECOND_FIELD = 0x8,
	UDAT_DAY_OF_WEEK_FIELD = 0x9,
	UDAT_DAY_OF_YEAR_FIELD = 0xA,
	UDAT_DAY_OF_WEEK_IN_MONTH_FIELD = 0xB,
	UDAT_WEEK_OF_YEAR_FIELD = 0xC,
	UDAT_WEEK_OF_MONTH_FIELD = 0xD,
	UDAT_AM_PM_FIELD = 0xE,
	UDAT_HOUR1_FIELD = 0xF,
	UDAT_HOUR0_FIELD = 0x10,
	UDAT_TIMEZONE_FIELD = 0x11,
	UDAT_YEAR_WOY_FIELD = 0x12,
	UDAT_DOW_LOCAL_FIELD = 0x13,
	UDAT_EXTENDED_YEAR_FIELD = 0x14,
	UDAT_JULIAN_DAY_FIELD = 0x15,
	UDAT_MILLISECONDS_IN_DAY_FIELD = 0x16,
	UDAT_TIMEZONE_RFC_FIELD = 0x17,
	UDAT_TIMEZONE_GENERIC_FIELD = 0x18,
	UDAT_STANDALONE_DAY_FIELD = 0x19,
	UDAT_STANDALONE_MONTH_FIELD = 0x1A,
	UDAT_QUARTER_FIELD = 0x1B,
	UDAT_STANDALONE_QUARTER_FIELD = 0x1C,
	UDAT_TIMEZONE_SPECIAL_FIELD = 0x1D,
	UDAT_YEAR_NAME_FIELD = 0x1E,
	UDAT_TIMEZONE_LOCALIZED_GMT_OFFSET_FIELD = 0x1F,
	UDAT_TIMEZONE_ISO_FIELD = 0x20,
	UDAT_TIMEZONE_ISO_LOCAL_FIELD = 0x21,
	UDAT_RELATED_YEAR_FIELD = 0x22,
	UDAT_AM_PM_MIDNIGHT_NOON_FIELD = 0x23,
	UDAT_FLEXIBLE_DAY_PERIOD_FIELD = 0x24,
	UDAT_TIME_SEPARATOR_FIELD = 0x25,
	UDAT_FIELD_COUNT = 0x26
};

enum class UDateFormatBooleanAttribute:int
{
	UDAT_PARSE_ALLOW_WHITESPACE = 0x0,
	UDAT_PARSE_ALLOW_NUMERIC = 0x1,
	UDAT_PARSE_PARTIAL_LITERAL_MATCH = 0x2,
	UDAT_PARSE_MULTIPLE_PATTERNS_FOR_MATCH = 0x3,
	UDAT_BOOLEAN_ATTRIBUTE_COUNT = 0x4
};

enum class UCalendarDateFields:int
{
	UCAL_ERA = 0x0,
	UCAL_YEAR = 0x1,
	UCAL_MONTH = 0x2,
	UCAL_WEEK_OF_YEAR = 0x3,
	UCAL_WEEK_OF_MONTH = 0x4,
	UCAL_DATE = 0x5,
	UCAL_DAY_OF_YEAR = 0x6,
	UCAL_DAY_OF_WEEK = 0x7,
	UCAL_DAY_OF_WEEK_IN_MONTH = 0x8,
	UCAL_AM_PM = 0x9,
	UCAL_HOUR = 0xA,
	UCAL_HOUR_OF_DAY = 0xB,
	UCAL_MINUTE = 0xC,
	UCAL_SECOND = 0xD,
	UCAL_MILLISECOND = 0xE,
	UCAL_ZONE_OFFSET = 0xF,
	UCAL_DST_OFFSET = 0x10,
	UCAL_YEAR_WOY = 0x11,
	UCAL_DOW_LOCAL = 0x12,
	UCAL_EXTENDED_YEAR = 0x13,
	UCAL_JULIAN_DAY = 0x14,
	UCAL_MILLISECONDS_IN_DAY = 0x15,
	UCAL_IS_LEAP_MONTH = 0x16,
	UCAL_FIELD_COUNT = 0x17,
	UCAL_DAY_OF_MONTH = 0x5
};

enum class UResType:int
{
	URES_NONE = 0xFF,
	URES_STRING = 0x0,
	URES_BINARY = 0x1,
	URES_TABLE = 0x2,
	URES_ALIAS = 0x3,
	URES_INT = 0x7,
	URES_ARRAY = 0x8,
	URES_INT_VECTOR = 0xE,
	RES_NONE = 0xFF,
	RES_STRING = 0x0,
	RES_BINARY = 0x1,
	RES_TABLE = 0x2,
	RES_ALIAS = 0x3,
	RES_INT = 0x7,
	RES_ARRAY = 0x8,
	RES_INT_VECTOR = 0xE,
	RES_RESERVED = 0xF,
	URES_LIMIT = 0x10
};

enum class UDateFormatStyle:int
{
	UDAT_FULL = 0x0,
	UDAT_LONG = 0x1,
	UDAT_MEDIUM = 0x2,
	UDAT_SHORT = 0x3,
	UDAT_DEFAULT = 0x2,
	UDAT_RELATIVE = 0x80,
	UDAT_FULL_RELATIVE = 0x80,
	UDAT_LONG_RELATIVE = 0x81,
	UDAT_MEDIUM_RELATIVE = 0x82,
	UDAT_SHORT_RELATIVE = 0x83,
	UDAT_NONE = 0xFF,
	UDAT_PATTERN = 0xFE,
	UDAT_IGNORE = 0xFE
};

enum class UCalendarType:int
{
	UCAL_TRADITIONAL = 0x0,
	UCAL_DEFAULT = 0x0,
	UCAL_GREGORIAN = 0x1
};

enum class UNumberFormatFields:int
{
	UNUM_INTEGER_FIELD = 0x0,
	UNUM_FRACTION_FIELD = 0x1,
	UNUM_DECIMAL_SEPARATOR_FIELD = 0x2,
	UNUM_EXPONENT_SYMBOL_FIELD = 0x3,
	UNUM_EXPONENT_SIGN_FIELD = 0x4,
	UNUM_EXPONENT_FIELD = 0x5,
	UNUM_GROUPING_SEPARATOR_FIELD = 0x6,
	UNUM_CURRENCY_FIELD = 0x7,
	UNUM_PERCENT_FIELD = 0x8,
	UNUM_PERMILL_FIELD = 0x9,
	UNUM_SIGN_FIELD = 0xA,
	UNUM_MEASURE_UNIT_FIELD = 0xB,
	UNUM_COMPACT_FIELD = 0xC,
	UNUM_FIELD_COUNT = 0xD
};

enum class UCurrencySpacing:int
{
	UNUM_CURRENCY_MATCH = 0x0,
	UNUM_CURRENCY_SURROUNDING_MATCH = 0x1,
	UNUM_CURRENCY_INSERT = 0x2,
	UNUM_CURRENCY_SPACING_COUNT = 0x3
};

enum class UNumberFormatRoundingMode:int
{
	UNUM_ROUND_CEILING = 0x0,
	UNUM_ROUND_FLOOR = 0x1,
	UNUM_ROUND_DOWN = 0x2,
	UNUM_ROUND_UP = 0x3,
	UNUM_ROUND_HALFEVEN = 0x4,
	UNUM_FOUND_HALFEVEN = 0x4,
	UNUM_ROUND_HALFDOWN = 0x5,
	UNUM_ROUND_HALFUP = 0x6,
	UNUM_ROUND_UNNECESSARY = 0x7
};

enum class UDisplayContextType:int
{
	UDISPCTX_TYPE_DIALECT_HANDLING = 0x0,
	UDISPCTX_TYPE_CAPITALIZATION = 0x1,
	UDISPCTX_TYPE_DISPLAY_LENGTH = 0x2,
	UDISPCTX_TYPE_SUBSTITUTE_HANDLING = 0x3
};

enum class UNumberFormatStyle:int
{
	UNUM_PATTERN_DECIMAL = 0x0,
	UNUM_DECIMAL = 0x1,
	UNUM_CURRENCY = 0x2,
	UNUM_PERCENT = 0x3,
	UNUM_SCIENTIFIC = 0x4,
	UNUM_SPELLOUT = 0x5,
	UNUM_ORDINAL = 0x6,
	UNUM_DURATION = 0x7,
	UNUM_NUMBERING_SYSTEM = 0x8,
	UNUM_PATTERN_RULEBASED = 0x9,
	UNUM_CURRENCY_ISO = 0xA,
	UNUM_CURRENCY_PLURAL = 0xB,
	UNUM_CURRENCY_ACCOUNTING = 0xC,
	UNUM_CASH_CURRENCY = 0xD,
	UNUM_DECIMAL_COMPACT_SHORT = 0xE,
	UNUM_DECIMAL_COMPACT_LONG = 0xF,
	UNUM_CURRENCY_STANDARD = 0x10,
	UNUM_FORMAT_STYLE_COUNT = 0x11,
	UNUM_DEFAULT = 0x1,
	UNUM_IGNORE = 0x0
};

enum class XXH_alignment:int
{
	XXH_aligned = 0x0,
	XXH_unaligned = 0x1
};

enum class XXH_INLINE_XXH_errorcode:int
{
	XXH_INLINE_XXH_OK = 0x0,
	XXH_INLINE_XXH_ERROR = 0x1
};

enum class ScalableAllocationResult:int
{
	TBBMALLOC_OK = 0x0,
	TBBMALLOC_INVALID_PARAM = 0x1,
	TBBMALLOC_UNSUPPORTED = 0x2,
	TBBMALLOC_NO_MEMORY = 0x3,
	TBBMALLOC_NO_EFFECT = 0x4
};

enum class AllocationModeParam:int
{
	TBBMALLOC_USE_HUGE_PAGES = 0x0,
	USE_HUGE_PAGES = 0x0,
	TBBMALLOC_SET_SOFT_HEAP_LIMIT = 0x1,
	TBBMALLOC_SET_HUGE_SIZE_THRESHOLD = 0x2
};

enum class ULocDataLocaleType:int
{
	ULOC_ACTUAL_LOCALE = 0x0,
	ULOC_VALID_LOCALE = 0x1,
	ULOC_REQUESTED_LOCALE = 0x2,
	ULOC_DATA_LOCALE_TYPE_LIMIT = 0x3
};

enum class ETabDrawerOpenDirection:unsigned char
{
	Left = 0x0,
	Right = 0x1,
	Bottom = 0x2
};

enum class UCharIteratorOrigin:int
{
	UITER_START = 0x0,
	UITER_CURRENT = 0x1,
	UITER_LIMIT = 0x2,
	UITER_ZERO = 0x3,
	UITER_LENGTH = 0x4
};

enum class UColBoundMode:int
{
	UCOL_BOUND_LOWER = 0x0,
	UCOL_BOUND_UPPER = 0x1,
	UCOL_BOUND_UPPER_LONG = 0x2,
	UCOL_BOUND_VALUE_COUNT = 0x3
};

enum class USetSpanCondition:int
{
	USET_SPAN_NOT_CONTAINED = 0x0,
	USET_SPAN_CONTAINED = 0x1,
	USET_SPAN_SIMPLE = 0x2,
	USET_SPAN_CONDITION_COUNT = 0x3
};

enum class UDisplayContext:int
{
	UDISPCTX_STANDARD_NAMES = 0x0,
	UDISPCTX_DIALECT_NAMES = 0x1,
	UDISPCTX_CAPITALIZATION_NONE = 0x100,
	UDISPCTX_CAPITALIZATION_FOR_MIDDLE_OF_SENTENCE = 0x101,
	UDISPCTX_CAPITALIZATION_FOR_BEGINNING_OF_SENTENCE = 0x102,
	UDISPCTX_CAPITALIZATION_FOR_UI_LIST_OR_MENU = 0x103,
	UDISPCTX_CAPITALIZATION_FOR_STANDALONE = 0x104,
	UDISPCTX_LENGTH_FULL = 0x200,
	UDISPCTX_LENGTH_SHORT = 0x201,
	UDISPCTX_SUBSTITUTE = 0x300,
	UDISPCTX_NO_SUBSTITUTE = 0x301
};

enum class USystemTimeZoneType:int
{
	UCAL_ZONE_TYPE_ANY = 0x0,
	UCAL_ZONE_TYPE_CANONICAL = 0x1,
	UCAL_ZONE_TYPE_CANONICAL_LOCATION = 0x2
};

enum class UCalendarWallTimeOption:int
{
	UCAL_WALLTIME_LAST = 0x0,
	UCAL_WALLTIME_FIRST = 0x1,
	UCAL_WALLTIME_NEXT_VALID = 0x2
};

enum class UCalendarDaysOfWeek:int
{
	UCAL_SUNDAY = 0x1,
	UCAL_MONDAY = 0x2,
	UCAL_TUESDAY = 0x3,
	UCAL_WEDNESDAY = 0x4,
	UCAL_THURSDAY = 0x5,
	UCAL_FRIDAY = 0x6,
	UCAL_SATURDAY = 0x7
};

enum class UCalendarWeekdayType:int
{
	UCAL_WEEKDAY = 0x0,
	UCAL_WEEKEND = 0x1,
	UCAL_WEEKEND_ONSET = 0x2,
	UCAL_WEEKEND_CEASE = 0x3
};

enum class EBreakIteratorType:int
{
	Grapheme = 0x0,
	Word = 0x1,
	Line = 0x2,
	Sentence = 0x3,
	Title = 0x4
};

enum class EBlockCanary:unsigned char
{
	Zero = 0x0,
	Value = 0xE3
};

enum class ETextHitPoint:unsigned char
{
	WithinText = 0x0,
	LeftGutter = 0x1,
	RightGutter = 0x2
};

namespace ETraceType
{
	enum Type:int
	{
		TT_LineTrace = 0x0,
		TT_ArcTrace = 0x1,
		TT_Max = 0x2
	};
}

enum class UNumberFormatAttributeValue:int
{
	UNUM_NO = 0x0,
	UNUM_YES = 0x1,
	UNUM_MAYBE = 0x2
};

enum class UNumberFormatAttribute:int
{
	UNUM_PARSE_INT_ONLY = 0x0,
	UNUM_GROUPING_USED = 0x1,
	UNUM_DECIMAL_ALWAYS_SHOWN = 0x2,
	UNUM_MAX_INTEGER_DIGITS = 0x3,
	UNUM_MIN_INTEGER_DIGITS = 0x4,
	UNUM_INTEGER_DIGITS = 0x5,
	UNUM_MAX_FRACTION_DIGITS = 0x6,
	UNUM_MIN_FRACTION_DIGITS = 0x7,
	UNUM_FRACTION_DIGITS = 0x8,
	UNUM_MULTIPLIER = 0x9,
	UNUM_GROUPING_SIZE = 0xA,
	UNUM_ROUNDING_MODE = 0xB,
	UNUM_ROUNDING_INCREMENT = 0xC,
	UNUM_FORMAT_WIDTH = 0xD,
	UNUM_PADDING_POSITION = 0xE,
	UNUM_SECONDARY_GROUPING_SIZE = 0xF,
	UNUM_SIGNIFICANT_DIGITS_USED = 0x10,
	UNUM_MIN_SIGNIFICANT_DIGITS = 0x11,
	UNUM_MAX_SIGNIFICANT_DIGITS = 0x12,
	UNUM_LENIENT_PARSE = 0x13,
	UNUM_PARSE_ALL_INPUT = 0x14,
	UNUM_SCALE = 0x15,
	UNUM_MINIMUM_GROUPING_DIGITS = 0x16,
	UNUM_CURRENCY_USAGE = 0x17,
	UNUM_MAX_NONBOOLEAN_ATTRIBUTE = 0xFFF,
	UNUM_FORMAT_FAIL_IF_MORE_THAN_MAX_DIGITS = 0x1000,
	UNUM_PARSE_NO_EXPONENT = 0x1001,
	UNUM_PARSE_DECIMAL_MARK_REQUIRED = 0x1002,
	UNUM_PARSE_CASE_SENSITIVE = 0x1003,
	UNUM_SIGN_ALWAYS_SHOWN = 0x1004,
	UNUM_LIMIT_BOOLEAN_ATTRIBUTE = 0x1005
};

enum class UCurrencyUsage:int
{
	UCURR_USAGE_STANDARD = 0x0,
	UCURR_USAGE_CASH = 0x1,
	UCURR_USAGE_COUNT = 0x2
};

namespace ESeedCropPhase
{
	enum Type:int
	{
		Seedling = 0x0,
		Midling = 0x1,
		Growthling = 0x2,
		Fruiting = 0x3,
		MAX = 0x4
	};
}

enum class EHangulTextWrappingMethod:unsigned char
{
	PerSyllable = 0x0,
	PerWord = 0x1
};

enum class EAmbientOcclusionMethod:int
{
	Disabled = 0x0,
	SSAO = 0x1,
	SSGI = 0x2,
	RTAO = 0x3
};

enum class EVelocityPass:unsigned int
{
	Opaque = 0x0,
	Translucent = 0x1,
	Count = 0x2
};

enum class ESkyAtmospherePassLocation:unsigned int
{
	BeforeOcclusion = 0x0,
	BeforeBasePass = 0x1
};

enum class ETranslucencyView:int
{
	None = 0x0,
	UnderWater = 0x1,
	AboveWater = 0x2,
	RayTracing = 0x4
};

enum class EHairStrandsCompositionType:unsigned char
{
	BeforeTranslucent = 0x0,
	AfterTranslucent = 0x1,
	AfterSeparateTranslucent = 0x2,
	AfterTranslucentBeforeTranslucentAfterDOF = 0x3
};

enum class EOITSortingType:int
{
	SortedTriangles = 0x0,
	SortedPixels = 0x1
};

enum class FTriangleSortingOrder:int
{
	FrontToBack = 0x0,
	BackToFront = 0x1
};

enum class ERayTracingPipelineCompatibilityFlags:int
{
	FullPipeline = 0x1,
	Inline = 0x2
};

enum class ETextFilterExpressionType:unsigned char
{
	Invalid = 0x0,
	Empty = 0x1,
	BasicString = 0x2,
	Complex = 0x3
};

enum class ETextFilterExpressionEvaluatorMode:unsigned char
{
	BasicString = 0x0,
	Complex = 0x1
};

enum class EColorGradingModes:int
{
	Saturation = 0x0,
	Contrast = 0x1,
	Gamma = 0x2,
	Gain = 0x3,
	Offset = 0x4,
	Invalid = 0x5
};

namespace EColorChannelTarget
{
	enum Type:int
	{
		Red = 0x0,
		Green = 0x1,
		Blue = 0x2,
		Alpha = 0x3,
		All = 0x4
	};
}

enum class EColorPickerChannels:int
{
	Red = 0x0,
	Green = 0x1,
	Blue = 0x2,
	Alpha = 0x3,
	Hue = 0x4,
	Saturation = 0x5,
	Value = 0x6
};

enum class EColorPickerModes:int
{
	Spectrum = 0x0,
	Wheel = 0x1
};

enum class ECustomizedToolMenuVisibility:int
{
	None = 0x0,
	Visible = 0x1,
	Hidden = 0x2
};

enum class ELumenReflectionPass:int
{
	Opaque = 0x0,
	SingleLayerWater = 0x1,
	FrontLayerTranslucency = 0x2
};

enum class ERayTracingPrimaryRaysFlag:unsigned int
{
	None = 0x0,
	UseGBufferForMaxDistance = 0x1,
	PrimaryView = 0x2,
	AllowSkipSkySample = 0x4
};

enum class ECbValidateMode:unsigned int
{
	None = 0x0,
	Default = 0x1,
	Names = 0x2,
	Format = 0x4,
	Padding = 0x8,
	Package = 0x10,
	PackageHash = 0x20,
	All = 0x3F
};

enum class ECbValidateError:unsigned int
{
	None = 0x0,
	OutOfBounds = 0x1,
	InvalidType = 0x2,
	DuplicateName = 0x4,
	MissingName = 0x8,
	ArrayName = 0x10,
	InvalidString = 0x20,
	InvalidInteger = 0x40,
	InvalidFloat = 0x80,
	NonUniformObject = 0x100,
	NonUniformArray = 0x200,
	Padding = 0x400,
	InvalidPackageFormat = 0x800,
	InvalidPackageHash = 0x1000,
	DuplicateAttachments = 0x2000,
	MultiplePackageObjects = 0x4000,
	NullPackageObject = 0xFFFF8000,
	NullPackageAttachment = 0x10000
};

enum class ECrashExitCodes:int
{
	MonitoredApplicationStillRunning = 0xBDB29,
	MonitoredApplicationExitCodeNotAvailable = 0xBDB2A,
	CrashReporterCrashed = 0xBDB2B,
	CrashHandlerCrashed = 0xBDB2C,
	OutOfProcessReporterExitedUnexpectedly = 0xBDB2D,
	CrashDuringStaticInit = 0xBDB2E,
	OutOfProcessReporterCheckFailed = 0xBDB2F,
	UnhandledEnsure = 0xBDB30
};

enum class SYM_TYPE:int
{
	SymNone = 0x0,
	SymCoff = 0x1,
	SymCv = 0x2,
	SymPdb = 0x3,
	SymExport = 0x4,
	SymDeferred = 0x5,
	SymSym = 0x6,
	SymDia = 0x7,
	SymVirtual = 0x8,
	NumSymTypes = 0x9
};

enum class ADDRESS_MODE:int
{
	AddrMode1616 = 0x0,
	AddrMode1632 = 0x1,
	AddrModeReal = 0x2,
	AddrModeFlat = 0x3
};

enum class GAME_INSTALL_SCOPE:int
{
	GIS_NOT_INSTALLED = 0x1,
	GIS_CURRENT_USER = 0x2,
	GIS_ALL_USERS = 0x3
};

enum class SHGFP_TYPE:int
{
	SHGFP_TYPE_CURRENT = 0x0,
	SHGFP_TYPE_DEFAULT = 0x1
};

enum class SERVERDATA_sent:int
{
	SERVERDATA_AUTH = 0x3,
	SERVERDATA_EXECCOMMAND = 0x2,
	SERVERDATA_AUTH_RESPONSE = 0x2,
	SERVERDATA_RESPONSE_VALUE = 0x0
};

enum class FGCLockBehavior:int
{
	Default = 0x0,
	Legacy = 0x1
};

enum class EScreenProbeIndirectArgs:int
{
	GroupPerProbe = 0x0,
	ThreadPerProbe = 0x1,
	ThreadPerTrace = 0x2,
	ThreadPerGather = 0x3,
	ThreadPerGatherWithBorder = 0x4,
	ThreadPerLightSample = 0x5,
	Max = 0x6
};

enum class ECrashDumpMode:int
{
	Default = 0x0,
	FullDump = 0x1,
	FullDumpAlways = 0x2
};

enum class ECrashDescVersions:int
{
	VER_1_NewCrashFormat = 0x0,
	VER_2_AddedNewProperties = 0x1,
	VER_3_CrashContext = 0x3
};

enum class ERadiosityIndirectArgs:int
{
	NumTracesDiv64 = 0x0,
	NumTracesDiv32 = 0xC,
	ThreadPerProbe = 0x18,
	ThreadPerRadiosityTexel = 0x24,
	HardwareRayTracingThreadPerTrace = 0x30,
	MAX = 0x5
};

enum class NSVGlineCap:int
{
	NSVG_CAP_BUTT = 0x0,
	NSVG_CAP_ROUND = 0x1,
	NSVG_CAP_SQUARE = 0x2
};

enum class NSVGlineJoin:int
{
	NSVG_JOIN_MITER = 0x0,
	NSVG_JOIN_ROUND = 0x1,
	NSVG_JOIN_BEVEL = 0x2
};

enum class NSVGgradientUnits:int
{
	NSVG_USER_SPACE = 0x0,
	NSVG_OBJECT_SPACE = 0x1
};

enum class NSVGfillRule:int
{
	NSVG_FILLRULE_NONZERO = 0x0,
	NSVG_FILLRULE_EVENODD = 0x1
};

enum class NSVGspreadType:int
{
	NSVG_SPREAD_PAD = 0x0,
	NSVG_SPREAD_REFLECT = 0x1,
	NSVG_SPREAD_REPEAT = 0x2
};

enum class NSVGpointFlags:int
{
	NSVG_PT_CORNER = 0x1,
	NSVG_PT_BEVEL = 0x2,
	NSVG_PT_LEFT = 0x4
};

enum class NSVGpaintType:int
{
	NSVG_PAINT_NONE = 0x0,
	NSVG_PAINT_COLOR = 0x1,
	NSVG_PAINT_LINEAR_GRADIENT = 0x2,
	NSVG_PAINT_RADIAL_GRADIENT = 0x3
};

enum class NSVGunits:int
{
	NSVG_UNITS_USER = 0x0,
	NSVG_UNITS_PX = 0x1,
	NSVG_UNITS_PT = 0x2,
	NSVG_UNITS_PC = 0x3,
	NSVG_UNITS_MM = 0x4,
	NSVG_UNITS_CM = 0x5,
	NSVG_UNITS_IN = 0x6,
	NSVG_UNITS_PERCENT = 0x7,
	NSVG_UNITS_EM = 0x8,
	NSVG_UNITS_EX = 0x9
};

enum class NSVGflags:int
{
	NSVG_FLAGS_VISIBLE = 0x1
};

enum class EWindowsRHI:int
{
	D3D11 = 0x0,
	D3D12 = 0x1,
	Vulkan = 0x2,
	OpenGL = 0x3,
	count = 0x4
};

enum class EDownsampleQuality:unsigned char
{
	Low = 0x0,
	High = 0x1,
	MAX = 0x2
};

enum class EFXAAQuality:unsigned int
{
	Q0 = 0x0,
	Q1 = 0x1,
	Q2 = 0x2,
	Q3 = 0x3,
	Q4 = 0x4,
	Q5 = 0x5,
	MAX = 0x6
};

enum class EResourceType:int
{
	BUFFER = 0x0,
	STRUCTURED_BUFFER = 0x1,
	BYTEBUFFER = 0x2,
	TEXTURE = 0x3
};

enum class EPathPermissionListType:int
{
	Default = 0x0,
	ClassPaths = 0x1
};

enum class EBloomQuality:unsigned int
{
	Disabled = 0x0,
	Q1 = 0x1,
	Q2 = 0x2,
	Q3 = 0x3,
	Q4 = 0x4,
	Q5 = 0x5,
	MAX = 0x6
};

enum class EByteBufferResourceType:int
{
	Float4_Buffer = 0x0,
	Float4_StructuredBuffer = 0x1,
	Uint_Buffer = 0x2,
	Uint4Aligned_Buffer = 0x3,
	Float4_Texture = 0x4,
	Count = 0x5
};

enum class EDownsampleFlags:unsigned char
{
	None = 0x0,
	ForceRaster = 0x1
};

enum class _MINIDUMP_STREAM_TYPE:unsigned __int64
{
	UnusedStream = 0x0,
	ReservedStream0 = 0x1,
	ReservedStream1 = 0x2,
	ThreadListStream = 0x3,
	ModuleListStream = 0x4,
	MemoryListStream = 0x5,
	ExceptionStream = 0x6,
	SystemInfoStream = 0x7,
	ThreadExListStream = 0x8,
	Memory64ListStream = 0x9,
	CommentStreamA = 0xA,
	CommentStreamW = 0xB,
	HandleDataStream = 0xC,
	FunctionTableStream = 0xD,
	UnloadedModuleListStream = 0xE,
	MiscInfoStream = 0xF,
	MemoryInfoListStream = 0x10,
	ThreadInfoListStream = 0x11,
	HandleOperationListStream = 0x12,
	TokenStream = 0x13,
	JavaScriptDataStream = 0x14,
	SystemMemoryInfoStream = 0x15,
	ProcessVmCountersStream = 0x16,
	IptTraceStream = 0x17,
	ThreadNamesStream = 0x18,
	ceStreamNull = 0xFFFF8000,
	ceStreamSystemInfo = 0xFFFF8001,
	ceStreamException = 0xFFFF8002,
	ceStreamModuleList = 0xFFFF8003,
	ceStreamProcessList = 0xFFFF8004,
	ceStreamThreadList = 0xFFFF8005,
	ceStreamThreadContextList = 0xFFFF8006,
	ceStreamThreadCallStackList = 0xFFFF8007,
	ceStreamMemoryVirtualList = 0xFFFF8008,
	ceStreamMemoryPhysicalList = 0xFFFF8009,
	ceStreamBucketParameters = 0xFFFF800A,
	ceStreamProcessModuleMap = 0xFFFF800B,
	ceStreamDiagnosisList = 0xFFFF800C,
	LastReservedStream = 0xFFFFFFFF
};

enum class _MINIDUMP_TYPE:unsigned __int64
{
	MiniDumpNormal = 0x0,
	MiniDumpWithDataSegs = 0x1,
	MiniDumpWithFullMemory = 0x2,
	MiniDumpWithHandleData = 0x4,
	MiniDumpFilterMemory = 0x8,
	MiniDumpScanMemory = 0x10,
	MiniDumpWithUnloadedModules = 0x20,
	MiniDumpWithIndirectlyReferencedMemory = 0x40,
	MiniDumpFilterModulePaths = 0x80,
	MiniDumpWithProcessThreadData = 0x100,
	MiniDumpWithPrivateReadWriteMemory = 0x200,
	MiniDumpWithoutOptionalData = 0x400,
	MiniDumpWithFullMemoryInfo = 0x800,
	MiniDumpWithThreadInfo = 0x1000,
	MiniDumpWithCodeSegs = 0x2000,
	MiniDumpWithoutAuxiliaryState = 0x4000,
	MiniDumpWithFullAuxiliaryState = 0xFFFF8000,
	MiniDumpWithPrivateWriteCopyMemory = 0x10000,
	MiniDumpIgnoreInaccessibleMemory = 0x20000,
	MiniDumpWithTokenInformation = 0x40000,
	MiniDumpWithModuleHeaders = 0x80000,
	MiniDumpFilterTriage = 0x100000,
	MiniDumpWithAvxXStateContext = 0x200000,
	MiniDumpWithIptTrace = 0x400000,
	MiniDumpScanInaccessiblePartialPages = 0x800000,
	MiniDumpValidTypeFlags = 0xFFFFFF
};

enum class EConstants:int
{
	UE4_MINIDUMP_CRASHCONTEXT = 0x10000
};

namespace FCineCameraObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		ChangeDefaultFilmbackToDigitalFilm = 0x1,
		VersionPlusOne = 0x2,
		LatestVersion = 0x1
	};
}

namespace FAutomationObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		DefaultToScreenshotCameraCutAndFixedTonemapping = 0x1,
		VersionPlusOne = 0x2,
		LatestVersion = 0x1
	};
}

namespace FReflectionCaptureObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		MoveReflectionCaptureDataToMapBuildData = 0x1,
		VersionPlusOne = 0x2,
		LatestVersion = 0x1
	};
}

namespace FLoadTimesObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		UncompressedReflectionCapturesForCookedBuilds = 0x1,
		VersionPlusOne = 0x2,
		LatestVersion = 0x1
	};
}

namespace FPrimal2ObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		FirstVersion = 0x1,
		AddingDynamicCustomDataOutputMaterial = 0x2,
		VersionPlusOne = 0x3,
		LatestVersion = 0x2
	};
}

namespace FUE5LWCRenderingStreamObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		LWCTypesInShaders = 0x1,
		VersionPlusOne = 0x2,
		LatestVersion = 0x1
	};
}

namespace FUE5CookerObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		VersionPlusOne = 0x1,
		LatestVersion = 0x0
	};
}

namespace FMediaFrameworkObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		SerializeGUIDsInMediaSourceInsteadOfPlainNames = 0x1,
		SerializeGUIDsInPlatformMediaSourceInsteadOfPlainNames = 0x2,
		VersionPlusOne = 0x3,
		LatestVersion = 0x2
	};
}

namespace FVirtualProductionObjectVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		SupportAjaLTCPin = 0x1,
		VersionPlusOne = 0x2,
		LatestVersion = 0x1
	};
}

namespace EMarkMaskBits
{
	enum Type:int
	{
		StaticMeshVisibilityMapMask = 0x2,
		StaticMeshFadeOutDitheredLODMapMask = 0x10,
		StaticMeshFadeInDitheredLODMapMask = 0x20
	};
}

enum class ESceneRenderCleanUpMode:int
{
	Immediate = 0x0,
	Deferred = 0x1,
	DeferredAndAsync = 0x2
};

enum class EShadowOcclusionQueryIntersectionMode:int
{
	SOQ_None = 0x0,
	SOQ_LightInfluenceSphere = 0x1,
	SOQ_NearPlaneVsShadowFrustum = 0x2
};

enum class EUnicodeBlockRange:unsigned short
{
	ControlCharacter = 0x0,
	BasicLatin = 0x1,
	Latin1Supplement = 0x2,
	LatinExtendedA = 0x3,
	LatinExtendedB = 0x4,
	IPAExtensions = 0x5,
	SpacingModifierLetters = 0x6,
	CombiningDiacriticalMarks = 0x7,
	GreekAndCoptic = 0x8,
	Cyrillic = 0x9,
	CyrillicSupplementary = 0xA,
	Armenian = 0xB,
	Hebrew = 0xC,
	Arabic = 0xD,
	Syriac = 0xE,
	ArabicSupplement = 0xF,
	Thaana = 0x10,
	NKo = 0x11,
	Samaritan = 0x12,
	Mandaic = 0x13,
	ArabicExtendedA = 0x14,
	Devanagari = 0x15,
	Bengali = 0x16,
	Gurmukhi = 0x17,
	Gujarati = 0x18,
	Oriya = 0x19,
	Tamil = 0x1A,
	Telugu = 0x1B,
	Kannada = 0x1C,
	Malayalam = 0x1D,
	Sinhala = 0x1E,
	Thai = 0x1F,
	Lao = 0x20,
	Tibetan = 0x21,
	Myanmar = 0x22,
	Georgian = 0x23,
	HangulJamo = 0x24,
	Ethiopic = 0x25,
	EthiopicSupplement = 0x26,
	Cherokee = 0x27,
	UnifiedCanadianAboriginalSyllabics = 0x28,
	Ogham = 0x29,
	Runic = 0x2A,
	Tagalog = 0x2B,
	Hanunoo = 0x2C,
	Buhid = 0x2D,
	Tagbanwa = 0x2E,
	Khmer = 0x2F,
	Mongolian = 0x30,
	UnifiedCanadianAboriginalSyllabicsExtended = 0x31,
	Limbu = 0x32,
	TaiLe = 0x33,
	NewTaiLue = 0x34,
	KhmerSymbols = 0x35,
	Buginese = 0x36,
	TaiTham = 0x37,
	CombiningDiacriticalMarksExtended = 0x38,
	Balinese = 0x39,
	Sundanese = 0x3A,
	Batak = 0x3B,
	Lepcha = 0x3C,
	OlChiki = 0x3D,
	CyrillicExtendedC = 0x3E,
	SundaneseSupplement = 0x3F,
	VedicExtensions = 0x40,
	PhoneticExtensions = 0x41,
	PhoneticExtensionsSupplement = 0x42,
	CombiningDiacriticalMarksSupplement = 0x43,
	LatinExtendedAdditional = 0x44,
	GreekExtended = 0x45,
	GeneralPunctuation = 0x46,
	SuperscriptsAndSubscripts = 0x47,
	CurrencySymbols = 0x48,
	CombiningDiacriticalMarksForSymbols = 0x49,
	LetterlikeSymbols = 0x4A,
	NumberForms = 0x4B,
	Arrows = 0x4C,
	MathematicalOperators = 0x4D,
	MiscellaneousTechnical = 0x4E,
	ControlPictures = 0x4F,
	OpticalCharacterRecognition = 0x50,
	EnclosedAlphanumerics = 0x51,
	BoxDrawing = 0x52,
	BlockElements = 0x53,
	GeometricShapes = 0x54,
	MiscellaneousSymbols = 0x55,
	Dingbats = 0x56,
	MiscellaneousMathematicalSymbolsA = 0x57,
	SupplementalArrowsA = 0x58,
	BraillePatterns = 0x59,
	SupplementalArrowsB = 0x5A,
	MiscellaneousMathematicalSymbolsB = 0x5B,
	SupplementalMathematicalOperators = 0x5C,
	MiscellaneousSymbolsAndArrows = 0x5D,
	Glagolitic = 0x5E,
	LatinExtendedC = 0x5F,
	Coptic = 0x60,
	GeorgianSupplement = 0x61,
	Tifinagh = 0x62,
	EthiopicExtended = 0x63,
	CyrillicExtendedA = 0x64,
	SupplementalPunctuation = 0x65,
	CJKRadicalsSupplement = 0x66,
	KangxiRadicals = 0x67,
	IdeographicDescriptionCharacters = 0x68,
	CJKSymbolsAndPunctuation = 0x69,
	Hiragana = 0x6A,
	Katakana = 0x6B,
	Bopomofo = 0x6C,
	HangulCompatibilityJamo = 0x6D,
	Kanbun = 0x6E,
	BopomofoExtended = 0x6F,
	CJKStrokes = 0x70,
	KatakanaPhoneticExtensions = 0x71,
	EnclosedCJKLettersAndMonths = 0x72,
	CJKCompatibility = 0x73,
	CJKUnifiedIdeographsExtensionA = 0x74,
	YijingHexagramSymbols = 0x75,
	CJKUnifiedIdeographs = 0x76,
	YiSyllables = 0x77,
	YiRadicals = 0x78,
	Lisu = 0x79,
	Vai = 0x7A,
	CyrillicExtendedB = 0x7B,
	Bamum = 0x7C,
	ModifierToneLetters = 0x7D,
	LatinExtendedD = 0x7E,
	SylotiNagri = 0x7F,
	CommonIndicNumberForms = 0x80,
	PhagsPa = 0x81,
	Saurashtra = 0x82,
	DevanagariExtended = 0x83,
	KayahLi = 0x84,
	Rejang = 0x85,
	HangulJamoExtendedA = 0x86,
	Javanese = 0x87,
	MyanmarExtendedB = 0x88,
	Cham = 0x89,
	MyanmarExtendedA = 0x8A,
	TaiViet = 0x8B,
	MeeteiMayekExtensions = 0x8C,
	EthiopicExtendedA = 0x8D,
	LatinExtendedE = 0x8E,
	CherokeeSupplement = 0x8F,
	MeeteiMayek = 0x90,
	HangulSyllables = 0x91,
	HangulJamoExtendedB = 0x92,
	HighSurrogates = 0x93,
	HighPrivateUseSurrogates = 0x94,
	LowSurrogates = 0x95,
	PrivateUseArea = 0x96,
	CJKCompatibilityIdeographs = 0x97,
	AlphabeticPresentationForms = 0x98,
	ArabicPresentationFormsA = 0x99,
	VariationSelectors = 0x9A,
	VerticalForms = 0x9B,
	CombiningHalfMarks = 0x9C,
	CJKCompatibilityForms = 0x9D,
	SmallFormVariants = 0x9E,
	ArabicPresentationFormsB = 0x9F,
	HalfwidthAndFullwidthForms = 0xA0,
	Specials = 0xA1,
	LinearBSyllabary = 0xA2,
	LinearBIdeograms = 0xA3,
	AegeanNumbers = 0xA4,
	AncientGreekNumbers = 0xA5,
	AncientSymbols = 0xA6,
	PhaistosDisc = 0xA7,
	Lycian = 0xA8,
	Carian = 0xA9,
	CopticEpactNumbers = 0xAA,
	OldItalic = 0xAB,
	Gothic = 0xAC,
	OldPermic = 0xAD,
	Ugaritic = 0xAE,
	OldPersian = 0xAF,
	Deseret = 0xB0,
	Shavian = 0xB1,
	Osmanya = 0xB2,
	Osage = 0xB3,
	Elbasan = 0xB4,
	CaucasianAlbanian = 0xB5,
	LinearA = 0xB6,
	CypriotSyllabary = 0xB7,
	ImperialAramaic = 0xB8,
	Palmyrene = 0xB9,
	Nabataean = 0xBA,
	Hatran = 0xBB,
	Phoenician = 0xBC,
	Lydian = 0xBD,
	MeroiticHieroglyphs = 0xBE,
	MeroiticCursive = 0xBF,
	Kharoshthi = 0xC0,
	OldSouthArabian = 0xC1,
	OldNorthArabian = 0xC2,
	Manichaean = 0xC3,
	Avestan = 0xC4,
	InscriptionalParthian = 0xC5,
	InscriptionalPahlavi = 0xC6,
	PsalterPahlavi = 0xC7,
	OldTurkic = 0xC8,
	OldHungarian = 0xC9,
	RumiNumeralSymbols = 0xCA,
	Brahmi = 0xCB,
	Kaithi = 0xCC,
	SoraSompeng = 0xCD,
	Chakma = 0xCE,
	Mahajani = 0xCF,
	Sharada = 0xD0,
	SinhalaArchaicNumbers = 0xD1,
	Khojki = 0xD2,
	Multani = 0xD3,
	Khudawadi = 0xD4,
	Grantha = 0xD5,
	Newa = 0xD6,
	Tirhuta = 0xD7,
	Siddham = 0xD8,
	Modi = 0xD9,
	MongolianSupplement = 0xDA,
	Takri = 0xDB,
	Ahom = 0xDC,
	WarangCiti = 0xDD,
	PauCinHau = 0xDE,
	Bhaiksuki = 0xDF,
	Marchen = 0xE0,
	Cuneiform = 0xE1,
	CuneiformNumbersAndPunctuation = 0xE2,
	EarlyDynasticCuneiform = 0xE3,
	EgyptianHieroglyphs = 0xE4,
	AnatolianHieroglyphs = 0xE5,
	BamumSupplement = 0xE6,
	Mro = 0xE7,
	BassaVah = 0xE8,
	PahawhHmong = 0xE9,
	Miao = 0xEA,
	IdeographicSymbolsAndPunctuation = 0xEB,
	Tangut = 0xEC,
	TangutComponents = 0xED,
	KanaSupplement = 0xEE,
	Duployan = 0xEF,
	ShorthandFormatControls = 0xF0,
	ByzantineMusicalSymbols = 0xF1,
	MusicalSymbols = 0xF2,
	AncientGreekMusicalNotation = 0xF3,
	TaiXuanJingSymbols = 0xF4,
	CountingRodNumerals = 0xF5,
	MathematicalAlphanumericSymbols = 0xF6,
	SuttonSignWriting = 0xF7,
	GlagoliticSupplement = 0xF8,
	MendeKikakui = 0xF9,
	Adlam = 0xFA,
	ArabicMathematicalAlphabeticSymbols = 0xFB,
	MahjongTiles = 0xFC,
	DominoTiles = 0xFD,
	PlayingCards = 0xFE,
	EnclosedAlphanumericSupplement = 0xFF,
	EnclosedIdeographicSupplement = 0x100,
	MiscellaneousSymbolsAndPictographs = 0x101,
	EmoticonsEmoji = 0x102,
	OrnamentalDingbats = 0x103,
	TransportAndMapSymbols = 0x104,
	AlchemicalSymbols = 0x105,
	GeometricShapesExtended = 0x106,
	SupplementalArrowsC = 0x107,
	SupplementalSymbolsAndPictographs = 0x108,
	CJKUnifiedIdeographsExtensionB = 0x109,
	CJKUnifiedIdeographsExtensionC = 0x10A,
	CJKUnifiedIdeographsExtensionD = 0x10B,
	CJKUnifiedIdeographsExtensionE = 0x10C,
	CJKCompatibilityIdeographsSupplement = 0x10D,
	Tags = 0x10E,
	VariationSelectorsSupplement = 0x10F
};

enum class EDownsampleDepthFilter:int
{
	Point = 0x0,
	Max = 0x1,
	Checkerboard = 0x2,
	MinAndMaxDepth = 0x3
};

enum class EPluginDescriptorVersion:unsigned char
{
	Invalid = 0x0,
	Initial = 0x1,
	NameHash = 0x2,
	ProjectPluginUnification = 0x3,
	LatestPlusOne = 0x4,
	Latest = 0x3
};

enum class TJSAMP:int
{
	TJSAMP_444 = 0x0,
	TJSAMP_422 = 0x1,
	TJSAMP_420 = 0x2,
	TJSAMP_GRAY = 0x3,
	TJSAMP_440 = 0x4,
	TJSAMP_411 = 0x5
};

enum class TJPF:int
{
	TJPF_RGB = 0x0,
	TJPF_BGR = 0x1,
	TJPF_RGBX = 0x2,
	TJPF_BGRX = 0x3,
	TJPF_XBGR = 0x4,
	TJPF_XRGB = 0x5,
	TJPF_GRAY = 0x6,
	TJPF_RGBA = 0x7,
	TJPF_BGRA = 0x8,
	TJPF_ABGR = 0x9,
	TJPF_ARGB = 0xA,
	TJPF_CMYK = 0xB,
	TJPF_UNKNOWN = 0xFF
};

enum class EBitmapCompression:int
{
	BCBI_RGB = 0x0,
	BCBI_RLE8 = 0x1,
	BCBI_RLE4 = 0x2,
	BCBI_BITFIELDS = 0x3,
	BCBI_JPEG = 0x4,
	BCBI_PNG = 0x5,
	BCBI_ALPHABITFIELDS = 0x6
};

enum class EBitmapHeaderVersion:unsigned char
{
	BHV_BITMAPINFOHEADER = 0x0,
	BHV_BITMAPV2INFOHEADER = 0x1,
	BHV_BITMAPV3INFOHEADER = 0x2,
	BHV_BITMAPV4HEADER = 0x3,
	BHV_BITMAPV5HEADER = 0x4,
	BHV_INVALID = 0xFF
};

enum class EBitmapCSType:unsigned int
{
	BCST_BLCS_CALIBRATED_RGB = 0x0,
	BCST_LCS_sRGB = 0x73524742,
	BCST_LCS_WINDOWS_COLOR_SPACE = 0x57696E20,
	BCST_PROFILE_LINKED = 0x4C494E4B,
	BCST_PROFILE_EMBEDDED = 0x4D424544
};

enum class EDecalDepthInputState:int
{
	DDS_Undefined = 0x0,
	DDS_Always = 0x1,
	DDS_DepthTest = 0x2,
	DDS_DepthAlways_StencilEqual1 = 0x3,
	DDS_DepthAlways_StencilEqual1_IgnoreMask = 0x4,
	DDS_DepthAlways_StencilEqual0 = 0x5,
	DDS_DepthTest_StencilEqual1 = 0x6,
	DDS_DepthTest_StencilEqual1_IgnoreMask = 0x7,
	DDS_DepthTest_StencilEqual0 = 0x8
};

enum class EStrataTileType:unsigned int
{
	ESimple = 0x0,
	ESingle = 0x1,
	EComplex = 0x2,
	EOpaqueRoughRefraction = 0x3,
	EOpaqueRoughRefractionSSSWithout = 0x4,
	EDecalSimple = 0x5,
	EDecalSingle = 0x6,
	EDecalComplex = 0x7,
	ECount = 0x8
};

enum class EIndirectShadowingPrimitiveTypes:int
{
	CapsuleShapes = 0x0,
	MeshDistanceFields = 0x1,
	CapsuleShapesAndMeshDistanceFields = 0x2,
	MAX = 0x3
};

enum class ECapsuleShadowingType:int
{
	DirectionalLightTiledCulling = 0x0,
	PointLightTiledCulling = 0x1,
	IndirectTiledCulling = 0x2,
	MovableSkylightTiledCulling = 0x3,
	MovableSkylightTiledCullingGatherFromReceiverBentNormal = 0x4,
	MAX = 0x5
};

enum class EShadowDepthCacheMode:int
{
	SDCM_MovablePrimitivesOnly = 0x0,
	SDCM_StaticPrimitivesOnly = 0x1,
	SDCM_CSMScrolling = 0x2,
	SDCM_Uncached = 0x3
};

enum class EDynamicCustomDataPassType:unsigned char
{
	AllocationPass = 0x0,
	OutputPass = 0x1,
	MAX = 0x2
};

enum class ESparseVolumePackedDataFormat:unsigned char
{
	Unorm8 = 0x0,
	Float16 = 0x1,
	Float32 = 0x2
};

enum class EMeshPassFeatures:int
{
	Default = 0x0,
	PositionOnly = 0x1,
	PositionAndNormalOnly = 0x2
};

enum class EShadowMeshSelection:unsigned char
{
	SM = 0x1,
	VSM = 0x2,
	All = 0x3
};

enum class EGPUProfileSortMode:int
{
	EChronological = 0x0,
	ETimeElapsed = 0x1,
	ENumPrims = 0x2,
	ENumVerts = 0x3,
	EMax = 0x4
};

enum class EPipelineCacheFileFormatVersions:unsigned int
{
	FirstWorking = 0x7,
	LibraryID = 0x9,
	ShaderMetaData = 0xA,
	SortedVertexDesc = 0xB,
	TOCMagicGuard = 0xC,
	PSOUsageMask = 0xD,
	PSOBindCount = 0xE,
	EOFMarker = 0xF,
	EngineFlags = 0x10,
	Subpass = 0x11,
	PatchSizeReduction_NoDuplicatedGuid = 0x12,
	AlphaToCoverage = 0x13,
	AddingMeshShaders = 0x14,
	RemovingTessellationShaders = 0x15,
	LastUsedTime = 0x16,
	MoreRenderTargetFlags = 0x17,
	FragmentDensityAttachment = 0x18,
	AddingDepthClipMode = 0x19
};

enum class EShadowProjectionVertexShaderFlags:int
{
	None = 0x0,
	DrawingFrustum = 0x1
};

enum class EPropertyCollectFlags:unsigned int
{
	None = 0x0,
	SkipTransient = 0x1,
	NeedsReferencer = 0x2,
	CallStructARO = 0x4,
	OnlyObjectProperty = 0x8
};

enum class EPSOCompileAsyncMode:int
{
	None = 0x0,
	All = 0x1,
	Precompile = 0x2,
	NonPrecompiled = 0x3
};

enum class EPSOPrecacheStateMask:unsigned char
{
	None = 0x0,
	Compiling = 0x1,
	Succeeded = 0x2,
	Failed = 0x4,
	Boosted = 0x8
};

enum class EEyeTrackerStatus:unsigned char
{
	NotConnected = 0x0,
	NotTracking = 0x1,
	Tracking = 0x2
};

enum class ELightSourceMode:int
{
	Punctual = 0x0,
	FromCapsule = 0x1,
	FromReceiver = 0x2
};

enum class EClusterPassInputType:unsigned char
{
	GBuffer = 0x0,
	Strata = 0x1,
	HairStrands = 0x2
};

enum class EGTAOType:int
{
	EOff = 0x0,
	EAsyncCombinedSpatial = 0x1,
	EAsyncHorizonSearch = 0x2,
	ENonAsync = 0x3
};

enum class ESSAOType:int
{
	EPS = 0x0,
	ECS = 0x1,
	EAsyncCS = 0x2
};

enum class EDecalRenderStage:unsigned char
{
	None = 0x0,
	BeforeBasePass = 0x1,
	BeforeLighting = 0x2,
	Mobile = 0x3,
	MobileBeforeLighting = 0x4,
	Emissive = 0x5,
	AmbientOcclusion = 0x6,
	Num = 0x7
};

enum class EAOTechnique:int
{
	SSAO = 0x0,
	GTAO = 0x1
};

enum class EDecalRenderTargetMode:unsigned char
{
	None = 0x0,
	DBuffer = 0x1,
	SceneColorAndGBuffer = 0x2,
	SceneColorAndGBufferNoNormal = 0x3,
	SceneColor = 0x4,
	AmbientOcclusion = 0x5
};

enum class EDecalDBufferMaskTechnique:int
{
	Disabled = 0x0,
	PerPixel = 0x1,
	WriteMask = 0x2
};

namespace FLandscapeCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		NewSplineCrossLevelMeshSerialization = 0x1,
		GrassMaterialWPO = 0x2,
		CollisionMaterialWPO = 0x3,
		LightmassMaterialWPO = 0x4,
		GrassMaterialInstanceFix = 0x5,
		SplineForeignDataLazyObjectPtrFix = 0x6,
		MigrateOldPropertiesToNewRenderingProperties = 0x7,
		AddingBodyInstanceToSplinesElements = 0x8,
		AddSplineLayerFalloff = 0x9,
		AddSplineLayerWidth = 0xA,
		NewLandscapeContinuousLOD = 0xB,
		ARKNX_CompressedAnd4BitGrass_DEPRECATED = 0xC,
		ARKNX_CompressedAnd4BitGrass_REMOVED = 0xD,
		LandscapeGrassOnStaticMeshes = 0xE,
		ASA_4bitGrassweightCompression = 0xF,
		ASA_GrassKrakenCompression = 0x10,
		ASA_GrassPerSliceOffsetsAndMasks = 0x11,
		VersionPlusOne = 0x12,
		LatestVersion = 0x11
	};
}

enum class ETerrainCoordMappingType:int
{
	TCMT_Auto = 0x0,
	TCMT_XY = 0x1,
	TCMT_XZ = 0x2,
	TCMT_YZ = 0x3,
	TCMT_MAX = 0x4
};

enum class ELandscapeCustomizedCoordType:int
{
	LCCT_None = 0x0,
	LCCT_CustomUV0 = 0x1,
	LCCT_CustomUV1 = 0x2,
	LCCT_CustomUV2 = 0x3,
	LCCT_WeightMapUV = 0x4,
	LCCT_MAX = 0x5
};

enum class ERDGTransientResourceLifetimeState:int
{
	Deallocated = 0x0,
	Allocated = 0x1,
	PendingDeallocation = 0x2
};

enum class ERDGTextureAccessFlags:int
{
	None = 0x0,
	RenderTarget = 0x1
};

enum class ELandscapeResizeMode:unsigned char
{
	Resample = 0x0,
	Clip = 0x1,
	Expand = 0x2
};

enum class ESubLevelStripMode:unsigned char
{
	ExactClass = 0x0,
	IsChildOf = 0x1
};

enum class ELightSourceShape:int
{
	Directional = 0x0,
	Capsule = 0x1,
	Rect = 0x2,
	MAX = 0x3
};

enum class ECoreOnlineDummy:unsigned char
{
	Dummy = 0x0
};

enum class ENaniteMaterialPass:unsigned int
{
	EmitGBuffer = 0x0,
	EmitGBufferWithVelocity = 0x1,
	Max = 0x2
};

enum class _WINHTTP_REQUEST_STAT_ENTRY:int
{
	WinHttpConnectFailureCount = 0x0,
	WinHttpProxyFailureCount = 0x1,
	WinHttpTlsHandshakeClientLeg1Size = 0x2,
	WinHttpTlsHandshakeServerLeg1Size = 0x3,
	WinHttpTlsHandshakeClientLeg2Size = 0x4,
	WinHttpTlsHandshakeServerLeg2Size = 0x5,
	WinHttpRequestHeadersSize = 0x6,
	WinHttpRequestHeadersCompressedSize = 0x7,
	WinHttpResponseHeadersSize = 0x8,
	WinHttpResponseHeadersCompressedSize = 0x9,
	WinHttpResponseBodySize = 0xA,
	WinHttpResponseBodyCompressedSize = 0xB,
	WinHttpProxyTlsHandshakeClientLeg1Size = 0xC,
	WinHttpProxyTlsHandshakeServerLeg1Size = 0xD,
	WinHttpProxyTlsHandshakeClientLeg2Size = 0xE,
	WinHttpProxyTlsHandshakeServerLeg2Size = 0xF,
	WinHttpRequestStatLast = 0x10,
	WinHttpRequestStatMax = 0x20
};

enum class _WINHTTP_REQUEST_TIME_ENTRY:int
{
	WinHttpProxyDetectionStart = 0x0,
	WinHttpProxyDetectionEnd = 0x1,
	WinHttpConnectionAcquireStart = 0x2,
	WinHttpConnectionAcquireWaitEnd = 0x3,
	WinHttpConnectionAcquireEnd = 0x4,
	WinHttpNameResolutionStart = 0x5,
	WinHttpNameResolutionEnd = 0x6,
	WinHttpConnectionEstablishmentStart = 0x7,
	WinHttpConnectionEstablishmentEnd = 0x8,
	WinHttpTlsHandshakeClientLeg1Start = 0x9,
	WinHttpTlsHandshakeClientLeg1End = 0xA,
	WinHttpTlsHandshakeClientLeg2Start = 0xB,
	WinHttpTlsHandshakeClientLeg2End = 0xC,
	WinHttpTlsHandshakeClientLeg3Start = 0xD,
	WinHttpTlsHandshakeClientLeg3End = 0xE,
	WinHttpStreamWaitStart = 0xF,
	WinHttpStreamWaitEnd = 0x10,
	WinHttpSendRequestStart = 0x11,
	WinHttpSendRequestHeadersCompressionStart = 0x12,
	WinHttpSendRequestHeadersCompressionEnd = 0x13,
	WinHttpSendRequestHeadersEnd = 0x14,
	WinHttpSendRequestEnd = 0x15,
	WinHttpReceiveResponseStart = 0x16,
	WinHttpReceiveResponseHeadersDecompressionStart = 0x17,
	WinHttpReceiveResponseHeadersDecompressionEnd = 0x18,
	WinHttpReceiveResponseHeadersEnd = 0x19,
	WinHttpReceiveResponseBodyDecompressionDelta = 0x1A,
	WinHttpReceiveResponseEnd = 0x1B,
	WinHttpProxyTunnelStart = 0x1C,
	WinHttpProxyTunnelEnd = 0x1D,
	WinHttpProxyTlsHandshakeClientLeg1Start = 0x1E,
	WinHttpProxyTlsHandshakeClientLeg1End = 0x1F,
	WinHttpProxyTlsHandshakeClientLeg2Start = 0x20,
	WinHttpProxyTlsHandshakeClientLeg2End = 0x21,
	WinHttpProxyTlsHandshakeClientLeg3Start = 0x22,
	WinHttpProxyTlsHandshakeClientLeg3End = 0x23,
	WinHttpRequestTimeLast = 0x24,
	WinHttpRequestTimeMax = 0x40
};

enum class curl_infotype:int
{
	CURLINFO_TEXT = 0x0,
	CURLINFO_HEADER_IN = 0x1,
	CURLINFO_HEADER_OUT = 0x2,
	CURLINFO_DATA_IN = 0x3,
	CURLINFO_DATA_OUT = 0x4,
	CURLINFO_SSL_DATA_IN = 0x5,
	CURLINFO_SSL_DATA_OUT = 0x6,
	CURLINFO_END = 0x7
};

enum class CURLINFO:int
{
	CURLINFO_NONE = 0x0,
	CURLINFO_EFFECTIVE_URL = 0x100001,
	CURLINFO_RESPONSE_CODE = 0x200002,
	CURLINFO_TOTAL_TIME = 0x300003,
	CURLINFO_NAMELOOKUP_TIME = 0x300004,
	CURLINFO_CONNECT_TIME = 0x300005,
	CURLINFO_PRETRANSFER_TIME = 0x300006,
	CURLINFO_SIZE_UPLOAD = 0x300007,
	CURLINFO_SIZE_UPLOAD_T = 0x600007,
	CURLINFO_SIZE_DOWNLOAD = 0x300008,
	CURLINFO_SIZE_DOWNLOAD_T = 0x600008,
	CURLINFO_SPEED_DOWNLOAD = 0x300009,
	CURLINFO_SPEED_DOWNLOAD_T = 0x600009,
	CURLINFO_SPEED_UPLOAD = 0x30000A,
	CURLINFO_SPEED_UPLOAD_T = 0x60000A,
	CURLINFO_HEADER_SIZE = 0x20000B,
	CURLINFO_REQUEST_SIZE = 0x20000C,
	CURLINFO_SSL_VERIFYRESULT = 0x20000D,
	CURLINFO_FILETIME = 0x20000E,
	CURLINFO_FILETIME_T = 0x60000E,
	CURLINFO_CONTENT_LENGTH_DOWNLOAD = 0x30000F,
	CURLINFO_CONTENT_LENGTH_DOWNLOAD_T = 0x60000F,
	CURLINFO_CONTENT_LENGTH_UPLOAD = 0x300010,
	CURLINFO_CONTENT_LENGTH_UPLOAD_T = 0x600010,
	CURLINFO_STARTTRANSFER_TIME = 0x300011,
	CURLINFO_CONTENT_TYPE = 0x100012,
	CURLINFO_REDIRECT_TIME = 0x300013,
	CURLINFO_REDIRECT_COUNT = 0x200014,
	CURLINFO_PRIVATE = 0x100015,
	CURLINFO_HTTP_CONNECTCODE = 0x200016,
	CURLINFO_HTTPAUTH_AVAIL = 0x200017,
	CURLINFO_PROXYAUTH_AVAIL = 0x200018,
	CURLINFO_OS_ERRNO = 0x200019,
	CURLINFO_NUM_CONNECTS = 0x20001A,
	CURLINFO_SSL_ENGINES = 0x40001B,
	CURLINFO_COOKIELIST = 0x40001C,
	CURLINFO_LASTSOCKET = 0x20001D,
	CURLINFO_FTP_ENTRY_PATH = 0x10001E,
	CURLINFO_REDIRECT_URL = 0x10001F,
	CURLINFO_PRIMARY_IP = 0x100020,
	CURLINFO_APPCONNECT_TIME = 0x300021,
	CURLINFO_CERTINFO = 0x400022,
	CURLINFO_CONDITION_UNMET = 0x200023,
	CURLINFO_RTSP_SESSION_ID = 0x100024,
	CURLINFO_RTSP_CLIENT_CSEQ = 0x200025,
	CURLINFO_RTSP_SERVER_CSEQ = 0x200026,
	CURLINFO_RTSP_CSEQ_RECV = 0x200027,
	CURLINFO_PRIMARY_PORT = 0x200028,
	CURLINFO_LOCAL_IP = 0x100029,
	CURLINFO_LOCAL_PORT = 0x20002A,
	CURLINFO_TLS_SESSION = 0x40002B,
	CURLINFO_ACTIVESOCKET = 0x50002C,
	CURLINFO_TLS_SSL_PTR = 0x40002D,
	CURLINFO_HTTP_VERSION = 0x20002E,
	CURLINFO_PROXY_SSL_VERIFYRESULT = 0x20002F,
	CURLINFO_PROTOCOL = 0x200030,
	CURLINFO_SCHEME = 0x100031,
	CURLINFO_TOTAL_TIME_T = 0x600032,
	CURLINFO_NAMELOOKUP_TIME_T = 0x600033,
	CURLINFO_CONNECT_TIME_T = 0x600034,
	CURLINFO_PRETRANSFER_TIME_T = 0x600035,
	CURLINFO_STARTTRANSFER_TIME_T = 0x600036,
	CURLINFO_REDIRECT_TIME_T = 0x600037,
	CURLINFO_APPCONNECT_TIME_T = 0x600038,
	CURLINFO_RETRY_AFTER = 0x600039,
	CURLINFO_EFFECTIVE_METHOD = 0x10003A,
	CURLINFO_PROXY_ERROR = 0x20003B,
	CURLINFO_REFERER = 0x10003C,
	CURLINFO_LASTONE = 0x3C
};

enum class CURLoption:unsigned __int64
{
	CURLOPT_WRITEDATA = 0x2711,
	CURLOPT_URL = 0x2712,
	CURLOPT_PORT = 0x3,
	CURLOPT_PROXY = 0x2714,
	CURLOPT_USERPWD = 0x2715,
	CURLOPT_PROXYUSERPWD = 0x2716,
	CURLOPT_RANGE = 0x2717,
	CURLOPT_READDATA = 0x2719,
	CURLOPT_ERRORBUFFER = 0x271A,
	CURLOPT_WRITEFUNCTION = 0x4E2B,
	CURLOPT_READFUNCTION = 0x4E2C,
	CURLOPT_TIMEOUT = 0xD,
	CURLOPT_INFILESIZE = 0xE,
	CURLOPT_POSTFIELDS = 0x271F,
	CURLOPT_REFERER = 0x2720,
	CURLOPT_FTPPORT = 0x2721,
	CURLOPT_USERAGENT = 0x2722,
	CURLOPT_LOW_SPEED_LIMIT = 0x13,
	CURLOPT_LOW_SPEED_TIME = 0x14,
	CURLOPT_RESUME_FROM = 0x15,
	CURLOPT_COOKIE = 0x2726,
	CURLOPT_HTTPHEADER = 0x2727,
	CURLOPT_HTTPPOST = 0x2728,
	CURLOPT_SSLCERT = 0x2729,
	CURLOPT_KEYPASSWD = 0x272A,
	CURLOPT_CRLF = 0x1B,
	CURLOPT_QUOTE = 0x272C,
	CURLOPT_HEADERDATA = 0x272D,
	CURLOPT_COOKIEFILE = 0x272F,
	CURLOPT_SSLVERSION = 0x20,
	CURLOPT_TIMECONDITION = 0x21,
	CURLOPT_TIMEVALUE = 0x22,
	CURLOPT_CUSTOMREQUEST = 0x2734,
	CURLOPT_STDERR = 0x2735,
	CURLOPT_POSTQUOTE = 0x2737,
	CURLOPT_OBSOLETE40 = 0x2738,
	CURLOPT_VERBOSE = 0x29,
	CURLOPT_HEADER = 0x2A,
	CURLOPT_NOPROGRESS = 0x2B,
	CURLOPT_NOBODY = 0x2C,
	CURLOPT_FAILONERROR = 0x2D,
	CURLOPT_UPLOAD = 0x2E,
	CURLOPT_POST = 0x2F,
	CURLOPT_DIRLISTONLY = 0x30,
	CURLOPT_APPEND = 0x32,
	CURLOPT_NETRC = 0x33,
	CURLOPT_FOLLOWLOCATION = 0x34,
	CURLOPT_TRANSFERTEXT = 0x35,
	CURLOPT_PUT = 0x36,
	CURLOPT_PROGRESSFUNCTION = 0x4E58,
	CURLOPT_XFERINFODATA = 0x2749,
	CURLOPT_AUTOREFERER = 0x3A,
	CURLOPT_PROXYPORT = 0x3B,
	CURLOPT_POSTFIELDSIZE = 0x3C,
	CURLOPT_HTTPPROXYTUNNEL = 0x3D,
	CURLOPT_INTERFACE = 0x274E,
	CURLOPT_KRBLEVEL = 0x274F,
	CURLOPT_SSL_VERIFYPEER = 0x40,
	CURLOPT_CAINFO = 0x2751,
	CURLOPT_MAXREDIRS = 0x44,
	CURLOPT_FILETIME = 0x45,
	CURLOPT_TELNETOPTIONS = 0x2756,
	CURLOPT_MAXCONNECTS = 0x47,
	CURLOPT_OBSOLETE72 = 0x48,
	CURLOPT_FRESH_CONNECT = 0x4A,
	CURLOPT_FORBID_REUSE = 0x4B,
	CURLOPT_RANDOM_FILE = 0x275C,
	CURLOPT_EGDSOCKET = 0x275D,
	CURLOPT_CONNECTTIMEOUT = 0x4E,
	CURLOPT_HEADERFUNCTION = 0x4E6F,
	CURLOPT_HTTPGET = 0x50,
	CURLOPT_SSL_VERIFYHOST = 0x51,
	CURLOPT_COOKIEJAR = 0x2762,
	CURLOPT_SSL_CIPHER_LIST = 0x2763,
	CURLOPT_HTTP_VERSION = 0x54,
	CURLOPT_FTP_USE_EPSV = 0x55,
	CURLOPT_SSLCERTTYPE = 0x2766,
	CURLOPT_SSLKEY = 0x2767,
	CURLOPT_SSLKEYTYPE = 0x2768,
	CURLOPT_SSLENGINE = 0x2769,
	CURLOPT_SSLENGINE_DEFAULT = 0x5A,
	CURLOPT_DNS_USE_GLOBAL_CACHE = 0x5B,
	CURLOPT_DNS_CACHE_TIMEOUT = 0x5C,
	CURLOPT_PREQUOTE = 0x276D,
	CURLOPT_DEBUGFUNCTION = 0x4E7E,
	CURLOPT_DEBUGDATA = 0x276F,
	CURLOPT_COOKIESESSION = 0x60,
	CURLOPT_CAPATH = 0x2771,
	CURLOPT_BUFFERSIZE = 0x62,
	CURLOPT_NOSIGNAL = 0x63,
	CURLOPT_SHARE = 0x2774,
	CURLOPT_PROXYTYPE = 0x65,
	CURLOPT_ACCEPT_ENCODING = 0x2776,
	CURLOPT_PRIVATE = 0x2777,
	CURLOPT_HTTP200ALIASES = 0x2778,
	CURLOPT_UNRESTRICTED_AUTH = 0x69,
	CURLOPT_FTP_USE_EPRT = 0x6A,
	CURLOPT_HTTPAUTH = 0x6B,
	CURLOPT_SSL_CTX_FUNCTION = 0x4E8C,
	CURLOPT_SSL_CTX_DATA = 0x277D,
	CURLOPT_FTP_CREATE_MISSING_DIRS = 0x6E,
	CURLOPT_PROXYAUTH = 0x6F,
	CURLOPT_FTP_RESPONSE_TIMEOUT = 0x70,
	CURLOPT_IPRESOLVE = 0x71,
	CURLOPT_MAXFILESIZE = 0x72,
	CURLOPT_INFILESIZE_LARGE = 0x75A3,
	CURLOPT_RESUME_FROM_LARGE = 0x75A4,
	CURLOPT_MAXFILESIZE_LARGE = 0x75A5,
	CURLOPT_NETRC_FILE = 0x2786,
	CURLOPT_USE_SSL = 0x77,
	CURLOPT_POSTFIELDSIZE_LARGE = 0x75A8,
	CURLOPT_TCP_NODELAY = 0x79,
	CURLOPT_FTPSSLAUTH = 0x81,
	CURLOPT_IOCTLFUNCTION = 0x4EA2,
	CURLOPT_IOCTLDATA = 0x2793,
	CURLOPT_FTP_ACCOUNT = 0x2796,
	CURLOPT_COOKIELIST = 0x2797,
	CURLOPT_IGNORE_CONTENT_LENGTH = 0x88,
	CURLOPT_FTP_SKIP_PASV_IP = 0x89,
	CURLOPT_FTP_FILEMETHOD = 0x8A,
	CURLOPT_LOCALPORT = 0x8B,
	CURLOPT_LOCALPORTRANGE = 0x8C,
	CURLOPT_CONNECT_ONLY = 0x8D,
	CURLOPT_CONV_FROM_NETWORK_FUNCTION = 0x4EAE,
	CURLOPT_CONV_TO_NETWORK_FUNCTION = 0x4EAF,
	CURLOPT_CONV_FROM_UTF8_FUNCTION = 0x4EB0,
	CURLOPT_MAX_SEND_SPEED_LARGE = 0x75C1,
	CURLOPT_MAX_RECV_SPEED_LARGE = 0x75C2,
	CURLOPT_FTP_ALTERNATIVE_TO_USER = 0x27A3,
	CURLOPT_SOCKOPTFUNCTION = 0x4EB4,
	CURLOPT_SOCKOPTDATA = 0x27A5,
	CURLOPT_SSL_SESSIONID_CACHE = 0x96,
	CURLOPT_SSH_AUTH_TYPES = 0x97,
	CURLOPT_SSH_PUBLIC_KEYFILE = 0x27A8,
	CURLOPT_SSH_PRIVATE_KEYFILE = 0x27A9,
	CURLOPT_FTP_SSL_CCC = 0x9A,
	CURLOPT_TIMEOUT_MS = 0x9B,
	CURLOPT_CONNECTTIMEOUT_MS = 0x9C,
	CURLOPT_HTTP_TRANSFER_DECODING = 0x9D,
	CURLOPT_HTTP_CONTENT_DECODING = 0x9E,
	CURLOPT_NEW_FILE_PERMS = 0x9F,
	CURLOPT_NEW_DIRECTORY_PERMS = 0xA0,
	CURLOPT_POSTREDIR = 0xA1,
	CURLOPT_SSH_HOST_PUBLIC_KEY_MD5 = 0x27B2,
	CURLOPT_OPENSOCKETFUNCTION = 0x4EC3,
	CURLOPT_OPENSOCKETDATA = 0x27B4,
	CURLOPT_COPYPOSTFIELDS = 0x27B5,
	CURLOPT_PROXY_TRANSFER_MODE = 0xA6,
	CURLOPT_SEEKFUNCTION = 0x4EC7,
	CURLOPT_SEEKDATA = 0x27B8,
	CURLOPT_CRLFILE = 0x27B9,
	CURLOPT_ISSUERCERT = 0x27BA,
	CURLOPT_ADDRESS_SCOPE = 0xAB,
	CURLOPT_CERTINFO = 0xAC,
	CURLOPT_USERNAME = 0x27BD,
	CURLOPT_PASSWORD = 0x27BE,
	CURLOPT_PROXYUSERNAME = 0x27BF,
	CURLOPT_PROXYPASSWORD = 0x27C0,
	CURLOPT_NOPROXY = 0x27C1,
	CURLOPT_TFTP_BLKSIZE = 0xB2,
	CURLOPT_SOCKS5_GSSAPI_SERVICE = 0x27C3,
	CURLOPT_SOCKS5_GSSAPI_NEC = 0xB4,
	CURLOPT_PROTOCOLS = 0xB5,
	CURLOPT_REDIR_PROTOCOLS = 0xB6,
	CURLOPT_SSH_KNOWNHOSTS = 0x27C7,
	CURLOPT_SSH_KEYFUNCTION = 0x4ED8,
	CURLOPT_SSH_KEYDATA = 0x27C9,
	CURLOPT_MAIL_FROM = 0x27CA,
	CURLOPT_MAIL_RCPT = 0x27CB,
	CURLOPT_FTP_USE_PRET = 0xBC,
	CURLOPT_RTSP_REQUEST = 0xBD,
	CURLOPT_RTSP_SESSION_ID = 0x27CE,
	CURLOPT_RTSP_STREAM_URI = 0x27CF,
	CURLOPT_RTSP_TRANSPORT = 0x27D0,
	CURLOPT_RTSP_CLIENT_CSEQ = 0xC1,
	CURLOPT_RTSP_SERVER_CSEQ = 0xC2,
	CURLOPT_INTERLEAVEDATA = 0x27D3,
	CURLOPT_INTERLEAVEFUNCTION = 0x4EE4,
	CURLOPT_WILDCARDMATCH = 0xC5,
	CURLOPT_CHUNK_BGN_FUNCTION = 0x4EE6,
	CURLOPT_CHUNK_END_FUNCTION = 0x4EE7,
	CURLOPT_FNMATCH_FUNCTION = 0x4EE8,
	CURLOPT_CHUNK_DATA = 0x27D9,
	CURLOPT_FNMATCH_DATA = 0x27DA,
	CURLOPT_RESOLVE = 0x27DB,
	CURLOPT_TLSAUTH_USERNAME = 0x27DC,
	CURLOPT_TLSAUTH_PASSWORD = 0x27DD,
	CURLOPT_TLSAUTH_TYPE = 0x27DE,
	CURLOPT_TRANSFER_ENCODING = 0xCF,
	CURLOPT_CLOSESOCKETFUNCTION = 0x4EF0,
	CURLOPT_CLOSESOCKETDATA = 0x27E1,
	CURLOPT_GSSAPI_DELEGATION = 0xD2,
	CURLOPT_DNS_SERVERS = 0x27E3,
	CURLOPT_ACCEPTTIMEOUT_MS = 0xD4,
	CURLOPT_TCP_KEEPALIVE = 0xD5,
	CURLOPT_TCP_KEEPIDLE = 0xD6,
	CURLOPT_TCP_KEEPINTVL = 0xD7,
	CURLOPT_SSL_OPTIONS = 0xD8,
	CURLOPT_MAIL_AUTH = 0x27E9,
	CURLOPT_SASL_IR = 0xDA,
	CURLOPT_XFERINFOFUNCTION = 0x4EFB,
	CURLOPT_XOAUTH2_BEARER = 0x27EC,
	CURLOPT_DNS_INTERFACE = 0x27ED,
	CURLOPT_DNS_LOCAL_IP4 = 0x27EE,
	CURLOPT_DNS_LOCAL_IP6 = 0x27EF,
	CURLOPT_LOGIN_OPTIONS = 0x27F0,
	CURLOPT_SSL_ENABLE_NPN = 0xE1,
	CURLOPT_SSL_ENABLE_ALPN = 0xE2,
	CURLOPT_EXPECT_100_TIMEOUT_MS = 0xE3,
	CURLOPT_PROXYHEADER = 0x27F4,
	CURLOPT_HEADEROPT = 0xE5,
	CURLOPT_PINNEDPUBLICKEY = 0x27F6,
	CURLOPT_UNIX_SOCKET_PATH = 0x27F7,
	CURLOPT_SSL_VERIFYSTATUS = 0xE8,
	CURLOPT_SSL_FALSESTART = 0xE9,
	CURLOPT_PATH_AS_IS = 0xEA,
	CURLOPT_PROXY_SERVICE_NAME = 0x27FB,
	CURLOPT_SERVICE_NAME = 0x27FC,
	CURLOPT_PIPEWAIT = 0xED,
	CURLOPT_DEFAULT_PROTOCOL = 0x27FE,
	CURLOPT_STREAM_WEIGHT = 0xEF,
	CURLOPT_STREAM_DEPENDS = 0x2800,
	CURLOPT_STREAM_DEPENDS_E = 0x2801,
	CURLOPT_TFTP_NO_OPTIONS = 0xF2,
	CURLOPT_CONNECT_TO = 0x2803,
	CURLOPT_TCP_FASTOPEN = 0xF4,
	CURLOPT_KEEP_SENDING_ON_ERROR = 0xF5,
	CURLOPT_PROXY_CAINFO = 0x2806,
	CURLOPT_PROXY_CAPATH = 0x2807,
	CURLOPT_PROXY_SSL_VERIFYPEER = 0xF8,
	CURLOPT_PROXY_SSL_VERIFYHOST = 0xF9,
	CURLOPT_PROXY_SSLVERSION = 0xFA,
	CURLOPT_PROXY_TLSAUTH_USERNAME = 0x280B,
	CURLOPT_PROXY_TLSAUTH_PASSWORD = 0x280C,
	CURLOPT_PROXY_TLSAUTH_TYPE = 0x280D,
	CURLOPT_PROXY_SSLCERT = 0x280E,
	CURLOPT_PROXY_SSLCERTTYPE = 0x280F,
	CURLOPT_PROXY_SSLKEY = 0x2810,
	CURLOPT_PROXY_SSLKEYTYPE = 0x2811,
	CURLOPT_PROXY_KEYPASSWD = 0x2812,
	CURLOPT_PROXY_SSL_CIPHER_LIST = 0x2813,
	CURLOPT_PROXY_CRLFILE = 0x2814,
	CURLOPT_PROXY_SSL_OPTIONS = 0x105,
	CURLOPT_PRE_PROXY = 0x2816,
	CURLOPT_PROXY_PINNEDPUBLICKEY = 0x2817,
	CURLOPT_ABSTRACT_UNIX_SOCKET = 0x2818,
	CURLOPT_SUPPRESS_CONNECT_HEADERS = 0x109,
	CURLOPT_REQUEST_TARGET = 0x281A,
	CURLOPT_SOCKS5_AUTH = 0x10B,
	CURLOPT_SSH_COMPRESSION = 0x10C,
	CURLOPT_MIMEPOST = 0x281D,
	CURLOPT_TIMEVALUE_LARGE = 0x763E,
	CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS = 0x10F,
	CURLOPT_RESOLVER_START_FUNCTION = 0x4F30,
	CURLOPT_RESOLVER_START_DATA = 0x2821,
	CURLOPT_HAPROXYPROTOCOL = 0x112,
	CURLOPT_DNS_SHUFFLE_ADDRESSES = 0x113,
	CURLOPT_TLS13_CIPHERS = 0x2824,
	CURLOPT_PROXY_TLS13_CIPHERS = 0x2825,
	CURLOPT_DISALLOW_USERNAME_IN_URL = 0x116,
	CURLOPT_DOH_URL = 0x2827,
	CURLOPT_UPLOAD_BUFFERSIZE = 0x118,
	CURLOPT_UPKEEP_INTERVAL_MS = 0x119,
	CURLOPT_CURLU = 0x282A,
	CURLOPT_TRAILERFUNCTION = 0x4F3B,
	CURLOPT_TRAILERDATA = 0x282C,
	CURLOPT_HTTP09_ALLOWED = 0x11D,
	CURLOPT_ALTSVC_CTRL = 0x11E,
	CURLOPT_ALTSVC = 0x282F,
	CURLOPT_MAXAGE_CONN = 0x120,
	CURLOPT_SASL_AUTHZID = 0x2831,
	CURLOPT_MAIL_RCPT_ALLLOWFAILS = 0x122,
	CURLOPT_SSLCERT_BLOB = 0xFFFF9D63,
	CURLOPT_SSLKEY_BLOB = 0xFFFF9D64,
	CURLOPT_PROXY_SSLCERT_BLOB = 0xFFFF9D65,
	CURLOPT_PROXY_SSLKEY_BLOB = 0xFFFF9D66,
	CURLOPT_ISSUERCERT_BLOB = 0xFFFF9D67,
	CURLOPT_PROXY_ISSUERCERT = 0x2838,
	CURLOPT_PROXY_ISSUERCERT_BLOB = 0xFFFF9D69,
	CURLOPT_SSL_EC_CURVES = 0x283A,
	CURLOPT_HSTS_CTRL = 0x12B,
	CURLOPT_HSTS = 0x283C,
	CURLOPT_HSTSREADFUNCTION = 0x4F4D,
	CURLOPT_HSTSREADDATA = 0x283E,
	CURLOPT_HSTSWRITEFUNCTION = 0x4F4F,
	CURLOPT_HSTSWRITEDATA = 0x2840,
	CURLOPT_AWS_SIGV4 = 0x2841,
	CURLOPT_DOH_SSL_VERIFYPEER = 0x132,
	CURLOPT_DOH_SSL_VERIFYHOST = 0x133,
	CURLOPT_DOH_SSL_VERIFYSTATUS = 0x134,
	CURLOPT_CAINFO_BLOB = 0xFFFF9D75,
	CURLOPT_PROXY_CAINFO_BLOB = 0xFFFF9D76,
	CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256 = 0x2847,
	CURLOPT_PREREQFUNCTION = 0x4F58,
	CURLOPT_PREREQDATA = 0x2849,
	CURLOPT_MAXLIFETIME_CONN = 0x13A,
	CURLOPT_MIME_OPTIONS = 0x13B,
	CURLOPT_LASTENTRY = 0x13C
};

enum class CURLcode:int
{
	CURLE_OK = 0x0,
	CURLE_UNSUPPORTED_PROTOCOL = 0x1,
	CURLE_FAILED_INIT = 0x2,
	CURLE_URL_MALFORMAT = 0x3,
	CURLE_NOT_BUILT_IN = 0x4,
	CURLE_COULDNT_RESOLVE_PROXY = 0x5,
	CURLE_COULDNT_RESOLVE_HOST = 0x6,
	CURLE_COULDNT_CONNECT = 0x7,
	CURLE_WEIRD_SERVER_REPLY = 0x8,
	CURLE_REMOTE_ACCESS_DENIED = 0x9,
	CURLE_FTP_ACCEPT_FAILED = 0xA,
	CURLE_FTP_WEIRD_PASS_REPLY = 0xB,
	CURLE_FTP_ACCEPT_TIMEOUT = 0xC,
	CURLE_FTP_WEIRD_PASV_REPLY = 0xD,
	CURLE_FTP_WEIRD_227_FORMAT = 0xE,
	CURLE_FTP_CANT_GET_HOST = 0xF,
	CURLE_HTTP2 = 0x10,
	CURLE_FTP_COULDNT_SET_TYPE = 0x11,
	CURLE_PARTIAL_FILE = 0x12,
	CURLE_FTP_COULDNT_RETR_FILE = 0x13,
	CURLE_OBSOLETE20 = 0x14,
	CURLE_QUOTE_ERROR = 0x15,
	CURLE_HTTP_RETURNED_ERROR = 0x16,
	CURLE_WRITE_ERROR = 0x17,
	CURLE_OBSOLETE24 = 0x18,
	CURLE_UPLOAD_FAILED = 0x19,
	CURLE_READ_ERROR = 0x1A,
	CURLE_OUT_OF_MEMORY = 0x1B,
	CURLE_OPERATION_TIMEDOUT = 0x1C,
	CURLE_OBSOLETE29 = 0x1D,
	CURLE_FTP_PORT_FAILED = 0x1E,
	CURLE_FTP_COULDNT_USE_REST = 0x1F,
	CURLE_OBSOLETE32 = 0x20,
	CURLE_RANGE_ERROR = 0x21,
	CURLE_HTTP_POST_ERROR = 0x22,
	CURLE_SSL_CONNECT_ERROR = 0x23,
	CURLE_BAD_DOWNLOAD_RESUME = 0x24,
	CURLE_FILE_COULDNT_READ_FILE = 0x25,
	CURLE_LDAP_CANNOT_BIND = 0x26,
	CURLE_LDAP_SEARCH_FAILED = 0x27,
	CURLE_OBSOLETE40 = 0x28,
	CURLE_FUNCTION_NOT_FOUND = 0x29,
	CURLE_ABORTED_BY_CALLBACK = 0x2A,
	CURLE_BAD_FUNCTION_ARGUMENT = 0x2B,
	CURLE_OBSOLETE44 = 0x2C,
	CURLE_INTERFACE_FAILED = 0x2D,
	CURLE_OBSOLETE46 = 0x2E,
	CURLE_TOO_MANY_REDIRECTS = 0x2F,
	CURLE_UNKNOWN_OPTION = 0x30,
	CURLE_SETOPT_OPTION_SYNTAX = 0x31,
	CURLE_OBSOLETE50 = 0x32,
	CURLE_OBSOLETE51 = 0x33,
	CURLE_GOT_NOTHING = 0x34,
	CURLE_SSL_ENGINE_NOTFOUND = 0x35,
	CURLE_SSL_ENGINE_SETFAILED = 0x36,
	CURLE_SEND_ERROR = 0x37,
	CURLE_RECV_ERROR = 0x38,
	CURLE_OBSOLETE57 = 0x39,
	CURLE_SSL_CERTPROBLEM = 0x3A,
	CURLE_SSL_CIPHER = 0x3B,
	CURLE_PEER_FAILED_VERIFICATION = 0x3C,
	CURLE_BAD_CONTENT_ENCODING = 0x3D,
	CURLE_OBSOLETE62 = 0x3E,
	CURLE_FILESIZE_EXCEEDED = 0x3F,
	CURLE_USE_SSL_FAILED = 0x40,
	CURLE_SEND_FAIL_REWIND = 0x41,
	CURLE_SSL_ENGINE_INITFAILED = 0x42,
	CURLE_LOGIN_DENIED = 0x43,
	CURLE_TFTP_NOTFOUND = 0x44,
	CURLE_TFTP_PERM = 0x45,
	CURLE_REMOTE_DISK_FULL = 0x46,
	CURLE_TFTP_ILLEGAL = 0x47,
	CURLE_TFTP_UNKNOWNID = 0x48,
	CURLE_REMOTE_FILE_EXISTS = 0x49,
	CURLE_TFTP_NOSUCHUSER = 0x4A,
	CURLE_CONV_FAILED = 0x4B,
	CURLE_OBSOLETE76 = 0x4C,
	CURLE_SSL_CACERT_BADFILE = 0x4D,
	CURLE_REMOTE_FILE_NOT_FOUND = 0x4E,
	CURLE_SSH = 0x4F,
	CURLE_SSL_SHUTDOWN_FAILED = 0x50,
	CURLE_AGAIN = 0x51,
	CURLE_SSL_CRL_BADFILE = 0x52,
	CURLE_SSL_ISSUER_ERROR = 0x53,
	CURLE_FTP_PRET_FAILED = 0x54,
	CURLE_RTSP_CSEQ_ERROR = 0x55,
	CURLE_RTSP_SESSION_ERROR = 0x56,
	CURLE_FTP_BAD_FILE_LIST = 0x57,
	CURLE_CHUNK_FAILED = 0x58,
	CURLE_NO_CONNECTION_AVAILABLE = 0x59,
	CURLE_SSL_PINNEDPUBKEYNOTMATCH = 0x5A,
	CURLE_SSL_INVALIDCERTSTATUS = 0x5B,
	CURLE_HTTP2_STREAM = 0x5C,
	CURLE_RECURSIVE_API_CALL = 0x5D,
	CURLE_AUTH_ERROR = 0x5E,
	CURLE_HTTP3 = 0x5F,
	CURLE_QUIC_CONNECT_ERROR = 0x60,
	CURLE_PROXY = 0x61,
	CURLE_SSL_CLIENTCERT = 0x62,
	CURL_LAST = 0x63
};

enum class curl_usessl:int
{
	CURLUSESSL_NONE = 0x0,
	CURLUSESSL_TRY = 0x1,
	CURLUSESSL_CONTROL = 0x2,
	CURLUSESSL_ALL = 0x3,
	CURLUSESSL_LAST = 0x4
};

enum class CURLMcode:int
{
	CURLM_CALL_MULTI_PERFORM = 0xFF,
	CURLM_OK = 0x0,
	CURLM_BAD_HANDLE = 0x1,
	CURLM_BAD_EASY_HANDLE = 0x2,
	CURLM_OUT_OF_MEMORY = 0x3,
	CURLM_INTERNAL_ERROR = 0x4,
	CURLM_BAD_SOCKET = 0x5,
	CURLM_UNKNOWN_OPTION = 0x6,
	CURLM_ADDED_ALREADY = 0x7,
	CURLM_RECURSIVE_API_CALL = 0x8,
	CURLM_WAKEUP_FAILURE = 0x9,
	CURLM_BAD_FUNCTION_ARGUMENT = 0xA,
	CURLM_ABORTED_BY_CALLBACK = 0xB,
	CURLM_LAST = 0xC
};

enum class curl_lock_data:int
{
	CURL_LOCK_DATA_NONE = 0x0,
	CURL_LOCK_DATA_SHARE = 0x1,
	CURL_LOCK_DATA_COOKIE = 0x2,
	CURL_LOCK_DATA_DNS = 0x3,
	CURL_LOCK_DATA_SSL_SESSION = 0x4,
	CURL_LOCK_DATA_CONNECT = 0x5,
	CURL_LOCK_DATA_PSL = 0x6,
	CURL_LOCK_DATA_LAST = 0x7
};

enum class CURLMoption:int
{
	CURLMOPT_SOCKETFUNCTION = 0x4E21,
	CURLMOPT_SOCKETDATA = 0x2712,
	CURLMOPT_PIPELINING = 0x3,
	CURLMOPT_TIMERFUNCTION = 0x4E24,
	CURLMOPT_TIMERDATA = 0x2715,
	CURLMOPT_MAXCONNECTS = 0x6,
	CURLMOPT_MAX_HOST_CONNECTIONS = 0x7,
	CURLMOPT_MAX_PIPELINE_LENGTH = 0x8,
	CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE = 0x7539,
	CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE = 0x753A,
	CURLMOPT_PIPELINING_SITE_BL = 0x271B,
	CURLMOPT_PIPELINING_SERVER_BL = 0x271C,
	CURLMOPT_MAX_TOTAL_CONNECTIONS = 0xD,
	CURLMOPT_PUSHFUNCTION = 0x4E2E,
	CURLMOPT_PUSHDATA = 0x271F,
	CURLMOPT_MAX_CONCURRENT_STREAMS = 0x10,
	CURLMOPT_LASTENTRY = 0x11
};

enum class CURLSHoption:int
{
	CURLSHOPT_NONE = 0x0,
	CURLSHOPT_SHARE = 0x1,
	CURLSHOPT_UNSHARE = 0x2,
	CURLSHOPT_LOCKFUNC = 0x3,
	CURLSHOPT_UNLOCKFUNC = 0x4,
	CURLSHOPT_USERDATA = 0x5,
	CURLSHOPT_LAST = 0x6
};

enum class CURLversion:int
{
	CURLVERSION_FIRST = 0x0,
	CURLVERSION_SECOND = 0x1,
	CURLVERSION_THIRD = 0x2,
	CURLVERSION_FOURTH = 0x3,
	CURLVERSION_FIFTH = 0x4,
	CURLVERSION_SIXTH = 0x5,
	CURLVERSION_SEVENTH = 0x6,
	CURLVERSION_EIGHTH = 0x7,
	CURLVERSION_NINTH = 0x8,
	CURLVERSION_TENTH = 0x9,
	CURLVERSION_LAST = 0xA
};

enum class CURLMSG:int
{
	CURLMSG_NONE = 0x0,
	CURLMSG_DONE = 0x1,
	CURLMSG_LAST = 0x2
};

enum class CURLSHcode:int
{
	CURLSHE_OK = 0x0,
	CURLSHE_BAD_OPTION = 0x1,
	CURLSHE_IN_USE = 0x2,
	CURLSHE_INVALID = 0x3,
	CURLSHE_NOMEM = 0x4,
	CURLSHE_NOT_BUILT_IN = 0x5,
	CURLSHE_LAST = 0x6
};

enum class FLightOcclusionType:unsigned char
{
	Shadowmap = 0x0,
	Raytraced = 0x1
};

enum class EClearReplacementValueType:int
{
	Float = 0x0,
	Int32 = 0x1,
	Uint32 = 0x2
};

enum class EClearReplacementResourceType:int
{
	Buffer = 0x0,
	Texture2D = 0x1,
	Texture2DArray = 0x2,
	Texture3D = 0x3,
	StructuredBuffer = 0x4,
	LargeBuffer = 0x5
};

enum class ELightShaftBloomOutput:int
{
	SceneColor = 0x0,
	SeparateTranslucency = 0x1
};

enum class EWinHttpCallbackStatus:unsigned int
{
	ResolvingName = 0x1,
	NameResolved = 0x2,
	ConnectingToServer = 0x4,
	ConnectedToServer = 0x8,
	SendingRequest = 0x10,
	RequestSent = 0x20,
	ReceivingResponse = 0x40,
	ResponseReceived = 0x80,
	ClosingConnection = 0x100,
	ConnectionClosed = 0x200,
	HandleCreated = 0x400,
	HandleClosing = 0x800,
	DetectingProxy = 0x1000,
	Redirect = 0x4000,
	IntermediateResponse = 0xFFFF8000,
	SecureFailure = 0x10000,
	HeadersAvailable = 0x20000,
	DataAvailable = 0x40000,
	ReadComplete = 0x80000,
	WriteComplete = 0x100000,
	RequestError = 0x200000,
	SendRequestComplete = 0x400000,
	GetProxyForUrlComplete = 0x1000000,
	CloseComplete = 0x2000000,
	ShutdownComplete = 0x4000000,
	SettingsWriteComplete = 0x10000000,
	SettingsReadComplete = 0x20000000
};

enum class ELightShaftTechnique:int
{
	Occlusion = 0x0,
	Bloom = 0x1
};

enum class ECopyTextureResourceType:int
{
	Texture2D = 0x0,
	Texture2DArray = 0x1,
	Texture3D = 0x2
};

enum class ECopyTextureValueType:int
{
	Float = 0x0,
	Int32 = 0x1,
	Uint32 = 0x2
};

namespace EInterpolationBlend
{
	enum Type:int
	{
		Linear = 0x0,
		Cubic = 0x1,
		Sinusoidal = 0x2,
		EaseInOutExponent2 = 0x3,
		EaseInOutExponent3 = 0x4,
		EaseInOutExponent4 = 0x5,
		EaseInOutExponent5 = 0x6,
		MAX = 0x7
	};
}

namespace FAnimationCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		BoneDrivenControllerMatchingMaya = 0x1,
		BoneDrivenControllerRemapping = 0x2,
		AnimDynamicsAddAngularOffsets = 0x3,
		RenamedStretchLimits = 0x4,
		ConvertIKToSupportBoneSocketTarget = 0x5,
		VersionPlusOne = 0x6,
		LatestVersion = 0x5
	};
}

enum class ERefPoseType:int
{
	EIT_LocalSpace = 0x0,
	EIT_Additive = 0x1
};

enum class EBoneModificationMode:int
{
	BMM_Ignore = 0x0,
	BMM_Replace = 0x1,
	BMM_Additive = 0x2
};

enum class EARSessionStatus:unsigned char
{
	NotStarted = 0x0,
	Running = 0x1,
	NotSupported = 0x2,
	FatalError = 0x3,
	PermissionNotGranted = 0x4,
	UnsupportedConfiguration = 0x5,
	Other = 0x6
};

enum class EARTrackingState:unsigned char
{
	Unknown = 0x0,
	Tracking = 0x1,
	NotTracking = 0x2,
	StoppedTracking = 0x3
};

enum class EARCandidateImageOrientation:unsigned char
{
	Landscape = 0x0,
	Portrait = 0x1
};

enum class EARObjectClassification:unsigned char
{
	NotApplicable = 0x0,
	Unknown = 0x1,
	Wall = 0x2,
	Ceiling = 0x3,
	Floor = 0x4,
	Table = 0x5,
	Seat = 0x6,
	Face = 0x7,
	Image = 0x8,
	World = 0x9,
	SceneObject = 0xA,
	HandMesh = 0xB,
	Door = 0xC,
	Window = 0xD
};

enum class EARSpatialMeshUsageFlags:unsigned char
{
	NotApplicable = 0x0,
	Visible = 0x1,
	Collision = 0x2
};

enum class EARSessionConfigFlags:unsigned char
{
	None = 0x0,
	GenerateMeshData = 0x1,
	RenderMeshDataInWireframe = 0x2,
	GenerateCollisionForMeshData = 0x4,
	GenerateNavMeshForMeshData = 0x8,
	UseMeshDataForOcclusion = 0x10
};

enum class EPlaneComponentDebugMode:unsigned char
{
	None = 0x0,
	ShowNetworkRole = 0x1,
	ShowClassification = 0x2
};

enum class EDeferredMaterialMode:int
{
	None = 0x0,
	Gather = 0x1,
	Shade = 0x2,
	Reorder = 0x3,
	MAX = 0x4
};

enum class EFaceComponentDebugMode:unsigned char
{
	None = 0x0,
	ShowEyeVectors = 0x1,
	ShowFaceMesh = 0x2
};

enum class EARFaceTransformMixing:unsigned char
{
	ComponentOnly = 0x0,
	ComponentLocationTrackedRotation = 0x1,
	ComponentWithTracked = 0x2,
	TrackingOnly = 0x3
};

enum class ESamplePhase:int
{
	Monlithic = 0x0,
	Init = 0x1,
	Accum = 0x2,
	Resolve = 0x3
};

enum class EImageComponentDebugMode:unsigned char
{
	None = 0x0,
	ShowDetectedImage = 0x1
};

enum class EQRCodeComponentDebugMode:unsigned char
{
	None = 0x0,
	ShowQRCode = 0x1
};

enum class EPoseComponentDebugMode:unsigned char
{
	None = 0x0,
	ShowSkeleton = 0x1
};

namespace EHMDWornState
{
	enum Type:int
	{
		Unknown = 0x0,
		Worn = 0x1,
		NotWorn = 0x2
	};
}

namespace EOrientPositionSelector
{
	enum Type:int
	{
		Orientation = 0x0,
		Position = 0x1,
		OrientationAndPosition = 0x2
	};
}

namespace EXRSystemFlags
{
	enum Type:int
	{
		NoFlags = 0x0,
		IsAR = 0x1,
		IsTablet = 0x2,
		IsHeadMounted = 0x4,
		SupportsHandTracking = 0x8
	};
}

enum class EGeoAnchorComponentDebugMode:unsigned char
{
	None = 0x0,
	ShowGeoData = 0x1
};

enum class EARAltitudeSource:unsigned char
{
	Precise = 0x0,
	Coarse = 0x1,
	UserDefined = 0x2,
	Unknown = 0x3
};

enum class ESwapRootBone:unsigned char
{
	SwapRootBone_Component = 0x0,
	SwapRootBone_Actor = 0x1,
	SwapRootBone_None = 0x2
};

enum class EAnimExecutionContextConversionResult:unsigned char
{
	Succeeded = 0x1,
	Failed = 0x0
};

enum class AnimPhysCollisionType:unsigned char
{
	CoM = 0x0,
	CustomSphere = 0x1,
	InnerSphere = 0x2,
	OuterSphere = 0x3
};

enum class AnimPhysLinearConstraintType:unsigned char
{
	Free = 0x0,
	Limited = 0x1
};

enum class AnimPhysAngularConstraintType:unsigned char
{
	Angular = 0x0,
	Cone = 0x1
};

enum class AnimPhysTwistAxis:unsigned char
{
	AxisX = 0x0,
	AxisY = 0x1,
	AxisZ = 0x2
};

enum class ESphericalLimitType:unsigned char
{
	Inner = 0x0,
	Outer = 0x1
};

enum class AnimPhysSimSpaceType:unsigned char
{
	Component = 0x0,
	Actor = 0x1,
	World = 0x2,
	RootRelative = 0x3,
	BoneRelative = 0x4
};

enum class EARPlaneOrientation:unsigned char
{
	Horizontal = 0x0,
	Vertical = 0x1,
	Diagonal = 0x2
};

enum class EARFaceBlendShape:unsigned char
{
	EyeBlinkLeft = 0x0,
	EyeLookDownLeft = 0x1,
	EyeLookInLeft = 0x2,
	EyeLookOutLeft = 0x3,
	EyeLookUpLeft = 0x4,
	EyeSquintLeft = 0x5,
	EyeWideLeft = 0x6,
	EyeBlinkRight = 0x7,
	EyeLookDownRight = 0x8,
	EyeLookInRight = 0x9,
	EyeLookOutRight = 0xA,
	EyeLookUpRight = 0xB,
	EyeSquintRight = 0xC,
	EyeWideRight = 0xD,
	JawForward = 0xE,
	JawLeft = 0xF,
	JawRight = 0x10,
	JawOpen = 0x11,
	MouthClose = 0x12,
	MouthFunnel = 0x13,
	MouthPucker = 0x14,
	MouthLeft = 0x15,
	MouthRight = 0x16,
	MouthSmileLeft = 0x17,
	MouthSmileRight = 0x18,
	MouthFrownLeft = 0x19,
	MouthFrownRight = 0x1A,
	MouthDimpleLeft = 0x1B,
	MouthDimpleRight = 0x1C,
	MouthStretchLeft = 0x1D,
	MouthStretchRight = 0x1E,
	MouthRollLower = 0x1F,
	MouthRollUpper = 0x20,
	MouthShrugLower = 0x21,
	MouthShrugUpper = 0x22,
	MouthPressLeft = 0x23,
	MouthPressRight = 0x24,
	MouthLowerDownLeft = 0x25,
	MouthLowerDownRight = 0x26,
	MouthUpperUpLeft = 0x27,
	MouthUpperUpRight = 0x28,
	BrowDownLeft = 0x29,
	BrowDownRight = 0x2A,
	BrowInnerUp = 0x2B,
	BrowOuterUpLeft = 0x2C,
	BrowOuterUpRight = 0x2D,
	CheekPuff = 0x2E,
	CheekSquintLeft = 0x2F,
	CheekSquintRight = 0x30,
	NoseSneerLeft = 0x31,
	NoseSneerRight = 0x32,
	TongueOut = 0x33,
	HeadYaw = 0x34,
	HeadPitch = 0x35,
	HeadRoll = 0x36,
	LeftEyeYaw = 0x37,
	LeftEyePitch = 0x38,
	LeftEyeRoll = 0x39,
	RightEyeYaw = 0x3A,
	RightEyePitch = 0x3B,
	RightEyeRoll = 0x3C,
	MAX = 0x3D
};

enum class EAREye:unsigned char
{
	LeftEye = 0x0,
	RightEye = 0x1
};

enum class EARTextureType:unsigned char
{
	Unknown = 0x0,
	CameraImage = 0x1,
	CameraDepth = 0x2,
	EnvironmentCapture = 0x3,
	PersonSegmentationImage = 0x4,
	PersonSegmentationDepth = 0x5,
	SceneDepthMap = 0x6,
	SceneDepthConfidenceMap = 0x7
};

enum class EARJointTransformSpace:unsigned char
{
	Model = 0x0,
	ParentJoint = 0x1
};

enum class EARWorldAlignment:unsigned char
{
	Gravity = 0x0,
	GravityAndHeading = 0x1,
	Camera = 0x2
};

enum class EARSessionType:unsigned char
{
	None = 0x0,
	Orientation = 0x1,
	World = 0x2,
	Face = 0x3,
	Image = 0x4,
	ObjectScanning = 0x5,
	PoseTracking = 0x6,
	GeoTracking = 0x7
};

enum class EARPlaneDetectionMode:unsigned char
{
	None = 0x0,
	HorizontalPlaneDetection = 0x1,
	VerticalPlaneDetection = 0x2
};

enum class EARLightEstimationMode:unsigned char
{
	None = 0x0,
	AmbientLightEstimate = 0x1,
	DirectionalLightEstimate = 0x2
};

enum class EARFrameSyncMode:unsigned char
{
	SyncTickWithCameraImage = 0x0,
	SyncTickWithoutCameraImage = 0x1
};

enum class EAREnvironmentCaptureProbeType:unsigned char
{
	None = 0x0,
	Manual = 0x1,
	Automatic = 0x2
};

enum class EARFaceTrackingDirection:unsigned char
{
	FaceRelative = 0x0,
	FaceMirrored = 0x1
};

enum class EARFaceTrackingUpdate:unsigned char
{
	CurvesAndGeo = 0x0,
	CurvesOnly = 0x1
};

enum class EARSessionTrackingFeature:unsigned char
{
	None = 0x0,
	PoseDetection2D = 0x1,
	PersonSegmentation = 0x2,
	PersonSegmentationWithDepth = 0x3,
	SceneDepth = 0x4,
	SmoothedSceneDepth = 0x5
};

enum class EARSceneReconstruction:unsigned char
{
	None = 0x0,
	MeshOnly = 0x1,
	MeshWithClassification = 0x2
};

enum class EARDepthQuality:unsigned char
{
	Unkown = 0x0,
	Low = 0x1,
	High = 0x2
};

enum class EARDepthAccuracy:unsigned char
{
	Unkown = 0x0,
	Approximate = 0x1,
	Accurate = 0x2
};

enum class EARTrackingQuality:unsigned char
{
	NotTracking = 0x0,
	OrientationOnly = 0x1,
	OrientationAndPosition = 0x2
};

enum class EARCaptureType:unsigned char
{
	Camera = 0x0,
	QRCode = 0x1,
	SpatialMapping = 0x2,
	SceneUnderstanding = 0x3,
	HandMesh = 0x4
};

enum class EARLineTraceChannels:unsigned char
{
	None = 0x0,
	FeaturePoint = 0x1,
	GroundPlane = 0x2,
	PlaneUsingExtent = 0x4,
	PlaneUsingBoundaryPolygon = 0x8
};

enum class ESurfaceCacheCompression:unsigned char
{
	Disabled = 0x0,
	UAVAliasing = 0x1,
	CopyTextureRegion = 0x2
};

enum class EARWorldMappingState:unsigned char
{
	NotAvailable = 0x0,
	StillMappingNotRelocalizable = 0x1,
	StillMappingRelocalizable = 0x2,
	Mapped = 0x3
};

enum class EInertializationBoneState:unsigned char
{
	Invalid = 0x0,
	Valid = 0x1,
	Excluded = 0x2
};

enum class EInertializationSpace:unsigned char
{
	Default = 0x0,
	WorldSpace = 0x1,
	WorldRotation = 0x2
};

enum class EInertializationState:unsigned char
{
	Inactive = 0x0,
	Pending = 0x1,
	Active = 0x2
};

enum class EARGeoTrackingState:unsigned char
{
	Initializing = 0x0,
	Localized = 0x1,
	Localizing = 0x2,
	NotAvailable = 0x3
};

enum class EARGeoTrackingAccuracy:unsigned char
{
	Undetermined = 0x0,
	Low = 0x1,
	Medium = 0x2,
	High = 0x3
};

enum class EAnimFunctionCallSite:int
{
	OnInitialize = 0x0,
	OnUpdate = 0x1,
	OnBecomeRelevant = 0x2,
	OnEvaluate = 0x3,
	OnInitializePostRecursion = 0x4,
	OnUpdatePostRecursion = 0x5,
	OnBecomeRelevantPostRecursion = 0x6,
	OnEvaluatePostRecursion = 0x7,
	OnStartedBlendingOut = 0x8,
	OnStartedBlendingIn = 0x9,
	OnFinishedBlendingOut = 0xA,
	OnFinishedBlendingIn = 0xB
};

enum class ELumenIndirectLightingSteps:int
{
	None = 0x0,
	ScreenProbeGather = 0x1,
	Reflections = 0x2,
	StoreDepthHistory = 0x4,
	Composite = 0x8,
	All = 0xF
};

enum class EDiffuseIndirectMethod:int
{
	Disabled = 0x0,
	SSGI = 0x1,
	RTGI = 0x2,
	Lumen = 0x3,
	Plugin = 0x4
};

enum class EReflectionsMethod:int
{
	Disabled = 0x0,
	SSR = 0x1,
	RTR = 0x2,
	Lumen = 0x3
};

enum class ELayeredBoneBlendMode:unsigned char
{
	BranchFilter = 0x0,
	BlendMask = 0x1
};

enum class EModifyCurveApplyMode:unsigned char
{
	Add = 0x0,
	Scale = 0x1,
	Blend = 0x2,
	WeightedMovingAverage = 0x3,
	RemapCurve = 0x4
};

enum class EMobileShadowQuality:unsigned char
{
	NoFiltering = 0x0,
	PCF_1x1 = 0x1,
	PCF_3x3 = 0x2,
	PCF_5x5 = 0x3
};

enum class EARServiceAvailability:unsigned char
{
	UnknownError = 0x0,
	UnknownChecking = 0x1,
	UnknownTimedOut = 0x2,
	UnsupportedDeviceNotCapable = 0x3,
	SupportedNotInstalled = 0x4,
	SupportedVersionTooOld = 0x5,
	SupportedInstalled = 0x6
};

enum class EARServiceInstallRequestResult:unsigned char
{
	Installed = 0x0,
	DeviceNotCompatible = 0x1,
	UserDeclinedInstallation = 0x2,
	FatalError = 0x3
};

enum class EARServicePermissionRequestResult:unsigned char
{
	Granted = 0x0,
	Denied = 0x1
};

enum class ERBFDistanceMethod:unsigned char
{
	Euclidean = 0x0,
	Quaternion = 0x1,
	SwingAngle = 0x2,
	TwistAngle = 0x3,
	DefaultMethod = 0x4
};

enum class ERBFFunctionType:unsigned char
{
	Gaussian = 0x0,
	Exponential = 0x1,
	Linear = 0x2,
	Cubic = 0x3,
	Quintic = 0x4,
	DefaultFunction = 0x5
};

enum class EPoseDriverSource:unsigned char
{
	Rotation = 0x0,
	Translation = 0x1
};

enum class EPoseDriverOutput:unsigned char
{
	DrivePoses = 0x0,
	DriveCurves = 0x1
};

enum class ERBFSolverType:unsigned char
{
	Additive = 0x0,
	Interpolative = 0x1
};

enum class ERBFNormalizeMethod:unsigned char
{
	OnlyNormalizeAboveOne = 0x0,
	AlwaysNormalize = 0x1,
	NormalizeWithinMedian = 0x2,
	NoNormalization = 0x3
};

enum class EPoseDriverType:unsigned char
{
	SwingAndTwist = 0x0,
	SwingOnly = 0x1,
	Translation = 0x2
};

namespace ESRIPreviewType
{
	enum Type:int
	{
		Off = 0x0,
		Projected = 0x1,
		ProjectedConservative = 0x2,
		BeforeReprojection = 0x3,
		Num = 0x4
	};
}

namespace ESRITextureType
{
	enum Type:int
	{
		None = 0x0,
		ScaledSRIForRender = 0x1,
		ScaledConservativeSRIForRender = 0x2,
		ConstructedSRI = 0x3,
		Num = 0x4
	};
}

enum class ESnapshotSourceMode:unsigned char
{
	NamedSnapshot = 0x0,
	SnapshotPin = 0x1
};

enum class ERandomDataIndexType:int
{
	Current = 0x0,
	Next = 0x1
};

enum class ChaosDeformableSimSpace:unsigned char
{
	World = 0x0,
	ComponentXf = 0x1,
	Bone = 0x2
};

enum class EVRSGenerationFlags:unsigned int
{
	None = 0x0,
	StereoRendering = 0x1,
	SideBySideStereo = 0x2,
	HMDFixedFoveation = 0x4,
	HMDEyeTrackedFoveation = 0x8
};

enum class FHairLUTType:int
{
	HairLUTType_DualScattering = 0x0,
	HairLUTType_MeanEnergy = 0x1,
	HairLUTType_Coverage = 0x2,
	HairLUTTypeCount = 0x3
};

enum class EHairStrandsCommonPassType:int
{
	Composition = 0x0,
	DOF = 0x1,
	TAAFastResolve = 0x2,
	GBuffer = 0x3,
	Blit = 0x4
};

enum class EDrivenBoneModificationMode:unsigned char
{
	AddToInput = 0x0,
	ReplaceComponent = 0x1,
	AddToRefPose = 0x2
};

enum class EDrivenDestinationMode:unsigned char
{
	Bone = 0x0,
	MorphTarget = 0x1,
	MaterialParameter = 0x2
};

enum class EConstraintOffsetOption:unsigned char
{
	None = 0x0,
	Offset_RefPose = 0x1
};

enum class CopyBoneDeltaMode:unsigned char
{
	Accumulate = 0x0,
	Copy = 0x1
};

enum class ESimulationSpace:unsigned char
{
	ComponentSpace = 0x0,
	WorldSpace = 0x1,
	BaseBoneSpace = 0x2
};

enum class ESimulationTiming:unsigned char
{
	Default = 0x0,
	Synchronous = 0x1,
	Deferred = 0x2
};

enum class EScaleChainInitialLength:unsigned char
{
	FixedDefaultLengthValue = 0x0,
	Distance = 0x1,
	ChainLength = 0x2
};

enum class ESplineBoneAxis:unsigned char
{
	None = 0x0,
	X = 0x1,
	Y = 0x2,
	Z = 0x3
};

enum class EHairStrandsRasterPassType:unsigned char
{
	FrontDepth = 0x0,
	DeepOpacityMap = 0x1
};

enum class EHairLightingIntegrationType:unsigned char
{
	SceneColor = 0x0,
	AdHoc = 0x1,
	Uniform = 0x2,
	SH = 0x3,
	Count = 0x4
};

enum class EHairLightingSourceType:unsigned char
{
	SceneColor = 0x0,
	ReflectionProbe = 0x1,
	Lumen = 0x2,
	Count = 0x3
};

enum class EOITPassType:int
{
	OITPass_None = 0x0,
	OITPass_RegularTranslucency = 0x1,
	OITPass_SeperateTranslucency = 0x2
};

enum class ELumenSurfaceCacheLayer:unsigned char
{
	Depth = 0x0,
	Albedo = 0x1,
	Opacity = 0x2,
	Normal = 0x3,
	Emissive = 0x4,
	MAX = 0x5
};

enum class ELandscapeGizmoType:int
{
	LGT_None = 0x0,
	LGT_Height = 0x1,
	LGT_Weight = 0x2,
	LGT_MAX = 0x3
};

enum class ELandscapeSetupErrors:int
{
	LSE_None = 0x0,
	LSE_NoLandscapeInfo = 0x1,
	LSE_CollsionXY = 0x2,
	LSE_NoLayerInfo = 0x3,
	LSE_MAX = 0x4
};

enum class ERTDrawingType:unsigned char
{
	RTAtlas = 0x0,
	RTAtlasToNonAtlas = 0x1,
	RTNonAtlasToAtlas = 0x2,
	RTNonAtlas = 0x3,
	RTMips = 0x4
};

enum class EHeightmapRTType:unsigned char
{
	HeightmapRT_CombinedAtlas = 0x0,
	HeightmapRT_CombinedNonAtlas = 0x1,
	HeightmapRT_Scratch1 = 0x2,
	HeightmapRT_Scratch2 = 0x3,
	HeightmapRT_Scratch3 = 0x4,
	HeightmapRT_Mip1 = 0x5,
	HeightmapRT_Mip2 = 0x6,
	HeightmapRT_Mip3 = 0x7,
	HeightmapRT_Mip4 = 0x8,
	HeightmapRT_Mip5 = 0x9,
	HeightmapRT_Mip6 = 0xA,
	HeightmapRT_Mip7 = 0xB,
	HeightmapRT_Count = 0xC
};

enum class EWeightmapRTType:unsigned char
{
	WeightmapRT_Scratch_RGBA = 0x0,
	WeightmapRT_Scratch1 = 0x1,
	WeightmapRT_Scratch2 = 0x2,
	WeightmapRT_Scratch3 = 0x3,
	WeightmapRT_Mip0 = 0x4,
	WeightmapRT_Mip1 = 0x5,
	WeightmapRT_Mip2 = 0x6,
	WeightmapRT_Mip3 = 0x7,
	WeightmapRT_Mip4 = 0x8,
	WeightmapRT_Mip5 = 0x9,
	WeightmapRT_Mip6 = 0xA,
	WeightmapRT_Mip7 = 0xB,
	WeightmapRT_Count = 0xC
};

enum class EScreenProbeIrradianceFormat:unsigned char
{
	SH3 = 0x0,
	Octahedral = 0x1,
	MAX = 0x2
};

enum class ELandscapeGizmoSnapType:int
{
	None = 0x0,
	Component = 0x1,
	Texel = 0x2
};

enum class EGrassScaling:unsigned char
{
	Uniform = 0x0,
	Free = 0x1,
	LockXY = 0x2
};

enum class EGrassSurfaceFilter:unsigned char
{
	UpOnly = 0x0,
	DownOnly = 0x1,
	All = 0x2
};

enum class EHairVisibilityVendor:int
{
	HairVisibilityVendor_AMD = 0x0,
	HairVisibilityVendor_NVIDIA = 0x1,
	HairVisibilityVendor_INTEL = 0x2,
	HairVisibilityVendorCount = 0x3
};

enum class EScreenProbeIntegrateTileClassification:int
{
	SimpleDiffuse = 0x0,
	SupportImportanceSampleBRDF = 0x1,
	SupportAll = 0x2,
	Num = 0x3
};

enum class EHairVisibilityRenderMode:int
{
	HairVisibilityRenderMode_Transmittance = 0x0,
	HairVisibilityRenderMode_PPLL = 0x1,
	HairVisibilityRenderMode_MSAA_Visibility = 0x2,
	HairVisibilityRenderMode_TransmittanceAndHairCount = 0x3,
	HairVisibilityRenderMode_ComputeRaster = 0x4,
	HairVisibilityRenderMode_ComputeRasterForward = 0x5,
	HairVisibilityRenderModeCount = 0x6
};

enum class ECompactedTracingIndirectArgs:int
{
	NumTracesDiv64 = 0x0,
	NumTracesDiv32 = 0xC,
	NumLightSampleTracesDiv64 = 0x18,
	NumLightSampleTracesDiv32 = 0x24,
	MAX = 0x4
};

enum class ERayTracingViewMaskMode:unsigned char
{
	RayTracing = 0x0,
	PathTracing = 0x1,
	LightMapTracing = 0x2
};

enum class ETemporalDenoisingMode:unsigned int
{
	ETDM_DISABLED = 0x0,
	ETDM_OFFLINE = 0x1,
	ETDM_ONLINE = 0x2,
	ETDM_MAX = 0x3
};

enum class ESpatialDenoiserType:int
{
	NONE = 0xFF,
	SPATIAL_DENOISER_PLUGIN = 0x0,
	SPATIAL_TEMPORAL_DENOISER_PLUGIN = 0x1,
	MAX = 0x2
};

enum class ETemporalDenoiserType:int
{
	NONE = 0xFF,
	BUILTIN_TEMPORAL_DENOISER = 0x0,
	SPATIAL_TEMPORAL_DENOISER_PLUGIN = 0x1,
	MAX = 0x2
};

enum class ETemporalDenoiserMotionVectorType:int
{
	NONE = 0xFF,
	BUILTIN = 0x0,
	PLUGIN = 0x1,
	MAX = 0x2
};

enum class EFeatureFusionCategory:unsigned int
{
	SOURCE = 0x0,
	TARGET = 0x1,
	MAX = 0x2
};

enum class ESubsurfaceMode:unsigned int
{
	FullRes = 0x0,
	HalfRes = 0x1,
	Bypass = 0x2,
	MAX = 0x3
};

enum class EMeshTrackerVertexColorMode:unsigned char
{
	None = 0x0,
	Confidence = 0x1,
	Block = 0x2
};

enum class ECullingDebugState:int
{
	Off = 0x0,
	On = 0x1,
	Paused = 0x2
};

namespace ESingleLayerWaterReflections
{
	enum Type:int
	{
		Disabled = 0x0,
		Enabled = 0x1,
		ReflectionCaptures = 0x2,
		SSR = 0x3,
		MaxValue = 0x3
	};
}

enum class EVirtualShadowMapProjectionInputType:int
{
	GBuffer = 0x0,
	HairStrands = 0x1
};

enum class EHairTransmittancePassType:unsigned char
{
	PerLight = 0x0,
	OnePass = 0x1
};

enum class EWindSourceType:unsigned char
{
	Directional = 0x0,
	Point = 0x1
};

enum class EGPUSkinCacheEntryMode:int
{
	Raster = 0x0,
	RayTracing = 0x1
};

namespace EEventParameterVersion
{
	enum Type:int
	{
		First = 0x0,
		LastPlusOne = 0x1,
		LatestVersion = 0x0
	};
}

enum class EHairAuxilaryPassType:int
{
	MaterialData = 0x0,
	MaterialData_LightChannelMask = 0x1,
	LightChannelMask = 0x2,
	DepthPatch = 0x3,
	DepthClear = 0x4
};

enum class ELevelVisibility:unsigned char
{
	Visible = 0x0,
	Hidden = 0x1
};

enum class EWidgetBlendMode:unsigned char
{
	Opaque = 0x0,
	Masked = 0x1,
	Transparent = 0x2
};

enum class EWidgetSpace:unsigned char
{
	World = 0x0,
	Screen = 0x1
};

enum class EWidgetGeometryMode:unsigned char
{
	Plane = 0x0,
	Cylinder = 0x1
};

enum class EWindowVisibility:unsigned char
{
	Visible = 0x0,
	SelfHitTestInvisible = 0x1
};

enum class ETickMode:unsigned char
{
	Disabled = 0x0,
	Enabled = 0x1,
	Automatic = 0x2
};

enum class EWidgetTimingPolicy:unsigned char
{
	RealTime = 0x0,
	GameTime = 0x1
};

enum class EVoxelizeShapeMode:int
{
	VMode_Primitive_Sphere = 0x0,
	VMode_Object_Box = 0x1
};

enum class EDistanceFieldPrimitiveType:int
{
	DFPT_SignedDistanceField = 0x0,
	DFPT_HeightField = 0x1,
	DFPT_Num = 0x2
};

enum class EDistanceFieldShadowingType:int
{
	DFS_DirectionalLightScatterTileCulling = 0x0,
	DFS_DirectionalLightTiledCulling = 0x1,
	DFS_PointLightTiledCulling = 0x2
};

enum class EVolumetricCloudRenderViewPsPermutations:int
{
	CloudPs_AtmoTrans0_SampleShad0_2ndLight0 = 0x0,
	CloudPs_AtmoTrans1_SampleShad0_2ndLight0 = 0x1,
	CloudPs_AtmoTrans0_SampleShad1_2ndLight0 = 0x2,
	CloudPs_AtmoTrans1_SampleShad1_2ndLight0 = 0x3,
	CloudPs_AtmoTrans0_SampleShad0_2ndLight1 = 0x4,
	CloudPs_AtmoTrans1_SampleShad0_2ndLight1 = 0x5,
	CloudPs_AtmoTrans0_SampleShad1_2ndLight1 = 0x6,
	CloudPs_AtmoTrans1_SampleShad1_2ndLight1 = 0x7,
	CloudPsCount = 0x8
};

enum class EOutputFormat:int
{
	LDR_GAMMA_32 = 0x0,
	HDR_LINEAR_64 = 0x1
};

enum class EVolumetricCloudTracingMaxDistanceMode:unsigned char
{
	DistanceFromCloudLayerEntryPoint = 0x0,
	DistanceFromPointOfView = 0x1
};

enum class EPhysXFilterDataFlags:int
{
	EPDF_SimpleCollision = 0x1,
	EPDF_ComplexCollision = 0x2,
	EPDF_CCD = 0x4,
	EPDF_ContactNotify = 0x8,
	EPDF_StaticShape = 0x10,
	EPDF_ModifyContacts = 0x20,
	EPDF_KinematicKinematicPairs = 0x40
};

enum class ESimulationInitializationState:unsigned char
{
	Unintialized = 0x0,
	Activated = 0x1,
	Created = 0x2,
	Initialized = 0x3
};

enum class ECollectionAttributeEnum:unsigned char
{
	Chaos_Active = 0x0,
	Chaos_DynamicState = 0x1,
	Chaos_CollisionGroup = 0x2,
	Chaos_Max = 0x3
};

enum class ECollectionGroupEnum:unsigned char
{
	Chaos_Traansform = 0x0,
	Chaos_Max = 0x1
};

enum class EChaosCollisionSortMethod:unsigned char
{
	SortNone = 0x0,
	SortByHighestMass = 0x1,
	SortByHighestSpeed = 0x2,
	SortByHighestImpulse = 0x3,
	SortByNearestFirst = 0x4,
	Count = 0x5
};

enum class EChaosBreakingSortMethod:unsigned char
{
	SortNone = 0x0,
	SortByHighestMass = 0x1,
	SortByHighestSpeed = 0x2,
	SortByNearestFirst = 0x3,
	Count = 0x4
};

enum class EChaosTrailingSortMethod:unsigned char
{
	SortNone = 0x0,
	SortByHighestMass = 0x1,
	SortByHighestSpeed = 0x2,
	SortByNearestFirst = 0x3,
	Count = 0x4
};

enum class EChaosRemovalSortMethod:unsigned char
{
	SortNone = 0x0,
	SortByHighestMass = 0x1,
	SortByNearestFirst = 0x2,
	Count = 0x3
};

enum class EPhysicsInterfaceScopedLockType:unsigned char
{
	Read = 0x0,
	Write = 0x1
};

enum class EGeometryCollectionDebugDrawActorHideGeometry:unsigned char
{
	HideNone = 0x0,
	HideWithCollision = 0x1,
	HideSelected = 0x2,
	HideWholeCollection = 0x3,
	HideAll = 0x4
};

enum class FMaterialGPUMessageFlags:unsigned int
{
	None = 0x0,
	PrimitiveId = 0x1000000,
	InstanceId = 0x2000000,
	RowIdx = 0x4000000
};

enum class EIcmpResponseStatus:int
{
	Success = 0x0,
	Timeout = 0x1,
	Unreachable = 0x2,
	Unresolvable = 0x3,
	InternalError = 0x4,
	NotImplemented = 0x5
};

enum class EIcmpEchoManyStatus:unsigned char
{
	Invalid = 0x0,
	Success = 0x1,
	Failure = 0x2,
	Canceled = 0x3
};

enum class ELandscapeLayerBlendType:int
{
	LB_WeightBlend = 0x0,
	LB_AlphaBlend = 0x1,
	LB_HeightBlend = 0x2
};

enum class ESplineModulationColorMask:unsigned char
{
	Red = 0x0,
	Green = 0x1,
	Blue = 0x2,
	Alpha = 0x3
};

enum class ELandscapeDirtyingMode:unsigned char
{
	Auto = 0x0,
	InLandscapeModeOnly = 0x1,
	InLandscapeModeAndUserTriggeredChanges = 0x2
};

enum class EAnalyticsSessionShutdownType:int
{
	Shutdown = 0x0,
	Terminated = 0x1,
	Debugged = 0x2,
	Crashed = 0x3,
	Abnormal = 0x4,
	Unknown = 0x5
};

enum class ESslTlsProtocol:unsigned char
{
	Minimum = 0x0,
	SSLv2 = 0x0,
	SSLv3 = 0x1,
	TLSv1 = 0x2,
	TLSv1_1 = 0x3,
	TLSv1_2 = 0x4,
	Maximum = 0x4
};

enum class _PinDirection:int
{
	PINDIR_INPUT = 0x0,
	PINDIR_OUTPUT = 0x1
};

enum class _FilterState:int
{
	State_Stopped = 0x0,
	State_Paused = 0x1,
	State_Running = 0x2
};

enum class InterleavingMode:int
{
	INTERLEAVE_NONE = 0x0,
	INTERLEAVE_CAPTURE = 0x1,
	INTERLEAVE_FULL = 0x2,
	INTERLEAVE_NONE_BUFFERED = 0x3
};

enum class tagQualityMessageType:int
{
	Famine = 0x0,
	Flood = 0x1
};

enum class tagAnalogVideoStandard:unsigned __int64
{
	AnalogVideo_None = 0x0,
	AnalogVideo_NTSC_M = 0x1,
	AnalogVideo_NTSC_M_J = 0x2,
	AnalogVideo_NTSC_433 = 0x4,
	AnalogVideo_PAL_B = 0x10,
	AnalogVideo_PAL_D = 0x20,
	AnalogVideo_PAL_G = 0x40,
	AnalogVideo_PAL_H = 0x80,
	AnalogVideo_PAL_I = 0x100,
	AnalogVideo_PAL_M = 0x200,
	AnalogVideo_PAL_N = 0x400,
	AnalogVideo_PAL_60 = 0x800,
	AnalogVideo_SECAM_B = 0x1000,
	AnalogVideo_SECAM_D = 0x2000,
	AnalogVideo_SECAM_G = 0x4000,
	AnalogVideo_SECAM_H = 0xFFFF8000,
	AnalogVideo_SECAM_K = 0x10000,
	AnalogVideo_SECAM_K1 = 0x20000,
	AnalogVideo_SECAM_L = 0x40000,
	AnalogVideo_SECAM_L1 = 0x80000,
	AnalogVideo_PAL_N_COMBO = 0x100000,
	AnalogVideoMask_MCE_NTSC = 0x100E07,
	AnalogVideoMask_MCE_PAL = 0x1F0,
	AnalogVideoMask_MCE_SECAM = 0xFF000
};

enum class tagPhysicalConnectorType:int
{
	PhysConn_Video_Tuner = 0x1,
	PhysConn_Video_Composite = 0x2,
	PhysConn_Video_SVideo = 0x3,
	PhysConn_Video_RGB = 0x4,
	PhysConn_Video_YRYBY = 0x5,
	PhysConn_Video_SerialDigital = 0x6,
	PhysConn_Video_ParallelDigital = 0x7,
	PhysConn_Video_SCSI = 0x8,
	PhysConn_Video_AUX = 0x9,
	PhysConn_Video_1394 = 0xA,
	PhysConn_Video_USB = 0xB,
	PhysConn_Video_VideoDecoder = 0xC,
	PhysConn_Video_VideoEncoder = 0xD,
	PhysConn_Video_SCART = 0xE,
	PhysConn_Video_Black = 0xF,
	PhysConn_Audio_Tuner = 0x1000,
	PhysConn_Audio_Line = 0x1001,
	PhysConn_Audio_Mic = 0x1002,
	PhysConn_Audio_AESDigital = 0x1003,
	PhysConn_Audio_SPDIFDigital = 0x1004,
	PhysConn_Audio_SCSI = 0x1005,
	PhysConn_Audio_AUX = 0x1006,
	PhysConn_Audio_1394 = 0x1007,
	PhysConn_Audio_USB = 0x1008,
	PhysConn_Audio_AudioDecoder = 0x1009
};

enum class tagTunerInputType:int
{
	TunerInputCable = 0x0,
	TunerInputAntenna = 0x1
};

enum class VideoCopyProtectionType:int
{
	VideoCopyProtectionMacrovisionBasic = 0x0,
	VideoCopyProtectionMacrovisionCBI = 0x1
};

enum class tagVideoProcAmpProperty:int
{
	VideoProcAmp_Brightness = 0x0,
	VideoProcAmp_Contrast = 0x1,
	VideoProcAmp_Hue = 0x2,
	VideoProcAmp_Saturation = 0x3,
	VideoProcAmp_Sharpness = 0x4,
	VideoProcAmp_Gamma = 0x5,
	VideoProcAmp_ColorEnable = 0x6,
	VideoProcAmp_WhiteBalance = 0x7,
	VideoProcAmp_BacklightCompensation = 0x8,
	VideoProcAmp_Gain = 0x9
};

enum class tagCameraControlProperty:int
{
	CameraControl_Pan = 0x0,
	CameraControl_Tilt = 0x1,
	CameraControl_Roll = 0x2,
	CameraControl_Zoom = 0x3,
	CameraControl_Exposure = 0x4,
	CameraControl_Iris = 0x5,
	CameraControl_Focus = 0x6
};

enum class _DECIMATION_USAGE:int
{
	DECIMATION_LEGACY = 0x0,
	DECIMATION_USE_DECODER_ONLY = 0x1,
	DECIMATION_USE_VIDEOPORT_ONLY = 0x2,
	DECIMATION_USE_OVERLAY_ONLY = 0x3,
	DECIMATION_DEFAULT = 0x4
};

enum class AMPROPERTY_PIN:int
{
	AMPROPERTY_PIN_CATEGORY = 0x0,
	AMPROPERTY_PIN_MEDIUM = 0x1
};

enum class _AM_AUDIO_RENDERER_STAT_PARAM:int
{
	AM_AUDREND_STAT_PARAM_BREAK_COUNT = 0x1,
	AM_AUDREND_STAT_PARAM_SLAVE_MODE = 0x2,
	AM_AUDREND_STAT_PARAM_SILENCE_DUR = 0x3,
	AM_AUDREND_STAT_PARAM_LAST_BUFFER_DUR = 0x4,
	AM_AUDREND_STAT_PARAM_DISCONTINUITIES = 0x5,
	AM_AUDREND_STAT_PARAM_SLAVE_RATE = 0x6,
	AM_AUDREND_STAT_PARAM_SLAVE_DROPWRITE_DUR = 0x7,
	AM_AUDREND_STAT_PARAM_SLAVE_HIGHLOWERROR = 0x8,
	AM_AUDREND_STAT_PARAM_SLAVE_LASTHIGHLOWERROR = 0x9,
	AM_AUDREND_STAT_PARAM_SLAVE_ACCUMERROR = 0xA,
	AM_AUDREND_STAT_PARAM_BUFFERFULLNESS = 0xB,
	AM_AUDREND_STAT_PARAM_JITTER = 0xC
};

enum class VIDEOENCODER_BITRATE_MODE:int
{
	ConstantBitRate = 0x0,
	VariableBitRateAverage = 0x1,
	VariableBitRatePeak = 0x2
};

enum class tagDVD_DOMAIN:int
{
	DVD_DOMAIN_FirstPlay = 0x1,
	DVD_DOMAIN_VideoManagerMenu = 0x2,
	DVD_DOMAIN_VideoTitleSetMenu = 0x3,
	DVD_DOMAIN_Title = 0x4,
	DVD_DOMAIN_Stop = 0x5
};

enum class VMR_ASPECT_RATIO_MODE:int
{
	VMR_ARMODE_NONE = 0x0,
	VMR_ARMODE_LETTER_BOX = 0x1
};

enum class EMobileBasePass:int
{
	Opaque = 0x0,
	Translucent = 0x1
};

enum class EOpusMode:unsigned char
{
	File = 0x0,
	AudioStream = 0x1,
	VoiceStream = 0x2
};

enum class EOpusFrameSizes:unsigned char
{
	Min = 0x0,
	Small = 0x1,
	MediumLow = 0x2,
	MediumHigh = 0x3,
	High = 0x4,
	Max = 0x5
};

namespace EBuiltInEvaluationGroup
{
	enum Type:int
	{
		PreEvaluation = 0x0,
		SpawnObjects = 0x1,
		PostEvaluation = 0x2
	};
}

enum class MovieScene3DPathSection_Axis:unsigned char
{
	X = 0x0,
	Y = 0x1,
	Z = 0x2,
	NEG_X = 0x3,
	NEG_Y = 0x4,
	NEG_Z = 0x5
};

enum class EGainParamMode:unsigned char
{
	Linear = 0x0,
	Decibels = 0x1
};

enum class EParticleSystemInsignificanceReaction:unsigned char
{
	Auto = 0x0,
	Complete = 0x1,
	DisableTick = 0x2,
	DisableTickAndKill = 0x3,
	Num = 0x4
};

enum class EParticleDetailMode:int
{
	PDM_Low = 0x0,
	PDM_Medium = 0x1,
	PDM_High = 0x2,
	PDM_MAX = 0x3
};

enum class ECameraShakeAttenuation:unsigned char
{
	Linear = 0x0,
	Quadratic = 0x1
};

enum class ECameraShakeSourceShakeStatus:unsigned char
{
	NotStarted = 0x0,
	Started = 0x1,
	BlendingOut = 0x2
};

enum class EColorType:unsigned char
{
	Slate = 0x0,
	Linear = 0x1,
	Color = 0x2
};

enum class ELumenLightType:int
{
	Directional = 0x0,
	Point = 0x1,
	Spot = 0x2,
	Rect = 0x3,
	MAX = 0x4
};

enum class EParticleKey:unsigned char
{
	Activate = 0x0,
	Deactivate = 0x1,
	Trigger = 0x2
};

namespace EOcclusionFlags
{
	enum Type:int
	{
		None = 0x0,
		CanBeOccluded = 0x1,
		AllowApproximateOcclusion = 0x4,
		HasPrecomputedVisibility = 0x8,
		HasSubprimitiveQueries = 0x10
	};
}

enum class ERuntimeVirtualTextureMipValueMode:int
{
	RVTMVM_None = 0x0,
	RVTMVM_MipLevel = 0x1,
	RVTMVM_MipBias = 0x2,
	RVTMVM_RecalculateDerivatives = 0x3,
	RVTMVM_MAX = 0x4
};

enum class ERuntimeVirtualTextureTextureAddressMode:int
{
	RVTTA_Clamp = 0x0,
	RVTTA_Wrap = 0x1,
	RVTTA_MAX = 0x2
};

enum class ECustomDataRowCountMethod:int
{
	RCM_Constant = 0x0,
	RCM_ScalarParam = 0x1,
	RCM_TextureParamWidth = 0x2,
	RCM_TextureParamHeight = 0x3,
	RCM_TextureParamSize = 0x4
};

enum class ENoiseFunction:int
{
	NOISEFUNCTION_SimplexTex = 0x0,
	NOISEFUNCTION_GradientTex = 0x1,
	NOISEFUNCTION_GradientTex3D = 0x2,
	NOISEFUNCTION_GradientALU = 0x3,
	NOISEFUNCTION_ValueALU = 0x4,
	NOISEFUNCTION_VoronoiALU = 0x5,
	NOISEFUNCTION_MAX = 0x6
};

enum class EDecalsWriteFlags:unsigned int
{
	None = 0x0,
	BaseColor = 0x1,
	Normal = 0x2,
	RoughnessSpecularMetallic = 0x4,
	Emissive = 0x8,
	AmbientOcclusion = 0x10
};

enum class EMeshCameraFacingUpAxis:int
{
	CameraFacing_NoneUP = 0x0,
	CameraFacing_ZUp = 0x1,
	CameraFacing_NegativeZUp = 0x2,
	CameraFacing_YUp = 0x3,
	CameraFacing_NegativeYUp = 0x4,
	CameraFacing_MAX = 0x5
};

enum class EMeshScreenAlignment:int
{
	PSMA_MeshFaceCameraWithRoll = 0x0,
	PSMA_MeshFaceCameraWithSpin = 0x1,
	PSMA_MeshFaceCameraWithLockedAxis = 0x2,
	PSMA_MAX = 0x3
};

enum class EMeshCameraFacingOptions:int
{
	XAxisFacing_NoUp = 0x0,
	XAxisFacing_ZUp = 0x1,
	XAxisFacing_NegativeZUp = 0x2,
	XAxisFacing_YUp = 0x3,
	XAxisFacing_NegativeYUp = 0x4,
	LockedAxis_ZAxisFacing = 0x5,
	LockedAxis_NegativeZAxisFacing = 0x6,
	LockedAxis_YAxisFacing = 0x7,
	LockedAxis_NegativeYAxisFacing = 0x8,
	VelocityAligned_ZAxisFacing = 0x9,
	VelocityAligned_NegativeZAxisFacing = 0xA,
	VelocityAligned_YAxisFacing = 0xB,
	VelocityAligned_NegativeYAxisFacing = 0xC,
	EMeshCameraFacingOptions_MAX = 0xD
};

enum class ETrailsRenderAxisOption:int
{
	Trails_CameraUp = 0x0,
	Trails_SourceUp = 0x1,
	Trails_WorldUp = 0x2,
	Trails_MAX = 0x3
};

enum class EBeamTaperMethod:int
{
	PEBTM_None = 0x0,
	PEBTM_Full = 0x1,
	PEBTM_Partial = 0x2,
	PEBTM_MAX = 0x3
};

enum class EBeam2Method:int
{
	PEB2M_Distance = 0x0,
	PEB2M_Target = 0x1,
	PEB2M_Branch = 0x2,
	PEB2M_MAX = 0x3
};

enum class ETrail2SourceMethod:int
{
	PET2SRCM_Default = 0x0,
	PET2SRCM_Particle = 0x1,
	PET2SRCM_Actor = 0x2,
	PET2SRCM_MAX = 0x3
};

enum class EParticleSubUVInterpMethod:int
{
	PSUVIM_None = 0x0,
	PSUVIM_Linear = 0x1,
	PSUVIM_Linear_Blend = 0x2,
	PSUVIM_Random = 0x3,
	PSUVIM_Random_Blend = 0x4,
	PSUVIM_MAX = 0x5
};

enum class EParticleSourceSelectionMethod:int
{
	EPSSM_Random = 0x0,
	EPSSM_Sequential = 0x1,
	EPSSM_MAX = 0x2
};

enum class ERayTracingInstanceMaskType:unsigned char
{
	Opaque = 0x0,
	Translucent = 0x1,
	ThinShadow = 0x2,
	Shadow = 0x3,
	FarField = 0x4,
	HairStrands = 0x5,
	SceneCapture = 0x6,
	VisibleInPrimaryRay = 0x7,
	VisibleInIndirectRay = 0x8
};

enum class EMessageTracerDispatchTypes:int
{
	Direct = 0x0,
	Pending = 0x1,
	TaskGraph = 0x2
};

enum class EHttpConnectionContextState:int
{
	Continue = 0x0,
	Done = 0x1,
	Error = 0x2
};

enum class EHttpConnectionState:int
{
	AwaitingRead = 0x0,
	Reading = 0x1,
	AwaitingProcessing = 0x2,
	Writing = 0x3,
	Destroyed = 0x4
};

namespace EEvaluatorDataSource
{
	enum Type:int
	{
		EDS_SourcePose = 0x0,
		EDS_DestinationPose = 0x1
	};
}

enum class EMediaAudioSampleFormat:int
{
	Undefined = 0x0,
	Double = 0x1,
	Float = 0x2,
	Int8 = 0x3,
	Int16 = 0x4,
	Int32 = 0x5
};

enum class EAnimNodeInitializationStatus:int
{
	NotUpdated = 0x0,
	InitialUpdate = 0x1,
	Updated = 0x2
};

enum class EMediaOverlaySampleType:int
{
	Caption = 0x0,
	Subtitle = 0x1,
	Text = 0x2
};

enum class ECompactedReflectionTracingIndirectArgs:int
{
	NumTracesDiv64 = 0x0,
	NumTracesDiv32 = 0xC,
	MAX = 0x2
};

enum class ELumenDispatchCardTilesIndirectArgsOffset:int
{
	OneThreadPerCardTile = 0x0,
	OneGroupPerCardTile = 0xC,
	Num = 0x2
};

namespace EQueuedHttpRequestType
{
	enum Type:int
	{
		StartUploading = 0x0,
		UploadingHeader = 0x1,
		UploadingStream = 0x2,
		StopUploading = 0x3,
		StartDownloading = 0x4,
		DownloadingHeader = 0x5,
		DownloadingStream = 0x6,
		RefreshingViewer = 0x7,
		EnumeratingSessions = 0x8,
		EnumeratingCheckpoints = 0x9,
		UploadingCheckpoint = 0xA,
		DownloadingCheckpoint = 0xB,
		AddingUser = 0xC,
		UploadingCustomEvent = 0xD,
		EnumeratingCustomEvent = 0xE,
		RequestEventData = 0xF,
		UploadHeader = 0x10,
		StopStreaming = 0x11,
		KeepReplay = 0x12
	};
}

enum class EHttpReplayResult:unsigned int
{
	Success = 0x0,
	FailedJsonParse = 0x1,
	DataUnavailable = 0x2,
	InvalidHttpResponse = 0x3,
	CompressionFailed = 0x4,
	DecompressionFailed = 0x5,
	InvalidPayload = 0x6,
	Unknown = 0x7
};

enum class ETranslucencyShadowDepthShaderMode:int
{
	TranslucencyShadowDepth_PerspectiveCorrect = 0x0,
	TranslucencyShadowDepth_Standard = 0x1
};

enum class ETrackToggleAction:int
{
	ETTA_Off = 0x0,
	ETTA_On = 0x1,
	ETTA_Toggle = 0x2,
	ETTA_Trigger = 0x3,
	ETTA_MAX = 0x4
};

enum class EVisibilityTrackAction:int
{
	EVTA_Hide = 0x0,
	EVTA_Show = 0x1,
	EVTA_Toggle = 0x2,
	EVTA_MAX = 0x3
};

enum class EVisibilityTrackCondition:int
{
	EVTC_Always = 0x0,
	EVTC_GoreEnabled = 0x1,
	EVTC_GoreDisabled = 0x2,
	EVTC_MAX = 0x3
};

enum class EInterpTrackMoveRotMode:int
{
	IMR_Keyframed = 0x0,
	IMR_LookAtGroup = 0x1,
	IMR_Ignore = 0x2,
	IMR_MAX = 0x3
};

enum class EInterpMoveAxis:int
{
	AXIS_TranslationX = 0x0,
	AXIS_TranslationY = 0x1,
	AXIS_TranslationZ = 0x2,
	AXIS_RotationX = 0x3,
	AXIS_RotationY = 0x4,
	AXIS_RotationZ = 0x5
};

enum class ETrackInterpMode:int
{
	FTI_Set = 0x0,
	FTI_Add = 0x1,
	FTI_Multiply = 0x2,
	FTI_MAX = 0x3
};

enum class ETrackActiveCondition:int
{
	ETAC_Always = 0x0,
	ETAC_GoreEnabled = 0x1,
	ETAC_GoreDisabled = 0x2,
	ETAC_MAX = 0x3
};

enum class EDataDrivenShaderPlatformInfoCondition:int
{
	COND_True = 0x0,
	COND_False = 0x1
};

enum class EDBufferTextureId:int
{
	DBT_A = 0x0,
	DBT_B = 0x1,
	DBT_C = 0x2
};

enum class ECustomMaterialOutputType:int
{
	CMOT_Float1 = 0x0,
	CMOT_Float2 = 0x1,
	CMOT_Float3 = 0x2,
	CMOT_Float4 = 0x3,
	CMOT_MaterialAttributes = 0x4,
	CMOT_MAX = 0x5
};

enum class EClampMode:int
{
	CMODE_Clamp = 0x0,
	CMODE_ClampMin = 0x1,
	CMODE_ClampMax = 0x2
};

namespace EChannelMaskParameterColor
{
	enum Type:int
	{
		Red = 0x0,
		Green = 0x1,
		Blue = 0x2,
		Alpha = 0x3
	};
}

namespace EMaterialAttributeBlend
{
	enum Type:int
	{
		Blend = 0x0,
		UseA = 0x1,
		UseB = 0x2
	};
}

enum class ETextureColorChannel:int
{
	TCC_Red = 0x0,
	TCC_Green = 0x1,
	TCC_Blue = 0x2,
	TCC_Alpha = 0x3,
	TCC_MAX = 0x4
};

enum class ENetSubObjectStatus:unsigned char
{
	Active = 0x0,
	TearOff = 0x1,
	Delete = 0x2
};

namespace EParticleCollisionResponse
{
	enum Type:int
	{
		Bounce = 0x0,
		Stop = 0x1,
		Kill = 0x2
	};
}

enum class EParticleCollisionComplete:int
{
	EPCC_Kill = 0x0,
	EPCC_Freeze = 0x1,
	EPCC_HaltCollisions = 0x2,
	EPCC_FreezeTranslation = 0x3,
	EPCC_FreezeRotation = 0x4,
	EPCC_FreezeMovement = 0x5,
	EPCC_MAX = 0x6
};

enum class EParticleCameraOffsetUpdateMethod:int
{
	EPCOUM_DirectSet = 0x0,
	EPCOUM_Additive = 0x1,
	EPCOUM_Scalar = 0x2,
	EPCOUM_MAX = 0x3
};

enum class Beam2SourceTargetTangentMethod:int
{
	PEB2STTM_Direct = 0x0,
	PEB2STTM_UserSet = 0x1,
	PEB2STTM_Distribution = 0x2,
	PEB2STTM_Emitter = 0x3,
	PEB2STTM_MAX = 0x4
};

enum class Beam2SourceTargetMethod:int
{
	PEB2STM_Default = 0x0,
	PEB2STM_UserSet = 0x1,
	PEB2STM_Emitter = 0x2,
	PEB2STM_Particle = 0x3,
	PEB2STM_Actor = 0x4,
	PEB2STM_MAX = 0x5
};

enum class BeamModifierType:int
{
	PEB2MT_Source = 0x0,
	PEB2MT_Target = 0x1,
	PEB2MT_MAX = 0x2
};

enum class EAttractorParticleSelectionMethod:int
{
	EAPSM_Random = 0x0,
	EAPSM_Sequential = 0x1,
	EAPSM_MAX = 0x2
};

enum class EParticleBurstMethod:int
{
	EPBM_Instant = 0x0,
	EPBM_Interpolated = 0x1,
	EPBM_MAX = 0x2
};

enum class EVectorNoiseFunction:int
{
	VNF_CellnoiseALU = 0x0,
	VNF_VectorALU = 0x1,
	VNF_GradientALU = 0x2,
	VNF_CurlALU = 0x3,
	VNF_VoronoiALU = 0x4,
	VNF_MAX = 0x5
};

enum class EMaterialVectorCoordTransform:int
{
	TRANSFORM_Tangent = 0x0,
	TRANSFORM_Local = 0x1,
	TRANSFORM_World = 0x2,
	TRANSFORM_View = 0x3,
	TRANSFORM_Camera = 0x4,
	TRANSFORM_ParticleWorld = 0x5,
	TRANSFORM_Instance = 0x6,
	TRANSFORM_MAX = 0x7
};

enum class EMaterialPositionTransformSource:int
{
	TRANSFORMPOSSOURCE_Local = 0x0,
	TRANSFORMPOSSOURCE_World = 0x1,
	TRANSFORMPOSSOURCE_TranslatedWorld = 0x2,
	TRANSFORMPOSSOURCE_View = 0x3,
	TRANSFORMPOSSOURCE_Camera = 0x4,
	TRANSFORMPOSSOURCE_Particle = 0x5,
	TRANSFORMPOSSOURCE_Instance = 0x6,
	TRANSFORMPOSSOURCE_MAX = 0x7
};

enum class ETwitterIntegrationDelegate:int
{
	TID_AuthorizeComplete = 0x0,
	TID_TweetUIComplete = 0x1,
	TID_RequestComplete = 0x2,
	TID_MAX = 0x3
};

namespace ETimelineDirection
{
	enum Type:int
	{
		Forward = 0x0,
		Backward = 0x1
	};
}

enum class EDerivedDataCacheStatus:int
{
	None = 0x0,
	Information = 0x1,
	Warning = 0x2,
	Error = 0x3,
	Deactivation = 0x4
};

namespace ECameraAlphaBlendMode
{
	enum Type:int
	{
		CABM_Linear = 0x0,
		CABM_Cubic = 0x1
	};
}

enum class EWidgetInteractionSource:unsigned char
{
	World = 0x0,
	Mouse = 0x1,
	CenterScreen = 0x2,
	Custom = 0x3
};

enum class ESkyAtmosphereTransformMode:unsigned char
{
	PlanetTopAtAbsoluteWorldOrigin = 0x0,
	PlanetTopAtComponentTransform = 0x1,
	PlanetCenterAtComponentTransform = 0x2
};

enum class EAssetDataCanBeSubobject:int
{
	Yes = 0x0,
	No = 0x1
};

enum class ELightMapVirtualTextureType:int
{
	LightmapLayer0 = 0x0,
	LightmapLayer1 = 0x1,
	ShadowMask = 0x2,
	SkyOcclusion = 0x3,
	AOMaterialMask = 0x4,
	Count = 0x5
};

enum class EDefaultInputType:int
{
	Typed = 0x0,
	UNorm = 0x1,
	SNorm = 0x2,
	UNorm10 = 0x3,
	UNorm11 = 0x4,
	UNorm2 = 0x5,
	UNorm5 = 0x6,
	UNorm1 = 0x7
};

namespace EConstructMethod
{
	enum Type:int
	{
		ConstructFromFile = 0x0,
		ConstructFromBuffer = 0x1
	};
}

enum class ETryParseTagResult:int
{
	Error = 0x0,
	None = 0x1,
	ParsedStartTag = 0x2,
	ParsedEmptyElementTag = 0x3,
	ParsedEndTag = 0x4,
	NotATag = 0x5
};

enum class EComputeNTBsOptions:unsigned int
{
	None = 0x0,
	Normals = 0x1,
	Tangents = 0x2,
	WeightedNTBs = 0x4
};

enum class EMotionBlurQuality:unsigned int
{
	Low = 0x0,
	Medium = 0x1,
	High = 0x2,
	VeryHigh = 0x3,
	MAX = 0x4
};

enum class EMotionBlurFilter:unsigned int
{
	Unified = 0x0,
	Separable = 0x1
};

enum class ELensFlareQuality:unsigned int
{
	Disabled = 0x0,
	Low = 0x1,
	High = 0x2,
	VeryHigh = 0x3,
	MAX = 0x4
};

namespace EParticleSimulatePhase
{
	enum Type:int
	{
		Main = 0x0,
		CollisionDistanceField = 0x1,
		CollisionDepthBuffer = 0x2,
		First = 0x0,
		Last = 0x2
	};
}

enum class EBloomSetupOutputType:unsigned int
{
	Bloom = 0x1,
	SunShaftAndDof = 0x2,
	EyeAdaptation = 0x4
};

enum class EParticleSortMode:int
{
	PSORTMODE_None = 0x0,
	PSORTMODE_ViewProjDepth = 0x1,
	PSORTMODE_DistanceToView = 0x2,
	PSORTMODE_Age_OldestFirst = 0x3,
	PSORTMODE_Age_NewestFirst = 0x4,
	PSORTMODE_MAX = 0x5
};

enum class EBoneSocketSourceIndexMode:unsigned char
{
	SourceLocations = 0x0,
	PreSelectedIndices = 0x1,
	Direct = 0x2
};

namespace EEvaluateCurveTableResult
{
	enum Type:int
	{
		RowFound = 0x0,
		RowNotFound = 0x1
	};
}

enum class EDDSFlags:int
{
	DDSF_Caps = 0x1,
	DDSF_Height = 0x2,
	DDSF_Width = 0x4,
	DDSF_PixelFormat = 0x1000
};

enum class EDDSPixelFormat:int
{
	DDSPF_FourCC = 0x4,
	DDSPF_RGB = 0x40,
	DDSPF_DXT1 = 0x31545844,
	DDSPF_DXT3 = 0x33545844,
	DDSPF_DXT5 = 0x35545844,
	DDSPF_DX10 = 0x30315844
};

enum class EDDSCaps:unsigned __int64
{
	DDSC_CubeMap = 0x200,
	DDSC_CubeMap_AllFaces = 0xFFFFFC00,
	DDSC_Volume = 0x200000
};

namespace FShapeComponentCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		AreaClassRework = 0x1,
		VersionPlusOne = 0x2,
		LatestVersion = 0x1
	};
}

enum class FDataDrivenCVarType:unsigned char
{
	CVarFloat = 0x0,
	CVarInt = 0x1,
	CVarBool = 0x2
};

enum class EDiffPropertiesFlags:unsigned int
{
	None = 0x0,
	Sync = 0x1,
	IncludeConditionalProperties = 0x2
};

enum class EMotionBlurVelocityScatterPass:unsigned int
{
	DrawMin = 0x0,
	DrawMax = 0x1,
	MAX = 0x2
};

namespace FProceduralFoliageCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		SerializeTypeMap = 0x1,
		VersionPlusOne = 0x2,
		LatestVersion = 0x1
	};
}

namespace ESimulationQuery
{
	enum Type:int
	{
		None = 0x0,
		CollisionOverlap = 0x1,
		ShadeOverlap = 0x2,
		AnyOverlap = 0x3
	};
}

namespace ESimulationOverlap
{
	enum Type:int
	{
		CollisionOverlap = 0x0,
		ShadeOverlap = 0x1,
		None = 0x2
	};
}

enum class EShadowDepthVertexShaderMode:int
{
	VertexShadowDepth_PerspectiveCorrect = 0x0,
	VertexShadowDepth_OutputDepth = 0x1,
	VertexShadowDepth_OnePassPointLight = 0x2,
	VertexShadowDepth_VirtualShadowMap = 0x3
};

enum class EShadowDepthPixelShaderMode:int
{
	PixelShadowDepth_NonPerspectiveCorrect = 0x0,
	PixelShadowDepth_PerspectiveCorrect = 0x1,
	PixelShadowDepth_OnePassPointLight = 0x2,
	PixelShadowDepth_VirtualShadowMap = 0x3
};

enum class ESSRQuality:int
{
	VisualizeSSR = 0x0,
	Low = 0x1,
	Medium = 0x2,
	High = 0x3,
	Epic = 0x4,
	MAX = 0x5
};

enum class EPreviousBoneTransformUpdateMode:int
{
	None = 0x0,
	UpdatePrevious = 0x1,
	DuplicateCurrentToPrevious = 0x2
};

enum class ERepBuildType:int
{
	Class = 0x0,
	Function = 0x1,
	Struct = 0x2
};

namespace ELandscapeLODFalloff
{
	enum Type:int
	{
		Linear = 0x0,
		SquareRoot = 0x1
	};
}

enum class ELandscapeImportAlphamapType:unsigned char
{
	Additive = 0x0,
	Layered = 0x1
};

enum class ELandscapeLayerPaintingRestriction:unsigned char
{
	None = 0x0,
	UseMaxLayers = 0x1,
	ExistingOnly = 0x2,
	UseComponentAllowList = 0x3
};

enum class ELandscapeLayerDisplayMode:unsigned char
{
	Default = 0x0,
	Alphabetical = 0x1,
	UserSpecific = 0x2
};

namespace EImportanceWeight
{
	enum Type:int
	{
		Luminance = 0x0,
		Red = 0x1,
		Green = 0x2,
		Blue = 0x3,
		Alpha = 0x4
	};
}

namespace EApplicationState
{
	enum Type:int
	{
		Unknown = 0x0,
		Inactive = 0x1,
		Background = 0x2,
		Active = 0x3
	};
}

namespace EScreenOrientation
{
	enum Type:int
	{
		Unknown = 0x0,
		Portrait = 0x1,
		PortraitUpsideDown = 0x2,
		LandscapeLeft = 0x3,
		LandscapeRight = 0x4,
		FaceUp = 0x5,
		FaceDown = 0x6,
		PortraitSensor = 0x7,
		LandscapeSensor = 0x8,
		FullSensor = 0x9
	};
}

enum class EInterpTrackParticleReplayDragType:int
{
	PRDT_LeftEdge = 0xA,
	PRDT_RightEdge = 0xB
};

enum class EInterpTrackAnimControlDragType:int
{
	ACDT_AnimBlockLeftEdge = 0x0,
	ACDT_AnimBlockRightEdge = 0x1
};

enum class EGPUSortTest:int
{
	GPU_SORT_TEST_SMALL = 0x1,
	GPU_SORT_TEST_LARGE = 0x2,
	GPU_SORT_TEST_EXHAUSTIVE = 0x3,
	GPU_SORT_TEST_RANDOM = 0x4
};

enum class ESlateGesture:unsigned char
{
	None = 0x0,
	Scroll = 0x1,
	Magnify = 0x2,
	Swipe = 0x3,
	Rotate = 0x4,
	LongPress = 0x5
};

enum class EAddComponentResult:unsigned char
{
	Fail = 0x0,
	Fail_UIDensityConstraint = 0x1,
	Success = 0x2
};

enum class EDispatchComputeRenderSlot:unsigned char
{
	CRS_None = 0x0,
	CRS_PreRender = 0x1,
	CRS_PostOpaque = 0x2,
	CRS_Overlay = 0x3
};

enum class EAdManagerDelegate:int
{
	AMD_ClickedBanner = 0x0,
	AMD_UserClosedAd = 0x1,
	AMD_MAX = 0x2
};

enum class ESwitchMaterialOutputType:int
{
	TMMOT_Float1 = 0x0,
	TMMOT_Float2 = 0x1,
	TMMOT_Float3 = 0x2,
	TMMOT_Float4 = 0x3,
	TMMOT_MAX = 0x4
};

enum class EParticleScreenAlignment:int
{
	PSA_FacingCameraPosition = 0x0,
	PSA_Square = 0x1,
	PSA_Rectangle = 0x2,
	PSA_Velocity = 0x3,
	PSA_AwayFromCenter = 0x4,
	PSA_TypeSpecific = 0x5,
	PSA_FacingCameraDistanceBlend = 0x6,
	PSA_MAX = 0x7
};

enum class SRC_ERR:int
{
	SRC_ERR_NO_ERROR = 0x0,
	SRC_ERR_MALLOC_FAILED = 0x1,
	SRC_ERR_BAD_STATE = 0x2,
	SRC_ERR_BAD_DATA = 0x3,
	SRC_ERR_BAD_DATA_PTR = 0x4,
	SRC_ERR_NO_PRIVATE = 0x5,
	SRC_ERR_BAD_SRC_RATIO = 0x6,
	SRC_ERR_BAD_PROC_PTR = 0x7,
	SRC_ERR_SHIFT_BITS = 0x8,
	SRC_ERR_FILTER_LEN = 0x9,
	SRC_ERR_BAD_CONVERTER = 0xA,
	SRC_ERR_BAD_CHANNEL_COUNT = 0xB,
	SRC_ERR_SINC_BAD_BUFFER_LEN = 0xC,
	SRC_ERR_SIZE_INCOMPATIBILITY = 0xD,
	SRC_ERR_BAD_PRIV_PTR = 0xE,
	SRC_ERR_BAD_SINC_STATE = 0xF,
	SRC_ERR_DATA_OVERLAP = 0x10,
	SRC_ERR_BAD_CALLBACK = 0x11,
	SRC_ERR_BAD_MODE = 0x12,
	SRC_ERR_NULL_CALLBACK = 0x13,
	SRC_ERR_NO_VARIABLE_RATIO = 0x14,
	SRC_ERR_SINC_PREPARE_DATA_BAD_LEN = 0x15,
	SRC_ERR_BAD_INTERNAL_STATE = 0x16,
	SRC_ERR_MAX_ERROR = 0x17
};

enum class SRC_MODE:int
{
	SRC_MODE_PROCESS = 0x0,
	SRC_MODE_CALLBACK = 0x1
};

enum class EFrameNumberDisplayFormats:unsigned char
{
	NonDropFrameTimecode = 0x0,
	DropFrameTimecode = 0x1,
	Seconds = 0x2,
	Frames = 0x3,
	MAX_Count = 0x4
};

enum class EStereoLayerShape:int
{
	SLSH_QuadLayer = 0x0,
	SLSH_CylinderLayer = 0x1,
	SLSH_CubemapLayer = 0x2,
	SLSH_EquirectLayer = 0x3,
	SLSH_MAX = 0x4
};

enum class EStereoLayerType:int
{
	SLT_WorldLocked = 0x0,
	SLT_TrackerLocked = 0x1,
	SLT_FaceLocked = 0x2,
	SLT_MAX = 0x3
};

enum class ModulationParamMode:int
{
	MPM_Normal = 0x0,
	MPM_Abs = 0x1,
	MPM_Direct = 0x2,
	MPM_MAX = 0x3
};

namespace FWorldSettingCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		DeprecatedEnableHierarchicalLODSystem = 0x1,
		VersionPlusOne = 0x2,
		LatestVersion = 0x1
	};
}

enum class EPropertyPathTestEnum:int
{
	One = 0x0,
	Two = 0x1,
	Three = 0x2,
	Four = 0x3
};

enum class EAnimPropertyAccessCallSite:int
{
	WorkerThread_Unbatched = 0x0,
	WorkerThread_Batched_PreEventGraph = 0x1,
	WorkerThread_Batched_PostEventGraph = 0x2,
	GameThread_Batched_PreEventGraph = 0x3,
	GameThread_Batched_PostEventGraph = 0x4
};

enum class ESplitType:int
{
	SP_Coplanar = 0x0,
	SP_Front = 0x1,
	SP_Back = 0x2,
	SP_Split = 0x3
};

namespace EScaleMode
{
	enum Type:int
	{
		Free = 0x0,
		LockedXY = 0x1,
		LockedXYZ = 0x2
	};
}

enum class EInterpToBehaviourType:unsigned char
{
	OneShot = 0x0,
	OneShot_Reverse = 0x1,
	Loop_Reset = 0x2,
	PingPong = 0x3
};

enum class ESkelAnimRotationOrder:int
{
	XYZ = 0x0,
	XZY = 0x1,
	YXZ = 0x2,
	YZX = 0x3,
	ZXY = 0x4,
	ZYX = 0x5
};

enum class EPcmBitDepthConversion:unsigned char
{
	SameAsSource = 0x0,
	Int16 = 0x1,
	Float32 = 0x2
};

enum class ESyncOption:unsigned char
{
	Drive = 0x0,
	Passive = 0x1,
	Disabled = 0x2
};

namespace EBoneDrawMode
{
	enum Type:int
	{
		None = 0x0,
		Selected = 0x1,
		SelectedAndParents = 0x2,
		SelectedAndChildren = 0x3,
		SelectedAndParentsAndChildren = 0x4,
		All = 0x5,
		NumDrawModes = 0x6
	};
}

enum class ESparseVolumeTextureShaderUniform:int
{
	ESparseVolumeTexture_PhysicalUVToPageUV = 0x0,
	ESparseVolumeTexture_TileSize = 0x1,
	ESparseVolumeTexture_PageTableSize = 0x2,
	ESparseVolumeTexture_Count = 0x3
};

enum class EMaturityChildType:int
{
	ChildType_None = 0x0,
	ChildType_Mature = 0x1,
	ChildType_NonMature = 0x2
};

enum class EGameUserSettingsVersion:int
{
	UE_GAMEUSERSETTINGS_VERSION = 0x5
};

namespace FSaveGameFileVersion
{
	enum Type:int
	{
		InitialVersion = 0x1,
		AddedCustomVersions = 0x2,
		PackageFileSummaryVersionChange = 0x3,
		VersionPlusOne = 0x4,
		LatestVersion = 0x3
	};
}

enum class EMovieScene2DTransformChannel:unsigned int
{
	None = 0x0,
	TranslationX = 0x1,
	TranslationY = 0x2,
	Translation = 0x3,
	Rotation = 0x4,
	ScaleX = 0x8,
	ScaleY = 0x10,
	Scale = 0x18,
	ShearX = 0x20,
	ShearY = 0x40,
	Shear = 0x60,
	AllTransform = 0x7F
};

enum class ETextureEncodeEffort:unsigned char
{
	Default = 0x0,
	Low = 0xA,
	Normal = 0x14,
	High = 0x1E
};

enum class ETextureUniversalTiling:unsigned char
{
	Disabled = 0x0,
	Enabled_256KB = 0x1,
	Enabled_64KB = 0x2
};

enum class EAsyncTaskState:int
{
	Cancelled = 0x0,
	Completed = 0x1,
	Failed = 0x2,
	Pending = 0x3,
	Running = 0x4
};

enum class EDynamicBoxType:unsigned char
{
	Horizontal = 0x0,
	Vertical = 0x1,
	Wrap = 0x2,
	VerticalWrap = 0x3,
	Radial = 0x4,
	Overlay = 0x5
};

enum class AudioSessionDisconnectReason:int
{
	DisconnectReasonDeviceRemoval = 0x0,
	DisconnectReasonServerShutdown = 0x1,
	DisconnectReasonFormatChanged = 0x2,
	DisconnectReasonSessionLogoff = 0x3,
	DisconnectReasonSessionDisconnected = 0x4,
	DisconnectReasonExclusiveModeOverride = 0x5
};

enum class AMBISONICS_NORMALIZATION:int
{
	AMBISONICS_NORMALIZATION_SN3D = 0x0,
	AMBISONICS_NORMALIZATION_N3D = 0x1
};

enum class _AudioSessionState:int
{
	AudioSessionStateInactive = 0x0,
	AudioSessionStateActive = 0x1,
	AudioSessionStateExpired = 0x2
};

enum class EVirtualTextureCodec:unsigned char
{
	Black = 0x0,
	OpaqueBlack = 0x1,
	White = 0x2,
	Flat = 0x3,
	RawGPU = 0x4,
	ZippedGPU_DEPRECATED = 0x5,
	Crunch_DEPRECATED = 0x6,
	Max = 0x7
};

enum class EGPUSkinCacheDispatchFlags:int
{
	DispatchPrevPosition = 0x1,
	DispatchPosition = 0x2
};

enum class ERootParameterKeys:int
{
	PS_SRVs = 0x0,
	PS_CBVs = 0x1,
	PS_RootCBVs = 0x2,
	PS_Samplers = 0x3,
	VS_SRVs = 0x4,
	VS_CBVs = 0x5,
	VS_RootCBVs = 0x6,
	VS_Samplers = 0x7,
	GS_SRVs = 0x8,
	GS_CBVs = 0x9,
	GS_RootCBVs = 0xA,
	GS_Samplers = 0xB,
	MS_SRVs = 0xC,
	MS_CBVs = 0xD,
	MS_RootCBVs = 0xE,
	MS_Samplers = 0xF,
	AS_SRVs = 0x10,
	AS_CBVs = 0x11,
	AS_RootCBVs = 0x12,
	AS_Samplers = 0x13,
	ALL_SRVs = 0x14,
	ALL_CBVs = 0x15,
	ALL_RootCBVs = 0x16,
	ALL_Samplers = 0x17,
	ALL_UAVs = 0x18,
	RPK_RootParameterKeyCount = 0x19
};

enum class ViewSubresourceSubsetFlags:int
{
	ViewSubresourceSubsetFlags_None = 0x0,
	ViewSubresourceSubsetFlags_DepthOnlyDsv = 0x1,
	ViewSubresourceSubsetFlags_StencilOnlyDsv = 0x2,
	ViewSubresourceSubsetFlags_DepthAndStencilDsv = 0x3
};

enum class EFoldedMathOperation:int
{
	FMO_Add = 0x0,
	FMO_Sub = 0x1,
	FMO_Mul = 0x2,
	FMO_Div = 0x3,
	FMO_Dot = 0x4,
	FMO_Cross = 0x5
};

enum class ETrigMathOperation:int
{
	TMO_Sin = 0x0,
	TMO_Cos = 0x1,
	TMO_Tan = 0x2,
	TMO_Asin = 0x3,
	TMO_Acos = 0x4,
	TMO_Atan = 0x5,
	TMO_Atan2 = 0x6
};

enum class EResourceAllocationStrategy:int
{
	kPlacedResource = 0x0,
	kManualSubAllocation = 0x1
};

enum class ERHIPoolResourceTypes:int
{
	Buffers = 0x1,
	RTDSTextures = 0x2,
	NonRTDSTextures = 0x4,
	All = 0x7
};

enum class ERHITransientHeapFlags:unsigned char
{
	AllowBuffers = 0x1,
	AllowTextures = 0x2,
	AllowRenderTargets = 0x4,
	AllowAll = 0x7
};

enum class EDynamicParameterUpdateFlags:int
{
	EDPU_UPDATE_NONE = 0x0,
	EDPU_UPDATE_0 = 0x1,
	EDPU_UPDATE_1 = 0x2,
	EDPU_UPDATE_2 = 0x4,
	EDPU_UPDATE_3 = 0x8,
	EDPU_UPDATE_01 = 0x3,
	EDPU_UPDATE_012 = 0x7,
	EDPU_UPDATE_ALL = 0xF
};

enum class EGizmoElementState:unsigned char
{
	None = 0x0,
	Visible = 0x2,
	Hittable = 0x4,
	VisibleAndHittable = 0x6
};

enum class EGizmoElementInteractionState:int
{
	None = 0x0,
	Hovering = 0x1,
	Interacting = 0x2
};

enum class EGizmoElementViewDependentType:int
{
	None = 0x0,
	Axis = 0x1,
	Plane = 0x2
};

enum class EGizmoElementViewAlignType:int
{
	None = 0x0,
	PointOnly = 0x1,
	PointEye = 0x2,
	PointScreen = 0x3,
	Axial = 0x4
};

enum class EGizmoElementPartialType:int
{
	None = 0x0,
	Partial = 0x1,
	PartialViewDependent = 0x2
};

enum class EGizmoElementArrowHeadType:int
{
	Cone = 0x0,
	Cube = 0x1
};

enum class EOverlaysFileType:int
{
	Unknown = 0x0,
	SubRipSubtitles = 0x1
};

enum class EAudioDeviceChangedRole:unsigned char
{
	Invalid = 0x0,
	Console = 0x1,
	Multimedia = 0x2,
	Communications = 0x3,
	Count = 0x4
};

enum class EAudioDeviceChangedState:unsigned char
{
	Invalid = 0x0,
	Active = 0x1,
	Disabled = 0x2,
	NotPresent = 0x3,
	Unplugged = 0x4,
	Count = 0x5
};

namespace FClothingAssetCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		AddVertexColorsToPhysicalMesh = 0x1,
		MovePropertiesToCommonBaseClasses = 0x2,
		VersionPlusOne = 0x3,
		LatestVersion = 0x2
	};
}

enum class EClothingWindMethod_Legacy:unsigned char
{
	Legacy = 0x0,
	Accurate = 0x1
};

enum class EWeightMapTargetCommon:unsigned char
{
	None = 0x0,
	MaxDistance = 0x1,
	BackstopDistance = 0x2,
	BackstopRadius = 0x3,
	AnimDriveStiffness = 0x4,
	AnimDriveDamping_DEPRECATED = 0x5
};

enum class EClothMassMode:unsigned char
{
	UniformMass = 0x0,
	TotalMass = 0x1,
	Density = 0x2,
	MaxClothMassMode = 0x3
};

enum class EVectorVMFlags:int
{
	VVMFlag_OptSaveIntermediateState = 0x1,
	VVMFlag_OptOmitStats = 0x2,
	VVMFlag_LargeScript = 0x4,
	VVMFlag_HasRandInstruction = 0x8,
	VVMFlag_DataMapCacheSetup = 0x10,
	VVMFlag_SupportsAVX = 0x20
};

enum class EVectorVMBaseTypes:unsigned char
{
	Float = 0x0,
	Int = 0x1,
	Bool = 0x2,
	Num = 0x3
};

enum class GFSDK_Aftermath_Context_Status:unsigned int
{
	GFSDK_Aftermath_Context_Status_NotStarted = 0x0,
	GFSDK_Aftermath_Context_Status_Executing = 0x1,
	GFSDK_Aftermath_Context_Status_Finished = 0x2,
	GFSDK_Aftermath_Context_Status_Invalid = 0x3
};

enum class EMediaAudioCaptureDeviceFilter:unsigned char
{
	None = 0x0,
	Card = 0x1,
	Microphone = 0x2,
	Software = 0x4,
	Unknown = 0x8
};

enum class EMediaVideoCaptureDeviceFilter:unsigned char
{
	None = 0x0,
	Card = 0x1,
	Software = 0x2,
	Unknown = 0x4,
	Webcam = 0x8
};

enum class EMediaWebcamCaptureDeviceFilter:unsigned char
{
	None = 0x0,
	DepthSensor = 0x1,
	Front = 0x2,
	Rear = 0x4,
	Unknown = 0x8
};

enum class EMediaCaptureDeviceType:unsigned int
{
	Unknown = 0x0,
	Audio = 0x1,
	AudioCard = 0x2,
	AudioSoftware = 0x3,
	DepthSensor = 0x4,
	Microphone = 0x5,
	Video = 0x6,
	VideoCard = 0x7,
	VideoSoftware = 0x8,
	Webcam = 0x9,
	WebcamFront = 0xA,
	WebcamRear = 0xB
};

enum class ERigVMBreakpointAction:unsigned char
{
	None = 0x0,
	Resume = 0x1,
	StepOver = 0x2,
	StepInto = 0x3,
	StepOut = 0x4,
	Max = 0x5
};

enum class UpdateFlags:int
{
	DT_CROWD_ANTICIPATE_TURNS = 0x1,
	DT_CROWD_OBSTACLE_AVOIDANCE = 0x2,
	DT_CROWD_SEPARATION = 0x4,
	DT_CROWD_OPTIMIZE_VIS = 0x8,
	DT_CROWD_OPTIMIZE_TOPO = 0x10,
	DT_CROWD_OPTIMIZE_VIS_MULTI = 0x20,
	DT_CROWD_OFFSET_PATH = 0x40,
	DT_CROWD_SLOWDOWN_AT_GOAL = 0x80
};

enum class CrowdBoundaryFlags:int
{
	DT_CROWD_BOUNDARY_IGNORE = 0x1
};

enum class dtStraightPathFlags:int
{
	DT_STRAIGHTPATH_START = 0x1,
	DT_STRAIGHTPATH_END = 0x2,
	DT_STRAIGHTPATH_OFFMESH_CONNECTION = 0x4
};

enum class CrowdAgentState:int
{
	DT_CROWDAGENT_STATE_INVALID = 0x0,
	DT_CROWDAGENT_STATE_WALKING = 0x1,
	DT_CROWDAGENT_STATE_OFFMESH = 0x2,
	DT_CROWDAGENT_STATE_WAITING = 0x3
};

enum class MoveRequestState:int
{
	DT_CROWDAGENT_TARGET_NONE = 0x0,
	DT_CROWDAGENT_TARGET_FAILED = 0x1,
	DT_CROWDAGENT_TARGET_VALID = 0x2,
	DT_CROWDAGENT_TARGET_REQUESTING = 0x3,
	DT_CROWDAGENT_TARGET_WAITING_FOR_QUEUE = 0x4,
	DT_CROWDAGENT_TARGET_WAITING_FOR_PATH = 0x5,
	DT_CROWDAGENT_TARGET_VELOCITY = 0x6
};

enum class dtRotation:int
{
	DT_ROTATE_0 = 0x0,
	DT_ROTATE_90 = 0x1,
	DT_ROTATE_180 = 0x2,
	DT_ROTATE_270 = 0x3
};

enum class ObstacleState:int
{
	DT_OBSTACLE_EMPTY = 0x0,
	DT_OBSTACLE_PROCESSING = 0x1,
	DT_OBSTACLE_PROCESSED = 0x2,
	DT_OBSTACLE_REMOVING = 0x3
};

enum class dtCompressedTileFlags:int
{
	DT_COMPRESSEDTILE_FREE_DATA = 0x1
};

enum class dtRegionPartitioning:int
{
	DT_REGION_MONOTONE = 0x0,
	DT_REGION_WATERSHED = 0x1,
	DT_REGION_CHUNKY = 0x2
};

enum class dtTileFlags:int
{
	DT_TILE_FREE_DATA = 0x1
};

enum class duDebugDrawPrimitives:int
{
	DU_DRAW_POINTS = 0x0,
	DU_DRAW_LINES = 0x1,
	DU_DRAW_TRIS = 0x2,
	DU_DRAW_QUADS = 0x3
};

enum class dtPolyTypes:int
{
	DT_POLYTYPE_GROUND = 0x0,
	DT_POLYTYPE_OFFMESH_POINT = 0x1,
	DT_POLYTYPE_OFFMESH_SEGMENT = 0x2
};

enum class DrawNavMeshFlags:int
{
	DU_DRAWNAVMESH_OFFMESHCONS = 0x1,
	DU_DRAWNAVMESH_CLOSEDLIST = 0x2,
	DU_DRAWNAVMESH_COLOR_TILES = 0x4
};

enum class rcAllocHint:int
{
	RC_ALLOC_PERM = 0x0,
	RC_ALLOC_TEMP = 0x1
};

enum class VkFullScreenExclusiveEXT:int
{
	VK_FULL_SCREEN_EXCLUSIVE_DEFAULT_EXT = 0x0,
	VK_FULL_SCREEN_EXCLUSIVE_ALLOWED_EXT = 0x1,
	VK_FULL_SCREEN_EXCLUSIVE_DISALLOWED_EXT = 0x2,
	VK_FULL_SCREEN_EXCLUSIVE_APPLICATION_CONTROLLED_EXT = 0x3,
	VK_FULL_SCREEN_EXCLUSIVE_MAX_ENUM_EXT = 0x7FFFFFFF
};

enum class VkCompositeAlphaFlagBitsKHR:int
{
	VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR = 0x1,
	VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR = 0x2,
	VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR = 0x4,
	VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR = 0x8,
	VK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkSurfaceTransformFlagBitsKHR:int
{
	VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR = 0x1,
	VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR = 0x2,
	VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR = 0x4,
	VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR = 0x8,
	VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR = 0x10,
	VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR = 0x20,
	VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR = 0x40,
	VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR = 0x80,
	VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR = 0x100,
	VK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkSampleCountFlagBits:int
{
	VK_SAMPLE_COUNT_1_BIT = 0x1,
	VK_SAMPLE_COUNT_2_BIT = 0x2,
	VK_SAMPLE_COUNT_4_BIT = 0x4,
	VK_SAMPLE_COUNT_8_BIT = 0x8,
	VK_SAMPLE_COUNT_16_BIT = 0x10,
	VK_SAMPLE_COUNT_32_BIT = 0x20,
	VK_SAMPLE_COUNT_64_BIT = 0x40,
	VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class BINKPLUGINDRAWFLAGS:unsigned __int64
{
	BinkDrawDecodeSRGB = 0x80000000
};

enum class BINKPLUGINAPI:int
{
	BinkRHI = 0x0
};

enum class EBinkMoviePlayerBinkSoundTrack:int
{
	MP_Bink_Sound_None = 0x0,
	MP_Bink_Sound_Simple = 0x1,
	MP_Bink_Sound_LanguageOverride = 0x2,
	MP_Bink_Sound_51 = 0x3,
	MP_Bink_Sound_51LanguageOverride = 0x4,
	MP_Bink_Sound_71 = 0x5,
	MP_Bink_Sound_71LanguageOverride = 0x6,
	MP_Bink_Sound_MAX = 0x7
};

enum class EBinkMoviePlayerBinkBufferModes:int
{
	MP_Bink_Stream = 0x0,
	MP_Bink_PreloadAll = 0x1,
	MP_Bink_StreamUntilResident = 0x2,
	MP_Bink_MAX = 0x3
};

enum class VkSubgroupFeatureFlagBits:int
{
	VK_SUBGROUP_FEATURE_BASIC_BIT = 0x1,
	VK_SUBGROUP_FEATURE_VOTE_BIT = 0x2,
	VK_SUBGROUP_FEATURE_ARITHMETIC_BIT = 0x4,
	VK_SUBGROUP_FEATURE_BALLOT_BIT = 0x8,
	VK_SUBGROUP_FEATURE_SHUFFLE_BIT = 0x10,
	VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT = 0x20,
	VK_SUBGROUP_FEATURE_CLUSTERED_BIT = 0x40,
	VK_SUBGROUP_FEATURE_QUAD_BIT = 0x80,
	VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV = 0x100,
	VK_SUBGROUP_FEATURE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkQueueFlagBits:int
{
	VK_QUEUE_GRAPHICS_BIT = 0x1,
	VK_QUEUE_COMPUTE_BIT = 0x2,
	VK_QUEUE_TRANSFER_BIT = 0x4,
	VK_QUEUE_SPARSE_BINDING_BIT = 0x8,
	VK_QUEUE_PROTECTED_BIT = 0x10,
	VK_QUEUE_OPTICAL_FLOW_BIT_NV = 0x100,
	VK_QUEUE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class GFSDK_Aftermath_GpuCrashDumpWatchedApiFlags:unsigned int
{
	GFSDK_Aftermath_GpuCrashDumpWatchedApiFlags_None = 0x0,
	GFSDK_Aftermath_GpuCrashDumpWatchedApiFlags_DX = 0x1,
	GFSDK_Aftermath_GpuCrashDumpWatchedApiFlags_Vulkan = 0x2
};

enum class GFSDK_Aftermath_GpuCrashDumpFeatureFlags:unsigned int
{
	GFSDK_Aftermath_GpuCrashDumpFeatureFlags_Default = 0x0,
	GFSDK_Aftermath_GpuCrashDumpFeatureFlags_DeferDebugInfoCallbacks = 0x1
};

enum class VkMemoryPropertyFlagBits:int
{
	VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT = 0x1,
	VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT = 0x2,
	VK_MEMORY_PROPERTY_HOST_COHERENT_BIT = 0x4,
	VK_MEMORY_PROPERTY_HOST_CACHED_BIT = 0x8,
	VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT = 0x10,
	VK_MEMORY_PROPERTY_PROTECTED_BIT = 0x20,
	VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD = 0x40,
	VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD = 0x80,
	VK_MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV = 0x100,
	VK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkQueryResultFlagBits:int
{
	VK_QUERY_RESULT_64_BIT = 0x1,
	VK_QUERY_RESULT_WAIT_BIT = 0x2,
	VK_QUERY_RESULT_WITH_AVAILABILITY_BIT = 0x4,
	VK_QUERY_RESULT_PARTIAL_BIT = 0x8,
	VK_QUERY_RESULT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkCommandBufferUsageFlagBits:int
{
	VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT = 0x1,
	VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT = 0x2,
	VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT = 0x4,
	VK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkCommandBufferResetFlagBits:int
{
	VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT = 0x1,
	VK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkCommandPoolCreateFlagBits:int
{
	VK_COMMAND_POOL_CREATE_TRANSIENT_BIT = 0x1,
	VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT = 0x2,
	VK_COMMAND_POOL_CREATE_PROTECTED_BIT = 0x4,
	VK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class EImageOwnerType:unsigned char
{
	None = 0x0,
	LocalOwner = 0x1,
	ExternalOwner = 0x2,
	Aliased = 0x3
};

enum class ELiveLinkCameraProjectionMode:unsigned char
{
	Perspective = 0x0,
	Orthographic = 0x1
};

enum class VkColorComponentFlagBits:int
{
	VK_COLOR_COMPONENT_R_BIT = 0x1,
	VK_COLOR_COMPONENT_G_BIT = 0x2,
	VK_COLOR_COMPONENT_B_BIT = 0x4,
	VK_COLOR_COMPONENT_A_BIT = 0x8,
	VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkCullModeFlagBits:int
{
	VK_CULL_MODE_NONE = 0x0,
	VK_CULL_MODE_FRONT_BIT = 0x1,
	VK_CULL_MODE_BACK_BIT = 0x2,
	VK_CULL_MODE_FRONT_AND_BACK = 0x3,
	VK_CULL_MODE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkBuildAccelerationStructureModeKHR:int
{
	VK_BUILD_ACCELERATION_STRUCTURE_MODE_BUILD_KHR = 0x0,
	VK_BUILD_ACCELERATION_STRUCTURE_MODE_UPDATE_KHR = 0x1,
	VK_BUILD_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkAccelerationStructureBuildTypeKHR:int
{
	VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_KHR = 0x0,
	VK_ACCELERATION_STRUCTURE_BUILD_TYPE_DEVICE_KHR = 0x1,
	VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_OR_DEVICE_KHR = 0x2,
	VK_ACCELERATION_STRUCTURE_BUILD_TYPE_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkQueryControlFlagBits:int
{
	VK_QUERY_CONTROL_PRECISE_BIT = 0x1,
	VK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class EBLASBuildDataUsage:int
{
	Rendering = 0x0,
	Size = 0x1
};

enum class ERayTracingBufferType:int
{
	AccelerationStructure = 0x0,
	Scratch = 0x1
};

enum class GFSDK_Aftermath_GpuCrashDumpDecoderFlags:unsigned int
{
	GFSDK_Aftermath_GpuCrashDumpDecoderFlags_BASE_INFO = 0x1,
	GFSDK_Aftermath_GpuCrashDumpDecoderFlags_DEVICE_INFO = 0x2,
	GFSDK_Aftermath_GpuCrashDumpDecoderFlags_OS_INFO = 0x4,
	GFSDK_Aftermath_GpuCrashDumpDecoderFlags_DISPLAY_DRIVER_INFO = 0x8,
	GFSDK_Aftermath_GpuCrashDumpDecoderFlags_GPU_INFO = 0x10,
	GFSDK_Aftermath_GpuCrashDumpDecoderFlags_PAGE_FAULT_INFO = 0x20,
	GFSDK_Aftermath_GpuCrashDumpDecoderFlags_SHADER_INFO = 0x40,
	GFSDK_Aftermath_GpuCrashDumpDecoderFlags_WARP_STATE_INFO = 0x80,
	GFSDK_Aftermath_GpuCrashDumpDecoderFlags_SHADER_MAPPING_INFO = 0x100,
	GFSDK_Aftermath_GpuCrashDumpDecoderFlags_EVENT_MARKER_INFO = 0x200,
	GFSDK_Aftermath_GpuCrashDumpDecoderFlags_CALL_STACK_INFO = 0x400,
	GFSDK_Aftermath_GpuCrashDumpDecoderFlags_DESCRIPTION_INFO = 0x800,
	GFSDK_Aftermath_GpuCrashDumpDecoderFlags_FAULTED_WARP_INFO = 0x1000,
	GFSDK_Aftermath_GpuCrashDumpDecoderFlags_ALL_INFO = 0x1FFF
};

enum class GFSDK_Aftermath_GpuCrashDumpFormatterFlags:unsigned int
{
	GFSDK_Aftermath_GpuCrashDumpFormatterFlags_NONE = 0x0,
	GFSDK_Aftermath_GpuCrashDumpFormatterFlags_CONDENSED_OUTPUT = 0x1,
	GFSDK_Aftermath_GpuCrashDumpFormatterFlags_UTF8_OUTPUT = 0x2
};

enum class GFSDK_Aftermath_GpuCrashDumpDescriptionKey:unsigned int
{
	GFSDK_Aftermath_GpuCrashDumpDescriptionKey_ApplicationName = 0x1,
	GFSDK_Aftermath_GpuCrashDumpDescriptionKey_ApplicationVersion = 0x2,
	GFSDK_Aftermath_GpuCrashDumpDescriptionKey_UserDefined = 0x10000
};

enum class GFSDK_Aftermath_ShaderType:unsigned int
{
	GFSDK_Aftermath_ShaderType_Unknown = 0x0,
	GFSDK_Aftermath_ShaderType_Vertex = 0x1,
	GFSDK_Aftermath_ShaderType_Tessellation_Control = 0x2,
	GFSDK_Aftermath_ShaderType_Hull = 0x2,
	GFSDK_Aftermath_ShaderType_Tessellation_Evaluation = 0x3,
	GFSDK_Aftermath_ShaderType_Domain = 0x3,
	GFSDK_Aftermath_ShaderType_Geometry = 0x4,
	GFSDK_Aftermath_ShaderType_Fragment = 0x5,
	GFSDK_Aftermath_ShaderType_Pixel = 0x5,
	GFSDK_Aftermath_ShaderType_Compute = 0x6,
	GFSDK_Aftermath_ShaderType_RayTracing_RayGeneration = 0x7,
	GFSDK_Aftermath_ShaderType_RayTracing_Miss = 0x8,
	GFSDK_Aftermath_ShaderType_RayTracing_Intersection = 0x9,
	GFSDK_Aftermath_ShaderType_RayTracing_AnyHit = 0xA,
	GFSDK_Aftermath_ShaderType_RayTracing_ClosestHit = 0xB,
	GFSDK_Aftermath_ShaderType_RayTracing_Callable = 0xC,
	GFSDK_Aftermath_ShaderType_RayTracing_Internal = 0xD,
	GFSDK_Aftermath_ShaderType_Mesh = 0xE,
	GFSDK_Aftermath_ShaderType_Task = 0xF
};

enum class GFSDK_Aftermath_GraphicsApi:unsigned int
{
	GFSDK_Aftermath_GraphicsApi_Unknown = 0x0,
	GFSDK_Aftermath_GraphicsApi_D3D_10_0 = 0x1,
	GFSDK_Aftermath_GraphicsApi_D3D_10_1 = 0x2,
	GFSDK_Aftermath_GraphicsApi_D3D_11_0 = 0x3,
	GFSDK_Aftermath_GraphicsApi_D3D_11_1 = 0x4,
	GFSDK_Aftermath_GraphicsApi_D3D_11_2 = 0x5,
	GFSDK_Aftermath_GraphicsApi_D3D_12_0 = 0x6,
	GFSDK_Aftermath_GraphicsApi_Vulkan = 0x7
};

enum class rcRegionPartitioning:int
{
	RC_REGION_MONOTONE = 0x0,
	RC_REGION_WATERSHED = 0x1,
	RC_REGION_CHUNKY = 0x2
};

enum class ENavSystemOverridePolicy:unsigned char
{
	Override = 0x0,
	Append = 0x1,
	Skip = 0x2
};

enum class EReverseForEachResult:unsigned char
{
	UnTouched = 0x0,
	Modified = 0x1
};

enum class EGatherTilesCopyMode:int
{
	NoCopy = 0x0,
	CopyData = 0x1,
	CopyCacheData = 0x2,
	CopyDataAndCacheData = 0x3
};

namespace FLocalFileReplayCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		FixedSizeFriendlyName = 0x1,
		CompressionSupport = 0x2,
		RecordingTimestamp = 0x3,
		StreamChunkTimes = 0x4,
		FriendlyNameCharEncoding = 0x5,
		EncryptionSupport = 0x6,
		CustomVersions = 0x7,
		VersionPlusOne = 0x8,
		LatestVersion = 0x7
	};
}

namespace EQueuedLocalFileRequestType
{
	enum Type:int
	{
		StartRecording = 0x0,
		WriteHeader = 0x1,
		WritingHeader = 0x2,
		WritingStream = 0x3,
		StopRecording = 0x4,
		StartPlayback = 0x5,
		ReadingHeader = 0x6,
		ReadingStream = 0x7,
		EnumeratingStreams = 0x8,
		WritingCheckpoint = 0x9,
		ReadingCheckpoint = 0xA,
		UpdatingEvent = 0xB,
		EnumeratingEvents = 0xC,
		RequestingEvent = 0xD,
		StopStreaming = 0xE,
		DeletingFinishedStream = 0xF,
		RefreshingLiveStream = 0x10,
		KeepReplay = 0x11,
		RenameReplay = 0x12,
		RenameReplayFriendlyName = 0x13
	};
}

enum class ELocalFileChunkType:unsigned int
{
	Header = 0x0,
	ReplayData = 0x1,
	Checkpoint = 0x2,
	Event = 0x3,
	Unknown = 0xFFFFFFFF
};

enum class EDelayAcquireImageType:int
{
	None = 0x0,
	DelayAcquire = 0x1,
	LazyAcquire = 0x2
};

enum class EGameplayTagSourceType:unsigned char
{
	Native = 0x0,
	DefaultTagList = 0x1,
	TagList = 0x2,
	RestrictedTagList = 0x3,
	DataTable = 0x4,
	Invalid = 0x5
};

enum class EReadReplayInfoFlags:unsigned int
{
	None = 0x0,
	SkipHeaderChunkTest = 0x1
};

enum class ENativeGameplayTagToken:int
{
	PRIVATE_USE_MACRO_INSTEAD = 0x0
};

enum class ELocalFileReplayResult:unsigned int
{
	Success = 0x0,
	InvalidReplayInfo = 0x1,
	StreamChunkIndexMismatch = 0x2,
	DecompressBuffer = 0x3,
	CompressionNotSupported = 0x4,
	DecryptBuffer = 0x5,
	EncryptionNotSupported = 0x6,
	Unknown = 0x7
};

enum class ENavMeshDetailFlags:unsigned char
{
	TriangleEdges = 0x0,
	PolyEdges = 0x1,
	BoundaryEdges = 0x2,
	FilledPolys = 0x3,
	TileBounds = 0x4,
	PathCollidingGeometry = 0x5,
	TileLabels = 0x6,
	PolygonLabels = 0x7,
	PolygonCost = 0x8,
	PolygonFlags = 0x9,
	PathLabels = 0xA,
	NavLinks = 0xB,
	FailedNavLinks = 0xC,
	Clusters = 0xD,
	NavOctree = 0xE,
	NavOctreeDetails = 0xF,
	MarkForbiddenPolys = 0x10,
	TileBuildTimes = 0x11,
	TileBuildTimesHeatMap = 0x12,
	TileResolutions = 0x13
};

enum class EForEachResult:unsigned char
{
	Break = 0x0,
	Continue = 0x1
};

enum class EGameplayTagSelectionType:unsigned char
{
	None = 0x0,
	NonRestrictedOnly = 0x1,
	RestrictedOnly = 0x2,
	All = 0x3
};

enum class EdgeValues:int
{
	UNDEF = 0xFF,
	HULL = 0xFE
};

namespace EBTParallelChild
{
	enum Type:int
	{
		MainTask = 0x0,
		BackgroundTree = 0x1
	};
}

namespace EBTBlackboardRestart
{
	enum Type:int
	{
		ValueChange = 0x0,
		ResultChange = 0x1
	};
}

namespace EBTParallelMode
{
	enum Type:int
	{
		AbortBackground = 0x0,
		WaitForBackground = 0x1
	};
}

enum class EGameplayDebuggerShape:unsigned char
{
	Invalid = 0x0,
	Point = 0x1,
	Segment = 0x2,
	Box = 0x3,
	Cone = 0x4,
	Cylinder = 0x5,
	Circle = 0x6,
	Capsule = 0x7,
	Polygon = 0x8,
	Arrow = 0x9
};

enum class EGameplayDebuggerDataPack:unsigned char
{
	Persistent = 0x0,
	ResetOnActorChange = 0x1,
	ResetOnTick = 0x2
};

namespace EEnvQueryRunMode
{
	enum Type:int
	{
		SingleResult = 0x0,
		RandomBest5Pct = 0x1,
		RandomBest25Pct = 0x2,
		AllMatching = 0x3
	};
}

enum class EGameplayDebuggerInputMode:unsigned char
{
	Local = 0x0,
	Replicated = 0x1
};

namespace EEnvQueryStatus
{
	enum Type:int
	{
		Processing = 0x0,
		Success = 0x1,
		Failed = 0x2,
		Aborted = 0x3,
		OwnerLost = 0x4,
		MissingParam = 0x5
	};
}

enum class EGraphAStarResult:int
{
	SearchFail = 0x0,
	SearchSuccess = 0x1,
	GoalUnreachable = 0x2,
	InfiniteLoop = 0x3
};

namespace EPathFollowingDebugTokens
{
	enum Type:int
	{
		Description = 0x0,
		ParamName = 0x1,
		FailedValue = 0x2,
		PassedValue = 0x3
	};
}

namespace ECrowdAvoidanceQuality
{
	enum Type:int
	{
		Low = 0x0,
		Medium = 0x1,
		Good = 0x2,
		High = 0x3
	};
}

namespace EEnvTestPathfinding
{
	enum Type:int
	{
		PathExist = 0x0,
		PathCost = 0x1,
		PathLength = 0x2
	};
}

namespace EEnvTestDistance
{
	enum Type:int
	{
		Distance3D = 0x0,
		Distance2D = 0x1,
		DistanceZ = 0x2,
		DistanceAbsoluteZ = 0x3
	};
}

namespace EEnvItemStatus
{
	enum Type:int
	{
		Passed = 0x0,
		Failed = 0x1
	};
}

enum class EGameplayDebuggerCategoryState:unsigned char
{
	EnabledInGameAndSimulate = 0x0,
	EnabledInGame = 0x1,
	EnabledInSimulate = 0x2,
	Disabled = 0x3,
	Hidden = 0x4
};

enum class EEnvTestDot:unsigned char
{
	Dot3D = 0x0,
	Dot2D = 0x1
};

enum class EGameplayDebuggerOverrideMode:unsigned char
{
	Enable = 0x0,
	Disable = 0x1,
	UseDefault = 0x2
};

enum class EBTDecoratorAbortRequest:unsigned char
{
	ConditionResultChanged = 0x0,
	ConditionPassing = 0x1
};

enum class EMetaPathUpdateReason:unsigned char
{
	PathFinished = 0x0,
	MoveTick = 0x1
};

enum class ECrowdSimulationState:unsigned char
{
	Enabled = 0x0,
	ObstacleOnly = 0x1,
	Disabled = 0x2
};

enum class EHDRCaptureGamut:int
{
	HCGM_Rec709 = 0x0,
	HCGM_P3DCI = 0x1,
	HCGM_Rec2020 = 0x2,
	HCGM_ACES = 0x3,
	HCGM_ACEScg = 0x4,
	HCGM_Linear = 0x5,
	HCGM_MAX = 0x6
};

enum class EMovieSceneCaptureProtocolState:unsigned char
{
	Idle = 0x0,
	Initialized = 0x1,
	Capturing = 0x2,
	Finalizing = 0x3
};

enum class EStringParserToken:unsigned char
{
	OpenTag = 0x0,
	CloseTag = 0x1,
	NewLine = 0x2,
	EndOfString = 0x3,
	RegularChar = 0x4,
	Tab = 0x5
};

enum class ECloudStorageDelegate:int
{
	CSD_KeyValueReadComplete = 0x0,
	CSD_KeyValueWriteComplete = 0x1,
	CSD_ValueChanged = 0x2,
	CSD_DocumentQueryComplete = 0x3,
	CSD_DocumentReadComplete = 0x4,
	CSD_DocumentWriteComplete = 0x5,
	CSD_DocumentConflictDetected = 0x6,
	CSD_MAX = 0x7
};

enum class EWorldContentState:int
{
	NoContent = 0x0,
	ContentBundleInjected = 0x1
};

enum class EContentBundleClientState:int
{
	Unregistered = 0x0,
	Registered = 0x1,
	ContentInjectionRequested = 0x2,
	ContentRemovalRequested = 0x3,
	RegistrationFailed = 0x4
};

enum class EContentBundleStatus:int
{
	Registered = 0x0,
	ReadyToInject = 0x1,
	FailedToInject = 0x2,
	ContentInjected = 0x3,
	Unknown = 0xFF
};

enum class ELevelInstanceCreationType:unsigned char
{
	LevelInstance = 0x0,
	PackedLevelActor = 0x1
};

enum class ELevelInstancePivotType:unsigned char
{
	CenterMinZ = 0x0,
	Center = 0x1,
	Actor = 0x2,
	WorldOrigin = 0x3
};

enum class ELevelInstanceRuntimeBehavior:unsigned char
{
	None = 0x0,
	Embedded_Deprecated = 0x1,
	Partitioned = 0x2,
	LevelStreaming = 0x3
};

enum class ESplatBlendOp:unsigned char
{
	SBO_None = 0x0,
	SBO_Min = 0x1,
	SBO_Max = 0x2,
	SBO_Add = 0x3,
	SBO_Avg = 0x4
};

enum class EFunctionInputType:int
{
	FunctionInput_Scalar = 0x0,
	FunctionInput_Vector2 = 0x1,
	FunctionInput_Vector3 = 0x2,
	FunctionInput_Vector4 = 0x3,
	FunctionInput_Texture2D = 0x4,
	FunctionInput_TextureCube = 0x5,
	FunctionInput_Texture2DArray = 0x6,
	FunctionInput_VolumeTexture = 0x7,
	FunctionInput_StaticBool = 0x8,
	FunctionInput_MaterialAttributes = 0x9,
	FunctionInput_TextureExternal = 0xA,
	FunctionInput_Bool = 0xB,
	FunctionInput_Substrate = 0xC,
	FunctionInput_MAX = 0xD
};

enum class EDepthOfFieldFunctionValue:int
{
	TDOF_NearAndFarMask = 0x0,
	TDOF_NearMask = 0x1,
	TDOF_FarMask = 0x2,
	TDOF_CircleOfConfusionRadius = 0x3,
	TDOF_MAX = 0x4
};

enum class EMicroTransactionResult:int
{
	MTR_Succeeded = 0x0,
	MTR_Failed = 0x1,
	MTR_Canceled = 0x2,
	MTR_RestoredFromServer = 0x3,
	MTR_MAX = 0x4
};

enum class EMicroTransactionDelegate:int
{
	MTD_PurchaseQueryComplete = 0x0,
	MTD_PurchaseComplete = 0x1,
	MTD_MAX = 0x2
};

enum class EEmitterDynamicParameterValue:int
{
	EDPV_UserSet = 0x0,
	EDPV_AutoSet = 0x1,
	EDPV_VelocityX = 0x2,
	EDPV_VelocityY = 0x3,
	EDPV_VelocityZ = 0x4,
	EDPV_VelocityMag = 0x5,
	EDPV_MAX = 0x6
};

enum class EEmitterNormalsMode:int
{
	ENM_CameraFacing = 0x0,
	ENM_Spherical = 0x1,
	ENM_Cylindrical = 0x2,
	ENM_MAX = 0x3
};

enum class EOrbitChainMode:int
{
	EOChainMode_Add = 0x0,
	EOChainMode_Scale = 0x1,
	EOChainMode_Link = 0x2,
	EOChainMode_MAX = 0x3
};

enum class ELocationSkelVertSurfaceSource:int
{
	VERTSURFACESOURCE_Vert = 0x0,
	VERTSURFACESOURCE_Surface = 0x1,
	VERTSURFACESOURCE_MAX = 0x2
};

enum class ELocationEmitterSelectionMethod:int
{
	ELESM_Random = 0x0,
	ELESM_Sequential = 0x1,
	ELESM_MAX = 0x2
};

enum class CylinderHeightAxis:int
{
	PMLPC_HEIGHTAXIS_X = 0x0,
	PMLPC_HEIGHTAXIS_Y = 0x1,
	PMLPC_HEIGHTAXIS_Z = 0x2,
	PMLPC_HEIGHTAXIS_MAX = 0x3
};

enum class ELocationBoneSocketSelectionMethod:int
{
	BONESOCKETSEL_Sequential = 0x0,
	BONESOCKETSEL_Random = 0x1,
	BONESOCKETSEL_MAX = 0x2
};

enum class ELocationBoneSocketSource:int
{
	BONESOCKETSOURCE_Bones = 0x0,
	BONESOCKETSOURCE_Sockets = 0x1,
	BONESOCKETSOURCE_MAX = 0x2
};

enum class EParticleUVFlipMode:unsigned char
{
	None = 0x0,
	FlipUV = 0x1,
	FlipUOnly = 0x2,
	FlipVOnly = 0x3,
	RandomFlipUV = 0x4,
	RandomFlipUOnly = 0x5,
	RandomFlipVOnly = 0x6,
	RandomFlipUVIndependent = 0x7
};

namespace EPerturbationErrorMode
{
	enum Type:int
	{
		Transform = 0x0,
		Rotation = 0x1,
		Scale = 0x2
	};
}

enum class EPropertyAccessObjectType:unsigned char
{
	None = 0x0,
	Object = 0x1,
	WeakObject = 0x2,
	SoftObject = 0x3
};

enum class EPropertyAccessIndirectionType:unsigned char
{
	Offset = 0x0,
	Object = 0x1,
	Array = 0x2,
	ScriptFunction = 0x3,
	NativeFunction = 0x4
};

enum class EAudioStreamingState:int
{
	AudioState_ReadyFor_Requests = 0x0,
	AudioState_ReadyFor_Finalization = 0x1,
	AudioState_InProgress_Loading = 0x2
};

enum class ESingleMultiOrTest:unsigned char
{
	Single = 0x0,
	Multi = 0x1,
	Test = 0x2
};

enum class ESweepOrRay:unsigned char
{
	Raycast = 0x0,
	Sweep = 0x1
};

namespace EQueryInfo
{
	enum Type:int
	{
		GatherAll = 0x0,
		IsBlocking = 0x1,
		IsAnything = 0x2
	};
}

enum class EFrameHitchType:unsigned char
{
	NoHitch = 0x0,
	UnknownUnit = 0x1,
	GameThread = 0x2,
	RenderThread = 0x3,
	RHIThread = 0x4,
	GPU = 0x5
};

enum class EThreadQueryContext:int
{
	GTData = 0x0,
	PTDataWithGTObjects = 0x1,
	PTOnlyData = 0x2
};

enum class ETemperatureSeverityType:unsigned char
{
	Unknown = 0x0,
	Good = 0x1,
	Bad = 0x2,
	Serious = 0x3,
	Critical = 0x4,
	NumSeverities = 0x5
};

enum class EConvertQueryResult:int
{
	Valid = 0x0,
	Invalid = 0x1
};

namespace EDocumentationActorType
{
	enum Type:int
	{
		None = 0x0,
		UDNLink = 0x1,
		URLLink = 0x2,
		InvalidLink = 0x3
	};
}

enum class EDynamicResolutionStateEvent:unsigned char
{
	BeginFrame = 0x0,
	BeginDynamicResolutionRendering = 0x1,
	EndDynamicResolutionRendering = 0x2,
	EndFrame = 0x3
};

enum class EPinResolveType:unsigned char
{
	OwningNode = 0x0,
	LinkedTo = 0x1,
	SubPins = 0x2,
	ParentPin = 0x3,
	ReferencePassThroughConnection = 0x4
};

enum class EHLODLayerType:unsigned char
{
	Instancing = 0x0,
	MeshMerge = 0x1,
	MeshSimplify = 0x2,
	MeshApproximate = 0x3,
	Custom = 0x4
};

enum class ETransferPersistentDataMode:unsigned char
{
	Move = 0x0,
	Copy = 0x1
};

enum class EPinResolveResult:unsigned char
{
	FailedParse = 0x0,
	FailedSafely = 0x1,
	Deferred = 0x2,
	Suceeded = 0x3
};

namespace EComponentMarkedForEndOfFrameUpdateState
{
	enum Type:int
	{
		Unmarked = 0x0,
		Marked = 0x1,
		MarkedForGameThread = 0x2
	};
}

enum class EParticleCollisionShaderMode:int
{
	PCM_None = 0x0,
	PCM_DepthBuffer = 0x1,
	PCM_DistanceField = 0x2
};

enum class EVertexPaintAxis:unsigned char
{
	X = 0x0,
	Y = 0x1,
	Z = 0x2
};

enum class EPropertyAccessCopyBatch:unsigned char
{
	InternalUnbatched = 0x0,
	ExternalUnbatched = 0x1,
	InternalBatched = 0x2,
	ExternalBatched = 0x3,
	Count = 0x4
};

enum class EVideoRecordingState:int
{
	None = 0x0,
	Starting = 0x1,
	Recording = 0x2,
	Pausing = 0x3,
	Paused = 0x4,
	Finalizing = 0x5,
	Error = 0x6
};

enum class EBuildPatchDataType:int
{
	ChunkData = 0x0,
	FileData = 0x1
};

enum class EConstructionError:unsigned char
{
	None = 0x0,
	CannotCreateFile = 0x1,
	OutOfDiskSpace = 0x2,
	MissingChunk = 0x3,
	SerializeError = 0x4,
	TrackingError = 0x5,
	OutboundDataError = 0x6
};

enum class EInstallBundleManagerInitResult:int
{
	OK = 0x0,
	BuildMetaDataNotFound = 0x1,
	RemoteBuildMetaDataNotFound = 0x2,
	BuildMetaDataDownloadError = 0x3,
	BuildMetaDataParsingError = 0x4,
	DistributionRootParseError = 0x5,
	DistributionRootDownloadError = 0x6,
	ManifestArchiveError = 0x7,
	ManifestCreationError = 0x8,
	ManifestDownloadError = 0x9,
	BackgroundDownloadsIniDownloadError = 0xA,
	NoInternetConnectionError = 0xB,
	ConfigurationError = 0xC,
	ClientPatchRequiredError = 0xD,
	Count = 0xE
};

enum class EInstallBundleManagerPatchCheckResult:unsigned int
{
	NoPatchRequired = 0x0,
	ClientPatchRequired = 0x1,
	ContentPatchRequired = 0x2,
	NoLoggedInUser = 0x3,
	PatchCheckFailure = 0x4,
	Count = 0x5
};

enum class EInstallBundlePauseFlags:unsigned int
{
	None = 0x0,
	OnCellularNetwork = 0x1,
	NoInternetConnection = 0x2,
	UserPaused = 0x4
};

enum class EInstallBundleStatus:int
{
	Requested = 0x0,
	Updating = 0x1,
	Finishing = 0x2,
	Ready = 0x3,
	Count = 0x4
};

enum class EInstallBundleCacheReserveResult:signed char
{
	Fail_CacheFull = 0x0,
	Fail_NeedsEvict = 0x1,
	Fail_PendingEvict = 0x2,
	Success = 0x3
};

enum class EInstallBundleReleaseResult:int
{
	OK = 0x0,
	ManifestArchiveError = 0x1,
	UserCancelledError = 0x2,
	Count = 0x3
};

enum class EInstallBundleRequestInfoFlags:int
{
	None = 0x0,
	EnqueuedBundles = 0x1,
	SkippedAlreadyMountedBundles = 0x2,
	SkippedAlreadyUpdatedBundles = 0x4,
	SkippedAlreadyReleasedBundles = 0x8,
	SkippedAlreadyRemovedBundles = 0x10,
	SkippedUnknownBundles = 0x20,
	SkippedInvalidBundles = 0x40,
	SkippedUnusableLanguageBundles = 0x80,
	SkippedBundlesDueToBundleSource = 0x100
};

enum class EInstallBundleSourceUpdateBundleInfoResult:unsigned char
{
	OK = 0x0,
	NotInitailized = 0x1,
	AlreadyMounted = 0x2,
	AlreadyRequested = 0x3,
	IllegalCacheStatus = 0x4,
	Count = 0x5
};

enum class EOpenGLCurrentContext:int
{
	CONTEXT_Other = 0xFE,
	CONTEXT_Invalid = 0xFF,
	CONTEXT_Shared = 0x0,
	CONTEXT_Rendering = 0x1
};

enum class EOpenGLShaderTargetPlatform:int
{
	OGLSTP_Unknown = 0x0,
	OGLSTP_Desktop = 0x1,
	OGLSTP_Android = 0x2,
	OGLSTP_iOS = 0x3
};

enum class EClearType:int
{
	CT_None = 0x0,
	CT_Depth = 0x1,
	CT_Stencil = 0x2,
	CT_Color = 0x4,
	CT_DepthStencil = 0x3
};

enum class EOpenGLFormatCapabilities:unsigned int
{
	None = 0x0,
	Texture = 0x1,
	Render = 0x2,
	Filterable = 0x4,
	Image = 0x8,
	DepthStencil = 0x10
};

namespace FClothConfigNvCustomVersion
{
	enum Type:int
	{
		BeforeCustomVersionWasAdded = 0x0,
		DeprecateLegacyStructureAndEnum = 0x1,
		VersionPlusOne = 0x2,
		LatestVersion = 0x1
	};
}

enum class EClothingWindMethodNv:unsigned char
{
	Legacy = 0x0,
	Accurate = 0x1
};

enum class _NvAPI_Status:unsigned __int64
{
	NVAPI_OK = 0x0,
	NVAPI_ERROR = 0xFF,
	NVAPI_LIBRARY_NOT_FOUND = 0xFE,
	NVAPI_NO_IMPLEMENTATION = 0xFD,
	NVAPI_API_NOT_INITIALIZED = 0xFC,
	NVAPI_INVALID_ARGUMENT = 0xFB,
	NVAPI_NVIDIA_DEVICE_NOT_FOUND = 0xFA,
	NVAPI_END_ENUMERATION = 0xF9,
	NVAPI_INVALID_HANDLE = 0xF8,
	NVAPI_INCOMPATIBLE_STRUCT_VERSION = 0xF7,
	NVAPI_HANDLE_INVALIDATED = 0xF6,
	NVAPI_OPENGL_CONTEXT_NOT_CURRENT = 0xF5,
	NVAPI_INVALID_POINTER = 0xF2,
	NVAPI_NO_GL_EXPERT = 0xF4,
	NVAPI_INSTRUMENTATION_DISABLED = 0xF3,
	NVAPI_NO_GL_NSIGHT = 0xF1,
	NVAPI_EXPECTED_LOGICAL_GPU_HANDLE = 0x9C,
	NVAPI_EXPECTED_PHYSICAL_GPU_HANDLE = 0x9B,
	NVAPI_EXPECTED_DISPLAY_HANDLE = 0x9A,
	NVAPI_INVALID_COMBINATION = 0x99,
	NVAPI_NOT_SUPPORTED = 0x98,
	NVAPI_PORTID_NOT_FOUND = 0x97,
	NVAPI_EXPECTED_UNATTACHED_DISPLAY_HANDLE = 0x96,
	NVAPI_INVALID_PERF_LEVEL = 0x95,
	NVAPI_DEVICE_BUSY = 0x94,
	NVAPI_NV_PERSIST_FILE_NOT_FOUND = 0x93,
	NVAPI_PERSIST_DATA_NOT_FOUND = 0x92,
	NVAPI_EXPECTED_TV_DISPLAY = 0x91,
	NVAPI_EXPECTED_TV_DISPLAY_ON_DCONNECTOR = 0x90,
	NVAPI_NO_ACTIVE_SLI_TOPOLOGY = 0x8F,
	NVAPI_SLI_RENDERING_MODE_NOTALLOWED = 0x8E,
	NVAPI_EXPECTED_DIGITAL_FLAT_PANEL = 0x8D,
	NVAPI_ARGUMENT_EXCEED_MAX_SIZE = 0x8C,
	NVAPI_DEVICE_SWITCHING_NOT_ALLOWED = 0x8B,
	NVAPI_TESTING_CLOCKS_NOT_SUPPORTED = 0x8A,
	NVAPI_UNKNOWN_UNDERSCAN_CONFIG = 0x89,
	NVAPI_TIMEOUT_RECONFIGURING_GPU_TOPO = 0x88,
	NVAPI_DATA_NOT_FOUND = 0x87,
	NVAPI_EXPECTED_ANALOG_DISPLAY = 0x86,
	NVAPI_NO_VIDLINK = 0x85,
	NVAPI_REQUIRES_REBOOT = 0x84,
	NVAPI_INVALID_HYBRID_MODE = 0x83,
	NVAPI_MIXED_TARGET_TYPES = 0x82,
	NVAPI_SYSWOW64_NOT_SUPPORTED = 0x81,
	NVAPI_IMPLICIT_SET_GPU_TOPOLOGY_CHANGE_NOT_ALLOWED = 0x80,
	NVAPI_REQUEST_USER_TO_CLOSE_NON_MIGRATABLE_APPS = 0xFFFFFF7F,
	NVAPI_OUT_OF_MEMORY = 0xFFFFFF7E,
	NVAPI_WAS_STILL_DRAWING = 0xFFFFFF7D,
	NVAPI_FILE_NOT_FOUND = 0xFFFFFF7C,
	NVAPI_TOO_MANY_UNIQUE_STATE_OBJECTS = 0xFFFFFF7B,
	NVAPI_INVALID_CALL = 0xFFFFFF7A,
	NVAPI_D3D10_1_LIBRARY_NOT_FOUND = 0xFFFFFF79,
	NVAPI_FUNCTION_NOT_FOUND = 0xFFFFFF78,
	NVAPI_INVALID_USER_PRIVILEGE = 0xFFFFFF77,
	NVAPI_EXPECTED_NON_PRIMARY_DISPLAY_HANDLE = 0xFFFFFF76,
	NVAPI_EXPECTED_COMPUTE_GPU_HANDLE = 0xFFFFFF75,
	NVAPI_STEREO_NOT_INITIALIZED = 0xFFFFFF74,
	NVAPI_STEREO_REGISTRY_ACCESS_FAILED = 0xFFFFFF73,
	NVAPI_STEREO_REGISTRY_PROFILE_TYPE_NOT_SUPPORTED = 0xFFFFFF72,
	NVAPI_STEREO_REGISTRY_VALUE_NOT_SUPPORTED = 0xFFFFFF71,
	NVAPI_STEREO_NOT_ENABLED = 0xFFFFFF70,
	NVAPI_STEREO_NOT_TURNED_ON = 0xFFFFFF6F,
	NVAPI_STEREO_INVALID_DEVICE_INTERFACE = 0xFFFFFF6E,
	NVAPI_STEREO_PARAMETER_OUT_OF_RANGE = 0xFFFFFF6D,
	NVAPI_STEREO_FRUSTUM_ADJUST_MODE_NOT_SUPPORTED = 0xFFFFFF6C,
	NVAPI_TOPO_NOT_POSSIBLE = 0xFFFFFF6B,
	NVAPI_MODE_CHANGE_FAILED = 0xFFFFFF6A,
	NVAPI_D3D11_LIBRARY_NOT_FOUND = 0xFFFFFF69,
	NVAPI_INVALID_ADDRESS = 0xFFFFFF68,
	NVAPI_STRING_TOO_SMALL = 0xFFFFFF67,
	NVAPI_MATCHING_DEVICE_NOT_FOUND = 0xFFFFFF66,
	NVAPI_DRIVER_RUNNING = 0xFFFFFF65,
	NVAPI_DRIVER_NOTRUNNING = 0xFFFFFF64,
	NVAPI_ERROR_DRIVER_RELOAD_REQUIRED = 0xFFFFFF63,
	NVAPI_SET_NOT_ALLOWED = 0xFFFFFF62,
	NVAPI_ADVANCED_DISPLAY_TOPOLOGY_REQUIRED = 0xFFFFFF61,
	NVAPI_SETTING_NOT_FOUND = 0xFFFFFF60,
	NVAPI_SETTING_SIZE_TOO_LARGE = 0xFFFFFF5F,
	NVAPI_TOO_MANY_SETTINGS_IN_PROFILE = 0xFFFFFF5E,
	NVAPI_PROFILE_NOT_FOUND = 0xFFFFFF5D,
	NVAPI_PROFILE_NAME_IN_USE = 0xFFFFFF5C,
	NVAPI_PROFILE_NAME_EMPTY = 0xFFFFFF5B,
	NVAPI_EXECUTABLE_NOT_FOUND = 0xFFFFFF5A,
	NVAPI_EXECUTABLE_ALREADY_IN_USE = 0xFFFFFF59,
	NVAPI_DATATYPE_MISMATCH = 0xFFFFFF58,
	NVAPI_PROFILE_REMOVED = 0xFFFFFF57,
	NVAPI_UNREGISTERED_RESOURCE = 0xFFFFFF56,
	NVAPI_ID_OUT_OF_RANGE = 0xFFFFFF55,
	NVAPI_DISPLAYCONFIG_VALIDATION_FAILED = 0xFFFFFF54,
	NVAPI_DPMST_CHANGED = 0xFFFFFF53,
	NVAPI_INSUFFICIENT_BUFFER = 0xFFFFFF52,
	NVAPI_ACCESS_DENIED = 0xFFFFFF51,
	NVAPI_MOSAIC_NOT_ACTIVE = 0xFFFFFF50,
	NVAPI_SHARE_RESOURCE_RELOCATED = 0xFFFFFF4F,
	NVAPI_REQUEST_USER_TO_DISABLE_DWM = 0xFFFFFF4E,
	NVAPI_D3D_DEVICE_LOST = 0xFFFFFF4D,
	NVAPI_INVALID_CONFIGURATION = 0xFFFFFF4C,
	NVAPI_STEREO_HANDSHAKE_NOT_DONE = 0xFFFFFF4B,
	NVAPI_EXECUTABLE_PATH_IS_AMBIGUOUS = 0xFFFFFF4A,
	NVAPI_DEFAULT_STEREO_PROFILE_IS_NOT_DEFINED = 0xFFFFFF49,
	NVAPI_DEFAULT_STEREO_PROFILE_DOES_NOT_EXIST = 0xFFFFFF48,
	NVAPI_CLUSTER_ALREADY_EXISTS = 0xFFFFFF47,
	NVAPI_DPMST_DISPLAY_ID_EXPECTED = 0xFFFFFF46,
	NVAPI_INVALID_DISPLAY_ID = 0xFFFFFF45,
	NVAPI_STREAM_IS_OUT_OF_SYNC = 0xFFFFFF44,
	NVAPI_INCOMPATIBLE_AUDIO_DRIVER = 0xFFFFFF43,
	NVAPI_VALUE_ALREADY_SET = 0xFFFFFF42,
	NVAPI_TIMEOUT = 0xFFFFFF41,
	NVAPI_GPU_WORKSTATION_FEATURE_INCOMPLETE = 0xFFFFFF40,
	NVAPI_STEREO_INIT_ACTIVATION_NOT_DONE = 0xFFFFFF3F,
	NVAPI_SYNC_NOT_ACTIVE = 0xFFFFFF3E,
	NVAPI_SYNC_MASTER_NOT_FOUND = 0xFFFFFF3D,
	NVAPI_INVALID_SYNC_TOPOLOGY = 0xFFFFFF3C,
	NVAPI_ECID_SIGN_ALGO_UNSUPPORTED = 0xFFFFFF3B,
	NVAPI_ECID_KEY_VERIFICATION_FAILED = 0xFFFFFF3A,
	NVAPI_FIRMWARE_OUT_OF_DATE = 0xFFFFFF39,
	NVAPI_FIRMWARE_REVISION_NOT_SUPPORTED = 0xFFFFFF38,
	NVAPI_LICENSE_CALLER_AUTHENTICATION_FAILED = 0xFFFFFF37,
	NVAPI_D3D_DEVICE_NOT_REGISTERED = 0xFFFFFF36,
	NVAPI_RESOURCE_NOT_ACQUIRED = 0xFFFFFF35,
	NVAPI_TIMING_NOT_SUPPORTED = 0xFFFFFF34,
	NVAPI_HDCP_ENCRYPTION_FAILED = 0xFFFFFF33,
	NVAPI_PCLK_LIMITATION_FAILED = 0xFFFFFF32,
	NVAPI_NO_CONNECTOR_FOUND = 0xFFFFFF31,
	NVAPI_HDCP_DISABLED = 0xFFFFFF30,
	NVAPI_API_IN_USE = 0xFFFFFF2F,
	NVAPI_NVIDIA_DISPLAY_NOT_FOUND = 0xFFFFFF2E,
	NVAPI_PRIV_SEC_VIOLATION = 0xFFFFFF2D,
	NVAPI_INCORRECT_VENDOR = 0xFFFFFF2C,
	NVAPI_DISPLAY_IN_USE = 0xFFFFFF2B,
	NVAPI_UNSUPPORTED_CONFIG_NON_HDCP_HMD = 0xFFFFFF2A,
	NVAPI_MAX_DISPLAY_LIMIT_REACHED = 0xFFFFFF29,
	NVAPI_INVALID_DIRECT_MODE_DISPLAY = 0xFFFFFF28,
	NVAPI_GPU_IN_DEBUG_MODE = 0xFFFFFF27,
	NVAPI_D3D_CONTEXT_NOT_FOUND = 0xFFFFFF26,
	NVAPI_STEREO_VERSION_MISMATCH = 0xFFFFFF25,
	NVAPI_GPU_NOT_POWERED = 0xFFFFFF24,
	NVAPI_ERROR_DRIVER_RELOAD_IN_PROGRESS = 0xFFFFFF23,
	NVAPI_WAIT_FOR_HW_RESOURCE = 0xFFFFFF22,
	NVAPI_REQUIRE_FURTHER_HDCP_ACTION = 0xFFFFFF21,
	NVAPI_DISPLAY_MUX_TRANSITION_FAILED = 0xFFFFFF20,
	NVAPI_INVALID_DSC_VERSION = 0xFFFFFF1F,
	NVAPI_INVALID_DSC_SLICECOUNT = 0xFFFFFF1E,
	NVAPI_INVALID_DSC_OUTPUT_BPP = 0xFFFFFF1D,
	NVAPI_FAILED_TO_LOAD_FROM_DRIVER_STORE = 0xFFFFFF1C,
	NVAPI_NO_VULKAN = 0xFFFFFF1B,
	NVAPI_REQUEST_PENDING = 0xFFFFFF1A,
	NVAPI_RESOURCE_IN_USE = 0xFFFFFF19,
	NVAPI_INVALID_IMAGE = 0xFFFFFF18,
	NVAPI_INVALID_PTX = 0xFFFFFF17,
	NVAPI_NVLINK_UNCORRECTABLE = 0xFFFFFF16,
	NVAPI_JIT_COMPILER_NOT_FOUND = 0xFFFFFF15,
	NVAPI_INVALID_SOURCE = 0xFFFFFF14,
	NVAPI_ILLEGAL_INSTRUCTION = 0xFFFFFF13,
	NVAPI_INVALID_PC = 0xFFFFFF12,
	NVAPI_LAUNCH_FAILED = 0xFFFFFF11,
	NVAPI_NOT_PERMITTED = 0xFFFFFF10,
	NVAPI_CALLBACK_ALREADY_REGISTERED = 0xFFFFFF0F,
	NVAPI_CALLBACK_NOT_FOUND = 0xFFFFFF0E
};

enum class NV_HDR_MODE:int
{
	NV_HDR_MODE_OFF = 0x0,
	NV_HDR_MODE_UHDA = 0x2,
	NV_HDR_MODE_UHDA_PASSTHROUGH = 0x5,
	NV_HDR_MODE_DOLBY_VISION = 0x7,
	NV_HDR_MODE_EDR = 0x3,
	NV_HDR_MODE_SDR = 0x4,
	NV_HDR_MODE_UHDA_NB = 0x6,
	NV_HDR_MODE_UHDBD = 0x2
};

enum class NV_STATIC_METADATA_DESCRIPTOR_ID:int
{
	NV_STATIC_METADATA_TYPE_1 = 0x0
};

enum class NV_HDR_CMD:int
{
	NV_HDR_CMD_GET = 0x0,
	NV_HDR_CMD_SET = 0x1
};

enum class AGSReturnCode:int
{
	AGS_SUCCESS = 0x0,
	AGS_FAILURE = 0x1,
	AGS_INVALID_ARGS = 0x2,
	AGS_OUT_OF_MEMORY = 0x3,
	AGS_MISSING_D3D_DLL = 0x4,
	AGS_LEGACY_DRIVER = 0x5,
	AGS_NO_AMD_DRIVER_INSTALLED = 0x6,
	AGS_EXTENSION_NOT_SUPPORTED = 0x7,
	AGS_ADL_FAILURE = 0x8,
	AGS_DX_FAILURE = 0x9
};

enum class GFSDK_Aftermath_Version:unsigned int
{
	GFSDK_Aftermath_Version_API = 0x212
};

enum class GFSDK_Aftermath_FeatureFlags:unsigned int
{
	GFSDK_Aftermath_FeatureFlags_Minimum = 0x0,
	GFSDK_Aftermath_FeatureFlags_EnableMarkers = 0x1,
	GFSDK_Aftermath_FeatureFlags_EnableResourceTracking = 0x2,
	GFSDK_Aftermath_FeatureFlags_CallStackCapturing = 0x40000000,
	GFSDK_Aftermath_FeatureFlags_GenerateShaderDebugInfo = 0x8,
	GFSDK_Aftermath_FeatureFlags_EnableShaderErrorReporting = 0x10,
	GFSDK_Aftermath_FeatureFlags_Maximum = 0x4000001B
};

enum class AGSCrossfireMode:int
{
	AGS_CROSSFIRE_MODE_DRIVER_AFR = 0x0,
	AGS_CROSSFIRE_MODE_EXPLICIT_AFR = 0x1,
	AGS_CROSSFIRE_MODE_DISABLE = 0x2
};

enum class GFSDK_Aftermath_Result:unsigned int
{
	GFSDK_Aftermath_Result_Success = 0x1,
	GFSDK_Aftermath_Result_NotAvailable = 0x2,
	GFSDK_Aftermath_Result_Fail = 0xBAD00000,
	GFSDK_Aftermath_Result_FAIL_VersionMismatch = 0xBAD00001,
	GFSDK_Aftermath_Result_FAIL_NotInitialized = 0xBAD00002,
	GFSDK_Aftermath_Result_FAIL_InvalidAdapter = 0xBAD00003,
	GFSDK_Aftermath_Result_FAIL_InvalidParameter = 0xBAD00004,
	GFSDK_Aftermath_Result_FAIL_Unknown = 0xBAD00005,
	GFSDK_Aftermath_Result_FAIL_ApiError = 0xBAD00006,
	GFSDK_Aftermath_Result_FAIL_NvApiIncompatible = 0xBAD00007,
	GFSDK_Aftermath_Result_FAIL_GettingContextDataWithNewCommandList = 0xBAD00008,
	GFSDK_Aftermath_Result_FAIL_AlreadyInitialized = 0xBAD00009,
	GFSDK_Aftermath_Result_FAIL_D3DDebugLayerNotCompatible = 0xBAD0000A,
	GFSDK_Aftermath_Result_FAIL_DriverInitFailed = 0xBAD0000B,
	GFSDK_Aftermath_Result_FAIL_DriverVersionNotSupported = 0xBAD0000C,
	GFSDK_Aftermath_Result_FAIL_OutOfMemory = 0xBAD0000D,
	GFSDK_Aftermath_Result_FAIL_GetDataOnBundle = 0xBAD0000E,
	GFSDK_Aftermath_Result_FAIL_GetDataOnDeferredContext = 0xBAD0000F,
	GFSDK_Aftermath_Result_FAIL_FeatureNotEnabled = 0xBAD00010,
	GFSDK_Aftermath_Result_FAIL_NoResourcesRegistered = 0xBAD00011,
	GFSDK_Aftermath_Result_FAIL_ThisResourceNeverRegistered = 0xBAD00012,
	GFSDK_Aftermath_Result_FAIL_NotSupportedInUWP = 0xBAD00013,
	GFSDK_Aftermath_Result_FAIL_D3dDllNotSupported = 0xBAD00014,
	GFSDK_Aftermath_Result_FAIL_D3dDllInterceptionNotSupported = 0xBAD00015,
	GFSDK_Aftermath_Result_FAIL_Disabled = 0xBAD00016
};

enum class MDH_ReportType:int
{
	MDH_RANGE_METRICS_REPORT = 0x0,
	MDH_PERIODIC_METRICS_REPORT = 0x1
};

enum class NV_GPU_PERF_PSTATE20_CLOCK_TYPE_ID:int
{
	NVAPI_GPU_PERF_PSTATE20_CLOCK_TYPE_SINGLE = 0x0,
	NVAPI_GPU_PERF_PSTATE20_CLOCK_TYPE_RANGE = 0x1
};

enum class NV_COLOR_FORMAT:int
{
	NV_COLOR_FORMAT_RGB = 0x0,
	NV_COLOR_FORMAT_YUV422 = 0x1,
	NV_COLOR_FORMAT_YUV444 = 0x2,
	NV_COLOR_FORMAT_YUV420 = 0x3,
	NV_COLOR_FORMAT_DEFAULT = 0xFE,
	NV_COLOR_FORMAT_AUTO = 0xFF
};

enum class EStreamReadRequestStatus:int
{
	Scheduled = 0x0,
	Completed = 0x1,
	Cancelled = 0x2
};

enum class AGSDriverVersionResult:int
{
	AGS_SOFTWAREVERSIONCHECK_OK = 0x0,
	AGS_SOFTWAREVERSIONCHECK_OLDER = 0x1,
	AGS_SOFTWAREVERSIONCHECK_UNDEFINED = 0x2
};

enum class ERigUnitDebugPointMode:unsigned char
{
	Point = 0x0,
	Vector = 0x1,
	Max = 0x2
};

enum class ERigUnitVisualDebugPointMode:unsigned char
{
	Point = 0x0,
	Vector = 0x1,
	Max = 0x2
};

enum class ERigUnitDebugTransformMode:unsigned char
{
	Point = 0x0,
	Axes = 0x1,
	Box = 0x2,
	Max = 0x3
};

enum class ESlabOverlapFlag:int
{
	SLABOVERLAP_Cross = 0x1,
	SLABOVERLAP_Min = 0x2,
	SLABOVERLAP_Max = 0x4
};

enum class ELinkAllocationType:int
{
	CREATE_LINK_PREALLOCATED = 0x0,
	CREATE_LINK_DYNAMIC_OFFMESH = 0x1,
	CREATE_LINK_DYNAMIC_CLUSTER = 0x2
};

enum class dtNodeFlags:int
{
	DT_NODE_OPEN = 0x1,
	DT_NODE_CLOSED = 0x2
};

enum class dtStraightPathOptions:int
{
	DT_STRAIGHTPATH_AREA_CROSSINGS = 0x1,
	DT_STRAIGHTPATH_ALL_CROSSINGS = 0x2
};

enum class rcFilterLowAreaFlags:int
{
	RC_LOW_FILTER_SEED_SPANS = 0x1,
	RC_LOW_FILTER_POST_PROCESS = 0x2
};

enum class ERBFQuatDistanceType:unsigned char
{
	Euclidean = 0x0,
	ArcLength = 0x1,
	SwingAngle = 0x2,
	TwistAngle = 0x3
};

enum class ERBFKernelType:unsigned char
{
	Gaussian = 0x0,
	Exponential = 0x1,
	Linear = 0x2,
	Cubic = 0x3,
	Quintic = 0x4
};

enum class ERBFVectorDistanceType:unsigned char
{
	Euclidean = 0x0,
	Manhattan = 0x1,
	ArcLength = 0x2
};

namespace EPawnActionMoveMode
{
	enum Type:int
	{
		UsePathfinding = 0x0,
		StraightLine = 0x1
	};
}

namespace EPawnActionFailHandling
{
	enum Type:int
	{
		RequireSuccess = 0x0,
		IgnoreFailure = 0x1
	};
}

namespace EAIForceParam
{
	enum Type:int
	{
		Force = 0x0,
		DoNotForce = 0x1,
		MAX = 0x2
	};
}

namespace EPawnSubActionTriggeringPolicy
{
	enum Type:int
	{
		CopyBeforeTriggering = 0x0,
		ReuseInstances = 0x1
	};
}

namespace EEnvTestPurpose
{
	enum Type:int
	{
		Filter = 0x0,
		Score = 0x1,
		FilterAndScore = 0x2
	};
}

namespace EEnvTestScoreEquation
{
	enum Type:int
	{
		Linear = 0x0,
		Square = 0x1,
		InverseLinear = 0x2,
		SquareRoot = 0x3,
		Constant = 0x4
	};
}

namespace EEnvTestWeight
{
	enum Type:int
	{
		None = 0x0,
		Square = 0x1,
		Inverse = 0x2,
		Unused = 0x3,
		Constant = 0x4,
		Skip = 0x5
	};
}

namespace EEnvTestFilterType
{
	enum Type:int
	{
		Minimum = 0x0,
		Maximum = 0x1,
		Range = 0x2,
		Match = 0x3
	};
}

namespace EEnvTestScoreOperator
{
	enum Type:int
	{
		AverageScore = 0x0,
		MinScore = 0x1,
		MaxScore = 0x2,
		Multiply = 0x3
	};
}

namespace EEnvTestFilterOperator
{
	enum Type:int
	{
		AllPass = 0x0,
		AnyPass = 0x1
	};
}

namespace EEnvQueryParam
{
	enum Type:int
	{
		Float = 0x0,
		Int = 0x1,
		Bool = 0x2
	};
}

namespace EEnvTestCost
{
	enum Type:int
	{
		Low = 0x0,
		Medium = 0x1,
		High = 0x2
	};
}

namespace EEnvDirection
{
	enum Type:int
	{
		TwoPoints = 0x0,
		Rotation = 0x1
	};
}

namespace EEnvQueryTestClamping
{
	enum Type:int
	{
		None = 0x0,
		SpecifiedValue = 0x1,
		FilterThreshold = 0x2
	};
}

namespace EEnvQueryTrace
{
	enum Type:int
	{
		None = 0x0,
		Navigation = 0x1,
		GeometryByChannel = 0x2,
		GeometryByProfile = 0x3,
		NavigationOverLedges = 0x4
	};
}

namespace EEnvTraceShape
{
	enum Type:int
	{
		Line = 0x0,
		Box = 0x1,
		Sphere = 0x2,
		Capsule = 0x3
	};
}

namespace EEnvOverlapShape
{
	enum Type:int
	{
		Box = 0x0,
		Sphere = 0x1,
		Capsule = 0x2
	};
}

namespace EPawnActionResult
{
	enum Type:int
	{
		NotStarted = 0x0,
		InProgress = 0x1,
		Success = 0x2,
		Failed = 0x3,
		Aborted = 0x4
	};
}

namespace EPawnActionEventType
{
	enum Type:int
	{
		Invalid = 0x0,
		FailedToStart = 0x1,
		InstantAbort = 0x2,
		FinishedAborting = 0x3,
		FinishedExecution = 0x4,
		Push = 0x5
	};
}

namespace EPawnActionAbortState
{
	enum Type:int
	{
		NeverStarted = 0x0,
		NotBeingAborted = 0x1,
		MarkPendingAbort = 0x2,
		LatentAbortInProgress = 0x3,
		AbortDone = 0x4,
		MAX = 0x5
	};
}

namespace EAILockSource
{
	enum Type:int
	{
		Animation = 0x0,
		Logic = 0x1,
		Script = 0x2,
		Gameplay = 0x3,
		MAX = 0x4
	};
}

enum class EAISenseNotifyType:unsigned char
{
	OnEveryPerception = 0x0,
	OnPerceptionChange = 0x1
};

namespace ESightPerceptionEventName
{
	enum Type:int
	{
		Undefined = 0x0,
		GainedSight = 0x1,
		LostSight = 0x2
	};
}

enum class FAIDistanceType:unsigned char
{
	Distance3D = 0x0,
	Distance2D = 0x1,
	DistanceZ = 0x2,
	MAX = 0x3
};

enum class EGenericAICheck:unsigned char
{
	Less = 0x0,
	LessOrEqual = 0x1,
	Equal = 0x2,
	NotEqual = 0x3,
	GreaterOrEqual = 0x4,
	Greater = 0x5,
	IsTrue = 0x6,
	MAX = 0x7
};

enum class EAIParamType:unsigned char
{
	Float = 0x0,
	Int = 0x1,
	Bool = 0x2,
	MAX = 0x3
};

enum class EAITaskPriority:unsigned char
{
	Lowest = 0x0,
	Low = 0x40,
	AutonomousAI = 0x7F,
	High = 0xC0,
	Ultimate = 0xFE
};

namespace RtAudioError
{
	enum Type:int
	{
		WARNING = 0x0,
		DEBUG_WARNING = 0x1,
		UNSPECIFIED = 0x2,
		NO_DEVICES_FOUND = 0x3,
		INVALID_DEVICE = 0x4,
		MEMORY_ERROR = 0x5,
		INVALID_PARAMETER = 0x6,
		INVALID_USE = 0x7,
		DRIVER_ERROR = 0x8,
		SYSTEM_ERROR = 0x9,
		THREAD_ERROR = 0xA
	};
}

enum class VkFragmentShadingRateCombinerOpKHR:int
{
	VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR = 0x0,
	VK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR = 0x1,
	VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR = 0x2,
	VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR = 0x3,
	VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR = 0x4,
	VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_ENUM_KHR = 0x7FFFFFFF
};

enum class VkFenceCreateFlagBits:int
{
	VK_FENCE_CREATE_SIGNALED_BIT = 0x1,
	VK_FENCE_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
};

enum class VkDeviceDiagnosticsConfigFlagBitsNV:int
{
	VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NV = 0x1,
	VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV = 0x2,
	VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV = 0x4,
	VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_ERROR_REPORTING_BIT_NV = 0x8,
	VK_DEVICE_DIAGNOSTICS_CONFIG_FLAG_BITS_MAX_ENUM_NV = 0x7FFFFFFF
};

enum class ESingleThreadedPSOCreateMode:int
{
	None = 0x0,
	All = 0x1,
	Precompile = 0x2,
	NonPrecompiled = 0x3
};

namespace ENavCostDisplay
{
	enum Type:int
	{
		TotalCost = 0x0,
		HeuristicOnly = 0x1,
		RealCostOnly = 0x2
	};
}

namespace EPathExistanceQueryType
{
	enum Type:int
	{
		NavmeshRaycast2D = 0x0,
		HierarchicalQuery = 0x1,
		RegularPathFinding = 0x2
	};
}

namespace EBlackBoardEntryComparison
{
	enum Type:int
	{
		Equal = 0x0,
		NotEqual = 0x1
	};
}

enum class EEQSNormalizationType:unsigned char
{
	Absolute = 0x0,
	RelativeToScores = 0x1
};

enum class EPawnActionTaskResult:unsigned char
{
	Unknown = 0x0,
	TaskFinished = 0x1,
	TaskAborted = 0x2,
	ActionLost = 0x3
};

enum class EEnvQueryHightlightMode:unsigned char
{
	All = 0x0,
	Best5Pct = 0x1,
	Best25Pct = 0x2
};

enum class EPointOnCircleSpacingMethod:unsigned char
{
	BySpaceBetween = 0x0,
	ByNumberOfPoints = 0x1
};

enum class BINKPLUGINSNDTRACK:int
{
	BinkSndNone = 0x0,
	BinkSndSimple = 0x1,
	BinkSndLanguageOverride = 0x2,
	BinkSnd51 = 0x3,
	BinkSnd51LanguageOverride = 0x4,
	BinkSnd71 = 0x5,
	BinkSnd71LanguageOverride = 0x6
};

enum class BINKPLUGINBUFFERING:int
{
	BinkStream = 0x0,
	BinkPreloadAll = 0x1,
	BinkStreamUntilResident = 0x2
};

enum class EObjectFlags :unsigned __int64
{
	RF_NoFlags = 0x0,
	RF_Public = 0x1,
	RF_Standalone = 0x2,
	RF_MarkAsNative = 0x4,
	RF_Transactional = 0x8,
	RF_ClassDefaultObject = 0x10,
	RF_ArchetypeObject = 0x20,
	RF_Transient = 0x40,
	RF_MarkAsRootSet = 0x80,
	RF_TagGarbageTemp = 0x100,
	RF_NeedInitialization = 0x200,
	RF_NeedLoad = 0x400,
	RF_KeepForCooker = 0x800,
	RF_NeedPostLoad = 0x1000,
	RF_NeedPostLoadSubobjects = 0x2000,
	RF_NewerVersionExists = 0x4000,
	RF_BeginDestroyed = 0x8000,
	RF_FinishDestroyed = 0x10000,
	RF_BeingRegenerated = 0x20000,
	RF_DefaultSubObject = 0x40000,
	RF_WasLoaded = 0x80000,
	RF_TextExportTransient = 0x100000,
	RF_LoadCompleted = 0x200000,
	RF_InheritableComponentTemplate = 0x400000,
	RF_DuplicateTransient = 0x800000,
	RF_StrongRefOnFrame = 0x1000000,
	RF_NonPIEDuplicateTransient = 0x2000000,
	RF_Dynamic = 0x4000000,
	RF_WillBeLoaded = 0x8000000,
	RF_HasExternalPackage = 0x10000000,
	RF_PendingKill = 0x20000000,
	RF_Garbage = 0x40000000,
	RF_AllocatedInSharedPage = 0x80000000
};

enum class ELifetimeCondition :int
{
	COND_None = 0x0,
	COND_InitialOnly = 0x1,
	COND_OwnerOnly = 0x2,
	COND_SkipOwner = 0x3,
	COND_SimulatedOnly = 0x4,
	COND_AutonomousOnly = 0x5,
	COND_SimulatedOrPhysics = 0x6,
	COND_InitialOrOwner = 0x7,
	COND_Custom = 0x8,
	COND_ReplayOrOwner = 0x9,
	COND_ReplayOnly = 0x0A,
	COND_SimulatedOnlyNoReplay = 0x0B,
	COND_SimulatedOrPhysicsNoReplay = 0x0C,
	COND_SkipReplay = 0x0D,
	COND_Never = 0x0F,
	COND_NetGroup = 0x10,
	COND_Max = 0x11
};

enum class ELevelTick :int
{
	LEVELTICK_TimeOnly = 0x0,
	LEVELTICK_ViewportsOnly = 0x1,
	LEVELTICK_All = 0x2,
	LEVELTICK_PauseTick = 0x3,
};

enum class EMovementMode :int
{
	MOVE_None = 0x0,
	MOVE_Walking = 0x1,
	MOVE_NavWalking = 0x2,
	MOVE_Falling = 0x3,
	MOVE_Swimming = 0x4,
	MOVE_Flying = 0x5,
	MOVE_Custom = 0x6,
	MOVE_MAX = 0x7
};

enum class ETribeDataExclude :int
{
	TribeNone = 0x0,
	TribeLog = 0x1,
	TrackingPoints = 0x2,
	TribeLogAndTrackingPoints = 0x3,
};

typedef EWorldType::Type ETeleportType;
typedef EWorldType::Type EInternalObjectFlags;